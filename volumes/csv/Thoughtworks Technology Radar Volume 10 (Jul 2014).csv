name,ring,quadrant,isNew,status,description
Forward Secrecy,adopt,techniques,TRUE,new,"<b>Forward Secrecy</b> (sometimes known as ""Perfect Forward Secrecy"" or PFS) is a cryptographic technique that protects previous communications sessions even if a serverâ€™s master keys are later compromised. Despite being simple to enable for HTTPS connections, many servers are not configured this way, and we recommend enabling forward secrecy to improve security. Note that we don't generally like the word ""perfect"" when used to describe cryptographic protocols - even the best protocol can be broken by a flaw in implementation, random number generator, or by advances in cryptanalytic techniques. Even so, it's important to enable the best security available, whilst keeping informed of new attacks and protocol improvements."
Segregated DOM plus node for JS Testing,adopt,techniques,FALSE,no change,"As client-side JavaScript applications grow in sophistication, we see an increased need for engineering sophistication to match. A common architectural flaw is unfettered access to the DOM from across the codebase - mixing DOM manipulation with application logic and AJAX calls. This makes the code difficult to understand and extend. Thinking about separation of concerns is a useful antidote, aggressively restricting all DOM access (usually jQuery usage) to a thin 'segregation layer'. One pleasant side-effect of this approach is that everything outside of the <b>segregated DOM</b> layer can be tested rapidly in isolation from the browser using a lean JavaScript engine such as <b>node.js.</b>"
Capture domain events explicitly,trial,techniques,FALSE,no change,"When using techniques such as ""instrument all the things"" and semantic logging, it can be very useful to <b>capture domain events explicitly</b>. You can avoid having to infer user intent behind state transitions by modeling these transitions as first-class concerns. One method of achieving this outcome is to use an event sourced architecture with application events being mapped to business meaningful events."
Development environments in the cloud,trial,techniques,FALSE,moved in,"<b>Development environments in the cloud</b> allow you to entirely outsource development infrastructure, leaving your team with nothing more than laptops and an internet connection. By using a combination of best-of-breed services such as private GitHub repositories and Snap CI's continuous integration in the cloud, your teams may never need to bother in-house IT for infrastructure again."
Event Sourcing,trial,techniques,FALSE,moved in,"<b>Event Sourcing</b> ensures that all changes to application state are stored as a sequence of events. Not only can we query these events, we can also use the event log to reconstruct past states, and as a foundation to automatically adjust the state to cope with retroactive changes. Complementary to the capture of business meaningful events, the technique has positive implications for analytics in driving greater customer insight."
Focus on mean time to recovery,trial,techniques,FALSE,moved in,"In DevOps-savvy organizations delivery teams often configure production monitoring and respond to incidents themselves. This visibility and access into production environments allows those teams to make changes to their systems to improve their ability to recover quickly when something goes wrong. This <b>focus on mean time to recovery</b> improves quality of service overall, and allows teams to safely deploy more frequently. This can also reduce the emphasis on expensive test execution in non-production environments. Techniques we've used include end-to-end 'semantic monitoring' or reconciliation of real business transactions, and the injection of 'synthetic transactions' which exercise systems in non-destructive ways in production."
Front end instrumentation,trial,techniques,TRUE,new,"With the proliferation of single-page JavaScript applications, we have found that slow Ajax calls, excessive DOM manipulation, and unexpected JavaScript errors in the browser can have a big impact on perceived website responsiveness. It is very useful to collect and aggregate this profiling information from real end-users' browsers. <a href=""http://newrelic.com/real-user-monitoring"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Real user monitoring</b><span class=""pop-out-icon""></span></a> provides early warning and diagnosis of production issues, and helps pinpoint them to a specific locality."
Humane registry,trial,techniques,TRUE,new,"A Microservice architecture by its very nature increases significantly the number of applications, services, and interactions in your deployed environments. Our projects are showing renewed focus on building <a href=""http://martinfowler.com/bliki/HumaneRegistry.html"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Humane Registries</b><span class=""pop-out-icon""></span></a> which aggregate information about running services from the live environment and present it in a form for humans to comprehend. These registries favor up-to-date information from running services instead of human-curated documentation."
Inverse Conway Maneuver,trial,techniques,TRUE,new,"Conway's Law asserts that organizations are constrained to produce application designs which are copies of their communication structures. This often leads to unintended friction points. The '<b>Inverse Conway Maneuver</b>' recommends evolving your team and organizational structure to promote your desired architecture. Ideally your technology architecture will display isomorphism with your business architecture."
Living CSS Style Guides,trial,techniques,TRUE,new,"A <b>living CSS style guide</b> is a page on your site that uses your current CSS styles and acts as a reference for all the currently available visual elements and design patterns. This helps to tightly integrate design into your delivery process by promoting co-ownership of the UI and avoids duplication of styling across your application. Styling changes are visible in the guide immediately and changes propagate across your site from a central location. A sensible way to do this is with a well organized SASS/LESS file structure with semantically named elements that separates structure, aesthetics, and interaction."
Machine image as a build artifact,trial,techniques,FALSE,moved in,"Many of our teams are getting great benefit from publishing virtual <b>machine images as a build artifact</b> during their automated build processes. These machine images are published with the application and all dependencies, often in an immutable state. With minimal additional configuration the image can be used to create identical virtual machines in all environments eliminating many common sources of error and waste. Tools are emerging to make this approach simpler, for example Packer in the tools section of the Radar. This approach is working well in companies that take a mature approach to cloud and virtualization, and where delivery teams have responsibility and access right through to production."
Masterless Chef/Puppet,trial,techniques,FALSE,no change,"Chef and Puppet servers are a central place to store recipes/manifests that propagate configuration changes to managed machines. They are also a central database of node information and provide access control for manifests/recipes. The disadvantage of having these servers is that they become a bottleneck when multiple clients simultaneously connect to them. They are a single point of failure and take effort to be robust and reliable. In light of this, we recommend <b>chef-solo or standalone puppet</b> in conjunction with a version control system when the server is primarily used to store recipes/manifests. Teams can always introduce the servers as the need arises or if they find themselves reinventing solutions to the problems the servers have already solved."
Perimeterless enterprise,trial,techniques,FALSE,no change,"Technology trends have broken down the garden walls that used to surround corporate IT networks and lead to a <b>perimeterless enterprise</b>. Employees frequently use their own consumer devices to access corporate data through cloud services and web APIs, often without the organization's knowledge. As devices continue to proliferate and more applications move to the cloud, businesses are being forced to rethink fundamental assumptions about data access and network security."
Provisioning testing,trial,techniques,FALSE,no change,"Virtualization and Cloud Computing have made it easy to procure and provision hardware and virtual servers. But with this flexibility comes scale and complexity, and managing our virtual estates has become increasingly difficult. Using techniques more familiar in the software development world such as TDD, BDD and CI offers an approach to managing this complexity and gives us the confidence to make changes to our infrastructure in a safe, repeatable and automatable manner. <b>Provisioning testing</b> tools, like rspec-puppet, Test Kitchen and serverspec, are available for most platforms."
REST without PUT,trial,techniques,TRUE,new,"In the last radar we talked about Capturing Explicit Domain Events, putting emphasis on recording the business-meaningful events that have triggered state transitions instead of just CRUD'ing entities. REST interfaces commonly use PUT to update resource state, however it's often better to POST to record a new event resource which captures intent. <b>REST without PUT </b>has a side-benefit of separating command and query interfaces and forces consumers to allow for eventual consistency."
Structured logging,trial,techniques,FALSE,no change,"Treating logs as data gives us greater insight into the operational activity of the systems we build. <b>Structured logging</b>, which is using a consistent, predetermined message format containing semantic information, builds on this technique and enables tools such as Graylog2 and Splunk to yield deeper insights."
Tailored service templates,trial,techniques,TRUE,new,"We see multiple organizations creating a <b>Tailored Service Template</b> which can be used to quickly seed new services, pre-configured to operate within that organization's production environment. The template contains a default set of decisions such as web frameworks, logging, monitoring, build, packaging, and deployment approaches. This is a very useful technique for encouraging collaborative evolution while retaining lightweight governance."
Bridging physical and digital worlds with simple hardware,assess,techniques,FALSE,no change,"The reduction in cost, size, power consumption and simplicity of physical devices has led to an explosion in devices that open physical domains to software. These devices often contain little more than a sensor and a communication component like Bluetooth Low Energy or WiFi. As software engineers, we need to expand our thinking to include <b>bridging physical and digital worlds with simple hardware</b>. We are already seeing this in the car, the home, the human body, agriculture and other physical environments. The cost and time required to prototype such devices is shrinking to match the fast iterations possible in software."
Datensparsamkeit,assess,techniques,FALSE,no change,"In our desire to support ever-changing business models, learn from past behavior and provide the best experience for every individual visitor, we are tempted to record as much data as possible. At the same time hackers are more ferocious than ever, with one spectacular security breach after another, and we now know of unprecedented mass-surveillance by government agencies. The term <b>Datensparsamkeit</b> is taken from German privacy legislation and describes the idea to only store as much personal information as is absolutely required for the business or applicable laws. Some examples are instead of storing a customer's full IP address in access logs, just using the first two or three octets and instead of logging transit journeys with a username using an anonymous token. If you never store the information, you do not need to worry about someone stealing it."
Machine image pipelines,assess,techniques,TRUE,new,"Many deployments require machine images for different server roles like applications and services, databases, and reverse proxies. Because building a machine image from scratch, using an operating system ISO and provisioning scripts, can take a considerable amount of time it can be useful to create a <b>build pipeline for machine images</b>. The first stage in the pipeline sets up a base image according to general standards in the organization. Subsequent stages can then enhance the base image for different purposes. If several applications or services have similar requirements, an application server for example, the pipeline can be extended by an intermediate stage, which takes the base image and provides an image with an application server but no application/service. These pipelines are not linear, they are trees that are branching out from the base image."
Pace-layered Application Strategy,assess,techniques,TRUE,new,"Gartner's <b>Pace-layered Application Strategy</b> approach to architecture attempts to articulate the fact that decisions about architecture shouldn't be a one-size-fits-all approach. Instead, it is important to take a balanced view to your technology portfolio in terms of where to be conservative, and where to take risks. While we have qualms about some of the more prescriptive recommendations that seem to come with Pace, in general we like the concept and many organizations could benefit from adapting similar models."
Property-based unit testing,assess,techniques,TRUE,new,"We value unit testing on projects and we like techniques such as <b>property-based unit testing</b> which augment it. This is a practice of using data generators to create randomized inputs within defined ranges. It allows a quick check for boundary conditions and other unanticipated failure modes and has burgeoning support on multiple platforms."
Tangible interaction,assess,techniques,FALSE,no change,"As the lines between hardware and software continue to blur, we see traditional computing increasingly embedded in everyday objects. Although connected devices are now ubiquitous in retail spaces, automobiles, homes, and workplaces, we still do not understand how to blend them into a useful computing experience that goes beyond a simple glass screen. <b>Tangible interaction</b> is a discipline that blends software and hardware technology, architecture, user experience, and industrial design. The goal is to provide natural environments made up of physical objects where humans can manipulate and understand digital data."
Cloud lift and shift,hold,techniques,FALSE,no change,"As cloud adoption grows we are unfortunately seeing a trend to treat the cloud as just another hosting provider. <b>Cloud lift and shift</b> is unfortunately being encouraged by large vendors re-branding existing hosting offerings as ""cloud."" Few of these offer any real flexibility or pay-as-you-use pricing. If you think you can move to the cloud without re-architecting, you are probably not doing it right."
Ignoring OWASP Top 10,hold,techniques,FALSE,no change,"Barely a week goes by without the IT industry being embarrassed by yet another high profile loss of data, leak of passwords, or breach of a supposedly secure system. There are good resources to help with making sure security gets treated as a first-class concern during software development and we need to stop ignoring them; the <b>OWASP Top 10</b> is a good place to start."
Separate DevOps team,hold,techniques,TRUE,new,"Some companies with good intentions create a separate <b>DevOps team</b>, which misconstrues the definition of DevOps. Rather than a role, DevOps is a cultural movement encouraging collaboration between operations specialists and developers. Rather than create yet another silo and suffer the consequences of Conway's Law, we advise you to embed these skills into teams, improving feedback loops and communication pathways by removing friction."
Testing as a separate organization,hold,techniques,TRUE,new,"We continue to see organizations create separate Development and QA teams. Fast feedback is a core tenet of Agile and critical to the success of a project. Using a separate QA team slows down this feedback, creates an ""us and them"" mentality and makes it more difficult to build quality into the software. Testing should be a tightly integrated activity and isn't something the team can outsource. We recommend integrated teams where testers work closely with developers instead of having <b>testing as a separate organization.</b>"
Velocity as productivity,hold,techniques,FALSE,no change,"Of all the approaches that we might disagree with, equating velocity with productivity has become so prevalent that we felt it important to call it out in our hold ring. When properly used, velocity allows the incorporation of ""yesterday's weather"" into the iteration planning process. Velocity is simply a capacity estimate for a given team at a given time. It can improve as a team gels or by fixing problems like technical debt or a flaky build server. However, like all metrics, it can be misused. For example, over-zealous project managers attempt to insist on continual improvement of velocity. Treating <b>velocity as productivity</b> leads to unproductive team behaviors that optimize the metric at the expense of actual working software."
Hadoop 2.0,adopt,platforms,FALSE,moved in,"Hadoop's initial architecture was based on the paradigm of scaling data horizontally and metadata vertically. While data storage and processing were handled by the slave nodes reasonably well, the masters that managed metadata were a single point of failure and limiting for web scale usage. <b>Hadoop 2.0</b> has significantly re-architected both HDFS and the Map Reduce framework to address these issues. The HDFS namespace can be federated now using multiple name nodes on the same cluster and deployed in a HA mode. MapReduce has been replaced with YARN, which decouples cluster resource management from job state management and eliminates the scale/performance issues with the JobTracker. Most importantly, this change encourages deploying new distributed programming paradigms in addition to MapReduce on Hadoop clusters."
Vumi,adopt,platforms,FALSE,moved in,"In the last technology radar, we spoke about <b>Vumi</b> as a platform for using USSD as a UI for feature phones. Vumi has become very stable and its open source nature gives it appeal. In our projects, we have been able to integrate with telecommunication networks seamlessly and rapidly due to the simplicity of configuration. The platform is also readily available and scalable."
Docker,trial,platforms,FALSE,moved in,"<b>Docker</b> continues to gain momentum, and is seeing use on projects although mostly in non-production environments. Docker provides a set of tools to efficiently package and distribute executable machine images, which can then be launched as lightweight containers. A considerable community is growing around the tool. Notable is <a href=""https://coreos.com/"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">CoreOS<span class=""pop-out-icon""></span></a> which is an operating system based on ChromeOS built for deploying Docker containers across a cluster with tools for deployment, service discovery and configuration."
iBeacon,trial,platforms,TRUE,new,"<b>iBeacons</b> are the Apple implementation of the broader category of beacons, which are small devices that use low energy Bluetooth (BLE) to provide fine-grained proximity information for mobile phones and other devices. Despite the hype surrounding iBeacons and the limitations to the accuracy and reliability of the information they provide, we do feel that they open interesting opportunities as trigger points for interacting with your users in a contextually relevant manner."
PostgreSQL for NoSQL,trial,platforms,FALSE,no change,"<b>PostgreSQL</b> is expanding to become the NoSQL choice of SQL databases. Version 9.2 includes the ability to store JSON data with full querying capabilities on the content of the JSON document. Other extensions let the user store and query data in the form of key/value pairs. This lets you take advantage of the underlying storage and transactional capabilities of a time-tested database without being tied to a relational data model. This is ideal for those who want both SQL and NoSQL applications but prefer a single reliable infrastructure that they already know how to support."
Private Clouds,trial,platforms,FALSE,moved in,"The number and maturity of on-premise <b>private cloud</b> options continue to increase. From OpenStack-based options like Rackspace's private cloud to PAAS options like CloudFoundry, for those organizations seeking to make use of existing infrastructure or for whom an increased level of control is needed over off-premise cloud, then these solutions are well worth a look."
Apache Spark,assess,platforms,TRUE,new,"For iterative processing such as machine learning and interactive analysis, Hadoop map-reduce does not work very well because of its batch-oriented nature. <b>Spark</b> is a fast and general engine for large-scale data processing. It aims to extend map-reduce for iterative algorithms and interactive low latency data mining. It also ships with a machine learning library."
ARM Server SoC,assess,platforms,TRUE,new,"AMD recently released an <a href=""http://www.anandtech.com/show/7989/amd-announces-project-skybridge-pincompatible-arm-and-x86-socs-in-2015"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">8-core <b>ARM SoC</b> (System on a Chip)<span class=""pop-out-icon""></span></a> designed for servers and has committed to releasing an ARM SoC with integrated graphics in 2015. ARM-based servers are an interesting alternative to x86 because they are significantly more energy efficient. For some workloads, building an ARM-powered Cloud is preferable."
CoAP,assess,platforms,TRUE,new,"<b>CoAP</b> is an open standards communication protocol for the Internet of Things (IoT). While there is currently a proliferation of competing standards in the IoT space, we particularly like CoAP. It is specifically designed for resource-constrained devices and local radio networks. It uses UDP for transport, but is semantically compatible with HTTP. CoAP uses a web-based model of devices with their own URLs and a request-response paradigm that supports RESTful and decentralized approaches."
DigitalOcean,assess,platforms,TRUE,new,"Although the IaaS space is crowded, there is room for new competitors to enter the market. <a href=""http://digitalocean.com"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>DigitalOcean</b><span class=""pop-out-icon""></span></a> has impressed us recently with its cost, speed and simplicity. If all you need is basic compute infrastructure, it is well worth a look."
Espruino,assess,platforms,TRUE,new,"<b>Espruino</b> is a microcontroller that natively executes JavaScript and thus lets the large number of JavaScript programmers get started very quickly. Using an event-based model similar to Node.js, Espurino devices can be very power efficient while still being responsive. Less powerful than a Raspberry Pi and slightly slower than an Arduino, Espruino makes an interesting alternative in low-power environments that need responsive behavior but can sacrifice some of the raw high level features and execution speed of those platforms."
EventStore,assess,platforms,TRUE,new,"Given the popularity of event sourcing, it is no surprise that tools in this space are maturing. <a href=""http://geteventstore.com"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>EventStore</b><span class=""pop-out-icon""></span></a> is an open source functional database for storing immutable events and performing complex event processing on the event streams. Unlike other tools in this space, EventStore exposes event streams as Atom collections which therefore require no special infrastructure such as message buses or highly specialized clients to use.&nbsp;"
Low-cost robotics,assess,platforms,FALSE,no change,"With the cost of industrial robots dropping and their safety and ease of use increasing, the world of useful, commercial robotics is opening up. Robots like Rethink Robotics' Baxter or Universal Robotics' U5, make it feasible for small to medium-sized businesses to automate repetitive tasks previously performed by humans. Increasingly, enterprise software will have to integrate with <b>low-cost robotics</b> as another participant in the value stream. The challenge lies in making the experience easy and productive for the human co-workers as well."
Mapbox,assess,platforms,TRUE,new,"<a href=""http://mapbox.com"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Mapbox</b><span class=""pop-out-icon""></span></a> is an open mapping platform we have used on several projects. It allows a developer to quickly add a map to an application and to style the map. Mapbox can serve as an alternative to conventional mapping platforms, and it also allows for mobile friendly maps."
OpenID Connect,assess,platforms,TRUE,new,"<b>OpenID Connect</b> is a standard protocol for federated identity built on OAuth 2.0. It addresses a long-standing need for a simple, web-based protocol to exchange trusted authentication and authorization information. Previous standards like SAML or generic OAuth 2.0 have proven too broad and complex to ensure universal compatibility. Our hope is that OpenID Connect can provide a useful basis for secure access to RESTful microservices with authenticated end-user identity."
SPDY,assess,platforms,FALSE,no change,"<b>SPDY</b> is an open networking protocol for low-latency transport of web content proposed for HTTP 2.0 that has seen a rise in modern browser support. SPDY reduces page load time by prioritizing the transfer of subresources so that only one connection is required per client. Transport layer security is used in SPDY implementations with the transmission headers gzip or deflate compressed instead of human-readable text as in HTTP. It is great for high-latency environments."
Storm,assess,platforms,FALSE,no change,"Heterogeneous and overwhelmingly large amounts of data is not the only theme of big data. In certain circumstances, speed of processing can be as important as the volume. <b>Storm</b> is a distributed realtime computation system. It has similar scalability to Hadoop, with throughput as fast as a million tuples per second. It enables for real time processing what Hadoop does for batch."
TOTP Two-Factor Authentication,assess,platforms,TRUE,new,"<b>Two-factor authentication</b> significantly improves security over simple password-based systems. <a href=""http://tools.ietf.org/html/rfc6238"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">RFC 6238<span class=""pop-out-icon""></span></a> -- <a href=""http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">Time-based One-Time Password<span class=""pop-out-icon""></span></a> Algorithm -- is a standard for two-factor authentication. ""Standard"" authenticator apps from <a href=""https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">Google<span class=""pop-out-icon""></span></a> and <a href=""http://www.windowsphone.com/en-us/store/app/authenticator/e7994dbc-2336-4950-91ba-ca22d653759b"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">Microsoft<span class=""pop-out-icon""></span></a> provide tokens to smartphone users, and there are a number of other client and server implementations readily available. With providers such as Google, Facebook, Dropbox and Evernote using <b>TOTP</b>, there really is no excuse to continue using simple password-based authentication where stronger security would be appropriate."
Web Components standard,assess,platforms,FALSE,no change,"In the previous radar we cautioned against the use of traditional web component frameworks that provide a component model on the server side. The <b>Web Components standard</b> that originated at Google is something quite different. It provides an easier way to create recyclable widgets by helping with encapsulation of HTML, CSS and JavaScript, so they do not interfere with the rest of the page and the page does not interfere with them. Developers can use as much or as little of the framework as needed. Early support is provided by the Polymer Project."
Big enterprise solutions,hold,platforms,FALSE,no change,"The gap between what ""enterprise-class"" commercial packages provide and what is actually needed is widening. This is especially true for internet facing applications. Innovative solutions that really scale and easily support modern techniques such as continuous delivery are written by practitioners for practitioners. They originate with many internet scale companies and are refined as open source software. <b>Big enterprise solutions</b> often obstruct effective delivery due to their accumulated bloat, cumbersome licensing restrictions, and feature sets that are driven by check-lists and imaginary requirements far removed from the realities of most development teams."
CMS as a platform,hold,platforms,FALSE,no change,"Content Management Systems (CMS) have their place. In many cases it is unreasonable to write editing and workflow functionality from scratch. However, we have experienced serious problems when <b>CMS as a platform</b> becomes an IT solution that grows beyond managing simple content."
Enterprise Data Warehouse,hold,platforms,FALSE,no change,"While centralized integration of data for analysis and reporting remains a good strategy, traditional <b>Enterprise Data Warehouse</b> (EDW) initiatives have a higher than 50% failure rate. Big up-front data modeling results in overbuilt warehouses that take years to deliver and are expensive to maintain. We are placing these old-style EDWs and techniques on hold in this edition of the radar. Instead, we advocate evolving towards an EDW. Test and learn by building small, valuable increments that are frequently released to production. Nontraditional tools and techniques can help, for example using a Data Vault schema design or even a NoSQL document store such as HDFS."
OSGi,hold,platforms,TRUE,new,""
Ansible,adopt,tools,FALSE,moved in,"Since first featuring <b>Ansible</b> in the last radar, we continue to be impressed with its capabilities and ease of use compared to other offerings in this space. Based on our experiences over the last year we have no hesitation in recommending Ansible as a great option for automated control of your infrastructure."
Dependency management for JavaScript,adopt,tools,FALSE,no change,"Using <b>Dependency management </b>tools<b> for JavaScript</b> has helped our delivery teams handle large amounts of JavaScript by structuring their code and loading the dependencies at runtime. Though this simplified the effort in most cases, lazy loading complicates supporting offline mode. Different dependency management tools have different strengths, so choose based on your context."
CartoDB,trial,tools,TRUE,new,"<b>CartoDB</b> is an open-source GIS tool built on PostGIS and PostgreSQL. It allows for storage and searching of geospatial data using SQL. It also provides a handy JavaScript library, CartoDB.js, for map styling and data visualization."
Chaos Monkey,trial,tools,FALSE,no change,"Following our recommendation in the last radar to consider a focus on reducing mean time to recovery, we want to highlight <b>Chaos Monkey</b> from Netflix's Simian Army suite. It is a tool that randomly disables instances in the production environment during normal operation. When run with comprehensive monitoring and a team on stand by, it helps to uncover unexpected weaknesses in the system, which in turn allows the development team to build automatic recovery mechanisms ahead of time, rather than struggling to respond to an outage that caught everyone by surprise."
Flyway,trial,tools,TRUE,new,"Automated database migrations are common on agile projects, and we are happy to see advances in the tools for this space. <b>Flyway</b> makes it as painless as possible to automate changes to databases. While not as feature-rich as some competing tools, we have used it on multiple projects and appreciate its low friction."
Foreman,trial,tools,TRUE,new,"The big Cloud providers have clearly raised the bar for provisioning, monitoring, and configuration, simplifying these tasks dramatically through powerful tools. Organizations that want to keep their compute and storage resources in-house are looking for similar solutions that work within their organizational context. <a href=""http://theforeman.org/"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Foreman</b><span class=""pop-out-icon""></span></a> has worked really well for us, and it is open-source software, too."
GenyMotion,trial,tools,TRUE,new,"Device fragmentation in the Android world is often cited as a problem because it can be difficult to understand how your applications will behave on a large number of disparate platforms. <a href=""http://genymotion.com"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>GenyMotion</b><span class=""pop-out-icon""></span></a> is an emulator which can mimic the characteristics of a number of different Android devices. Our teams have found this very effective in giving fast feedback for our Android applications."
GoCD,trial,tools,TRUE,new,"Owing to the increasing interest in Continuous Delivery and deployment pipelines, we see many teams trying to extend their Continuous Integration tooling with plugins that provide deployment pipelines at a visual level. <a href=""http://go.cd"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>GoCD</b><span class=""pop-out-icon""></span></a> is a tool that was built with the concept of deployment pipelines at its core. GoCD has the ability to sequence workflows both sequentially and in parallel at many levels, to execute specific tasks only on certain machines as well as to deterministically promote and propagate artifacts, which is a key enabler for Continuous Delivery. These are capabilities that most Continuous Integration tools lack, and we recommend that teams who might have otherwise tried to build a deployment pipeline from their Continuous Integration server try GoCD instead. GoCD was built by Thoughtworks, is open-source, and is available for free for all teams. The <a href=""https://github.com/gocd/gocd/"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">source code<span class=""pop-out-icon""></span></a> is available under the Apache 2.0 license."
Grunt.js,trial,tools,FALSE,no change,"We have seen a growth in the <b>Grunt</b> ecosystem and it is currently being used in several of our projects. With the proliferation of plugins and the ease to author and publish self-written plugins to npm, automation using Grunt can be done with little effort. We suggest choosing a task runner that best meets the needs of the project and Grunt is one of the task runners you should consider."
Gulp,trial,tools,TRUE,new,"<b>Gulp</b> is an alternative to Grunt. It is a command-line task automation tool that helps developers with SaaS compilation, autoprefixing, minification, concatenation and so on. Gulp's central idea is the use of streams, and its plugins are designed to do only one task."
Moco,trial,tools,FALSE,no change,"Testing HTTP-based micro-services can be painful and tricky. Particularly in two scenarios, the consumption of a group of micro-services from front-end, and the communication between micro-services. To deal with these, <b>Moco</b> can be handy. It is a lightweight stub framework for testing HTTP-based endpoints. You can have an embedded stubbed service up and running with 2 lines of Java or Groovy code, or a standalone one with few lines of JSON to describe the required behavior."
Packer,trial,tools,TRUE,new,"We featured 'Machine image as a build artifact' in the last Radar, as an excellent way to implement fast spin-up, immutable servers. The thing holding this technique back was the difficulty in building images, especially when targeting more than one platform. <a href=""http://packer.io"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Packer</b><span class=""pop-out-icon""></span></a>&nbsp;solves this, using your configuration management tool of choice to create images for a number of platforms including AWS, Rackspace, DigitalOcean and even Docker and Vagrant, although we have found the VMWare support to be problematic."
Pact & Pacto,trial,tools,TRUE,new,"Consumer-Driven Contracts are a testing approach to help service interfaces evolve with confidence without unknowingly breaking consumers. The similarly named <a href=""https://github.com/realestate-com-au/pact"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Pact</b><span class=""pop-out-icon""></span></a> and <a href=""http://thoughtworks.github.io/pacto"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Pacto</b><span class=""pop-out-icon""></span></a> are two new open-source tools which allow testing interactions between service providers and consumers in isolation against a contract. Both have grown out of projects which are building RESTful microservices and show great promise."
Prototype On Paper,trial,tools,FALSE,no change,"We have long favored the use of hand-drawn, low fidelity prototypes to illustrate user interactions without getting caught up in the nitty-gritty of the graphic design. <b>Prototype On Paper</b> is a tool that allows individual mockups drawn on paper to be captured via camera on iOS or Android and linked together to allow for testing of user interaction. This bridges the gap nicely between the static, lo-fi paper prototypes and more hi-fi prototyping techniques."
Protractor for AngularJS,trial,tools,TRUE,new,"<b>Protractor</b> is a testing framework based on Jasmine that wraps WebDriverJS with functionality specifically designed to execute end-to-end tests<b> for Angular.JS</b> applications. We've found it to be a standout in the rapidly evolving space of JavaScript testing frameworks. Despite being designed to run end-to-end tests with a real backend, Protractor tests can also be made to work with a stubbed HTTP gateway to run purely client side tests."
SnapCI,trial,tools,FALSE,no change,"We mentioned Thoughtworks' <b>SnapCI</b> - a hosted service that provides deployment pipelines - on the last edition of the Radar. Since then, we have seen many teams successfully use SnapCI on their projects. If you need a simple continuous delivery solution in the cloud, SnapCI can provide it with one click. No hardware, no hassle."
Snowplow Analytics & Piwik,trial,tools,FALSE,no change,"With increasing scrutiny over the privacy of data, more companies are concerned about sharing web analytics with third parties. <b>Snowplow Analytics and Piwik</b> are examples of open-source analytics platforms that can be self-hosted and provide a promising feature set and roadmap."
Visual regression testing tools,trial,tools,FALSE,moved in,"Growing complexity in web applications has increased the awareness that appearance should be tested in addition to functionality. This has given rise to a variety of <b>visual regression testing tools</b>, including CSS Critic, dpxdt, Huxley, PhantomCSS, and Wraith. Techniques range from straightforward assertions of CSS values to actual screenshot comparison. While this is a field still in active development we believe that testing for visual regressions should be added to Continuous Delivery pipelines."
Appium,assess,tools,TRUE,new,"Mobile test automation is becoming increasingly important. <a href=""http://appium.io"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Appium</b><span class=""pop-out-icon""></span></a> is a test automation framework which can be used to test mobile web, mobile native and mobile hybrid applications on iOS and Android. At the core, Appium is a webserver that exposes a REST API, receiving connections from a client, listening for commands, executing those commands on a mobile device and responding with an HTTP response representing the result of the command execution. It allows tests to be written against multiple platforms (iOS, Android) using the same API. Appium is open source with easy set up using npm."
Consul,assess,tools,TRUE,new,""
Flume,assess,tools,TRUE,new,"When using techniques such as 'instrument all the things' and semantic logging, you may end up with huge amount of log data. Collecting, aggregating and moving this data can be problematic. <b>Flume</b> is a distributed system for exactly this purpose. It has a flexible architecture based on streaming data flows. With built-in support for HDFS, Flume can easily move multi-terabyte log data from many different sources to a centralized data store for further processing."
Hosted solutions for testing iOS,assess,tools,FALSE,no change,"All development for iOS must be carried out on OS X. Due to technical and licensing restrictions running server farms with OS X is neither easy nor common. In spite of these difficulties, <b>Travis CI</b>, with support from Sauce Labs, now provides cloud-based continuous integration services for iOS and OS X projects."
leaflet.js,assess,tools,TRUE,new,"<a href=""http://leafletjs.com"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Leaflet.js</b><span class=""pop-out-icon""></span></a> is a JavaScript library for mobile-friendly interactive maps. The library places a huge emphasis on performance, usability and simplicity, and as such works efficiently across mobile platforms and desktop browsers. It is a viable library to consider when building interactive maps for mobiles."
Mountebank,assess,tools,TRUE,new,"When testing services, we commonly need to stub out downstream collaborating services. Written by a Thoughtworker, <a href=""http://www.mbtest.org"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Mountebank</b><span class=""pop-out-icon""></span></a> is a lightweight service which you can configure via HTTP that is capable of stubbing and mocking HTTP, HTTPS, SMTP and TCP."
Papertrail,assess,tools,TRUE,new,"<b>Papertrail</b> is a log aggregation service that aggregates data from a variety of sources including web-servers, routers, databases and PaaS services. In addition to aggregation it provides search, filtering, and alerts and notifications out of the box. While undeniably convenient and expedient in many cases, we remain concerned about widespread adoption of services that centralize large quantities of data aggregated from multiple parties."
Roslyn,assess,tools,TRUE,new,"<b>Roslyn</b>, a .NET compiler platform under the Apache License 2.0, is a next-generation set of compilers for C# and VB.NET written entirely as managed code. It provides access to the compiler as a service and includes code analysis APIs allowing developers to access information from the compiler that was previously treated as a black box, for example syntactic and semantic models. The most immediate impact should be seen in enhancements to .NET IDEs through refactoring and code generation tools. We also expect to see improved code diagnostics and static analysis, although it will be interesting to see what the community comes up with. Meanwhile Xamarin has a Mono-compatible copy of Roslyn source code hosted on GitHub and plans to bundle Roslynâ€™s compilers with Mono as it stabilizes, in addition to integrating the best parts into their code base."
Swagger,assess,tools,TRUE,new,"<a href=""https://helloreverb.com/developers/swagger"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Swagger</b><span class=""pop-out-icon""></span></a> is a standard way to describe a RESTful API so that documentation and client examples can be generated automatically. We think there's a need for some standards in this area and hope that this approach embraces Postel's law and avoids the <a href=""http://en.wikipedia.org/wiki/Robustness_principle"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">tight-coupling and inflexibility<span class=""pop-out-icon""></span></a> of standards like WSDL. A number of tools are now available to <a href=""https://github.com/wordnik/swagger-ui"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">render documentation and client pages<span class=""pop-out-icon""></span></a> from swagger-compliant descriptions."
Xamarin,assess,tools,FALSE,no change,"Among the various choices available for building cross-platform mobile apps, <b>Xamarin</b> offers a fairly unique toolset. It supports C# and F# as the primary language with bindings to platform-specific SDKs and the Mono runtime environment that works across iOS, Android and Windows Phone. Applications are compiled to native code instead of the typical cross-platform approach that renders HTML-based UI in an embedded browser. This gives apps a more native look and feel. When using this toolset, it is imperative that the platform-specific UI tier be separated from the rest of the tiers to ensure code reuse across different platforms. The application binary tends to be a bit bigger due to the runtime environment that is included."
Ant,hold,tools,FALSE,no change,"We continue to see teams expend significant effort on un-maintainable <b>Ant</b> and Nant build scripts. These are hard to understand and extend due to the inherent lack of expressiveness and clean modularity provided by the tools. Alternatives like Gradle, Buildr, and PSake have clearly demonstrated superior maintainability and productivity."
TFS,hold,tools,FALSE,no change,"We continue to see teams run into productivity problems attempting to use <b>TFS</b> as a version control system. Teams that want to practice frequent code check-ins, a core part of continuous integration, have found its heavyweight approach significantly drains productivity. This often leads to teams checking in less frequently, causing more problematic merges. We recommend tools such as Git, Perforce, and Subversion instead."
Dropwizard,adopt,languages-and-frameworks,FALSE,no change,"<b>Dropwizard</b> is an opinionated combination of several lightweight Java tools and frameworks, many of which would merit mention in their own right. The package embodies many of our favorite techniques, including an embedded HTTP server, support for RESTful endpoints, built-in operational metrics and health-checks, and straightforward deployments. Dropwizard makes it easy to do the right thing, allowing you to concentrate on the essential complexity of a problem rather than the plumbing."
Go language,adopt,languages-and-frameworks,FALSE,moved in,"The <b>Go language</b> gradually changed status from ""Just Another Language"" to a valuable tool in many projects. While steadfastly single paradigm in a world of increasingly complex languages, it seems to keep a nice balance between expressiveness, power, and simplicity."
Java 8,adopt,languages-and-frameworks,TRUE,new,"The team behind <b>Java 8</b> had to fight two battles: the community forces encouraging forever backwards compatibility (a long hallmark of Java) and the technical challenge of making a deep language change mesh with existing libraries and features. They succeeded on both fronts, breathing new life into the Java Language and placing it on par with other mainstream languages in terms of functional programming features. In particular, Java 8 has excellent syntactic magic that allows seamless interoperability between Lambda blocks, the new higher-order function feature, and SAM (Single Abstract Method) interfaces, the traditional way of passing behavior."
ReactiveX,adopt,languages-and-frameworks,FALSE,moved in,"The <b>reactive architecture</b> keeps spreading across platforms and paradigms simply because it solves a common problem in an elegant way, hiding inevitable application plumbing in a nice encapsulation."
Scala, the good parts,adopt,languages-and-frameworks,FALSE,no change,"Scala is a large language that is popular because of its approachability for new developers. This banquet of features is a problem because many aspects of Scala, like implicit conversions and dynamics, can get you into trouble. To successfully use Scala, you need to research the language and have a very strong opinion on which parts are right for you, creating your own definition of <b>Scala, the good parts</b>. You can disable the parts you do not want using a system called feature flags."
AngularJS,trial,languages-and-frameworks,TRUE,new,"We continue to see JavaScript frameworks as a useful way to structure code and bring better coding techniques to JavaScript. <b>AngularJS</b> is used widely by Thoughtworks projects. However we do advise teams to assess other good alternatives such as Ember.js and Knockout.js."
Core Async,trial,languages-and-frameworks,TRUE,new,"The Clojure <b>core.async</b> library allows asynchronous communication using channels, with similar syntax and capabilities to Google's Go language. The core.async library solves many common problems in an elegant way, cleaning up event callback setup and adding simple concurrency primitives. It also highlights one of the advantages of the Lisp nature of Clojure: channels add operators that are consistent with existing Clojure operators, seamlessly weaving new functionality into the language core. In addition, core.async is supported in both Clojure and ClojureScript (despite JavaScript's lack of threads), utilizing underlying platform abstractions to provide a consistent interface to both languages."
HAL,trial,languages-and-frameworks,TRUE,new,"We see lots of teams creating RESTful interfaces without paying any attention to hypermedia. <a href=""http://stateless.co/hal_specification.html"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>HAL</b><span class=""pop-out-icon""></span></a> is a simple format for incorporating hyperlinks into JSON representations which is easy to implement and consume. HAL is well supported by libraries for parsing and representing JSON, and there are HAL-aware REST client libraries such as <a href=""https://github.com/codegram/hyperclient"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out"">Hyperclient<span class=""pop-out-icon""></span></a> which make it easy to navigate resources by following links."
Hive,trial,languages-and-frameworks,FALSE,no change,"<b>Hive</b> is a data warehouse built on top of Hadoop which provides a SQL-like query and data definition language. Hive converts queries into MapReduce jobs that can be run across the entire Hadoop cluster. Like all useful abstractions, Hive does not try to deny the existence of the underlying mechanics of Hadoop and supports custom map-reduce operations as a powerful extension mechanism. Despite the superficial similarities to SQL, Hive does not try to be a replacement for low-latency, real-time query engines found on relational database systems. We strongly advise against using Hive for online ad-hoc querying purposes."
Nancy,trial,languages-and-frameworks,FALSE,moved in,"<b>Nancy</b> continues to gain traction in the Alt.NET community and we have found it particularly useful for deploying low-ceremony, lightweight fakes for testing in a microservices environment."
Pester,trial,languages-and-frameworks,FALSE,moved in,"PowerShell remains a widely used option for doing low-level automation on Windows machines. <b>Pester</b> is a testing library that makes it possible to execute and validate PowerShell commands. Pester simplifies testing of scripts during development with a powerful mocking system that makes it possible to setup stubs and doubles in tests. Pester tests can also be integrated into a continuous integration system to prevent regression defects."
Play Framework 2,trial,languages-and-frameworks,FALSE,no change,"The <b>Play Framework 2</b> blip has generated many internal discussions. We had competing suggestions to move it to adopt and hold. These differences relate primarily to the specific applications for which it is used, how it is used, and what expectations people have for it. While none of these issues are unique for Play, Play has generated far more controversy than is typical in the standard library versus framework debate. We reiterate the cautions stated in the previous radar, and we will monitor how Play continues to mature to support its sweet spot."
Q & Bluebird,trial,languages-and-frameworks,TRUE,new,"<a href=""https://github.com/kriskowal/q"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Q</b><span class=""pop-out-icon""></span></a> is a fully Promises/A+ compliant implementation in JavaScript that lets users compose promises arbitrarily deeply without the need for the deeply nested callbacks that obscure control flow. Q takes care of threading fulfilled values and rejected promises through the appropriate code paths. The space of Promises/A+ compliant libraries is currently very active with alternatives like <a href=""https://github.com/petkaantonov/bluebird"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Bluebird</b><span class=""pop-out-icon""></span></a> also rapidly gaining mindshare."
R as Compute Platform,trial,languages-and-frameworks,TRUE,new,"R is traditionally used as stand alone analysis tool by research teams. With improvements in packages like Rook and RJSONIO, it has become trivial to wrap the computational logic and expose it as an API. Thoughtworks teams are using <b>R as Compute platform</b> to crunch large datasets in real time, using in-memory storage integrated with enterprise systems."
Elm,assess,languages-and-frameworks,TRUE,new,"<b>Elm</b> is a functional programming language that is used to build web based user interfaces in a functional reactive style. Elm is strongly statically typed and built on the Haskell platform. Elm has a Haskell-like syntax but compiles down to HTML, CSS and JavaScript. While still in its very early days, individuals and teams interested in exploring highly interactive web-based GUIs should look into this interesting little language."
Julia,assess,languages-and-frameworks,FALSE,no change,"<b>Julia</b> is a dynamic, procedural and homoiconic programming language designed to address the needs of high performance scientific computing. The implementation of the language is organized around the concept of generic functions and dynamic method dispatch. Julia programs are largely functions that can contain multiple definitions for different combinations of argument types. The combination of these language features and the LLVM based just-in-time compiler help Julia achieve a high level of performance. Julia also supports a multiprocessing environment based on message passing to allow programs to run on multiple processes. This enables programmers to create distributed programs based on any of the models for parallel programming."
Om,assess,languages-and-frameworks,TRUE,new,"Adopting the entire Clojure stack (the Clojure and ClojureScript languages, and optionally the Datomic database) offers some advantages like immutable data structures from user interface to backend. Several frameworks have appeared in the Clojure space to leverage its unique features, but the most promising so far is <b>Om</b>. Om is a ClojureScript wrapper around Facebook's React JavaScript reactive programming framework. Yet Om leverages the inherent immutability of ClojureScript, allowing automatic features like snapshots of UI state and undo. And due to the efficiency of ClojureScript's data structures, some Om applications run faster than identical ones based on the raw underlying React framework. We expect significant evolution and innovation to continue around Om."
Pointer Events,assess,languages-and-frameworks,FALSE,no change,"After some delays, mainly caused by patent claims from Apple, the W3C has now finalized the Touch Events recommendation. However, in the meantime, <b>Pointer Events</b>, a newer, broader, and richer standard, is picking up momentum. We recommend considering Pointer Events for HTML interfaces that must work across different input methods."
Python 3,assess,languages-and-frameworks,FALSE,no change,"<b>Python 3</b> was a major change from the previous Python 2.x that introduced backwards incompatible changes. It was notable for actually removing languages features, making Python 3 easier to use and more consistent without reducing its power. This has led to problems in adoption as some widely used supporting libraries have not been ported, and Python developers often have to find new ways of doing things. Nonetheless the drive towards making a language simpler is to be applauded, and if you are actively developing in Python, then give Python 3 another look."
Rust,assess,languages-and-frameworks,TRUE,new,""
Spray/akka-http,assess,languages-and-frameworks,TRUE,new,"<b>Spray/akka-http</b> is a suite of lightweight Scala libraries providing client/server RESTful support on top of Akka. It fully embraces the Actor-, Future-, and Stream-based programming models used by the underlying platform. This lets you work on RESTful applications with idiomatic Scala code without worrying about wrapping around other Java libraries."
Spring Boot,assess,languages-and-frameworks,TRUE,new,"<a href=""http://projects.spring.io/spring-boot"" target=""_blank"" aria-label=""This is an external link. Opens in new window"" class=""pop-out""><b>Spring Boot</b><span class=""pop-out-icon""></span></a> allows easy set up of standalone Spring-based applications. It's ideal for pulling up new microservices and easy to deploy. It also makes data access less of a pain due to the hibernate mappings with much less boilerplate code."
TypeScript,assess,languages-and-frameworks,FALSE,no change,"<b>TypeScript</b> is an interesting approach to bringing a new programming language to the browser. With TypeScript, the new language features compile down to normal JavaScript, and yet as a superset of JavaScript it does not feel like a completely new language. It does not represent an either-or proposition and it does not relegate JavaScript to an intermediate execution platform. Many of the language features are based on planned future extensions of JavaScript."
Wolfram Language,assess,languages-and-frameworks,TRUE,new,"We are intrigued by the possibilities offered by the <b>Wolfram language</b>. Building on the symbolic approaches of the Mathematica language it also has access to a vast array of algorithms and data from the Wolfram Alpha project, which means that very succinct programs can analyze and visualize powerful combinations of real-world data."
Handwritten CSS,hold,languages-and-frameworks,FALSE,no change,"Along with JavaScript and HTML, CSS is a core technology for creating websites. Unfortunately, the language itself lacks key features, which leads to a high level of duplication and a lack of meaningful abstractions. While CSS3 aims to rectify some of these issues, it will be years before the modules that make up CSS3 will be properly supported in most browsers. Fortunately, there is a solution today using <b>CSS preprocessors</b> like SASS and LESS. Due to their quality and support, we believe that the days of <b>handwritten CSS</b>, for anything apart from trivial work, are over."
JSF,hold,languages-and-frameworks,FALSE,no change,"We continue to see teams run into trouble using <b>JSF</b>&nbsp;- JavaServer Faces - and are recommending you avoid this technology. Teams seem to choose JSF because it is a Java EE standard without really evaluating whether the programming model suits them. We think JSF is flawed because its programming model encourages use of its own abstractions rather than fully embracing the underlying web model. JSF, like ASP.NET webforms, attempts to create stateful component trees on top HTML markup and the stateless HTTP protocol. The improvements in JSF 2.0 and 2.2, such as the introduction of stateless views and the promotion of GET, are steps in the right direction, maybe even an acknowledgement that the original model was flawed, but we feel this is a too little too late. Rather than dealing with the complexity of JSF we recommend teams use simple frameworks and work closely with web technologies including HTTP, HTML and CSS."