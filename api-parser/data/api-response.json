[
    {
        "date": "2010-01",
        "blips": [
            {
                "ringSortOrder": "1",
                "blip_id": 9281,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "User centered design",
                "ring": "Adopt",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The benefits of user-centered design are often understated. Gaining a broader understanding of data flows and users’ goals simplify the overall architecture of a system while optimizing user interaction. In the past year we have seen a greater uptake of user-centered design in Agile software development practices as experts in both fields have established new ways of working together.",
                "radarId": 0,
                "id": "en_2010-01_9281",
                "blip_selector": "user-centered-design",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9079,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Domain-Specific Languages",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9079",
                "blip_selector": "domain-specific-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9078,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Distributed version control",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Distributed version control systems such as Git and Mercurial have had significant exposure in the past year or more as open source projects move to this toolset en masse. The social networking aspect that GitHub and Bitbucket have brought to distributed version control has helped to propel these tools forward and into enterprises looking for ways to develop across multiple geographies. The move for many to a distributed version control system has resulted in a move away from tools such as Subversion and other centralized version control systems. As organizations assess and choose between these two different toolsets, we suggest that you evaluate both in relation to your team’s specific needs. While we have seen widespread adoption of distributed version control tools within Thoughtworks and beyond, we still advocate the use of continuous integration and limits to the amount of time that code is spent outside of the main branch.",
                "radarId": 0,
                "id": "en_2010-01_9078",
                "blip_selector": "distributed-version-control",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9093,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Evolutionary database",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9093",
                "blip_selector": "evolutionary-database",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9141,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Incremental data warehousing",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9141",
                "blip_selector": "incremental-data-warehousing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9162,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Language workbenches",
                "ring": "Hold",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9162",
                "blip_selector": "language-workbenches",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9160,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "JVM as platform",
                "ring": "Adopt",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9160",
                "blip_selector": "jvm-as-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9213,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Polyglot development environments",
                "ring": "Hold",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Polyglot programming continues to gain widespread acceptance across the industry reflecting the reality that software developers have many languages and tools at their disposal. One area that we have yet to see take off is the creation of polyglot development environments, capable of satisfying multiple language needs of development teams. While Eclipse, IntelliJ, Visual Studio and others have some cross-language capabilities, their support for a wide range of languages is limited at best.",
                "radarId": 0,
                "id": "en_2010-01_9213",
                "blip_selector": "polyglot-development-environments",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9055,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Concurrent languages",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The remaining two language types included on the radar are often grouped together. While functional and concurrent languages may be adopted in similar environments, their approaches are different. Functional programming focuses on expressing code in the form of mathematical functions that avoid maintaining state across multiple invocations. While functional languages such as Haskell have been around for a number of years, new functional (themed) languages such as Scala, F# and Clojure have sparked some interest in this paradigm. Due to the way in which functional languages manage state, interest in these languages has increased by many developers seeking to make the most out of multi-core processors. Many concurrent languages are also functional languages. The distinction lies in the emphasis on running operations in parallel. A number of such languages exist; Erlang is currently the most popular of these languages. Concurrent languages commonly provide some means for handling concurrency by using messages to communicate across multiple threads.",
                "radarId": 0,
                "id": "en_2010-01_9055",
                "blip_selector": "concurrent-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9164,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Lean software development",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9164",
                "blip_selector": "lean-software-development",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9029,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Build pipelines",
                "ring": "Adopt",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9029",
                "blip_selector": "build-pipelines",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9192,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Next-generation test tools",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9192",
                "blip_selector": "next-generation-test-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9146,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "iPhone",
                "ring": "Adopt",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9146",
                "blip_selector": "iphone",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9092,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Evolutionary architecture",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We assist many of our clients in adapting enterprise software architecture practices to fit within an Agile software delivery approach. In the past year we have seen increased interest in evolutionary enterprise architecture and how service oriented architectures shape the boundaries between enterprise units. The value of an evolutionary approach to enterprise architecture is the creation of lighter weight systems that ease integration between disparate parts. By embracing this approach and the notion of the web as an enterprise application platform, we have reduced overall complexity of application architectures, increased quality and scalability, and reduced development costs.",
                "radarId": 0,
                "id": "en_2010-01_9092",
                "blip_selector": "evolutionary-architecture",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9106,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Functional languages",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The remaining two language types included on the radar are often grouped together. While functional and concurrent languages may be adopted in similar environments, their approaches are different. Functional programming focuses on expressing code in the form of mathematical functions that avoid maintaining state across multiple invocations. While functional languages such as Haskell have been around for a number of years, new functional (themed) languages such as Scala, F# and Clojure have sparked some interest in this paradigm. Due to the way in which functional languages manage state, interest in these languages has increased by many developers seeking to make the most out of multi-core processors. Many concurrent languages are also functional languages. The distinction lies in the emphasis on running operations in parallel. A number of such languages exist; Erlang is currently the most popular of these languages. Concurrent languages commonly provide some means for handling concurrency by using messages to communicate across multiple threads.",
                "radarId": 0,
                "id": "en_2010-01_9106",
                "blip_selector": "functional-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9101,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Firefox",
                "ring": "Adopt",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Web browsers continue to evolve as they strive to keep pace with new specifications in HTML, CSS and JavaScript. Alas, many enterprises have yet to embrace the end of life for IE6 and move to a newer and more standards compliant option. Of the browsers available today, Firefox and Opera provide support for the widest range of platforms. The Google browser, Chrome, brings new innovation to the browser space by splitting browser tabs into separate processes while providing a new implementation of JavaScript. These changes appear to give Chrome a significant performance boost over other browsers and have influenced the creation of a netbook OS called Chrome OS. While enterprises may look to move off IE6 and onto Microsoft’s IE8, we remain concerned about IE8’s current level of compliance to web standards.",
                "radarId": 0,
                "id": "en_2010-01_9101",
                "blip_selector": "firefox",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9059,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Continuous deployment",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9059",
                "blip_selector": "continuous-deployment",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9040,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Chrome",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Web browsers continue to evolve as they strive to keep pace with new specifications in HTML, CSS and JavaScript. Alas, many enterprises have yet to embrace the end of life for IE6 and move to a newer and more standards compliant option. Of the browsers available today, Firefox and Opera provide support for the widest range of platforms. The Google browser, Chrome, brings new innovation to the browser space by splitting browser tabs into separate processes while providing a new implementation of JavaScript. These changes appear to give Chrome a significant performance boost over other browsers and have influenced the creation of a netbook OS called Chrome OS. While enterprises may look to move off IE6 and onto Microsoft’s IE8, we remain concerned about IE8’s current level of compliance to web standards.",
                "radarId": 0,
                "id": "en_2010-01_9040",
                "blip_selector": "chrome",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9007,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Android",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9007",
                "blip_selector": "android",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9138,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "IE8",
                "ring": "Hold",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Web browsers continue to evolve as they strive to keep pace with new specifications in HTML, CSS and JavaScript. Alas, many enterprises have yet to embrace the end of life for IE6 and move to a newer and more standards compliant option. Of the browsers available today, Firefox and Opera provide support for the widest range of platforms. The Google browser, Chrome, brings new innovation to the browser space by splitting browser tabs into separate processes while providing a new implementation of JavaScript. These changes appear to give Chrome a significant performance boost over other browsers and have influenced the creation of a netbook OS called Chrome OS. While enterprises may look to move off IE6 and onto Microsoft’s IE8, we remain concerned about IE8’s current level of compliance to web standards.",
                "radarId": 0,
                "id": "en_2010-01_9138",
                "blip_selector": "ie8",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9268,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Subversion",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Distributed version control systems such as Git and Mercurial have had significant exposure in the past year or more as open source projects move to this toolset en masse. The social networking aspect that GitHub and Bitbucket have brought to distributed version control has helped to propel these tools forward and into enterprises looking for ways to develop across multiple geographies. The move for many to a distributed version control system has resulted in a move away from tools such as Subversion and other centralized version control systems. As organizations assess and choose between these two different toolsets, we suggest that you evaluate both in relation to your team’s specific needs. While we have seen widespread adoption of distributed version control tools within Thoughtworks and beyond, we still advocate the use of continuous integration and limits to the amount of time that code is spent outside of the main branch.",
                "radarId": 0,
                "id": "en_2010-01_9268",
                "blip_selector": "subversion",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9115,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Google Wave",
                "ring": "Hold",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Google Wave has sprung up over the past few months and looks to be a promising platform for collaboration over the Internet. The platform is still in early beta and suffers from some stability issues. Some early developers have integrated with the Google Wave platform but commercial releases of software that utilize Google Wave will likely wait until the beta tag has been lifted from the product.",
                "radarId": 0,
                "id": "en_2010-01_9115",
                "blip_selector": "google-wave",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9086,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Emergent design",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9086",
                "blip_selector": "emergent-design",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9228,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "RDF & SPARQL",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The semantic web and its underlying technologies, including RDF & SPARQL, have been around for 8 years or more. Broader uptake of the Cloud and non-relational databases such Neo4j have helped move the semantic web into the reach of enterprise developers. Outside of the semantic web, nonrelational databases are being adopted as alternatives to relational databases in a number of situations. Leveraging these technologies will require new approaches to architecture and development that suggest widespread adoption will only occur over a number of years.",
                "radarId": 0,
                "id": "en_2010-01_9228",
                "blip_selector": "rdf-sparql",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 521521,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "HTML 5",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-01_521521",
                "blip_selector": "html-5",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9045,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Cloud",
                "ring": "Adopt",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9045",
                "blip_selector": "cloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9152,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "JavaScript as a first class language",
                "ring": "Adopt",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9152",
                "blip_selector": "javascript-as-a-first-class-language",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9194,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Non-relational databases",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The semantic web and its underlying technologies, including RDF & SPARQL, have been around for 8 years or more. Broader uptake of the Cloud and non-relational databases such Neo4j have helped move the semantic web into the reach of enterprise developers. Outside of the semantic web, nonrelational databases are being adopted as alternatives to relational databases in a number of situations. Leveraging these technologies will require new approaches to architecture and development that suggest widespread adoption will only occur over a number of years.",
                "radarId": 0,
                "id": "en_2010-01_9194",
                "blip_selector": "non-relational-databases",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9032,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "C# 4.0",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9032",
                "blip_selector": "c-4-0",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9290,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Web as platform",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We assist many of our clients in adapting enterprise software architecture practices to fit within an Agile software delivery approach. In the past year we have seen increased interest in evolutionary enterprise architecture and how service oriented architectures shape the boundaries between enterprise units. The value of an evolutionary approach to enterprise architecture is the creation of lighter weight systems that ease integration between disparate parts. By embracing this approach and the notion of the web as an enterprise application platform, we have reduced overall complexity of application architectures, increased quality and scalability, and reduced development costs.",
                "radarId": 0,
                "id": "en_2010-01_9290",
                "blip_selector": "web-as-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9113,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Google as corporate platform",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9113",
                "blip_selector": "google-as-corporate-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9286,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Visualization and metrics",
                "ring": "Trial",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9286",
                "blip_selector": "visualization-and-metrics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9239,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Rich Internet applications",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Our position on Rich Internet Applications has changed over the past year. Experience has shown that platforms such as Silverlight, Flex and JavaFX may be useful for rich visualizations of data but provide few benefits over simpler web applications. Given that these toolsets have limited support for automated testing, it would suggest that a more traditional web application stack provides greater value for enterprise development. We recommend only using RIA platforms for rich visualizations incorporated into web applications, not as comprehensive development targets.",
                "radarId": 0,
                "id": "en_2010-01_9239",
                "blip_selector": "rich-internet-applications",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9016,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "ASP.NET MVC",
                "ring": "Adopt",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9016",
                "blip_selector": "asp-net-mvc",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9167,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Location based services",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-01_9167",
                "blip_selector": "location-based-services",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9137,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "IE6 End of Life",
                "ring": "Adopt",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Web browsers continue to evolve as they strive to keep pace with new specifications in HTML, CSS and JavaScript. Alas, many enterprises have yet to embrace the end of life for IE6 and move to a newer and more standards compliant option. Of the browsers available today, Firefox and Opera provide support for the widest range of platforms. The Google browser, Chrome, brings new innovation to the browser space by splitting browser tabs into separate processes while providing a new implementation of JavaScript. These changes appear to give Chrome a significant performance boost over other browsers and have influenced the creation of a netbook OS called Chrome OS. While enterprises may look to move off IE6 and onto Microsoft’s IE8, we remain concerned about IE8’s current level of compliance to web standards.",
                "radarId": 0,
                "id": "en_2010-01_9137",
                "blip_selector": "ie6-end-of-life",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9150,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Java language end of life",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "As C# continues to surge ahead, the Java language appears to be moving slowly as the Java community waits for Java 7. Having waited for new language features to surface for almost 3 years, the Java community has begun to innovate in new languages that run on the Java Virtual Machine, languages such as Groovy, JRuby, Scala and Clojure. With the increase in number of languages available on the JVM, we expect enterprises to begin to assess the suitability of reducing the amount of Java specific code developed in their enterprise applications in favor of these newer languages.",
                "radarId": 0,
                "id": "en_2010-01_9150",
                "blip_selector": "java-language-end-of-life",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9041,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Chrome OS",
                "ring": "Assess",
                "volume_date": "2010-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Web browsers continue to evolve as they strive to keep pace with new specifications in HTML, CSS and JavaScript. Alas, many enterprises have yet to embrace the end of life for IE6 and move to a newer and more standards compliant option. Of the browsers available today, Firefox and Opera provide support for the widest range of platforms. The Google browser, Chrome, brings new innovation to the browser space by splitting browser tabs into separate processes while providing a new implementation of JavaScript. These changes appear to give Chrome a significant performance boost over other browsers and have influenced the creation of a netbook OS called Chrome OS. While enterprises may look to move off IE6 and onto Microsoft’s IE8, we remain concerned about IE8’s current level of compliance to web standards.",
                "radarId": 0,
                "id": "en_2010-01_9041",
                "blip_selector": "chrome-os",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2010-04",
        "blips": [
            {
                "ringSortOrder": "1",
                "blip_id": 9268,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Subversion",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9268",
                "blip_selector": "subversion",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 508,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "MongoDB",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_508",
                "blip_selector": "mongodb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9195,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "NoSQL",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9195",
                "blip_selector": "nosql",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9097,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "F#",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "In the previous radar, we lumped functional languages together in a group. For this version, we’ve exploded that group and started calling out the ones interesting to us. Of the current crop of functional languages, the one we like the most is Clojure: a simple, elegant implementation of Lisp on the JVM. The other two that we fi nd interesting are Scala (a re-thinking of Java in functional form) and F#, the OCaml derivative from Microsoft that now appears “in the box” in Visual Studio 2010.",
                "radarId": 0,
                "id": "en_2010-04_9097",
                "blip_selector": "f",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9163,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Large format mobile devices",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Large format mobile devices, such as the Apple iPad and Amazon Kindle, provide a new model of ubiquitous computing. Their long battery life, simple interfaces and easy connectivity have the potential to change the way we interact with computers. Apple’s new user interfaces discard the familiar desktop metaphors of files and folders that have been standard since the introduction of the Macintosh in 1984.",
                "radarId": 0,
                "id": "en_2010-04_9163",
                "blip_selector": "large-format-mobile-devices",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9063,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Cross mobile platforms",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9063",
                "blip_selector": "cross-mobile-platforms",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9192,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Next-generation test tools",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9192",
                "blip_selector": "next-generation-test-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9079,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Domain-Specific Languages",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9079",
                "blip_selector": "domain-specific-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9239,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Rich Internet Applications",
                "ring": "Hold",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9239",
                "blip_selector": "rich-internet-applications",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9187,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Mobile Web",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9187",
                "blip_selector": "mobile-web",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 257,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Scala",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "In the previous radar, we lumped functional languages together in a group. For this version, we’ve exploded that group and started calling out the ones interesting to us. Of the current crop of functional languages, the one we like the most is Clojure: a simple, elegant implementation of Lisp on the JVM. The other two that we fi nd interesting are Scala (a re-thinking of Java in functional form) and F#, the OCaml derivative from Microsoft that now appears “in the box” in Visual Studio 2010.",
                "radarId": 0,
                "id": "en_2010-04_257",
                "blip_selector": "scala",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9045,
                "quadrant": "platforms",
                "movement": "s",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Cloud",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The Cloud continues to be of interest to us, with Software as a Service the most mature cloud component. Platform and Infrastructure as service offerings have reached different levels of maturity, and we reflect that in our placement of EC2, Google App Engine and Azure.",
                "radarId": 0,
                "id": "en_2010-04_9045",
                "blip_selector": "cloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9029,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Build pipelines",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9029",
                "blip_selector": "build-pipelines",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9180,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Message buses without smarts",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9180",
                "blip_selector": "message-buses-without-smarts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9032,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "C# 4.0",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9032",
                "blip_selector": "c-4-0",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9164,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Lean software development",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "As Agile practices move further toward mainstream adoption, we see significant benefits from the adoption of Lean software development practices as well. These practices have their roots in the Toyota Production System and complement much of our understanding of Agile software development to date. One topic that Lean has also given us greater insight into is that of set-based design. Set-based design leads us to implement similar solutions at the same time while the cost of doing so is constrained. This leads us into the area of emergent design and the ability to let experience shape our design decisions and defer key decisions until the last responsible moment.",
                "radarId": 0,
                "id": "en_2010-04_9164",
                "blip_selector": "lean-software-development",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9141,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Incremental data warehousing",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9141",
                "blip_selector": "incremental-data-warehousing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9167,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Location based services",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9167",
                "blip_selector": "location-based-services",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9215,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Polyglot programming",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "This technique was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-04_9215",
                "blip_selector": "polyglot-programming",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9150,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Java language end of life",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9150",
                "blip_selector": "java-language-end-of-life",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9113,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Google as corporate platform",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9113",
                "blip_selector": "google-as-corporate-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9111,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "GitHub",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9111",
                "blip_selector": "github",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9120,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Groovy",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9120",
                "blip_selector": "groovy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9146,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "iPhone",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The iPhone and android operating systems have rapidly become key players in the mobile platform marketplace. Apple’s app store and Google’s open source operating system have helped both companies leapfrog the competition in capturing developer mindshare.",
                "radarId": 0,
                "id": "en_2010-04_9146",
                "blip_selector": "iphone",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 460,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Neo4J",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_460",
                "blip_selector": "neo4j",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9138,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "IE8",
                "ring": "Hold",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9138",
                "blip_selector": "ie8",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9197,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "OAuth",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The Web is a global data structure that enables us to share information. However not all data is meant to be shared by everyone and it’s important to be able to share information on the Web in a disciplined and governable manner without requiring massive centralized infrastructure. OAuth provides a way of sharing resources on the Web responsibly and securely. It is a Web protocol (for Web browsers or machine-to-machine interactions), which allows federated authorization of access to Web resources. What’s interesting is that OAuth is a simple protocol to implement and utilize and yet its design goals match many common enterprise authorization problems. OAuth remains in the assessment category, however, because it has fragmented, and the IETF has not yet drawn the community back together under an Internet RFC.",
                "radarId": 0,
                "id": "en_2010-04_9197",
                "blip_selector": "oauth",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 258,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Clojure",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "In the previous radar, we lumped functional languages together in a group. For this version, we’ve exploded that group and started calling out the ones interesting to us. Of the current crop of functional languages, the one we like the most is Clojure: a simple, elegant implementation of Lisp on the JVM. The other two that we fi nd interesting are Scala (a re-thinking of Java in functional form) and F#, the OCaml derivative from Microsoft that now appears “in the box” in Visual Studio 2010.",
                "radarId": 0,
                "id": "en_2010-04_258",
                "blip_selector": "clojure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9211,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Platform roadmaps",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9211",
                "blip_selector": "platform-roadmaps",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9137,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "IE6 End of Life",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9137",
                "blip_selector": "ie6-end-of-life",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 521521,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "HTML 5",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "HTML 5 offers a large number of improvements over HTML 4 and XHTML 1.0. Many of these improvements are focused on providing support for developing complex web applications, and improving integration of rich content such as audio and video in standard ways. Features such as client-side storage, web sockets and offline use will further establish the position of the web browser as a viable enterprise application platform.",
                "radarId": 0,
                "id": "en_2010-04_521521",
                "blip_selector": "html-5",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9238,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Restfulie",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9238",
                "blip_selector": "restfulie",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9088,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "ESB",
                "ring": "Hold",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9088",
                "blip_selector": "esb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9082,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "EC2 & S3",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The Cloud continues to be of interest to us, with Software as a Service the most mature cloud component. Platform and Infrastructure as service offerings have reached different levels of maturity, and we reflect that in our placement of EC2, Google App Engine and Azure.",
                "radarId": 0,
                "id": "en_2010-04_9082",
                "blip_selector": "ec2-s3",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9086,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Emergent design",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9086",
                "blip_selector": "emergent-design",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9015,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Application appliances",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-04_9015",
                "blip_selector": "application-appliances",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9255,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Service choreography",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9255",
                "blip_selector": "service-choreography",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9267,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Squid",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "This tool was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-04_9267",
                "blip_selector": "squid",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9162,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Language workbenches",
                "ring": "Hold",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "It is likely that test languages will continue to evolve with the assistance of language workbenches, tools that assist in the creation of domain specific languages. Tools such as Jetbrains’ MPS and Intentional Software’s offering are leading the industry in this area. Both provide ways of creating new languages to map business software more closely to the end user’s domain language.",
                "radarId": 0,
                "id": "en_2010-04_9162",
                "blip_selector": "language-workbenches",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9078,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Distributed version control",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Subversion moves back into the Adopt section of the radar because it is a solid version control tool suitable for most teams. We consider Subversion’s features to be the basic standard for a modern version control tool. Thoughtworkers continue to embrace and recommend Distributed Version Control tools such as Git and Mercurial, but we caution that these systems often require deeper understanding to get the most out of them. New to the radar is GitHub, a “social coding” tool supporting both source code hosting and social networking. GitHub is arguably one of the main reasons Git has become the leading DVCS tool, and GitHub’s collaboration features are often used by enterprises that need to support distributed teams.",
                "radarId": 0,
                "id": "en_2010-04_9078",
                "blip_selector": "distributed-version-control",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9244,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Ruby/Jruby",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9244",
                "blip_selector": "ruby-jruby",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9251,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Scrum certification",
                "ring": "Hold",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9251",
                "blip_selector": "scrum-certification",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9098,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Facebook as business platform",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9098",
                "blip_selector": "facebook-as-business-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9007,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Android",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9007",
                "blip_selector": "android",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9160,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "JVM as platform",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9160",
                "blip_selector": "jvm-as-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9228,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "RDF triple stores",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Semantic Web W3C standards, and the tools implementing them, are at last worthy of real attention. RDF and RDFa allow anyone to say anything about anything in a sharable, structured format. This proves a much more powerful means of linking and structuring data from disparate sources than the strictness of RDBMS, or the mess that is unstructured Web data. Correspondingly SPARQL is the query standard that allows information to be mined from RDF marked-up data.",
                "radarId": 0,
                "id": "en_2010-04_9228",
                "blip_selector": "rdf-triple-stores",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9287,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Visualizations for business data",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "This tool was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-04_9287",
                "blip_selector": "visualizations-for-business-data",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9286,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Visualization and metrics",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9286",
                "blip_selector": "visualization-and-metrics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9005,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "ALT.NET",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9005",
                "blip_selector": "alt-net",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9152,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "JavaScript as a first class language",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9152",
                "blip_selector": "javascript-as-a-first-class-language",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 473,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Azure",
                "ring": "Hold",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_473",
                "blip_selector": "azure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9122,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "GWT",
                "ring": "Hold",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Google Web Toolkit (GWT) offers an interesting premise: write Swing-like Java code and generate unit testable JavaScript widgets and user interfaces. From a practical standpoint this doesn’t work well. First, using code-gen to produce the artifacts is time consuming, artificially extending build times and requiring manual changes to obtain optimal package layout. Second, if the JavaScript doesn’t behave exactly as you want you will have to hack the generated code. Third, using Java to generate JavaScript means that you can’t take direct advantage of the powerful features of JavaScript or numerous libraries such as JQuery. Finally, the JUnit support is quite limited, for example code using reflection cannot be tested.",
                "radarId": 0,
                "id": "en_2010-04_9122",
                "blip_selector": "gwt",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9021,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Automation of technical tests",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Significant advances in the tools for automating functional testing haven’t been replicated in the technical testing space. Data management for performance, load and soak testing is a particular issue. However, the tools are improving and increased visibility for these tools supports the early and often technical testing that we advocate.",
                "radarId": 0,
                "id": "en_2010-04_9021",
                "blip_selector": "automation-of-technical-tests",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9290,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Web as platform",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9290",
                "blip_selector": "web-as-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9016,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "ASP.NET MVC",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9016",
                "blip_selector": "asp-net-mvc",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9093,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Evolutionary database",
                "ring": "Adopt",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9093",
                "blip_selector": "evolutionary-database",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 234,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "WS-* beyond basic profile",
                "ring": "Hold",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_234",
                "blip_selector": "ws-beyond-basic-profile",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9059,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Continuous deployment",
                "ring": "Trial",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-04_9059",
                "blip_selector": "continuous-deployment",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9112,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Google App Engine",
                "ring": "Assess",
                "volume_date": "2010-04",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The Cloud continues to be of interest to us, with Software as a Service the most mature cloud component. Platform and Infrastructure as service offerings have reached different levels of maturity, and we reflect that in our placement of EC2, Google App Engine and Azure.",
                "radarId": 0,
                "id": "en_2010-04_9112",
                "blip_selector": "google-app-engine",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2010-08",
        "blips": [
            {
                "ringSortOrder": "3",
                "blip_id": 92281,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "RDF triple stores",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_92281",
                "blip_selector": "rdf-triple-stores",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 473,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Azure",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_473",
                "blip_selector": "azure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9021,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Automation of technical tests",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9021",
                "blip_selector": "automation-of-technical-tests",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 521521,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "HTML 5",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_521521",
                "blip_selector": "html-5",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9009,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Apache camel",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9009",
                "blip_selector": "apache-camel",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9092,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Evolutionary architecture",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9092",
                "blip_selector": "evolutionary-architecture",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9093,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Evolutionary database",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9093",
                "blip_selector": "evolutionary-database",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9111,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Github",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9111",
                "blip_selector": "github",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 258,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Clojure",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_258",
                "blip_selector": "clojure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9268,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Subversion",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9268",
                "blip_selector": "subversion",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9145,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "iPad",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9145",
                "blip_selector": "ipad",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9007,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Android",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9007",
                "blip_selector": "android",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9215,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Polyglot programming",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "This technique was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-08_9215",
                "blip_selector": "polyglot-programming",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9211,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Platform roadmaps",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9211",
                "blip_selector": "platform-roadmaps",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9097,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "F#",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9097",
                "blip_selector": "f",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9197,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "OAuth",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9197",
                "blip_selector": "oauth",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9224,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Puppet",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Puppet is a free, open source data center automation tool for managing changes to your production and production-like environments. Using Puppet, you can keep the configuration of your environments in version control and push changes out to your systems in a controlled, automated fashion. Infrastructure automation tools like puppet have the benefits of reducing manual effort allowing ops to focus on higher priorities, providing consistency and repeatability by reducing waste eliminating environmental differences between test and production environments.",
                "radarId": 0,
                "id": "en_2010-08_9224",
                "blip_selector": "puppet",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 460,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Neo4J",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Graph databases store information as interconnected nodes with arbitrary relations rather than tables and nameless relations. Graph databases are an excellent choice for complex domains with semi-structured data since they’re schema-less and highly extensible. Neo4j is the front-runner in the graph database space being an embedded Java component, which supports fast storage and search of graphs for Java solutions (including server applications). The Neo4j community is highly active and now has a basic REST API enabling it as more general purpose database engine. Neo4j moving into the trial category is representative of our experience trialling it in real-world scenarios and the early successes we’ve achieved.",
                "radarId": 0,
                "id": "en_2010-08_460",
                "blip_selector": "neo4j",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9228,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "RDFa",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9228",
                "blip_selector": "rdfa",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 508,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "MongoDB",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Document-oriented databases treat each record as a document with the ability to add any number of fields of arbitrary size. A relatively large amount of the attention that has been directed at document databases has landed on mongoDB, a highly scalable option with support for querying, indexing, replication and sharding. Beyond its enterprise feature set, its popularity is aided by its driver support for Java, Ruby, PHP, C#, Python and a number of other languages.",
                "radarId": 0,
                "id": "en_2010-08_508",
                "blip_selector": "mongodb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9267,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Squid",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "This tool was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-08_9267",
                "blip_selector": "squid",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9068,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Database based integration",
                "ring": "Hold",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9068",
                "blip_selector": "database-based-integration",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9195,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "NoSQL",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9195",
                "blip_selector": "nosql",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9032,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "C# 4.0",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9032",
                "blip_selector": "c-4-0",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9255,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Service choreography",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9255",
                "blip_selector": "service-choreography",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9167,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Location based services",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Google maps has led the way in bringing mapping mainstream. But businesses, governments and non-profit organizations are now learning to use these location based services to communicate more effectively with customers. With other mapping services providers getting into the act, there is going to be a proliferation of applications built around mapping targeted at customers who are now much more map-savvy.",
                "radarId": 0,
                "id": "en_2010-08_9167",
                "blip_selector": "location-based-services",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9192,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Next-generation test tools",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9192",
                "blip_selector": "next-generation-test-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9112,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Google App Engine",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-08_9112",
                "blip_selector": "google-app-engine",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9150,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Java language end of life",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "As we have discussed previously, the Java language appears to be moving slowly as the Java community waits for Java 7. Having waited for new language features to surface for almost 3 years, the Java community has begun to innovate in new languages that run on the Java Virtual Machine, languages such as Groovy, JRuby, Scala and Clojure. With the increase in number of languages available on the JVM, we expect enterprises to begin to assess the suitability of reducing the amount of Java specific code developed in their enterprise applications in favor of these newer languages. This is not to say that enterprises should outright abandon Java as a programming language, we do however suggest that you look for alternatives that may be more fi t for purpose in the area that new development is taking place.",
                "radarId": 0,
                "id": "en_2010-08_9150",
                "blip_selector": "java-language-end-of-life",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9179,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Mercurial",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9179",
                "blip_selector": "mercurial",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9244,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "JRuby",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9244",
                "blip_selector": "jruby",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9238,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Restfulie",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9238",
                "blip_selector": "restfulie",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9141,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Incremental data warehousing",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The industry has seen significant changes to the way we use and store data over the past few years. Agile development practices have lead to greater emphasis on evolutionary database design, requiring new tools that support migration of schemas in line with changes to the domain model of an application. As storage space consistently becomes cheaper and data access speeds increase, many organizations are investigating the use of multiple schemas to hold data for different purposes, e.g. transactional and analysis schemas. Incremental data warehousing is becoming increasingly popular as the cost of moving data between a transactional data store and an analysis environment is less than the value of having access to near real-time reporting of critical business data.",
                "radarId": 0,
                "id": "en_2010-08_9141",
                "blip_selector": "incremental-data-warehousing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9137,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "IE6 End of Life",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "IE6 is a significantly deficient browser with many documented security holes and should be phased out as soon as possible. Browsers such as Firefox and Chrome can be installed alongside IE, allowing the user to choose which one to use. We recommend that organizations with intranet applications that require IE6 consider using it only for those specific applications, and install one of these alongside for general use.",
                "radarId": 0,
                "id": "en_2010-08_9137",
                "blip_selector": "ie6-end-of-life",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9035,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Capability modeling",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9035",
                "blip_selector": "capability-modeling",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9161,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "KVM",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-08_9161",
                "blip_selector": "kvm",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9059,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Continuous deployment",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9059",
                "blip_selector": "continuous-deployment",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9018,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "ATOM",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9018",
                "blip_selector": "atom",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 234,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "WS-* beyond basic profile",
                "ring": "Hold",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_234",
                "blip_selector": "ws-beyond-basic-profile",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9160,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "JVM as platform",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "While the radar has called out the possibility of the Java language nearing its end of life, the JVM is demonstrating its resilience as a general-purpose virtual machine for other languages such as Ruby, Groovy, Scala and Clojure.",
                "radarId": 0,
                "id": "en_2010-08_9160",
                "blip_selector": "jvm-as-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9015,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Application appliances",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-08_9015",
                "blip_selector": "application-appliances",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9286,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Visualization and metrics",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9286",
                "blip_selector": "visualization-and-metrics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9122,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "GWT",
                "ring": "Hold",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9122",
                "blip_selector": "gwt",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9120,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Groovy",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9120",
                "blip_selector": "groovy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9116,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "GPGPU",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9116",
                "blip_selector": "gpgpu",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9098,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Facebook as business platform",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9098",
                "blip_selector": "facebook-as-business-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9077,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "DevOps",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "DevOps is a new movement seeking to achieve the business need for rapid delivery of software products while maintaining the stability of live environments. It uses two approaches: first, promoting closer collaboration between development and operations; second, applying practices shared with agile (collaboration, automation, simplicity, etc) to operations processes such as provisioning, change management, and production monitoring. It encompasses culture, processes, and tools - all supporting better communication, faster feedback and delivery, and more predictable outcomes.",
                "radarId": 0,
                "id": "en_2010-08_9077",
                "blip_selector": "devops",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9138,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "IE8",
                "ring": "Hold",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Internet browsers such as Google Chrome, Safari, Opera and Firefox, have made serious inroads in the implementation of the HTML 5 specification. With these advances it is now possible to experience many of the improvements that HTML brings. Unfortunately so far Microsoft has lagged on implementing these new standards. We recommend that organizations favor standards compliant browsers over IE8.",
                "radarId": 0,
                "id": "en_2010-08_9138",
                "blip_selector": "ie8",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9063,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Cross mobile platforms",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9063",
                "blip_selector": "cross-mobile-platforms",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9049,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Coding architects",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "This technique was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-08_9049",
                "blip_selector": "coding-architects",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9146,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "iPhone",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The iPhone changed the face of the mobile phone. The iPad has the potential to radically alter the way users interact with and consume Web-based resources and applications and will spawn a plethora of similar tablet devices. The addition of wireless application distribution in IOS4 allows organizations to securely host and distribute in-house applications without using the App Store, overcoming one of the main barriers to corporate adoption. IOS4’s introduction of multitasking with applications running in the background has opened up new possibilities for enterprise applications, at the cost of extra battery usage.",
                "radarId": 0,
                "id": "en_2010-08_9146",
                "blip_selector": "iphone",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9086,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Emergent design",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9086",
                "blip_selector": "emergent-design",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9029,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Build pipelines",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9029",
                "blip_selector": "build-pipelines",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9239,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Rich Internet Applications",
                "ring": "Hold",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Rich Internet Applications (RIA) are a popular topic, driven by the effort and marketing of big vendors pushing their offerings. RIA is useful for complex visualizations but ill-suited for other programming tasks because it doesn’t fully support the engineering hygiene we require for our tools: testing is difficult and application partitioning is cumbersome. These frameworks also don’t support common elements we take for granted in applications hosted in a browser: bookmarking, addressability, browser controls, and other aspects. We’re not entirely critical of these tools, but think that their sweet spot is rich visualizations, not building traditional data entry CRUD applications.",
                "radarId": 0,
                "id": "en_2010-08_9239",
                "blip_selector": "rich-internet-applications",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9251,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Scrum certification",
                "ring": "Hold",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9251",
                "blip_selector": "scrum-certification",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 257,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Scala",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The functional languages F#, Clojure and Scala still reside in the assess ring of the radar. Interest in functional languages continues to grow. Two characteristics of functional languages in particular are driving this interest, immutability with its implications for parallelism and functions as first class objects. While the introduction of closures to C# brings some of the latter capability, functional languages are almost synonymous with immutability. The placement of these languages within the assess ring indicates our view of their relative maturity and appropriateness. F#, based on OCaml, is fully supported within the Visual Studio toolset. F# includes support for objects and imperative constructs in addition to functional language constructs in a natural way. Scala, like F#, combines the object and functional paradigms, although the syntax of Scala is more Java-like. Clojure began as a JVM language and is now available on the .NET CLR. Clojure does allow for mutable state although it has an extensive set of immutable persistent data structures, all supporting multi-threaded applications. There are many similarities between these three languages, but at the moment we believe F# and Clojure to be better suited to most organizations for assessing than Scala. More work clearly needs to be done to validate this assertion.",
                "radarId": 0,
                "id": "en_2010-08_257",
                "blip_selector": "scala",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9113,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Google as corporate platform",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "At the start of October 2009, Thoughtworks became a customer of Google Apps. Although we have heard a wide range of opinions about the user experience offered by Google Mail, Calendar and Documents, the general consensus is that our largely consultant workforce is happy with the move. The next step that we as a company are looking to embrace is Google as a corporate platform beyond the standard Google Apps; in particular we are evaluating the use of Google App Engine for a number of internal systems initiatives. Google App Engine, Amazon EC2 and Salesforce.com all claim to be Cloud providers, yet each of their offerings differ. The Cloud fits into a broad categorization of service offerings split out into Infrastructure as a Service (e.g. Amazon EC2 and Rackspace), Platform as a Service (e.g. App Engine) and Software as a Service (e.g. Salesforce.com). In some cases, providers may span multiple service categories, further diluting the Cloud as a label. Regardless, the value of infrastructure, platform and software in the cloud is difficult to question and although many offerings have hit bumps in the road, they certainly have earned their position on the radar.",
                "radarId": 0,
                "id": "en_2010-08_9113",
                "blip_selector": "google-as-corporate-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9144,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Intentional Software",
                "ring": "Hold",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Thoughtworks has been working with Intentional Software for the past several years, and we are thrilled at the recent limited availability and production use of the Intentional Domain Workbench. We believe this technology represents a radical departure from the traditional software development approach. We place this technology in the assess ring, since we believe that it is time to begin exploring the application of Intentional’s technology in proofs of concept.",
                "radarId": 0,
                "id": "en_2010-08_9144",
                "blip_selector": "intentional-software",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9187,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Mobile Web",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9187",
                "blip_selector": "mobile-web",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9012,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "App containers",
                "ring": "Assess",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-08_9012",
                "blip_selector": "app-containers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9005,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "ALT.NET",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "While .NET has proven itself as a solid platform, many practitioners are dissatisfied with many of the default Microsoft tools and practices. This has led to the growth of the Alt.NET community, which champions techniques that we find more effective along with (usually opensource) tools that better support them.",
                "radarId": 0,
                "id": "en_2010-08_9005",
                "blip_selector": "alt-net",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9082,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "EC2 & S3",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9082",
                "blip_selector": "ec2-s3",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9290,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Web as platform",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9290",
                "blip_selector": "web-as-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9110,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Git",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9110",
                "blip_selector": "git",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9243,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Ruby",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "This language/framework was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2010-08_9243",
                "blip_selector": "ruby",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9088,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "ESB",
                "ring": "Hold",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9088",
                "blip_selector": "esb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9152,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "JavaScript as a first class language",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9152",
                "blip_selector": "javascript-as-a-first-class-language",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9180,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Message buses without smarts",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2010-08_9180",
                "blip_selector": "message-buses-without-smarts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9016,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "ASP",
                "ring": "Adopt",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "We have been tracking ASP.NET MVC since its early release candidates. This is an exciting development in the .NET space from Microsoft, both in the programming model and in the open source license under which Microsoft has released the library. ASP.NET MVC is similar to MVC frameworks on the Java platform and is a move away from the ASP.NET Web Forms approach to one that supports greater levels of automated testing.",
                "radarId": 0,
                "id": "en_2010-08_9016",
                "blip_selector": "asp",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9079,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-04",
                "radius": "",
                "name": "Domain-Specific Languages",
                "ring": "Trial",
                "volume_date": "2010-08",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "A significant amount of innovation occurred in the JavaScript space thanks to the Ruby on Rails community. This same community has helped to move both internal and external DSLs forward as a means for more closely mapping business requirements in code. Ruby’s syntax lends itself easily to the creation of easily readable DSLs, while language tools such as ANTLR help to make the creation of new domain specific languages more accessible to interested developers.",
                "radarId": 0,
                "id": "en_2010-08_9079",
                "blip_selector": "domain-specific-languages",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2011-01",
        "blips": [
            {
                "ringSortOrder": "2",
                "blip_id": 521521,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "HTML 5",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "HTML 5 continues to be the preferred choice for developing complex Web-based applications, with features including improved integration of rich audio and video content, clientside storage, better document structure, Web sockets and offline use. Safari, Chrome, Firefox and Opera each support significant subsets of the proposed standards, with support coming in Internet Explorer 9. HTML 5 is likely to remain in draft for some time to come, however; early adopters may wish to reflect on the bleakly comedic saga of two separate groups attempting to drive its evolution.",
                "radarId": 0,
                "id": "en_2011-01_521521",
                "blip_selector": "html-5",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9029,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Build pipelines",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The past 2 years or more has seen a proliferation of continuous integration tools and platforms leading to substantial innovation in the build and release space. Distribution of builds is one such innovation and yet another is the way in which builds are now structured to make greater use of automation in various stages of the build. Build pipelines help to provide greater insight into the quality of each build and the environments to which they have been deployed. A natural expansion of the build pipeline meme is the adoption of continuous deployment techniques, where the intention is to extend the build pipeline into the production environment. This relies on automated deployment techniques and authorization mechanisms built into the continuous integration toolset. One of the key benefits is the ability to move new functionality into production rapidly and reliably.",
                "radarId": 0,
                "id": "en_2011-01_9029",
                "blip_selector": "build-pipelines",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 473,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Azure",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The Cloud continues to be of interest to us, with Software as a Service the most mature cloud component. Platform and Infrastructure as service offerings have reached different levels of maturity, and we reflect that in our placement of EC2, Google App Engine and Azure.",
                "radarId": 0,
                "id": "en_2011-01_473",
                "blip_selector": "azure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9054,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Concurrency abstractions and patterns",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9054",
                "blip_selector": "concurrency-abstractions-and-patterns",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 234,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "WS-* beyond basic profile",
                "ring": "Hold",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Web services are now widely used as an enabler for service oriented architectures as well as for the integration of existing applications. We see mature tools and largely interoperable implementations for web service standards covered by WS-I Basic Profile, but we remain skeptical about the proliferation and value of WS-* standards beyond Basic Profile.",
                "radarId": 0,
                "id": "en_2011-01_234",
                "blip_selector": "ws-beyond-basic-profile",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9073,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Deltacloud",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9073",
                "blip_selector": "deltacloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9086,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Emergent design",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9086",
                "blip_selector": "emergent-design",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9268,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Subversion",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9268",
                "blip_selector": "subversion",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9286,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Visualization and metrics",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Evolutionary and emergent design of enterprise systems requires significant vigilance by development and architecture teams. Collecting metrics to capture development trends is a key part of understanding the stress points for a system under development. Assessing this information in its raw form is even more difficult than taking stock of a system at the source code level. To address this concern we have found a number of visualization tools and techniques to get what we refer to as the 1000ft view of the system and its internal quality. This 1000ft view allows us to identify visual patterns that help find and address issues more quickly.",
                "radarId": 0,
                "id": "en_2011-01_9286",
                "blip_selector": "visualization-and-metrics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9238,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Restfulie",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "The hypermedia constraint from REST is now understood as critical in sharing business protocols over the Web. Unfortunately many frameworks for building computer to- computer systems on the Web are ignorant of this constraint and tend towards simple CRUD systems. Restfulie is the first of a new generation of frameworks that natively support hypermedia, for Ruby, Java, and .NET. In Restfulie, business protocols are implemented using DSLs and exposed across the Web through hypermedia representations; clients drive those protocols through a similar declarative mechanism, consuming server-generated representations as they work towards a business goal. As the fi rst framework of its kind, Restfulie is opinionated and provides strict “training wheels” in order to bootstrap newcomers. However, it is an empirical proof that the Web and hypermedia can be used to orchestrate complex business activities.",
                "radarId": 0,
                "id": "en_2011-01_9238",
                "blip_selector": "restfulie",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9068,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Database based integration",
                "ring": "Hold",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9068",
                "blip_selector": "database-based-integration",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9228,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "RDFa",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "RDFa, a mechanism for attaching meaningful vocabularies to HTML content that is being quickly and widely adopted by content providers, is the first mainstream success to arise from the Semantic Web stack. RDFa enables tools ranging from custom point integrations to Google spiders to more richly understand your Web content. If you would like to quickly open up your content to a multitude of integration possibilities in a simple, cheap, standards-based fashion, we recommend you try RDFa.",
                "radarId": 0,
                "id": "en_2011-01_9228",
                "blip_selector": "rdfa",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 257,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Scala",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_257",
                "blip_selector": "scala",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9282,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Vagrant",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9282",
                "blip_selector": "vagrant",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9032,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "C# 4.0",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "When C# first appeared, many saw it as a direct competitor to the Java language’s dominance in enterprise application development. This was often attributed to the syntactical similarities that the two languages shared. Since its introduction, however, C# has continued to move forward with the adoption of language features such as lambda expressions, extension methods, object initializers and automatic property setters and getters, all of which are available in the 3.5 release of the language. With the 4.0 release of C#, we will see the introduction of a dynamic keyword and named and optional parameters, which will continue to bring C# more in line with languages such as Ruby and well ahead of the Java language.",
                "radarId": 0,
                "id": "en_2011-01_9032",
                "blip_selector": "c-4-0",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9110,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Git",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "In previous radars we recommended Distributed Version Control (DVCS) tools in general while mentioning Git and Mercurial in particular. In this edition we narrow our recommendation to only Mercurial and Git as these two have become the clear front-runners. Due to its success and the associated network effect GitHub remains the recommended option for enterprises that want to interact with the open source community.",
                "radarId": 0,
                "id": "en_2011-01_9110",
                "blip_selector": "git",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9124,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "HAML",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9124",
                "blip_selector": "haml",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9255,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Service choreography",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Integrated business processes now routinely span multiple systems and even enterprises. This raises the question of how these processes should be coordinated. In our experience centralized orchestration solutions often fail to deliver the promised benefits. They are costly to implement, and because they maintain application state on behalf of many consumers, they are often difficult to scale. This has lead us to prefer service choreography, where independently distributed participants collaborate according to an application protocol. Using the Web as platform, hypermedia-driven application protocols allow us to implement integrated business processes that are easy to evolve and easy to scale.",
                "radarId": 0,
                "id": "en_2011-01_9255",
                "blip_selector": "service-choreography",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9221,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Progressive Enhancement",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9221",
                "blip_selector": "progressive-enhancement",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9128,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Heroku",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Heroku is a beautifully simple Platform as a Service (PaaS) for Rack-compatible frameworks such as Ruby on Rails. In contrast to similar offerings for other languages, which often limit development to a programming model specific to the service platform, Heroku uses the standard Rails stack and even allows deployment with a plain Git push. Heroku was recently acquired by Salesforce.com and so has significant backing behind their service.",
                "radarId": 0,
                "id": "en_2011-01_9128",
                "blip_selector": "heroku",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9122,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "GWT",
                "ring": "Hold",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "In the last radar we placed the Google Web Toolkit (GWT) on hold and tried to provide a few reasons for that decision. As it turned out the conciseness of the text didn’t allow us to adequately make our points so that they were not misunderstood. We are interested in a discussion but our opinion about the suitability and usability of GWT has still not changed.",
                "radarId": 0,
                "id": "en_2011-01_9122",
                "blip_selector": "gwt",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9092,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Evolutionary architecture",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "One principle of agile software development is the notion of the last responsible moment. This notion applied to architectural considerations is controversial among traditional architects. We believe that, given properly articulated principles and appropriate test suites, architectures can evolve to meet the changing needs of a system, allowing for architectural decisions to be made at the last responsible moment without compromising the integrity of the system. We call this approach evolutionary architecture, in that we allow the architecture to evolve over time, always respecting the architectural guiding principles.",
                "radarId": 0,
                "id": "en_2011-01_9092",
                "blip_selector": "evolutionary-architecture",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9266,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Splunk",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9266",
                "blip_selector": "splunk",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9289,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "WCF HTTP",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Microsoft’s WCF HTTP API, though currently in the early stages of development, is evolving rapidly, and we’re already impressed by its support for HTTP primitives as well as idioms such as content negotiation and conditional requests. The API encourages the development of highly testable solutions with a clear separation of concerns. What is of particular interest to us is the way in which the project is being developed in Codeplex’s open source community. The ability for the community to steer the development of this part of the .NET platform merits this project’s early inclusion in the radar. While the license does allow for using the library in production today, given the current volatility of the API, we caution against taking a dependency at this early stage; many of the features we’ve admired in recent releases, such as its use of an attributelight programming model based on convention over configuration, may not make it into the first version.",
                "radarId": 0,
                "id": "en_2011-01_9289",
                "blip_selector": "wcf-http",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9093,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Evolutionary database",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The industry has seen significant changes to the way we use and store data over the past few years. Agile development practices have lead to greater emphasis on evolutionary database design, requiring new tools that support migration of schemas in line with changes to the domain model of an application. As storage space consistently becomes cheaper and data access speeds increase, many organizations are investigating the use of multiple schemas to hold data for different purposes, e.g. transactional and analysis schemas. Incremental data warehousing is becoming increasingly popular as the cost of moving data between a transactional data store and an analysis environment is less than the value of having access to near real-time reporting of critical business data.",
                "radarId": 0,
                "id": "en_2011-01_9093",
                "blip_selector": "evolutionary-database",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9077,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "DevOps",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The DevOps movement continues to gain traction as people pay more attention to the often-broken relationship between development and operations. DevOps promotes closer collaboration and joint responsibility between development and operations. DevOps applies agile practices to operations processes such as provisioning, change management and production monitoring and also brings productionlike thinking, tools and environments to development. DevOps is a key underpinning for organizations wanting to achieve continuous delivery of application releases into production.",
                "radarId": 0,
                "id": "en_2011-01_9077",
                "blip_selector": "devops",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9179,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Mercurial",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9179",
                "blip_selector": "mercurial",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9098,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Facebook as business platform",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Facebook has become popular in part due to its rich API and explosion of third-party applications. Thoughtworks is now starting to see our clients consider Facebook as a business platform. In addition to having a Facebook presence, businesses are building Facebook applications that are tightly integrated with their own services and offer useful functionality to Facebook users.",
                "radarId": 0,
                "id": "en_2011-01_9098",
                "blip_selector": "facebook-as-business-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9161,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "KVM",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-01_9161",
                "blip_selector": "kvm",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9007,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Android",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The iPhone and android operating systems have rapidly become key players in the mobile platform marketplace. Apple’s app store and Google’s open source operating system have helped both companies leapfrog the competition in capturing developer mindshare.",
                "radarId": 0,
                "id": "en_2011-01_9007",
                "blip_selector": "android",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9097,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "F#",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9097",
                "blip_selector": "f",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9285,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "vFabric",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9285",
                "blip_selector": "vfabric",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9049,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Coding architects",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "This technique was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-01_9049",
                "blip_selector": "coding-architects",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9192,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Next-generation test tools",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9192",
                "blip_selector": "next-generation-test-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9039,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Categorization & prioritization of technical debt",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9039",
                "blip_selector": "categorization-prioritization-of-technical-debt",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9015,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Application appliances",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-01_9015",
                "blip_selector": "application-appliances",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9142,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Infrastructure as code",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "The large number of hosts and devices in a modern datacenter or cloud deployment have made manually installing and configuring infrastructure unwise. Infrastructure as code is an approach whereby infrastructure configuration is scripted or described by files that are stored in version control, and changes are pushed out to the datacenter in a controlled manner. This parallels the discipline of source control and build promotion used in software development, hence ‘as code’. The two front-running open source tools for infrastructure automation are Chef and Puppet. They both use a textual DSL to script automation. Using this approach provides consistent and repeatable environment changes, reducing the manual effort involved, especially in troubleshooting environmental differences.",
                "radarId": 0,
                "id": "en_2011-01_9142",
                "blip_selector": "infrastructure-as-code",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9262,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Smart Systems",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9262",
                "blip_selector": "smart-systems",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9011,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "API management services",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9011",
                "blip_selector": "api-management-services",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9251,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Scrum certification",
                "ring": "Hold",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9251",
                "blip_selector": "scrum-certification",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9243,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Ruby",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "This language/framework was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-01_9243",
                "blip_selector": "ruby",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9232,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Real-time business intelligence",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Business are running 24x7, but the information needed to make business decisions is being provided by outdated methods using ETL jobs in batch mode. The batch window is shrinking as businesses move to global markets and are open for longer durations. The data provided by these jobs is out of date by the time the business needs to make a decision. There is substantial value in taking the event as it happens in the transactional system and feeding it to the data warehouse so that the business can get near real-time business intelligence.",
                "radarId": 0,
                "id": "en_2011-01_9232",
                "blip_selector": "real-time-business-intelligence",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9197,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "OAuth",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "OAuth is a Web-based authorization protocol that allows applications to access a user’s secured resources in another application without the user having to share their private security credentials. Now an RFC, OAuth represents a significant standards-based attempt to improve privacy and security for Web browser and machine-based access to distributed Web resources. Library support is patchy and adopters can expect to spend some time wrangling their code to achieve true interoperability. OAuth 2.0 is due towards the end of 2010, with specific flows for Web applications, desktop applications, mobile phones, and household devices. Because OAuth 2.0 is not backwardly compatible with version 1 and the implementation challenges around the current version, OAuth is still in the assess ring.",
                "radarId": 0,
                "id": "en_2011-01_9197",
                "blip_selector": "oauth",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9009,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Apache camel",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "In today’s connected systems environments almost all new development needs to integrate with existing applications and services. In conjunction with our adoption of simple message buses and integration techniques at the edges of a system, we have successfully used small libraries such as Apache Camel to perform the protocol bridging, message transformation and message routing tasks common to such integrations. Camel’s fluent Java interface, unit testing support and connectors for many different transports and message formats provide for an effective anti-corruption layer when implementing distributed applications.",
                "radarId": 0,
                "id": "en_2011-01_9009",
                "blip_selector": "apache-camel",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9290,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Web as platform",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Our understanding of the Web has matured to the point where we believe it is a viable platform for building distributed systems. RESTful techniques have advanced past pretty URIs + JSON towards hypermedia systems that project business protocols over the Internet and support seamless business process and service composition. The Web provides a powerful capability for scale, resiliency, and ease of implementation with commodity infrastructure like caches and Web servers with commodity protocols (like HTTP, AtomPub, and OAuth). Moving from trial to adopt is indicative of our position that the Web is ready for primetime, not just for Internet-facing systems but as a practical base for enterprise systems delivery.",
                "radarId": 0,
                "id": "en_2011-01_9290",
                "blip_selector": "web-as-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9021,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Automation of technical tests",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We strongly believe that all software delivery organizations need to be making use of automated technical tests. This sort of test spans failover testing, performance testing and soak testing among others; these activities can start early in a project’s life-cycle and continue through to maintenance. The common practice of waiting until near the end of a project is fraught with risk with little time available to find and fix problems. For example the requirement for a comprehensive production-like environment before the start of performance testing is a dangerous fallacy, we can discover bottlenecks, track performance trends and test our performance tests, without waiting for a perfect environment.",
                "radarId": 0,
                "id": "en_2011-01_9021",
                "blip_selector": "automation-of-technical-tests",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9116,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "GPGPU",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9116",
                "blip_selector": "gpgpu",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9211,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Platform roadmaps",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9211",
                "blip_selector": "platform-roadmaps",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9063,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Cross mobile platforms",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "While there has been much publicity around Apple’s squashing cross-platform development options for the iPhone and iPad, there are still perfectly valid options. PhoneGap and Appcelerator Titanium’s approach is to provide a native compatibility layer for all the major mobile platforms to your Web standard HTML+CSS+JS application.",
                "radarId": 0,
                "id": "en_2011-01_9063",
                "blip_selector": "cross-mobile-platforms",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9059,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Continuous deployment",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The past 2 years or more has seen a proliferation of continuous integration tools and platforms leading to substantial innovation in the build and release space. Distribution of builds is one such innovation and yet another is the way in which builds are now structured to make greater use of automation in various stages of the build. Build pipelines help to provide greater insight into the quality of each build and the environments to which they have been deployed. A natural expansion of the build pipeline meme is the adoption of continuous deployment techniques, where the intention is to extend the build pipeline into the production environment. This relies on automated deployment techniques and authorization mechanisms built into the continuous integration toolset. One of the key benefits is the ability to move new functionality into production rapidly and reliably.",
                "radarId": 0,
                "id": "en_2011-01_9059",
                "blip_selector": "continuous-deployment",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9019,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Automate database deployment",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "When moving to continuous delivery, deployment of database changes should also be automated so that the application release that relies on those changes does not have to wait for manual deployment of the database changes. Automated database deployment ensures that the full cycle of deploying application and database changes is automated.",
                "radarId": 0,
                "id": "en_2011-01_9019",
                "blip_selector": "automate-database-deployment",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9035,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Capability modeling",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9035",
                "blip_selector": "capability-modeling",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9145,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "iPad",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The iPhone changed the face of the mobile phone. The iPad has the potential to radically alter the way users interact with and consume Web-based resources and applications and will spawn a plethora of similar tablet devices. The addition of wireless application distribution in IOS4 allows organizations to securely host and distribute in-house applications without using the App Store, overcoming one of the main barriers to corporate adoption. IOS4’s introduction of multitasking with applications running in the background has opened up new possibilities for enterprise applications, at the cost of extra battery usage.",
                "radarId": 0,
                "id": "en_2011-01_9145",
                "blip_selector": "ipad",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9111,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Github",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Subversion moves back into the Adopt section of the radar because it is a solid version control tool suitable for most teams. We consider Subversion’s features to be the basic standard for a modern version control tool. Thoughtworkers continue to embrace and recommend Distributed Version Control tools such as Git and Mercurial, but we caution that these systems often require deeper understanding to get the most out of them. New to the radar is GitHub, a “social coding” tool supporting both source code hosting and social networking. GitHub is arguably one of the main reasons Git has become the leading DVCS tool, and GitHub’s collaboration features are often used by enterprises that need to support distributed teams.",
                "radarId": 0,
                "id": "en_2011-01_9111",
                "blip_selector": "github",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9152,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "JavaScript as a first class language",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9152",
                "blip_selector": "javascript-as-a-first-class-language",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9088,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "ESB",
                "ring": "Hold",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9088",
                "blip_selector": "esb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 604,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "OpenStack",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_604",
                "blip_selector": "openstack",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9239,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "RIA",
                "ring": "Hold",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9239",
                "blip_selector": "ria",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9082,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "EC2 & S3",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "AWS is the most mature and broadest of the current cloud offerings providing scalable services for computation (EC2), storage (S3 & SBS), databases (SimpleDB & RDS), messaging (SQS & SNS), etc. The list of services provided by AWS continues to expand rapidly with new services being added on an almost monthly basis, (http://bit.ly/90887v). While existing applications can be deployed on AWS through the use of Amazon Machine Images the full benefits of this platform will come from applications that are developed to take advantage of AWS. The usage based billing model adopted by AWS allows organizations to scale applications without large upfront investment and avoid the overhead cost of under utilized hardware.",
                "radarId": 0,
                "id": "en_2011-01_9082",
                "blip_selector": "ec2-s3",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9247,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "SASS, SCSS, and LESS",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9247",
                "blip_selector": "sass-scss-and-less",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9195,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "NoSQL",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "NoSQL is about scale, massive datasets, cloud data, social network data, data in buckets, data in graphs i.e. a range of use cases for which “traditional” SQL databases may not be the optimal choice. Unravelling NoSQL and trying to explain what it is and why you should or should not be interested in it is difficult as the term covers a wide range of technologies, data architectures and priorities and represents as much a movement or a school of thought as it does any particular technology. Types of NoSQL technologies include key-value, column and object stores as well as document, graph and XML databases.",
                "radarId": 0,
                "id": "en_2011-01_9195",
                "blip_selector": "nosql",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9001,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Acceptance test of journeys",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9001",
                "blip_selector": "acceptance-test-of-journeys",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9267,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Squid",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "This tool was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-01_9267",
                "blip_selector": "squid",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9150,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Java language end of life",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The purchase of Sun, and thus their Java assets, by Oracle introduced uncertainty regarding the future of Java. This uncertainty continues despite the recent announcements of Oracle’s Java roadmap, which had both encouraging and worrying aspects. As a result we continue to highlight the issue. We recommend monitoring the situation rather than any immediate actions to move off the platform.",
                "radarId": 0,
                "id": "en_2011-01_9150",
                "blip_selector": "java-language-end-of-life",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9187,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Mobile Web",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Mobile Web was in our Assess category on previous radars, but we’ve moved it into Trial in recognition of the fact that the Web is increasingly consumed through iPhone, Android and tablet devices. Many devices can render a fair approximation of a desktop browser experience, but to present the user with a truly optimal experience we recommend adapting a site to the screen size, display and control behaviors particular to the device. Techniques such as progressive enhancement can allow a single site to adapt to both desktop and mobile browsers. Large format mobile devices, such as the Apple iPad and Amazon Kindle, provide a new model of ubiquitous computing. Their long battery life, simple interfaces and easy connectivity have the potential to change the way we interact with computers. Apple’s new user interfaces discard the familiar desktop metaphors of files and folders that have been standard since the introduction of the Macintosh in 1984.",
                "radarId": 0,
                "id": "en_2011-01_9187",
                "blip_selector": "mobile-web",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9018,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "ATOM",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9018",
                "blip_selector": "atom",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 258,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Clojure",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_258",
                "blip_selector": "clojure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9120,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Groovy",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Functional languages have a wide range of practical uses, including simulation, computational fi nance, computational science, large scale data processing and parsing. These fields benefit from functional programming techniques that simplify concurrent execution and the expression of complex mathematical functions concisely. Functional programming requires a shift in thinking for enterprise developers experienced in object oriented development. Moving to an often terse syntax for solving complex problems may initially be intimidating to many. As with all forms of programming languages, syntax is just one aspect of the language itself. In functional programming another significant aspect is the use of common idioms. These idioms speed code comprehension and increase overall maintainability. This might not be news to all, but it is worth noting that dynamic languages are long ready for adoption and trial. Ruby, particularly when deployed on JRuby, is ready for adoption. Thoughtworks uses Ruby and JRuby extensively in both its Services and Product work. Groovy is ready for trial and could prove more accessible than Ruby/JRuby in a Java shop. For the right type of applications, Ruby, JRuby, and Groovy prove far more effective, expressive, and productive than Java and C#.",
                "radarId": 0,
                "id": "en_2011-01_9120",
                "blip_selector": "groovy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9244,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "JRuby",
                "ring": "Adopt",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Functional languages have a wide range of practical uses, including simulation, computational fi nance, computational science, large scale data processing and parsing. These fields benefit from functional programming techniques that simplify concurrent execution and the expression of complex mathematical functions concisely. Functional programming requires a shift in thinking for enterprise developers experienced in object oriented development. Moving to an often terse syntax for solving complex problems may initially be intimidating to many. As with all forms of programming languages, syntax is just one aspect of the language itself. In functional programming another significant aspect is the use of common idioms. These idioms speed code comprehension and increase overall maintainability. This might not be news to all, but it is worth noting that dynamic languages are long ready for adoption and trial. Ruby, particularly when deployed on JRuby, is ready for adoption. Thoughtworks uses Ruby and JRuby extensively in both its Services and Product work. Groovy is ready for trial and could prove more accessible than Ruby/JRuby in a Java shop. For the right type of applications, Ruby, JRuby, and Groovy prove far more effective, expressive, and productive than Java and C#.",
                "radarId": 0,
                "id": "en_2011-01_9244",
                "blip_selector": "jruby",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9079,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Domain-Specific Languages",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9079",
                "blip_selector": "domain-specific-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9180,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Message buses without smarts",
                "ring": "Trial",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_9180",
                "blip_selector": "message-buses-without-smarts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 92281,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "RDF triple stores",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "While we are bullish on RDFa, we remain highly guarded on native RDF triple stores as a persistence mechanism. The leading available triple stores vary greatly in their capabilities, capacity, and performance characteristics. If you are exploring the use of a triple store, you must do extensive testing to make sure the triple store fits your needs.",
                "radarId": 0,
                "id": "en_2011-01_92281",
                "blip_selector": "rdf-triple-stores",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 280,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Node.js",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-01_280",
                "blip_selector": "node-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9012,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "App containers",
                "ring": "Assess",
                "volume_date": "2011-01",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-01_9012",
                "blip_selector": "app-containers",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2011-07",
        "blips": [
            {
                "ringSortOrder": "2",
                "blip_id": 9039,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Categorization & prioritization of technical debt",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9039",
                "blip_selector": "categorization-prioritization-of-technical-debt",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9152,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "JavaScript as a first class language",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The maintainability, testability and readability of JavaScript is a very significant contributor to the productivity of teams producing Web-based applications and sites. Thoughtworks believes JavaScript deserves to be treated as a first class language, viewing it as second class citizen has become an excuse for a whole series of bad practice we would not tolerate in Java or C#. We need to use the same kind of tools (e.g. unit testing) and approaches (e.g. refactoring) as we’d use for any other production language. V8 and other JavaScript engines are raising the bar on performance, while Flash & Silverlight seem to be losing momentum to HTML5 + JavaScript in areas where a rich client-like experience is required. This is good news for all interested in open standards on the Web.",
                "radarId": 0,
                "id": "en_2011-07_9152",
                "blip_selector": "javascript-as-a-first-class-language",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 604,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "OpenStack",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "OpenStack is a new cloud operating system that promises a complete open-source solution. OpenStack is a fabric cloud controller which leverages existing virtualization technologies such as KVM and will integrate with other virtualisation tools such as Xen and OpenVZ. Currently under heavy development, OpenStack is expected to provide a stable production-ready solution by the end of Q2 2011.",
                "radarId": 0,
                "id": "en_2011-07_604",
                "blip_selector": "openstack",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9158,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "jQuery Mobile",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9158",
                "blip_selector": "jquery-mobile",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9179,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Mercurial",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "In previous radars we recommended Distributed Version Control (DVCS) tools in general while mentioning Git and Mercurial in particular. In this edition we narrow our recommendation to only Mercurial and Git as these two have become the clear front-runners. Due to its success and the associated network effect GitHub remains the recommended option for enterprises that want to interact with the open source community.",
                "radarId": 0,
                "id": "en_2011-07_9179",
                "blip_selector": "mercurial",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 521521,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "HTML 5",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_521521",
                "blip_selector": "html-5",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9071,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Decision driven BI",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Traditional approaches to implementing data warehouses and business intelligence work from the bottom up in horizontal tiers, assembling and cleansing data sources from across the enterprise then aggregating them into a comprehensive data mart before reports can be generated. Some people are now employing an alternative approach that starts with the real outcome--a business decision--and pulls work items through the process as needed to support that decision. Decision driven business intelligence allows a more incremental approach to BI and facilitates rapid feedback to the decision makers who are the ultimate consumers of business intelligence.",
                "radarId": 0,
                "id": "en_2011-07_9071",
                "blip_selector": "decision-driven-bi",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9191,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "New Relic beyond Rails",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "We have regularly used New Relic hosted performance monitoring with Ruby on Rails systems in development and production. The combination of fast setup and comprehensive reporting has proven extremely valuable in troubleshooting performance. We are now seeing good results from the New Relic monitoring services for Java and .NET systems.",
                "radarId": 0,
                "id": "en_2011-07_9191",
                "blip_selector": "new-relic-beyond-rails",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9265,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Sonar",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9265",
                "blip_selector": "sonar",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9011,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "API management services",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Exposing APIs to a large developer community creates nonfunctional requirements that are often the same from one business to another. Key management, authentication, access control, traffic management, caching, tracking and reporting are often implemented as commodity functions that can be reused across applications and businesses without modification. Some service providers have spotted this trend and are offering API management via software as a service. Prominent vendors in this space include Mashery and Apigee, who both offer the option of hosting the service on a customer’s own infrastructure. API management services may also be interesting to enterprise customers who are using Web as platform techniques for their internal SOA, providing a lighter weight alternative to traditional SOA management tools.",
                "radarId": 0,
                "id": "en_2011-07_9011",
                "blip_selector": "api-management-services",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9116,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "GPGPU",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9116",
                "blip_selector": "gpgpu",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 521,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Offline mobile webapps (just HTML5)",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_521",
                "blip_selector": "offline-mobile-webapps-just-html5",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9217,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Powershell",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9217",
                "blip_selector": "powershell",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9276,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "TLB",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "If your test suites are growing slower and you have already verified that it is not a serious problem with your application, first make your tests faster, then look at parallelization. The Test Load Balancer (TLB) project is a big development in the world of parallel test execution. It removes the inefficiencies of manual work distribution using smart algorithms and historical test execution data to optimize workload distribution and minimize elapsed time. Further, it orders the tests in intelligent ways like executing the test that failed in the previous execution first to get quicker feedback. Parallel execution can occur across a grid of machines or across multiple processes on a single machine. JUnit, RSpec, Test::Unit, Twist and Cucumber are currently supported and NUnit is under development.",
                "radarId": 0,
                "id": "en_2011-07_9276",
                "blip_selector": "tlb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9197,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "OAuth",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "OAuth is a web-friendly, lightweight standard for authorization that allows a user to share private resources between internet services, e.g., allowing your favorite social networking site to access your photos from your favorite photo sharing site. OAuth is simple, avoids password proliferation, and allows a service to grant bare minimum privileges. If you are exposing your application’s data in a lightweight, web-friendly manner you should strongly consider using OAuth as your standard for authorization.",
                "radarId": 0,
                "id": "en_2011-07_9197",
                "blip_selector": "oauth",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9064,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Cross-platform mobile toolkits",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9064",
                "blip_selector": "cross-platform-mobile-toolkits",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9252,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Selenium 2 testing of mobile websites",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "When building mobile web applications we can now use Selenium 2 mobile tests to run the same acceptance tests on iOS, Android and Blackberry. This works on emulators, simulators and physical devices. We have successfully used this approach on production software for all 3 platforms. While the Blackberry driver is still in beta, we found it stable enough for use. The key challenge is the different ways to install the driver and start the browser, but this only needs to be solved once. We suggest that companies doing mobile web for these devices try this approach. We see no reason why this approach cannot be extended to Windows Phone in the future.",
                "radarId": 0,
                "id": "en_2011-07_9252",
                "blip_selector": "selenium-2-testing-of-mobile-websites",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9073,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Deltacloud",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Every Infrastructure as a Service (IaaS) cloud offering provides their own API for performing common tasks. Deltacloud aims to abstract those APIs and provide a RESTful interface for performing common cloud management functions, making it possible to migrate virtual infrastructure between clouds.",
                "radarId": 0,
                "id": "en_2011-07_9073",
                "blip_selector": "deltacloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9097,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "F#",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The functional languages F#, Clojure and Scala still reside in the assess ring of the radar. Interest in functional languages continues to grow. Two characteristics of functional languages in particular are driving this interest, immutability with its implications for parallelism and functions as first class objects. While the introduction of closures to C# brings some of the latter capability, functional languages are almost synonymous with immutability. The placement of these languages within the assess ring indicates our view of their relative maturity and appropriateness. F#, based on OCaml, is fully supported within the Visual Studio toolset. F# includes support for objects and imperative constructs in addition to functional language constructs in a natural way. Scala, like F#, combines the object and functional paradigms, although the syntax of Scala is more Java-like. Clojure began as a JVM language and is now available on the .NET CLR. Clojure does allow for mutable state although it has an extensive set of immutable persistent data structures, all supporting multi-threaded applications. There are many similarities between these three languages, but at the moment we believe F# and Clojure to be better suited to most organizations for assessing than Scala. More work clearly needs to be done to validate this assertion.",
                "radarId": 0,
                "id": "en_2011-07_9097",
                "blip_selector": "f",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 258,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Clojure",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The functional languages F#, Clojure and Scala still reside in the assess ring of the radar. Interest in functional languages continues to grow. Two characteristics of functional languages in particular are driving this interest, immutability with its implications for parallelism and functions as first class objects. While the introduction of closures to C# brings some of the latter capability, functional languages are almost synonymous with immutability. The placement of these languages within the assess ring indicates our view of their relative maturity and appropriateness. F#, based on OCaml, is fully supported within the Visual Studio toolset. F# includes support for objects and imperative constructs in addition to functional language constructs in a natural way. Scala, like F#, combines the object and functional paradigms, although the syntax of Scala is more Java-like. Clojure began as a JVM language and is now available on the .NET CLR. Clojure does allow for mutable state although it has an extensive set of immutable persistent data structures, all supporting multi-threaded applications. There are many similarities between these three languages, but at the moment we believe F# and Clojure to be better suited to most organizations for assessing than Scala. More work clearly needs to be done to validate this assertion.",
                "radarId": 0,
                "id": "en_2011-07_258",
                "blip_selector": "clojure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9187,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Mobile web",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9187",
                "blip_selector": "mobile-web",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9247,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "SASS, SCSS, and LESS",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9247",
                "blip_selector": "sass-scss-and-less",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9219,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Procedure oriented integration",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "One of the goals of SOA has been to decouple services by exchanging human-readable business documents instead of programming parameters. However, in implementing SOA, many businesses have simply used web services to expose the underlying programming models of back-end systems. Procedure oriented integration is nothing more than remote procedure calls implemented via a different protocol. The consequences of this are additional layers of complexity with no improvement in business flexibility. To avoid this, implementers of SOA should first understand the business meaning of their services, then implement human-readable contracts that are independent of legacy system implementation.",
                "radarId": 0,
                "id": "en_2011-07_9219",
                "blip_selector": "procedure-oriented-integration",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9275,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Thoughtful caching",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9275",
                "blip_selector": "thoughtful-caching",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9124,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "HAML",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "HAML is a language that allows you to use indentation to lay out the structure of HTML. While not a general replacement for HTML, it is effective for focusing on the hierarchical structure of tags.",
                "radarId": 0,
                "id": "en_2011-07_9124",
                "blip_selector": "haml",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9019,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Automate database deployment",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9019",
                "blip_selector": "automate-database-deployment",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9282,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Vagrant",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9282",
                "blip_selector": "vagrant",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9048,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Code in configuration",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9048",
                "blip_selector": "code-in-configuration",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 315,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Gradle",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Gradle is an attempt to bring sanity to the enterprise build space by marrying best-of-breed tools with cutting edge techniques. Gradle allows you to interact with your existing Maven repositories, but adds scriptability to your builds with a clean domain specific language.",
                "radarId": 0,
                "id": "en_2011-07_315",
                "blip_selector": "gradle",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9030,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Build your own radar",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9030",
                "blip_selector": "build-your-own-radar",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9285,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "vFabric",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9285",
                "blip_selector": "vfabric",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9201,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Open source BI/ETL tools",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9201",
                "blip_selector": "open-source-bi-etl-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9110,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Git",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9110",
                "blip_selector": "git",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9142,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Infrastructure as code",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "The DevOps movement continues to grow, with developers and operations staff working closely together to solve the “software last mile” problem. Infrastructure as code is a technique for treating infrastructure configuration in the same way as code; checking it into source control, then using it to push changes out to the data center. In addition to web server, application server and application configuration, we are seeing network configuration treated in the same way. Network switch, firewall and load balancer configuration can be infrastructure as code, and even changed at runtime.",
                "radarId": 0,
                "id": "en_2011-07_9142",
                "blip_selector": "infrastructure-as-code",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9077,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "DevOps",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9077",
                "blip_selector": "devops",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9054,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Concurrency abstractions and patterns",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Concurrency is a difficult problem and increasingly difficult to avoid. Hardware isn’t getting faster but multicore platforms are becoming the norm, with even mobile phones containing two or more processors. Concurrency abstractions and patterns -- which are not new, but less widely known -- are helping address many of the challenges seen in this space. In particular the models seen in Clojure, Erlang, Retlang and Event Patterns offer a more testable and reliable approach than the better known threads, locks and semaphores.",
                "radarId": 0,
                "id": "en_2011-07_9054",
                "blip_selector": "concurrency-abstractions-and-patterns",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9111,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Github",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9111",
                "blip_selector": "github",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9088,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "ESB",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9088",
                "blip_selector": "esb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9046,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Cloud Foundry",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9046",
                "blip_selector": "cloud-foundry",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9107,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Future of Java",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "This language/framework was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-07_9107",
                "blip_selector": "future-of-java",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 648,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "CoffeeScript",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_648",
                "blip_selector": "coffeescript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9268,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Subversion",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Subversion moves back into the Adopt section of the radar because it is a solid version control tool suitable for most teams. We consider Subversion’s features to be the basic standard for a modern version control tool. Thoughtworkers continue to embrace and recommend Distributed Version Control tools such as Git and Mercurial, but we caution that these systems often require deeper understanding to get the most out of them. New to the radar is GitHub, a “social coding” tool supporting both source code hosting and social networking. GitHub is arguably one of the main reasons Git has become the leading DVCS tool, and GitHub’s collaboration features are often used by enterprises that need to support distributed teams.",
                "radarId": 0,
                "id": "en_2011-07_9268",
                "blip_selector": "subversion",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 257,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Scala",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_257",
                "blip_selector": "scala",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9086,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-01",
                "radius": "",
                "name": "Emergent design",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "As Agile practices move further toward mainstream adoption, we see significant benefits from the adoption of Lean software development practices as well. These practices have their roots in the Toyota Production System and complement much of our understanding of Agile software development to date. One topic that Lean has also given us greater insight into is that of set-based design. Set-based design leads us to implement similar solutions at the same time while the cost of doing so is constrained. This leads us into the area of emergent design and the ability to let experience shape our design decisions and defer key decisions until the last responsible moment.",
                "radarId": 0,
                "id": "en_2011-07_9086",
                "blip_selector": "emergent-design",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9059,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Continuous deployment",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "If you are wondering “What comes after agile?,” you should look towards continuous delivery. While your development processes may be fully optimized, it still might take your organization weeks or months to get a single change into production. Continuous delivery focuses on maximizing automation including infrastructure as code, environment management and deployment automation to ensure your system is always ready for production. It is about tightening your feedback loops and not putting off anything until the end. Continuous delivery is not the same as continuous deployment, which means deploying every change to production. Continuous delivery is not a cowboy show. It puts you in charge of your production environment. The business can pick and choose what and when to deploy. If you think you’ve nailed agile development, but aren’t considering how to achieve continuous delivery, you really haven’t even started.",
                "radarId": 0,
                "id": "en_2011-07_9059",
                "blip_selector": "continuous-deployment",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9211,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Platform roadmaps",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Almost every enterprise has “legacy systems” that are expensive to operate and upgrade. Often a system will become legacy over the course of several years, through neglect or atrophy. We recommend using platform roadmaps to maximize the value of a systems portfolio and plan for the upgrade and eventual retirement of systems.",
                "radarId": 0,
                "id": "en_2011-07_9211",
                "blip_selector": "platform-roadmaps",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9141,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Iterative data warehousing",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Like iterative software development, there is lot of value to be gained by delivering data warehousing projects using iterative techniques. Iterative data warehousing techniques allow the end users of the data warehouse to determine what reports they want and the ETL developers and data modelers to deliver those features without wasting time with data modeling and ETL jobs that do not provide immediate value to the business.",
                "radarId": 0,
                "id": "en_2011-07_9141",
                "blip_selector": "iterative-data-warehousing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9283,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "VCS with “implicit workflow”",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9283",
                "blip_selector": "vcs-with-implicit-workflow",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9049,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Coding architects",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "This technique was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-07_9049",
                "blip_selector": "coding-architects",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9089,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Event API’s",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9089",
                "blip_selector": "event-api-s",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 738,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Event sourcing",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_738",
                "blip_selector": "event-sourcing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9068,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Database based integration",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9068",
                "blip_selector": "database-based-integration",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9035,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Capability modeling",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Initiatives that span multiple projects require shared understanding of the business context, operating model, and strategic goals of an organization, as well as any existing technical, organizational and process constraints impinging on planning and design activities. As part of our evolutionary approach to enterprise architecture, we use business capability modelling to create lightweight hierarchical models of the business functions that are an essential part of an organization’s needs and goals. Capabilities describe an organization’s operating model in terms of goals and competencies (what is to be done), rather than implementation specifics (how things are done). Whereas business architecture models based on people, process or technology are contingent, volatile and often short lived, and therefore ill-suited to the long-term planning needs of the organization, capability models provide a description of the business context that is stable enough to serve as a basis for identifying and prioritising technology and process initiatives.",
                "radarId": 0,
                "id": "en_2011-07_9035",
                "blip_selector": "capability-modeling",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9176,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Manual infrastructure management",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9176",
                "blip_selector": "manual-infrastructure-management",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9093,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Evolutionary database",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9093",
                "blip_selector": "evolutionary-database",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9018,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "ATOM",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9018",
                "blip_selector": "atom",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9279,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Ubiquitous computing",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9279",
                "blip_selector": "ubiquitous-computing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9151,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Java portal servers",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9151",
                "blip_selector": "java-portal-servers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9286,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Visualization and metrics",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Data visualizations have been effective in business and IT decision making. Organizations are making effective use of real time data through visualizations. These visualizations include point in time data as well as trends plotted over time. We are seeing increased adoption of these techniques in optimizing operations and software development.",
                "radarId": 0,
                "id": "en_2011-07_9286",
                "blip_selector": "visualization-and-metrics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9090,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Event driven business intelligence",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "This technique was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-07_9090",
                "blip_selector": "event-driven-business-intelligence",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9262,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Smart systems",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Smart Phones with a GPS, cameras and a screen are but one example of smart systems which are proliferating around us, fusing the real and the digital world. Augmented reality apps like Google Goggles, geolocation services & smart grids are just some of the possible applications.",
                "radarId": 0,
                "id": "en_2011-07_9262",
                "blip_selector": "smart-systems",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9100,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Feature branching",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9100",
                "blip_selector": "feature-branching",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9001,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Acceptance test of journeys",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9001",
                "blip_selector": "acceptance-test-of-journeys",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 304,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Backbone.js",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Even though JavaScript increasingly plays a more important role in today’s world of software development, it is still troublesome to organize in a clean structure. Backbone.js is a library which provides an MVC (model view controller) framework for JavaScript heavy applications. It allows developers to write JavaScript code in a more manageable and testable way.",
                "radarId": 0,
                "id": "en_2011-07_304",
                "blip_selector": "backbone-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9251,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Scrum certification",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9251",
                "blip_selector": "scrum-certification",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9033,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Caching reverse proxies",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Application designs that incorporate caching reverse proxies as first class design elements are simpler and more resilient to infrastructure failures. Placing a caching reverse proxy between an application and a web service it consumes reduces the risk of service failures affecting the application while improving overall system performance.",
                "radarId": 0,
                "id": "en_2011-07_9033",
                "blip_selector": "caching-reverse-proxies",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9079,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Domain-Specific Languages",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9079",
                "blip_selector": "domain-specific-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9161,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "KVM",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2011-07_9161",
                "blip_selector": "kvm",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9180,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Message buses without smarts",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9180",
                "blip_selector": "message-buses-without-smarts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9266,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Splunk",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Application logs are both a blessing and a curse. They are comforting to have when a production issue arises, but actually digging out the data we need usually requires cobbling together scripts written in tools such as AWK and sed. Splunk is an elegant solution that quickly analyzes many standard log file formats like IIS, Log4J and syslog, and is extensible to custom formats. It indexes files, statically or in real time, to generate canned or custom reports. If the raw log fields do not provide what you need, simply use a regular expression, either inline or to define a new field, to get the desired level of detail. Splunk’s full power is difficult to describe, so we recommend downloading and trying it.",
                "radarId": 0,
                "id": "en_2011-07_9266",
                "blip_selector": "splunk",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9195,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "NoSQL",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "NoSQL technologies are maturing daily, allowing for innovative solutions as businesses need to scale massively or ask intelligent questions of existing data. Technologies like MongoDB, Riak, Neo4J, Cassandra and many others are helping power the NoSQL space.",
                "radarId": 0,
                "id": "en_2011-07_9195",
                "blip_selector": "nosql",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9257,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Simple performance trending",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9257",
                "blip_selector": "simple-performance-trending",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9145,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Tablet (formerly iPad)",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9145",
                "blip_selector": "tablet-formerly-ipad",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 314,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Logic in stored procedures",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_314",
                "blip_selector": "logic-in-stored-procedures",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9057,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Continuous Delivery (CD)",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9057",
                "blip_selector": "continuous-delivery-cd",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9221,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Progressive Enhancement",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Recent use of progressive enhancement with mobile applications has been very effective and demonstrates the universal nature of this web design strategy. We encourage people to adopt this strategy to keep their code clean and give each user the optimal experience for their device.",
                "radarId": 0,
                "id": "en_2011-07_9221",
                "blip_selector": "progressive-enhancement",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9022,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "AWS",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Amazon continues to evolve the AWS cloud with services such as RDB, making it even easier to engineer and deploy cloud-based applications. Not every AWS feature is as mature as EC2 and S3, so you should carefully evaluate which AWS components to use. We feel comfortable recommending AWS where elasticity or on-demand computing are required.",
                "radarId": 0,
                "id": "en_2011-07_9022",
                "blip_selector": "aws",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9244,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "JRuby",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Charles Nutter and the JRuby team continue to improve JRuby at a frantic pace. It is fast and they place massive importance on keeping their ecosystem up-to-date, including DB adapters, gem management, and modern Rails deployment. Rails 3 + JRuby is an awesome platform. There really is no reason to not be using Ruby, one of our favorite languages, in the enterprise.",
                "radarId": 0,
                "id": "en_2011-07_9244",
                "blip_selector": "jruby",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 234,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "WS-*",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Previously our advice has been to tread carefully when using the WS-* stack beyond the basic profile. Given the progress and acceptance of simpler web-as-platform techniques such as REST and OAuth and the known issues with the WS-*, it should only be used cautiously.",
                "radarId": 0,
                "id": "en_2011-07_234",
                "blip_selector": "ws",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9092,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Evolutionary architecture",
                "ring": "Adopt",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "In contrast to traditional up-front, heavy-weight enterprise architectural designs, we recommend adopting evolutionary architecture. It provides the benefits of enterprise architecture without the problems caused by trying to accurately predict the future. Instead of guessing how components will be re-used, evolutionary architecture supports adaptability, using proper abstractions, database migrations, test suites, continuous integration and refactoring to harvest re-use as it occurs within a system. The driving technical requirements for a system should be identified early to ensure they are properly handled in subsequent designs and implementations. We advocate delaying decisions to the latest responsible moment, which might in fact be up-front for some decisions.",
                "radarId": 0,
                "id": "en_2011-07_9092",
                "blip_selector": "evolutionary-architecture",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9192,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Next-generation test tools",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "The Ruby language community is responsible for a number of innovations in the area of testing. The next generation of testing tools such as rspec and Cucumber are two such tools that have come out of this community. These tools, along with Thoughtworks’ Twist, provide a way to express tests in a more natural language syntax that captures the intent of the system in a way that end users can quickly grasp.",
                "radarId": 0,
                "id": "en_2011-07_9192",
                "blip_selector": "next-generation-test-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 280,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Node.js",
                "ring": "Assess",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_280",
                "blip_selector": "node-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9128,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Heroku",
                "ring": "Trial",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9128",
                "blip_selector": "heroku",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9122,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "GWT",
                "ring": "Hold",
                "volume_date": "2011-07",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2011-07_9122",
                "blip_selector": "gwt",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2012-03",
        "blips": [
            {
                "ringSortOrder": "3",
                "blip_id": 9260,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Single threaded servers with asynchronous I/O",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9260",
                "blip_selector": "single-threaded-servers-with-asynchronous-i-o",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9018,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "ATOM",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9018",
                "blip_selector": "atom",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9272,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Test recorders",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9272",
                "blip_selector": "test-recorders",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9089,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Event API’s",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "RESTful APIs have become standard in our industry. A good REST API provides a simple, lightweight means of building customizations and integrations. However, many of the quick, high value integrations we’d like to build require knowing when something happened. Consider building an event API, which, when used in conjunction with a REST API, facilitates simple workflow, notification, and synchronization integrations. These integrations often require no more than 20 or 30 lines of code. Often event APIs take the form of a “web hook” or callback mechanism, but don’t be afraid of using a poll-based Atom style either. An Atom event API scales cheaply and gives the client the power to guarantee delivery.",
                "radarId": 0,
                "id": "en_2012-03_9089",
                "blip_selector": "event-api-s",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9180,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Message buses without smarts",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "In contrast we have seen considerable success with Simple Message Buses where the integration problems are solved at the end points, rather than inside a vendor ESB system. The most well known Simple Message Bus approach is one based on the principles of REST and leveraging the proven scalability of the web. However organizations that have already invested in ESB infrastructure can leverage the useful parts of that infrastructure (reliable messaging etc) while still using a Simple Message Bus approach and performing integrations at the edges of the system.",
                "radarId": 0,
                "id": "en_2012-03_9180",
                "blip_selector": "message-buses-without-smarts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9251,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Scrum certification",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Scrum was one of the founding approaches to Agile software development, and continues to provide a worthwhile core for the management side of software development. Scrum Certification schemes have proven counterproductive, granting only a veneer of competence, which often misleads teams into a distorted experience of agility.",
                "radarId": 0,
                "id": "en_2012-03_9251",
                "blip_selector": "scrum-certification",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9110,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Git",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Starting from a challenge posed to the Linux community to stop using commercial version control, Git has proved itself. Git embodies a well architected, high performance implementation of distributed version control. Git is powerful, so it should be used with respect, but that power enables agile engineering workflows that simply cannot exist with other tools. Git’s popularity is supported by the existence of GitHub. GitHub combines public and private Git repositories, social networking, and a host of other innovative tools and approaches.",
                "radarId": 0,
                "id": "en_2012-03_9110",
                "blip_selector": "git",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9049,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Coding architects",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "This technique was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-03_9049",
                "blip_selector": "coding-architects",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9039,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Categorization & prioritization of technical debt",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Technical debt is a powerful and useful metaphor for dealing with the compromises we make when building software. Unfortunately it has become a catch-all term for many different kinds of issues and problems, leading to confusion and “devaluation” of the term. A very useful approach for dealing with this is catagorization of technical debt, assigning value and prioritizing debt payback in an analogous way to user stories. This helps the team focus on the most important areas and keeps issues transparent and measurable.",
                "radarId": 0,
                "id": "en_2012-03_9039",
                "blip_selector": "categorization-prioritization-of-technical-debt",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9107,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Future of Java",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "This language/framework was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-03_9107",
                "blip_selector": "future-of-java",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9004,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Agile analytics",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9004",
                "blip_selector": "agile-analytics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9145,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Tablet",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Tablet devices provide a new model of computing. The next generation of tablets show the potential for new interaction paradigms, and we expect interest and innovation to continue to escalate.",
                "radarId": 0,
                "id": "en_2012-03_9145",
                "blip_selector": "tablet",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9086,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Emergent design",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Emergent design is one of the more advanced aspects of agile engineering practices, and therefore an area of active research & development. Such architectures should be driven by the underlying technical requirements of the system, rather than speculative planning for a future that may change. We have identified at least two facets of emergent design: the Lean software principle of last responsible moment, which mostly applies to greenfield projects, and finding & harvesting idiomatic patterns, which is more applicable to existing projects.",
                "radarId": 0,
                "id": "en_2012-03_9086",
                "blip_selector": "emergent-design",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9126,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Health check pages",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9126",
                "blip_selector": "health-check-pages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9285,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "vFabric",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "vFabric is a new Platform as a Service (PaaS) offering from VMWare. Based on enhanced versions of opensource web and messaging platforms Tomcat, Apache, and RabbitMQ, vFabric aims to deliver a Java based PaaS on a variety of cloud platforms. Currently supported platforms include VMForce, a collaboration between VMWare and force.com, Google App Engine and Amazon EC2. The addition of the GemFire in-memory distributed data management platform and Hyperic monitoring and management tool make vFabric an interesting set of technologies for Java developers looking to move to the cloud.",
                "radarId": 0,
                "id": "en_2012-03_9285",
                "blip_selector": "vfabric",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9057,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Continuous Delivery (CD)",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "If you are wondering “What comes after agile?,” you should look towards continuous delivery. While your development processes may be fully optimized, it still might take your organization weeks or months to get a single change into production. Continuous delivery focuses on maximizing automation including infrastructure as code, environment management and deployment automation to ensure your system is always ready for production. It is about tightening your feedback loops and not putting off anything until the end. Continuous delivery is not the same as continuous deployment, which means deploying every change to production. Continuous delivery is not a cowboy show. It puts you in charge of your production environment. The business can pick and choose what and when to deploy. If you think you’ve nailed agile development, but aren’t considering how to achieve continuous delivery, you really haven’t even started.",
                "radarId": 0,
                "id": "en_2012-03_9057",
                "blip_selector": "continuous-delivery-cd",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9171,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Logic-free markup",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9171",
                "blip_selector": "logic-free-markup",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9152,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "JavaScript as a first class language",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Rich experiences delivered via the web to desktops, tablets and mobile devices rely heavily on JavaScript, and we continue to recommend treating JavaScript as a “first class” language within your application. Developers should carefully consider how they structure, test, refactor and maintain JavaScript code, applying the same rigor as they would with any other programming language.",
                "radarId": 0,
                "id": "en_2012-03_9152",
                "blip_selector": "javascript-as-a-first-class-language",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9154,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "JavaScript micro frameworks",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9154",
                "blip_selector": "javascript-micro-frameworks",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9151,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Java portal servers",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9151",
                "blip_selector": "java-portal-servers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9019,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Automate database deployment",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "If the rate at which business is changing is an indicator of change in requirements, then the days of doing upfront database design are gone. Instead, projects should follow evolutionary database techniques and continue to change their database schemas as new requirements are implemented over the course of the project. Deployment of database changes should also be automated so that the application release that relies on those changes does not have to wait for manual deployment of the database changes. Automated database deployment ensures that application and database changes can be deployed automatically. Evolutionary database and automated database deployments ensure highly productive teams a path to continuous delivery.",
                "radarId": 0,
                "id": "en_2012-03_9019",
                "blip_selector": "automate-database-deployment",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9205,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Out-of-container functional testing",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9205",
                "blip_selector": "out-of-container-functional-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9079,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Domain-Specific Languages",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9079",
                "blip_selector": "domain-specific-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9176,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Manual infrastructure management",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Despite advances in automation, many people fall back on manual infrastructure management. We often see problems caused by manual configuration of firewalls and load balancers, and especially by DBAs cutting and pasting SQL scripts to run against production databases. All of these activities, if not fully automated, should at least be scripted and repeatable across environments.",
                "radarId": 0,
                "id": "en_2012-03_9176",
                "blip_selector": "manual-infrastructure-management",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 258,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Clojure",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_258",
                "blip_selector": "clojure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9247,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "SASS, SCSS, and LESS",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9247",
                "blip_selector": "sass-scss-and-less",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9068,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Database based integration",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9068",
                "blip_selector": "database-based-integration",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9105,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Functional Java",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Functional programming continues its slow but steady ascent into developer mind share and, increasingly, code bases. New languages like Clojure, Scala, and F# offer great new features. Now libraries such as Functional Java, TotallyLazy and LambdaJ are back porting some functional language capabilities, particularly around higher-order functions and collections, into Java. We like this trend because it previews common capabilities of future languages yet allows developers to stay in their comfort zone.",
                "radarId": 0,
                "id": "en_2012-03_9105",
                "blip_selector": "functional-java",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9122,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "GWT",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "GWT is a reasonable implementation of a poor architectural choice. GWT attempts to hide many of the details of the web as a platform by creating desktop metaphors in Java and generating JavaScript code to implement them. First, in many ways, JavaScript is more powerful and expressive than Java, so we suspect that the generation is going in the wrong direction. Secondly, it is impossible to hide a complex abstraction difference like that from event-driven desktop to stateless-web without leaky abstraction headaches eventually popping up. Third, it suffers from the same shortcomings of many elaborate frameworks, where building simple, aligned applications is quick and easy, building more sophisticated but not supported functionality is possible but difficult, and building the level of sophistication required by any non-trivial application becomes either impossible or so difficult it isn’t reasonable.",
                "radarId": 0,
                "id": "en_2012-03_9122",
                "blip_selector": "gwt",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 257,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Scala",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_257",
                "blip_selector": "scala",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 406,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "PSake",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_406",
                "blip_selector": "psake",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 395,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Microservices",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Microservices, often deployed out-of-container or using an embedded HTTP server, are a move away from traditional large technical services. This approach trades benefits such as maintainability for additional operational complexity. These drawbacks are typically addressed using infrastructure automation and continuous deployment techniques. On balance, microservices are an effective way of managing technical debt and handling different scaling characteristics especially when deployed in a service oriented architecture built around business capabilities.",
                "radarId": 0,
                "id": "en_2012-03_395",
                "blip_selector": "microservices",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 648,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "CoffeeScript",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "JavaScript is a powerful, ubiquitous programming language with tricky and error prone syntax. Coffeescript fixes many of the warts of JavaScript in a clean, simple syntax that generates readable JavaScript. For example, creating true private variables in JavaScript is a syntactic nightmare; CoffeeScript generates the technically correct but hideous syntax. Some readers may be confused by our advocacy of Coffeescript given our general dislike for GWT, because on the surface they seem similar: tools that generate JavaScript. However, it is the level of abstraction that differs. GWT has an elaborate component model, which tries to hide details about the underlying language (JavaScript) and platform (the web). Coffeescript tries to make it easier to write proper JavaScript, avoiding pathological but default “features” of JavaScript, and does not build a layer that tries to insulate you from the platform.",
                "radarId": 0,
                "id": "en_2012-03_648",
                "blip_selector": "coffeescript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9166,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Linux containers",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9166",
                "blip_selector": "linux-containers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 315,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Gradle",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "This tool was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-03_315",
                "blip_selector": "gradle",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 390,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Performance testing as a first-class citizen",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_390",
                "blip_selector": "performance-testing-as-a-first-class-citizen",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9292,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Windows Phone 7",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Windows Phone 7 has surprised even some of the long time critics of Windows platforms. After many failed attempts, Microsoft has managed not only to produce a mobile operating system that provides a user experience on par with the other major contenders in the space but also the development support to go with it. Microsoft is making Windows Phone 7 a viable competitor and another choice for a more integrated experience in the corporate arena. Whether it will be able to change adoption trends remains to be seen.",
                "radarId": 0,
                "id": "en_2012-03_9292",
                "blip_selector": "windows-phone-7",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9037,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Care about hardware",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-03_9037",
                "blip_selector": "care-about-hardware",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9038,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Care about languages",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9038",
                "blip_selector": "care-about-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9201,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Open source BI/ETL tools",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Open source BI tools such as Pentaho, JasperSoft, CloverETL, Talend, BIRT and SpagoBI are matching features with the proprietary tools and allowing for easy entry into the BI space. We recommend that you assess them.",
                "radarId": 0,
                "id": "en_2012-03_9201",
                "blip_selector": "open-source-bi-etl-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9178,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Mechanical sympathy",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "There is a worrying trend that developers are becoming too distant from the hardware on which their code runs. Increasing virtualization and separation between development and operations makes this worse. In stark contrast some teams are writing code that leverages mechanical sympathy to get incredibly high performance from their software. The LMAX Disruptor is an open-source example in Java. For high performance cases like finance and Big data, getting closer to the metal can yield big returns.",
                "radarId": 0,
                "id": "en_2012-03_9178",
                "blip_selector": "mechanical-sympathy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9143,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Infrastructure automation of development workstations",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9143",
                "blip_selector": "infrastructure-automation-of-development-workstations",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9187,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Mobile web",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Mobile web was in our trial ring on previous radars, but we’ve moved it into adopt in recognition of the fact we have created many mobile web applications. We believe this is the right way to create web content for mobile devices.",
                "radarId": 0,
                "id": "en_2012-03_9187",
                "blip_selector": "mobile-web",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9142,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Infrastructure as code",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9142",
                "blip_selector": "infrastructure-as-code",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9031,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Buying solutions you can only afford one of",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Many teams encounter problems that are caused by their test environment missing an expensive hardware component that is only present in production. While a pre-production environment in many cases cannot approach the scale of a production environment, all of its components should be present. We recommend not buying solutions you can only afford one of, such as SAN, firewalls or load balancers, as this prevents realistic testing anywhere but in production.",
                "radarId": 0,
                "id": "en_2012-03_9031",
                "blip_selector": "buying-solutions-you-can-only-afford-one-of",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 407,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Frank",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_407",
                "blip_selector": "frank",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9158,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "jQuery Mobile",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Thoughtworks has used jQuery Mobile on two projects with mobile websites and had mixed experiences. One project found the library very useful for dealing with device differences and graceful degradation on older browsers. On this project we were working in a way that fit with the jQuery Mobile approach. Our other project found the tool less useful and felt to some extent it was trying to force them to work a particular way that did not fit their application well. For these reasons we have decided to leave this tool in assess. If you are doing mobile web it is definitely worth spiking but it may not fit every application.",
                "radarId": 0,
                "id": "en_2012-03_9158",
                "blip_selector": "jquery-mobile",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9077,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "DevOps",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Improving the interactions and relationship between development and IT operations gives us more effective delivery and production systems that are more stable and maintainable. Creating a DevOps culture requires attention to team organization, work practices, reporting lines, and incentives - leading to joint responsibility for faster and safer delivery. We recommend adopting DevOps because we cannot see any situation where attention in this area will not have a positive benefit.",
                "radarId": 0,
                "id": "en_2012-03_9077",
                "blip_selector": "devops",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 521,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Offline mobile webapps (just HTML5)",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "HTML5 includes features that allow control and storage of offline data within the browser using client side JavaScript. These features allows creation of offline mobile web applications in a cross platform way that would have previously required installed applications. For instance an application that can download articles for reading later or a data capture application that can work offline and upload when you are online. While the standard is not finalized yet, support for these offline features is available and ready for use in the WebKit based browsers found on iOS, Android and newer Blackberry phones.",
                "radarId": 0,
                "id": "en_2012-03_521",
                "blip_selector": "offline-mobile-webapps-just-html5",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9220,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Production immune system",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Continuous Delivery techniques are shortening the “last mile” to get changes into production, allowing more frequent feature releases. A production immune system tracks changes as they are put into production, and automatically rolls back changes that have a negative effect on key metrics, such as revenue. Solid metrics, as well as automated A/B deployment, are required for this kind of aggressive rollback to be successful.",
                "radarId": 0,
                "id": "en_2012-03_9220",
                "blip_selector": "production-immune-system",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9283,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "VCS with “implicit workflow”",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9283",
                "blip_selector": "vcs-with-implicit-workflow",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 234,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "WS-*",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_234",
                "blip_selector": "ws",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9080,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Domain-specific PaaS",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9080",
                "blip_selector": "domain-specific-paas",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 418,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Riak",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Riak is a distributed key-value store that is schemaless and data-type agnostic. It can be put to good use in write heavy projects to store data such as sessions, shopping carts and streaming logs. The ability of the distributed cluster to self recover, distribute data across the cluster with tunable consistency and availability settings, do collision detection and resolve those if needed can be helpful in high availability environments and provide interesting solutions in the architecture.",
                "radarId": 0,
                "id": "en_2012-03_418",
                "blip_selector": "riak",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9046,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Cloud Foundry",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Cloud Foundry is an open source Platform as a Service that can be deployed in your own data center or hosted by VMWare. At present Cloud Foundry supports Java/ Spring applications, Rails, Sinatra, Grails and Node.js. Additional services include MongoDB, MySQL and Redis. The platform seems to be enjoying active development with the recent addition of Scala and Lift support. Cloud Foundry is an interesting addition to the growing list of PaaS solutions. It is not clear what the relationship between vFabric and Cloud Foundry will be going forward.",
                "radarId": 0,
                "id": "en_2012-03_9046",
                "blip_selector": "cloud-foundry",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9097,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "F#",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9097",
                "blip_selector": "f",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9092,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Evolutionary architecture",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We recommend adopting evolutionary architecture as an alternative to traditional up-front, heavy-weight enterprise architectural designs.",
                "radarId": 0,
                "id": "en_2012-03_9092",
                "blip_selector": "evolutionary-architecture",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 738,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Event sourcing",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Event sourcing is an approach to thinking about persistent data where the primary record is a log of all events that make updates. A traditional representation of database state can be entirely recreated by reprocessing this event log. Event sourcing’s benefits include strong auditing, creation of historic state, and replaying of events for debugging and analysis. Event sourcing has been around for a while, but we think it is used much less than it should be.",
                "radarId": 0,
                "id": "en_2012-03_738",
                "blip_selector": "event-sourcing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9093,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Evolutionary database",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "If the rate at which business is changing is an indicator of change in requirements, then the days of doing upfront database design are gone. Instead, projects should follow evolutionary database techniques and continue to change their database schemas as new requirements are implemented over the course of the project. Deployment of database changes should also be automated so that the application release that relies on those changes does not have to wait for manual deployment of the database changes. Automated database deployment ensures that application and database changes can be deployed automatically. Evolutionary database and automated database deployments ensure highly productive teams a path to continuous delivery.",
                "radarId": 0,
                "id": "en_2012-03_9093",
                "blip_selector": "evolutionary-database",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9111,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "GitHub",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Starting from a challenge posed to the Linux community to stop using commercial version control, Git has proved itself. Git embodies a well architected, high performance implementation of distributed version control. Git is powerful, so it should be used with respect, but that power enables agile engineering workflows that simply cannot exist with other tools. Git’s popularity is supported by the existence of GitHub. GitHub combines public and private Git repositories, social networking, and a host of other innovative tools and approaches.",
                "radarId": 0,
                "id": "en_2012-03_9111",
                "blip_selector": "github",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9067,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Data visualizations of development and operations",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We have long advocated for both static and dynamic code analysis tools to help glean information about your code base. As the focus of software development broadens because of the Continuous Delivery movement, data visualizations of development and operations with effective, actionable profiling and monitoring should be part of your technical stack as well.",
                "radarId": 0,
                "id": "en_2012-03_9067",
                "blip_selector": "data-visualizations-of-development-and-operations",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9214,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Polyglot Persistence",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9214",
                "blip_selector": "polyglot-persistence",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9156,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "JavaScript tooling",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "JavaScript is now established as a powerful, mainstream language that can be used in a variety environments both on client and server sides. As JavaScript codebases expand, more JavaScript tooling support becomes necessary, especially in the continuous integration and testing spaces. Tools like Backbone.js, SpineJS, JavaScriptMVC, Jasmine, JSTestDriver and HRcov are coming to the forefront. They are created by a vibrant community that continues to grow.",
                "radarId": 0,
                "id": "en_2012-03_9156",
                "blip_selector": "javascript-tooling",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9100,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Feature branching",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9100",
                "blip_selector": "feature-branching",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9254,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Server / application container end-of-life",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "A decade ago when memory was at a premium, application servers made a lot of sense. They were popular and useful as a mechanism to run and manage multiple applications on a shared server or cluster. These days applications are more often run on separate physical or virtual servers and the need for an application server is reduced. Consider evaluating server / application container end-of-life within your organization, and only use one if you benefit from the added complexity.",
                "radarId": 0,
                "id": "en_2012-03_9254",
                "blip_selector": "server-application-container-end-of-life",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9103,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "FPM",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "There are many advantages to using OS-native packages to deploy components and dependencies, however the tools which build native packages for Linux are not trivial. FPM is a useful tool which makes it easy to create RPM, DEB, or Solaris packages with a minimum of fuss.",
                "radarId": 0,
                "id": "en_2012-03_9103",
                "blip_selector": "fpm",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9257,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Simple performance trending",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Starting performance tests late in a project is risky and costly. Very simple performance tests that exercise key parts of the system, run on a regular basis, are good enough to track trends, so we can react if we see a change in performance. Run these tests with your build or as an overnight job and graph the results to create simple performance trending. Complex performance tests in a truly representative environment are still useful, but don’t wait for them to start understanding how the performance of your code is changing.",
                "radarId": 0,
                "id": "en_2012-03_9257",
                "blip_selector": "simple-performance-trending",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 314,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Logic in stored procedures",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_314",
                "blip_selector": "logic-in-stored-procedures",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9148,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Jade",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "This tool was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-03_9148",
                "blip_selector": "jade",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 419,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Maven",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_419",
                "blip_selector": "maven",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9030,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Build your own radar",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Building your own technology radar helps you decide, normalize, and publicize consensus technology views for all interested parties. Thoughtworks produces a technology radar for clients and friends, telling the world our opinions about upcoming technology trends. You should do this for your own company as well. Too many decisions in large companies happen in a vacuum, with no input from the technologists who have to live with them every day.",
                "radarId": 0,
                "id": "en_2012-03_9030",
                "blip_selector": "build-your-own-radar",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9096,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Experience Design (XD)",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Experience Design (XD) is an example of ways in which agility must evolve to accommodate real-world constraints. We are always interested in finding innovative ways to incorporate what have traditionally been up-front exercises into practices like Continuous Delivery. XD is a ripe field for study.",
                "radarId": 0,
                "id": "en_2012-03_9096",
                "blip_selector": "experience-design-xd",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9022,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "AWS",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "While it can be all too easy to ignore geographical location of cloud-based services, for legal and technical reasons it can be a serious constraint when considering appropriate platforms. With the recently announced Brazil and Singapore regions, Amazon has made AWSbased systems more viable for people in areas previously poorly served by IaaS providers. In addition, they continue to add features to existing services, such as VPC. We remain confident in recommending AWS for those situations where flexibility in provisioning resources is key.",
                "radarId": 0,
                "id": "en_2012-03_9022",
                "blip_selector": "aws",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 416,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "NuGet",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_416",
                "blip_selector": "nuget",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9271,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Test at the appropriate level",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The advent of behavior-driven design (BDD) testing frameworks like Cucumber, combined with browser automation tools like Selenium, has encouraged widespread use of acceptance testing at the browser level. This unfortunately encouraged doing the bulk of testing where the cost to run the tests is the greatest. Instead, we should test at the appropriate level, as close to the code as possible, so that tests can be run with maximum efficiency. Browser-level tests should be the icing on the cake, supported by acceptance and unit tests executed at appropriate layers.",
                "radarId": 0,
                "id": "en_2012-03_9271",
                "blip_selector": "test-at-the-appropriate-level",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 401,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Windows infrastructure automation",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_401",
                "blip_selector": "windows-infrastructure-automation",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9134,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Hybrid clouds",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Hybrid clouds describe a set of patterns that combine the best features of public clouds and private data centers. They allow applications to run in a private data center during normal periods then use rented space in a public cloud for overflow capacity during peak traffic periods. Another way to combine public and private clouds in an agile way is to use the elasticity and malleability of public clouds for developing and understanding an application’s production characteristics, then moving it into permanent infrastructure in a private data center when it is stable.",
                "radarId": 0,
                "id": "en_2012-03_9134",
                "blip_selector": "hybrid-clouds",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9064,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Cross-platform mobile toolkits",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "With very few exceptions, tools that claimed to create seamless user experiences across Windows, Linux and OSX did not deliver. We ended up with compromised experiences on one or more of the operating systems. Mobile adds complexity to this problem with different hardware form factors and conventions for user interactions. We have made several attempts to use cross platform mobile toolkits on our projects with varying degrees of success. We saw issues like having to create a project for each platform or invoking specific native UI widgets to get things working. For these reasons we have put cross platform mobile toolkits in hold. While this may change in the future, we remain skeptical especially given past experiences on hardware that was far more homogeneous.",
                "radarId": 0,
                "id": "en_2012-03_9064",
                "blip_selector": "cross-platform-mobile-toolkits",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9259,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Single command deploy",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "A key step in the Continuous Delivery process is the ability to release software arbitrarily close to when the business wants it. The ability to do single command deploy relies on a complete set of activities that fall under the umbrella of Continuous Delivery including extensive automation of everything from build/test to scripted environment provisioning and deployment. We have found that adopting this as a goal tends to drive the automation and testing pre-requisites upstream into the rest of your organization.",
                "radarId": 0,
                "id": "en_2012-03_9259",
                "blip_selector": "single-command-deploy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9203,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "OpenSocial",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "OpenSocial is a specification that provides a standard way to share content between semi-trusted applications. While initially proposed for public facing social networking sites, it has possibly more potential within the corporate firewall, where the benefits of being able to share data and content between applications in a standard manner frequently outweigh the requirements of scale and security.",
                "radarId": 0,
                "id": "en_2012-03_9203",
                "blip_selector": "opensocial",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9001,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Acceptance test of journeys",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Many teams focus acceptance testing at the story level, but this can lead to a large number of hard to maintain tests, and a focus on completing individual stories instead of coherent functionality needed to go live. A more holistic approach is to group user stories into journeys for which we create acceptance tests. Journeys through a system are a set of user interactions that provide value for both users and the business. At the outset a journey acceptance test will cover only one step, but as stories are completed the journey is expanded to encompass each stage in the user’s progress. Once the acceptance test of journeys passes, this tells us we have delivered real value.",
                "radarId": 0,
                "id": "en_2012-03_9001",
                "blip_selector": "acceptance-test-of-journeys",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9116,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "GPGPU",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The use of GPUs for computing offers efficiencies and performance for certain classes of problems that would be prohibitively expensive for more traditional hardware. Problems that fit Single Instruction Multiple Data (SIMD) processing models can gain significant advantages at the cost of difficult learning curves using specialized APIs. OpenCL, CUDA from NVidia and DirectCompute from Microsoft offer developers access to General-purpose computing on graphics processing units (GPGPU).",
                "radarId": 0,
                "id": "en_2012-03_9116",
                "blip_selector": "gpgpu",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 478,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "ClojureScript",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_478",
                "blip_selector": "clojurescript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9277,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Treating VMs like physical infrastructure",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "While virtualization is on the rise, some organizations are treating virtual machines like physical infrastructure. We frown on doing a full operating system install for each VM or using VMs for load testing. Virtual machines can be cloned, snapshotted, and manipulated in ways physical machines cannot, and also have vastly different performance characteristics than physical hardware. VMs should be used with full understanding of their benefits and limitations, otherwise you can really get into trouble with them.",
                "radarId": 0,
                "id": "en_2012-03_9277",
                "blip_selector": "treating-vms-like-physical-infrastructure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 394,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Embedded servlet containers",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Embedding a servlet container, such as Jetty, inside a Java application has many advantages over running the application inside a container. Testing is relatively painless because of the simple startup, and the development environment is closer to production. Nasty surprises like mismatched versions of libraries or drivers are eliminated by not sharing across multiple applications. While you will have to manage and monitor multiple Java Virtual Machines in production using this model, we feel the advantages offered by the simplicity and isolation are significant.",
                "radarId": 0,
                "id": "en_2012-03_394",
                "blip_selector": "embedded-servlet-containers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9217,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "PowerShell",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Powershell is as important tool for managing Windows servers and applications. Built into Windows 2008 and Windows 7, Powershell allows Unix-like scripting and automation across a server farm. Scripts can be executed on remote machines, and a single command can manage hundreds of machines at once. Powershell scripts can deploy and configure applications and operating system components, and can be extended by writing .NET “commandlets.”",
                "radarId": 0,
                "id": "en_2012-03_9217",
                "blip_selector": "powershell",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9114,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Google Dart",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9114",
                "blip_selector": "google-dart",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9128,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Heroku",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Heroku is a beautifully simple Platform as a Service (PaaS). Although Heroku began as a Ruby on Rails platform, it is evolving to support a variety of languages and web frameworks, most recently Clojure. Heroku uses a standard stack and deploys applications with a simple Git push. Heroku’s recent acquisition by Salesforce.com has not diminished its service quality.",
                "radarId": 0,
                "id": "en_2012-03_9128",
                "blip_selector": "heroku",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9265,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Sonar",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Measuring software internal quality is still a mystery, even though many source code metrics have been around for years. The problem with those metrics is they usually only capture one aspect of quality. We must consult many metrics to come to a conclusion about the overall quality of our code. Sonar is an integrated tool for checking, tracking and visualizing those metrics. It not only combines metrics together, but also mixes them with historical measures, giving us a better insight into the internal quality of the codebase.",
                "radarId": 0,
                "id": "en_2012-03_9265",
                "blip_selector": "sonar",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9275,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Thoughtful caching",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "All too often caching is an afterthought used to address performance problems with a blanket approach and common cache lifetime. This leads to issues and workarounds. The “time value” of information is inherently linked to the business purpose and hence needs to be captured at the same time as other requirements. We believe thoughtful caching should be addressed early in the project and not just treated as a last minute performance fix.",
                "radarId": 0,
                "id": "en_2012-03_9275",
                "blip_selector": "thoughtful-caching",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 691,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Private Clouds",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_691",
                "blip_selector": "private-clouds",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9161,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "KVM",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-03_9161",
                "blip_selector": "kvm",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 521521,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "HTML 5",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "While HTML5 is an evolving standard, many elements have reached the stage where they can be safely used in production to create both on and offline mobile web applications. Based on our projects we think HTML5 is ready to be adopted for mobile web applications. As the standard continues to evolve we expect HTML5 will become an increasingly viable alternative to native applications with the distinct advantage of being inherently cross platform.",
                "radarId": 0,
                "id": "en_2012-03_521521",
                "blip_selector": "html-5",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9239,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "RIA",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "We have long been less than enthusiastic about RIA technologies such as Flash and Silverlight because of vendor lock in potential, anemic support for agile engineering practices, and potential for overuse. It seems even the large vendors are starting to agree with us. Now that modern versions of HTML handle most of the common cases that formerly required RIA, we feel that new projects must have enormous justification and careful strategic thought before using any of these technologies.",
                "radarId": 0,
                "id": "en_2012-03_9239",
                "blip_selector": "ria",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9088,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "ESB",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9088",
                "blip_selector": "esb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9048,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Code in configuration",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Many organizations try to minimize change in production IT environments. This frequently leads to behavioral anti-patterns. One example of this is over use of code in configuration to affect the behavior of production systems. Changes that really belong in code end up in configuration files which don’t necessarily pass through the same levels of testing as the application. Streamlining the path to production and focusing on quality simplifies rather than complicate things.",
                "radarId": 0,
                "id": "en_2012-03_9048",
                "blip_selector": "code-in-configuration",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9298,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Zero-code packages",
                "ring": "Hold",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9298",
                "blip_selector": "zero-code-packages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9052,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Communication between those responsible for hardware and software",
                "ring": "Adopt",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "One of the principal mechanisms that allows agile software development to work is feedback loops. One common yet expensive broken feedback loop we have observed is the lack of communication between those responsible for hardware and software. The end result creates cost but not worth. You must view architecture holistically; neither hardware nor software has a full enough perspective to be successful alone.",
                "radarId": 0,
                "id": "en_2012-03_9052",
                "blip_selector": "communication-between-those-responsible-for-hardware-and-software",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 280,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Node.js",
                "ring": "Assess",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_280",
                "blip_selector": "node-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9042,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Client-side MVC",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "This tool was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-03_9042",
                "blip_selector": "client-side-mvc",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9282,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Vagrant",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-03_9282",
                "blip_selector": "vagrant",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9279,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Ubiquitous computing",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Ubiquitous computing is tricky term as it covers many different ideas. What we find interesting and exciting at the moment is that both consumer and specialist mobile devices are increasingly based on commodity operating systems such as Android or iOS. This means that in many cases, software can be developed by organizations themselves, opening the door to innovative new applications without requiring expensive niche skills. Lower price points for the hardware also make this area more accessible, especially with peripherals like payment card readers, PIN key pads and high quality bar code scanners becoming available for both Android and iOS devices. When combined with features already available on these consumer devices, whole new ways of working open up.",
                "radarId": 0,
                "id": "en_2012-03_9279",
                "blip_selector": "ubiquitous-computing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9014,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "AppHarbor",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "AppHarbor is a Platform as a Service (PaaS) offering for the .NET Platform using the same pricing model and structure pioneered by Heroku. It is a promising take on the deployment of .NET applications as it abstracts away most of the underlying configuration needs that come with the platform. It is maturing quickly and we expect it will see growing interest in time to come.",
                "radarId": 0,
                "id": "en_2012-03_9014",
                "blip_selector": "appharbor",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9169,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Log aggregation & indexing",
                "ring": "Trial",
                "volume_date": "2012-03",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "This tool was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-03_9169",
                "blip_selector": "log-aggregation-indexing",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2012-10",
        "blips": [
            {
                "ringSortOrder": "2",
                "blip_id": 514,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Scratch, Alice, and Kodu",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_514",
                "blip_selector": "scratch-alice-and-kodu",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 480,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "RubyMotion",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_480",
                "blip_selector": "rubymotion",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 515,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Twitter Bootstrap",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_515",
                "blip_selector": "twitter-bootstrap",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 258,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Clojure",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_258",
                "blip_selector": "clojure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 257,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Scala",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_257",
                "blip_selector": "scala",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9234,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Remote usability testing",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Bringing users in to a controlled environment for formal testing can be a slow and expensive proposition. Much useful, qualitative feedback can be gathered quickly and cheaply through guerrilla user testing - by going out into the world and testing with small samples of the general public. Another alternative is remote usability testing, where you can send out everything from wireframes to final applications for testing by people all over the world. Usabila, Loop11 and Treejack all provide tools where you can ask users to carry out specific tasks, and capture everything from the time taken to complete a task, to the user’s thoughts and feelings while doing so.",
                "radarId": 0,
                "id": "en_2012-10_9234",
                "blip_selector": "remote-usability-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 477,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Calatrava",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_477",
                "blip_selector": "calatrava",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9013,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "AppCode",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Apple’s mobile devices are going strong and native apps are a cornerstone of their success. Writing these native apps has become much more pleasant and productive since JetBrains launched AppCode, an IDE for iOS and OS X development that replicates the strengths of their IDEs for other platforms.",
                "radarId": 0,
                "id": "en_2012-10_9013",
                "blip_selector": "appcode",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9247,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "SASS, SCSS, LESS, and Stylus",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "CSS has been an extremely popular and effective DSL for styling web pages. It does, however, have some annoying limitations which have led to a number of languages that build on CSS to make it easier to write and modify. We’ve had good experiences with SASS, SCSS, and LESS.",
                "radarId": 0,
                "id": "en_2012-10_9247",
                "blip_selector": "sass-scss-less-and-stylus",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 394,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Embedded servlet containers",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "We have talked much already about embedded servlet containers - and these are now widely adopted on our projects. Tools such as SimpleWeb and Webbit take the simple, embedded approach further and offer raw HTTP server functionality without implementing the Java Servlet specification. We are pleased to see a corresponding reduction in the complexity of test code that takes advantage of this.",
                "radarId": 0,
                "id": "en_2012-10_394",
                "blip_selector": "embedded-servlet-containers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9171,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Logic-free markup",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "While MVC has been a staple of web development for the past few years, most libraries and frameworks fail to adhere to one of its most important principles: keeping logic out of the view layer. The consequences of not having logicfree markup include complex dependencies, difficulty testing and inability to reuse code. Recent DSLs like Mustache are available for many languages and platforms and have started to turn the trend. They allow editing in any tool, without extra requirements for language support and provide huge gains for UI development and overall application design.",
                "radarId": 0,
                "id": "en_2012-10_9171",
                "blip_selector": "logic-free-markup",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9075,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Deployment and scripting test tools",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "With deployment automation tools maturing, including PowerShell on Windows, scripts are increasingly sophisticated and contain a lot of logic. We recommend deployment and scripting test tools, such as Pester for PowerShell and TOFT for Chef and Puppet. It is critical to have good test coverage around the most important aspects of your deployment automation.",
                "radarId": 0,
                "id": "en_2012-10_9075",
                "blip_selector": "deployment-and-scripting-test-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9037,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Care about hardware",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "This platform was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-10_9037",
                "blip_selector": "care-about-hardware",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 234,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "WS-*",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_234",
                "blip_selector": "ws",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 489,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Responsive web design",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_489",
                "blip_selector": "responsive-web-design",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9246,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "SaaS performance testing tools",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Rather than wrestling with licenses and setting up clusters of machines for performance testing, we’re seeing a rise in SaaS performance testing tools such as Blitz.io and Tealeaf. These services make it easy to run performance tests with a huge number of geographically diverse clients, without investing heavily in infrastructure.",
                "radarId": 0,
                "id": "en_2012-10_9246",
                "blip_selector": "saas-performance-testing-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9256,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Silverback",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "There are a couple of usability testing tools that match our preferred ‘guerrilla’ approach. Eye-tracking has long been a useful technique when designing compelling user interfaces, however the equipment and software associated with it is expensive and typically requires the use of specialist firms. Crazy Egg is a cheaper, software-only solution that produces heat maps based on mouse movement. This movement has a strong correlation with gaze, and can be used as a reasonable approximation. Silverback captures not only the screen during a test, but also records the face and voice of the user. This can be invaluable in sharing rich test experiences with the wider development team.",
                "radarId": 0,
                "id": "en_2012-10_9256",
                "blip_selector": "silverback",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9292,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Windows Phone",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Despite a promising start to Windows Phone, a well thought-out user interface, and probably the best development experience of any mobile platform, we have seen several stumbles in the execution of the platform strategy by Microsoft and its partners. This makes us less optimistic about the future of the platform than we were in the last radar.",
                "radarId": 0,
                "id": "en_2012-10_9292",
                "blip_selector": "windows-phone",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 500,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "D3",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "D3 is a JavaScript library for binding datasets into the DOM, and then declaratively transforming the document to create rich visualizations - ranging from graphs to heatmaps. With support for HTML, CSS and SVG, and an extensible plug-in model, we like the fact that this library allows us to deliver information in more intuitive ways.",
                "radarId": 0,
                "id": "en_2012-10_500",
                "blip_selector": "d3",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9100,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Feature branching",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Disappointingly, we continue to see development teams embrace the practice of feature branching to isolate work and defer integration. Feature branches commonly cause significant pain and unpredictability during late merges, but more importantly prevent the continual design improvement necessary to maintain high quality software. We recommend continuous integration and branch by abstraction as an alternative to feature branching.",
                "radarId": 0,
                "id": "en_2012-10_9100",
                "blip_selector": "feature-branching",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 691,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Private Clouds",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Because of concerns over privacy and security, or a need to repurpose existing hardware investments, many businesses are choosing to implement their own private cloud. There are are a variety of products, both open source and commercial for this purpose, but it should be noted that compute, storage, and network management are only the starting points for a useful private cloud. There are many services and processes that must be custom implemented to provide a cloud facility that rivals the public offerings from Amazon, Rackspace, or others.",
                "radarId": 0,
                "id": "en_2012-10_691",
                "blip_selector": "private-clouds",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9056,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Configuration in DNS",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Application deployments often suffer from an excess of environment-specific configuration settings, including the hostnames of dependent services. Configuration in DNS is a valuable technique to reduce this complexity by using standard hostnames like ‘mail’ or ‘db’ and have DNS resolve to the correct host for that environment. This can be achieved in multiple ways, including split-horizon DNS or configuring search subdomains. Collaboration between development teams and IT operations is essential to achieve this, but that is unfortunately still difficult in some organizations.",
                "radarId": 0,
                "id": "en_2012-10_9056",
                "blip_selector": "configuration-in-dns",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9072,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Declarative provisioning",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Tools such as Pallet offer a compelling approach to environment creation and management through declarative provisioning. Usually, this is accomplished by declaring your environment topology - a number of instances, OS, network configuration and applications - using a DSL, and then creating the entire environment automatically via a commandline tool. This approach differs in the decoupling of instance creation and application provision, and in the addition of the ability to declare dependencies between domain-specific application-level services over multiple boxes.",
                "radarId": 0,
                "id": "en_2012-10_9072",
                "blip_selector": "declarative-provisioning",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 478,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "ClojureScript",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_478",
                "blip_selector": "clojurescript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9185,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Mobile payment systems",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Despite apparent resistance in the Global North, mobile payment systems such as Kenya’s M-Pesa are providing secure cashless monetary transactions. With the service rolling out across Africa, the system opens up the market for the millions of people with mobile phones but lacking access to traditional banking outlets. Providers such as Square are slowly improving the situation, but the North continues to lag.",
                "radarId": 0,
                "id": "en_2012-10_9185",
                "blip_selector": "mobile-payment-systems",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 494,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Semantic monitoring",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_494",
                "blip_selector": "semantic-monitoring",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 314,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Logic in stored procedures",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_314",
                "blip_selector": "logic-in-stored-procedures",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9018,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "ATOM",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "One of the foundational technologies of the Web as platform, Atom is an extensible data syndication format with broad tool support in almost all languages. In conjunction with the Atom Publication Protocol, Atom comprises a lightweight platform for publishing and consuming data with high quality-of-service guarantees. Atom-based solutions trade scalability for latency, however, making Atom often inappropriate for very low-latency scenarios.",
                "radarId": 0,
                "id": "en_2012-10_9018",
                "blip_selector": "atom",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 481,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Gremlin",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Gremlin is an imperative graph traversal language supported by multiple graph databases. Its concise constructs can be used in place of the native language of the database, leading to faster development times and, in some cases, faster execution. We recommend its use as a good alternative in simple scenarios.",
                "radarId": 0,
                "id": "en_2012-10_481",
                "blip_selector": "gremlin",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 456,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Jasmine paired with Node.js",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_456",
                "blip_selector": "jasmine-paired-with-node-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 280,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Node.js",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "For many years JavaScript was predominantly used as a client side Web programming language, but a lightweight language such as JavaScript can easily be embedded in different environments, including the server side. Node.js allows developers to write applications in JavaScript on both client and server sides. Since most servers spend the majority of their time waiting for I/O operations, Node.js’ event driven non-blocking architecture is very efficient. Unlike threadbased solutions, Node.js does not need to wait for I/O operations to complete while processing incoming requests, making it a good choice when implementing high performance services.",
                "radarId": 0,
                "id": "en_2012-10_280",
                "blip_selector": "node-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9114,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Google Dart",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Dart is Google’s attempt at creating a programming language to replace JavaScript due to JavaScript’s perceived flaws and inherent performance issues. Dart, in line with previous Google languages, provides Java-like syntax and semantics that are intended to be more appealing than JavaScript’s prototype-based nature. Reception within the browser-development community has been understandably cool and it remains to be seen if the language will become more widely accepted, though Chrome’s continued rise and the search for alternatives like CoffeeScript may yet shift that balance.",
                "radarId": 0,
                "id": "en_2012-10_9114",
                "blip_selector": "google-dart",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 470,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Riemann",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_470",
                "blip_selector": "riemann",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9109,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "GemJars",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "In a mixed Ruby/Java application, running on the JVM, there are differences in package format and dependency resolution that need to be dealt with. By providing an Ivy compatible proxy that packages RubyGems as JARs and uses Ivy to resolve Gem dependencies, GemJars consolidates and simplifies the building of truly polyglot codebases.",
                "radarId": 0,
                "id": "en_2012-10_9109",
                "blip_selector": "gemjars",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 495,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Edge Side Includes for page composition",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_495",
                "blip_selector": "edge-side-includes-for-page-composition",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9283,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "VCS with “implicit workflow”",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Some tools seek to enable and facilitate different ways of working. Unfortunately other tools are created using a different premise, one of low trust in users and the need to enforce a predefined process. ClearCase and TFS do this. This makes version control systems with “implicit workflow” unsuitable tools for modern agile software development. Project methodologies and the best ways of working on a project need to emerge. Tools that enforce high ceremony around things like check in just get in the way and kill productivity.",
                "radarId": 0,
                "id": "en_2012-10_9283",
                "blip_selector": "vcs-with-implicit-workflow",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9079,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Domain-Specific Languages",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Domain-Specific Languages is an old technique that we think is significantly under-used. We hope that the publication of Martin Fowler’s latest book will encourage more people to utilize them.",
                "radarId": 0,
                "id": "en_2012-10_9079",
                "blip_selector": "domain-specific-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9235,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Require.js",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "As adoption continues to expand, so does the size of many JavaScript codebases. To improve modularity of code and help manage this, we are seeing teams embrace libraries such as Require.js. Using the Asynchronous Module Definition (AMD) format, code is split into modules, easing development and maintenance, and an optimization tool then combines and minifies scripts for production deployment.",
                "radarId": 0,
                "id": "en_2012-10_9235",
                "blip_selector": "require-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9294,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Work-in-Progress limits",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "It might sound odd for us to mention this, given how mainstream Agile development has become, but we are noticing teams rediscover and embrace work-in-progress limits. Methods such as Kanban limit the amount of in-flight work, forcing better workflow into the team and more visibility into bottlenecks.",
                "radarId": 0,
                "id": "en_2012-10_9294",
                "blip_selector": "work-in-progress-limits",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9202,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Open source IaaS",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Selecting the right cloud provider from an almost bewildering array of options continues to be difficult. One strategy is to adopt an open source IaaS platform such as OpenStack or CloudStack. This allows you to run a private cloud that is consistent with a public cloud, and to migrate from one cloud provider to another should the need arise. Going one step further, Apache’s Deltacloud abstracts away from specific provider APIs to give a consistent experience across cloud platforms.",
                "radarId": 0,
                "id": "en_2012-10_9202",
                "blip_selector": "open-source-iaas",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 521,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "HTML 5 for offline applications",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_521",
                "blip_selector": "html-5-for-offline-applications",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 505,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Locust",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_505",
                "blip_selector": "locust",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9214,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Polyglot Persistence",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Polyglot persistence is the technique of storing data in various data stores based on efficiency and how that data is going to be used. Do not just use the default database, often an RDBMS, for all the needs of the application. Instead, ask questions like: Does session management data belong in the database or does it belong in a key-value store? Do relationships between customers and products belong in a graph database? Using NoSQL databases like MongoDB, Riak and Neo4J allows us to reconsider how data is treated, even with-in a single application.",
                "radarId": 0,
                "id": "en_2012-10_9214",
                "blip_selector": "polyglot-persistence",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9134,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Hybrid clouds",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Hybrid clouds combine the best features of public clouds and private data centers. They allow applications to run in a private data center during normal periods, and then use rented space in a public cloud for overflow capacity during peak traffic periods. There are now a number of infrastructure solutions that allow automatic and consistent deployment across a hybrid cloud, such as Palette and RightScale. With robust offerings from Amazon, Rackspace and others, we are moving hybrid clouds to “Trial” on this edition of the radar.",
                "radarId": 0,
                "id": "en_2012-10_9134",
                "blip_selector": "hybrid-clouds",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 466,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Zipkin",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "When building distributed applications to address web-scale or big data requirements, setting up appropriate monitoring tools becomes a non-trivial exercise. Zipkin is a tool that instruments the different components of a service-based system and visualizes the breakdown of logical requests passing through multiple services using a ‘firebug-like’ view. The raw data can be stored in Hadoop for more advanced reporting and data mining.",
                "radarId": 0,
                "id": "en_2012-10_466",
                "blip_selector": "zipkin",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9097,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "F#",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Microsoft’s F# continues to evolve, with the recent release of F# 3.0 beta. F# is excellent at concisely expressing business and domain logic. Developers trying to achieve explicit business logic within an application may opt to express their domain in F# with the majority of plumbing code in C#.",
                "radarId": 0,
                "id": "en_2012-10_9097",
                "blip_selector": "f",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 460,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "Neo4J",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_460",
                "blip_selector": "neo4j",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 479,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Lua",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_479",
                "blip_selector": "lua",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 448,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Automated deployment pipeline",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_448",
                "blip_selector": "automated-deployment-pipeline",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9008,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "AngularJS and Knockout",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "We are seeing a common pattern of creating single-page web applications. Rather than requiring full page refresh, these request smaller sets of data from the server, and change the displayed content of their page through modifying the DOM. To make this more manageable, JavaScript MV* frameworks have been developed that support data binding, client-side templates, and validation. While lightweight applications may not need a framework, for more complex scenarios, AngularJS and Knockout should be considered as the current front-runners in this field.",
                "radarId": 0,
                "id": "en_2012-10_9008",
                "blip_selector": "angularjs-and-knockout",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 406,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "PSake",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_406",
                "blip_selector": "psake",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 436,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Singleton infrastructure",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_436",
                "blip_selector": "singleton-infrastructure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9142,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Infrastructure as code",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "We continue to highlight infrastructure as code. This technique treats infrastructure configuration in the same way as code; checking configuration into source control, then carefully pushing changes out to the data center.",
                "radarId": 0,
                "id": "en_2012-10_9142",
                "blip_selector": "infrastructure-as-code",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9227,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Rake for Java & .NET",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Of all the build tools and languages we use across our projects, the one we keep coming back to is Rake. Rake is a beautiful, simple and powerful build language implemented as an internal Domain-Specific Language on Ruby. Ruby’s ability to run across several virtual-machine platforms means that Rake is equally available - while leaving open the option to utilize more language-specific tools for some tasks. Finding a similar combination of elegance and flexibility is difficult regardless of your platform, so we recommend trying Rake for Java and .Net projects.",
                "radarId": 0,
                "id": "en_2012-10_9227",
                "blip_selector": "rake-for-java-net",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9154,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "JavaScript micro frameworks",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "With mobile applications on the rise, JavaScript size and performance is even more critical. JavaScript micro frameworks have emerged as a direct response to ‘bloat’ in some of the larger libraries. These small libraries do exactly one thing, such as DOM selection or MVC, and can be under one kilobyte in size. By combining a number of micro frameworks, developers can get exactly the functionality they need without the overhead of a larger library. Microjs.com hosts a collection of these micro frameworks, as well as a tool that can bundle them into a single library.",
                "radarId": 0,
                "id": "en_2012-10_9154",
                "blip_selector": "javascript-micro-frameworks",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 315,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Gradle",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Two things have caused fatigue with XML-based build tools like Ant and Maven: too many angry pointy braces and the coarseness of plug-in architectures. While syntax issues can be dealt with through generation, plug-in architectures severely limit the ability for build tools to grow gracefully as projects become more complex. We have come to feel that plug-ins are the wrong level of abstraction, and prefer language-based tools like Gradle and Rake instead, because they offer finer-grained abstractions and more flexibility long term.",
                "radarId": 0,
                "id": "en_2012-10_315",
                "blip_selector": "gradle",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 304,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "",
                "name": "Backbone.js",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_304",
                "blip_selector": "backbone-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9080,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Domain-specific PaaS",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "We find that many businesses are starting to build their own internal cloud deployment environments that can be easily replicated for development and testing environments. In many cases, provisioning is selfservice, and with a single keystroke, developers can create a set of hosts that implement core enterprise assets and collaborating systems. In a sense, this is a domain-specific PaaS offered to internal customers.",
                "radarId": 0,
                "id": "en_2012-10_9080",
                "blip_selector": "domain-specific-paas",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9298,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Zero-code packages",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "There are a number of enterprise software packages on the market that purport to offer flexible functionality with zero coding. This is certainly an appealing notion – that a non-technical business user could configure software to the unique requirements of any business without learning a programming language or hiring a professional software developer. However, it should be kept in mind that any change that affects the behavior of software in production, whether it is code, configuration, data or environments, could cause defects or failures in the business system. Writing code is only one step in a professional software production lifecycle. The need for repeatable analysis, testing, build, and deployment does not go away because the system is modified via a dragand- drop interface instead of a high-level programming language. When evaluating a zero-code package, ensure that the the product supports these processes and that you have the necessary IT support structures in place to implement them.",
                "radarId": 0,
                "id": "en_2012-10_9298",
                "blip_selector": "zero-code-packages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 390,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Performance testing as a first-class citizen",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_390",
                "blip_selector": "performance-testing-as-a-first-class-citizen",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 483,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Exhaustive browser-based testing",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_483",
                "blip_selector": "exhaustive-browser-based-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 513,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Couchbase",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_513",
                "blip_selector": "couchbase",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 395,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Microservices",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_395",
                "blip_selector": "microservices",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 407,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Frank",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_407",
                "blip_selector": "frank",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9166,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Linux containers",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "One style of virtualization that is particularly attractive for SaaS and PaaS implementations is the virtual container. Linux containers such as OpenVZ provide the isolation and management benefits of a virtual machine without the overhead usually associated with general-purpose virtualization. In the container model, the guest OS is limited to being the same as the underlying host OS, but that is not a serious limitation for many cloud applications.",
                "radarId": 0,
                "id": "en_2012-10_9166",
                "blip_selector": "linux-containers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 519,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Dropwizard",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_519",
                "blip_selector": "dropwizard",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 418,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Riak",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_418",
                "blip_selector": "riak",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 469,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Light Table",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_469",
                "blip_selector": "light-table",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 490,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Mobile first",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_490",
                "blip_selector": "mobile-first",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 508,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2010-08",
                "radius": "",
                "name": "MongoDB",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "For problems that fit the document databases model, MongoDB provides easy programmability, a query interface, high availability with automated failover, and automated sharding capabilities. It allows for a smooth transition to NoSQL data stores from the RDBMS model, with the inclusion of familiar concepts, such as the ability to define indexes.",
                "radarId": 0,
                "id": "en_2012-10_508",
                "blip_selector": "mongodb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 419,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Maven",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Maven has long been a staple of build automation in the Java space. However, given its lack of flexibility and support for automation best practices, especially in the Continuous Delivery domain, the use of alternatives such as Gradle should be considered.",
                "radarId": 0,
                "id": "en_2012-10_419",
                "blip_selector": "maven",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 475,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "BigQuery",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Google’s BigQuery brings data analytics to the cloud. Rather than loading data into an expensive data-warehouse with predefined indexes, BigQuery allows you to upload and investigate a data set through ad-hoc SQL-like queries. This is a great way to create a cheap proof-of-concept or even a complete application, as processing of hundreds of gigabytes of data by thousands of servers happens in seconds.",
                "radarId": 0,
                "id": "en_2012-10_475",
                "blip_selector": "bigquery",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9181,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Meteor.js",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Meteor.js is a client- and server-side JavaScript application framework, run inside a web browser, or in a Node.js container, and backed by MongoDB for persistence. It uses “Smart Packages” - little bundles of code that can run in the browser or as part of a cloud service. It allows hot code deploys and live in-browser updates. We think the idea is great, even if the framework is not yet ready for primetime.",
                "radarId": 0,
                "id": "en_2012-10_9181",
                "blip_selector": "meteor-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 446,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Guerrilla user testing",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_446",
                "blip_selector": "guerrilla-user-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 520,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Jekyll",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_520",
                "blip_selector": "jekyll",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9004,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Agile analytics",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Applying agile methods to data warehousing, business intelligence and agile analytics provides better return and improved business responsiveness. This is done by applying lightweight technologies like REST services to move data around in near real-time instead of batch updates. This allows information about customer behavior and application usage to be derived and responses incorporated within the applications for better user experience and data visualization.",
                "radarId": 0,
                "id": "en_2012-10_9004",
                "blip_selector": "agile-analytics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9151,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Java portal servers",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "A continuing cause of delivery problems lies in the use of Java Portal Server packages. These problems occur in both open source and commercial portal platforms. The promised productivity of these platforms is hindered by their complex and unwieldy programming models and difficulty in automating deployment, data migration, and tests. Although product demos are compelling, the base features of portal products are often a poor fit for real web applications, while the extra advertised features such as single sign-on or search are usually already served by existing, targeted, enterprise assets.",
                "radarId": 0,
                "id": "en_2012-10_9151",
                "blip_selector": "java-portal-servers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9129,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Highcharts",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Increasingly performant JavaScript engines, combined with widespread support for embedded SVG documents in HTML, has lead to pure JavaScript-based client-side graphing and visualization solutions gaining a lot of traction. Highcharts is one of the best ones we have come across, with out-of-the-box support for multiple highly-configurable interactive chart types, and the ability to easily render large data sets.",
                "radarId": 0,
                "id": "en_2012-10_9129",
                "blip_selector": "highcharts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 502,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Apache Pig",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_502",
                "blip_selector": "apache-pig",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9260,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Single threaded servers with asynchronous I/O",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Node.js is just one example of a class of single threaded servers with asynchronous I/O that are seeing increased popularity. A traditional web or application server associates each incoming request with a thread until all the processing tasks associated with that request are complete and the response has been sent back. If any of those tasks involve I/O, the thread blocks while that I/O takes place. This approach can waste finite resources such as file descriptors and memory since each connection occupies a thread whether or not that thread is actually consuming CPU cycles. An alternative architecture is starting to emerge in implementations like Node.js (a JavaScript server running on Google V8), Nginx (an open source web server and proxy), and Webbit (a Java application server), that uses a single thread to serve many connections, processing all I/O asynchronously. These servers support orders of magnitude more simultaneous connections because each one consumes far fewer resources.",
                "radarId": 0,
                "id": "en_2012-10_9260",
                "blip_selector": "single-threaded-servers-with-asynchronous-i-o",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9002,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Advanced analytics",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Machine learning, semantic analysis, text mining, quantitative analytics, and other advanced analytics techniques have steadily matured over the past 15 years. They offer incredible potential for prediction, forecasting, identifying repeatable patterns, and providing insight into unstructured data. Historically, our ability to store and rapidly analyze large amounts of audio, video and image data has been severely limited. This placed constraints on sample size, as well as the time it would take to validate analytical models and put them into production. Now, using a spectrum of new technologies like NoSQL, data harvesters, MapReduce frameworks, and clusters of shared-nothing commodity servers, we have the power necessary to make truly effective use of these techniques. Combined with the massive increase in global data available from sensors, mobile devices and social media and we see this as a field with tremendous opportunity.",
                "radarId": 0,
                "id": "en_2012-10_9002",
                "blip_selector": "advanced-analytics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9088,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "ESB",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "IT departments are increasingly striving to liberate data from disparate systems. A broad set of approaches have been promoted under the generic term Service Oriented Architecture (SOA). This has led to confusion about what the term and approach actually means. We believe businesses do not need the complex enterprise service bus products advocated by vendors. ESBs actively undermine the reasons for choosing the bus approach: low latency, loose coupling, and transparency.",
                "radarId": 0,
                "id": "en_2012-10_9088",
                "blip_selector": "esb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 452,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Aggregates as documents",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_452",
                "blip_selector": "aggregates-as-documents",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 488,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Logs as data",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_488",
                "blip_selector": "logs-as-data",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 473,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "",
                "name": "Azure",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_473",
                "blip_selector": "azure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 401,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Windows infrastructure automation",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Mature tools such as PowerShell, together with newer options such as Chef and Puppet, lead us to highlight Windows infrastructure automation on this edition of the technology radar. Manual configuration using a mouse and menu options is slow and leads to misconfiguration and “snowflake” machines in an unknown state. We recommend command-line tools for their clarity and scriptability.",
                "radarId": 0,
                "id": "en_2012-10_401",
                "blip_selector": "windows-infrastructure-automation",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 416,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "NuGet",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Package management systems are a widely accepted practice for incorporating third party libraries. Tools such as RubyGems, Maven, APT, are available at both language and system level. NuGet is such a system for .Net platform. It consists of a Visual Studio IDE extension and a PowerShell module that opens the possibility for further improving build automation on the .Net platform.",
                "radarId": 0,
                "id": "en_2012-10_416",
                "blip_selector": "nuget",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 458,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Graphite",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_458",
                "blip_selector": "graphite",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9284,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Vert.x",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Representing yet another evolution away from traditional, free-standing application containers, Vert.x is an application framework that bridges synchronous and asynchronous programming styles. This gives the programmer the option to trade off scalability and performance for simplicity. Unlike Node.js, Vert.x is a library that can be called from a variety of languages supported on the JVM, including Java, Ruby and JavaScript.",
                "radarId": 0,
                "id": "en_2012-10_9284",
                "blip_selector": "vert-x",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 516,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Sinatra",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Micro-frameworks are emerging as a way to handle increasing complexity in applications both on client- and server-side. Sinatra was one of the early precursors of that trend in server-side space, exposing a lightweight DSL to build fast services that can be easily composed. Flask, Scalatra and Compojure are similar offerings for Python, Scala and Clojure respectively.",
                "radarId": 0,
                "id": "en_2012-10_516",
                "blip_selector": "sinatra",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9038,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Care about languages",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The industry is experiencing something of a renaissance in programming languages. Thoughtworks thinks it is time to start assessing which other languages will help your organization while taking stock of the useful lifetime remaining for your current choices. You need to care about languages. Traditionally structured organizations with separate support teams may find skills constrain choice, DevOps offers a path forwards here.",
                "radarId": 0,
                "id": "en_2012-10_9038",
                "blip_selector": "care-about-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 482,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "JavaScript as a platform",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_482",
                "blip_selector": "javascript-as-a-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9272,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Test recorders",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Test recorders seem invaluable as they provide a quick way to capture navigation through an application. However, we strongly advise against their regular use, as it tends to result in brittle tests which break with small changes to the UI. The test code they produce tends to be relatively poor and riddled with unnecessary duplication. Most importantly, test recorders tend to cut channels of communication between the test automation and development teams. When faced with an application that is difficult to test through the user interface, the solution is to have a critical conversation between the teams to build a more testable UI.",
                "radarId": 0,
                "id": "en_2012-10_9272",
                "blip_selector": "test-recorders",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9148,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Jade",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "This tool was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 0,
                "id": "en_2012-10_9148",
                "blip_selector": "jade",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 471,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Datomic",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_471",
                "blip_selector": "datomic",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9205,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Out-of-container functional testing",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "With the popularity of embedded HTTP servers increasing, so has the technique of out-of-container functional testing. That is writing tests at the boundary of the system, using a mock container to provide both fast feedback and high coverage. Servers such as Jetty and tools like Plasma for the .Net platform can provide a significant reduction in the time it takes to run your test suite.",
                "radarId": 0,
                "id": "en_2012-10_9205",
                "blip_selector": "out-of-container-functional-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 486,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Component-based frameworks",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_486",
                "blip_selector": "component-based-frameworks",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9300,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Zucchini",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Zucchini is a testing framework that provides Cucumber-style BDD testing for iOS apps. It uses CoffeeScript for feature definitions, takes screenshots as tests are run, and we’ve been very happy with it.",
                "radarId": 0,
                "id": "en_2012-10_9300",
                "blip_selector": "zucchini",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9143,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Infrastructure automation of development workstations",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Automation is one of the core practices of Continuous Delivery. While companies are getting better at automating the management of infrastructure and environments, one commonly forgotten aspect is infrastructure automation of development workstations. This leads to huge gains in productivity by avoiding manually building specific environments and allows a seamless pairing environment. As with other parts of the environment, tools like Puppet and Chef can be used though they are not entirely necessary as the judicious use of platform packaging and language build tools can be sufficient.",
                "radarId": 0,
                "id": "en_2012-10_9143",
                "blip_selector": "infrastructure-automation-of-development-workstations",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9074,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Dependency Structure Matrices",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "We strongly favor code-base visualization techniques. In particular, Dependency Structure Matrices (DSM) have proven to be extremely useful, especially in support of an evolutionary architecture and emergent design. Tools support for DSM is widespread.",
                "radarId": 0,
                "id": "en_2012-10_9074",
                "blip_selector": "dependency-structure-matrices",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 510,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Continuous integration in the cloud",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_510",
                "blip_selector": "continuous-integration-in-the-cloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 449,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "In-process acceptance testing",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_449",
                "blip_selector": "in-process-acceptance-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 457,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Immutable servers",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 0,
                "id": "en_2012-10_457",
                "blip_selector": "immutable-servers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 9062,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "",
                "radius": "",
                "name": "Crazy Egg",
                "ring": "Assess",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "There are a couple of usability testing tools that match our preferred ‘guerrilla’ approach. Eye-tracking has long been a useful technique when designing compelling user interfaces, however the equipment and software associated with it is expensive and typically requires the use of specialist firms. Crazy Egg is a cheaper, software-only solution that produces heat maps based on mouse movement. This movement has a strong correlation with gaze, and can be used as a reasonable approximation. Silverback captures not only the screen during a test, but also records the face and voice of the user. This can be invaluable in sharing rich test experiences with the wider development team.",
                "radarId": 0,
                "id": "en_2012-10_9062",
                "blip_selector": "crazy-egg",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 9126,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Health check pages",
                "ring": "Adopt",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We have found adding simple health check pages to applications is incredibly useful. This allows people to quickly understand the health of an individual node. We often extend them to add metrics like the number of orders placed, error rates, or similar information. Using simple embedded web servers, even non-web based services can easily expose internal information over HTTP. By using microformats, these web pages can easily be scraped by other monitoring tools to become part of holistic monitoring.",
                "radarId": 0,
                "id": "en_2012-10_9126",
                "blip_selector": "health-check-pages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 9068,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Database based integration",
                "ring": "Hold",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "For those organizations that are required to integrate systems, many continue to use a common database, sharing data between applications through the database tier. In many cases this has become an established and accepted architectural pattern: database based integration. The side affect of such an approach is greater coupling of database schemas, release schedules, performance and quality of service across applications.",
                "radarId": 0,
                "id": "en_2012-10_9068",
                "blip_selector": "database-based-integration",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 9282,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-03",
                "radius": "",
                "name": "Vagrant",
                "ring": "Trial",
                "volume_date": "2012-10",
                "theta": "",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "The tool Vagrant makes it simple for teams to distribute virtualized development environments constructed using version-control friendly descriptors. Vagrant helps eliminate environmental differences in development and reduce troubleshooting waste.",
                "radarId": 0,
                "id": "en_2012-10_9282",
                "blip_selector": "vagrant",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2013-05",
        "blips": [
            {
                "ringSortOrder": "2",
                "blip_id": 517,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2012-10",
                "radius": "225",
                "name": "JavaScript MV* frameworks",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "345",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Single-page web application development continues to flourish along with the frameworks supporting data binding, client-side templates, validation, and other capabilities. The JavaScript MV* frameworks in active use on Thoughtworks projects include AngularJS, Knockout, and Ember.js. Each has advocates and a few detractors. We expect continuing innovative churn in this vibrant space.",
                "radarId": 51,
                "id": "en_2013-05_517",
                "blip_selector": "javascript-mv-frameworks",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 633,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "320",
                "name": "Development environments in the cloud",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "125",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 26,
                "id": "en_2013-05_633",
                "blip_selector": "development-environments-in-the-cloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 532,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "300",
                "name": "PhoneGap/Apache Cordova",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "200",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 76,
                "id": "en_2013-05_532",
                "blip_selector": "phonegap-apache-cordova",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 436,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-01",
                "radius": "375",
                "name": "Singleton infrastructure",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "232",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Sometimes, architectural decisions lead you to incorporate infrastructure items that you can only afford one of, such as mainframes or search appliances. This is a terrible idea. It severely restricts testing and deployment flexibility. We strongly favor infrastructure you can easily set up and tear down. Singleton infrastructure belongs to misguided vendor-driven architectures of the past.",
                "radarId": 94,
                "id": "en_2013-05_436",
                "blip_selector": "singleton-infrastructure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 457,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "115",
                "name": "Immutable servers",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "45",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Precedents set by cloud providers are now changing expectations within the corporate datacenter. In the cloud, many systems scale automatically, either to provide additional availability or in response to increased demand. Crucial to managing a growing estate, immutable servers, or ‘phoenix servers’, are a sensible approach for enterprises looking at IaaS and PaaS. In contrast, custom-configured ‘snowflake servers’ increase the load on the operations group and encourage a “works on my machine” mentality. Being able to re-provision machines - hard or virtual - from scratch using tools such as Chef or Puppet can drastically reduce the complexity of managing large server farms. Coupled with software that is designed to withstand failure, this will lead to more scalable and reliable systems.",
                "radarId": 47,
                "id": "en_2013-05_457",
                "blip_selector": "immutable-servers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 483,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "385",
                "name": "Exhaustive browser based testing",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "100",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We have previously spoken about executing automated tests at the appropriate layer of your application. In this radar, we want to be very specific - we recommend against exhaustive browser based testing. Web browser automation tools like Selenium have encouraged widespread automated testing through the browser. While these tests continue to have their place in a test portfolio, most teams find that executing the bulk of tests through the browser creates a slow and fragile test suite.",
                "radarId": 31,
                "id": "en_2013-05_483",
                "blip_selector": "exhaustive-browser-based-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 526,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "125",
                "name": "Mobile testing on mobile networks",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 64,
                "id": "en_2013-05_526",
                "blip_selector": "mobile-testing-on-mobile-networks",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 623,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "310",
                "name": "Focus on mean time to recovery",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "165",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 33,
                "id": "en_2013-05_623",
                "blip_selector": "focus-on-mean-time-to-recovery",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 604,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "200",
                "name": "OpenStack",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "250",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 71,
                "id": "en_2013-05_604",
                "blip_selector": "openstack",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 667,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "115",
                "name": "Elastic Search",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "225",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 29,
                "id": "en_2013-05_667",
                "blip_selector": "elastic-search",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 257,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-01",
                "radius": "100",
                "name": "Scala",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "300",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "In the previous radar we had two JVMbased functional programming languages, Clojure and Scala, in our Assess category. We had expressed a slight preference for Clojure because it is the smaller and more focused language. Since the last radar we have realized that the wider applicability of Scala makes it more approachable for enterprise developers, and we have witnessed great successes in the adoption of Scala. Consequently we have moved Scala into our Trial category. Pay careful attention to the idiomatic use of Scala if it is introduced to a new team to avoid &quot;Java without semicolons&quot; or Perl styles.",
                "radarId": 90,
                "id": "en_2013-05_257",
                "blip_selector": "scala",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 502,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "225",
                "name": "Apache Pig",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "80",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Hadoop continues to be the most popular framework to develop distributed data-processing applications. Although programming Hadoop applications in Java is not particularly difficult, designing efficient MapReduce pipelines does require a good amount of experience. Apache Pig simplifies Hadoop development by offering a high level language, called Pig Latin, and an execution runtime. Pig Latin is procedural and provides a SQL-like interface to work with large datasets. The execution infrastructure compiles Pig Latin into an optimized sequence of MapReduce programs that run on the cluster. Pig Latin is extensible through user-defined functions in different languages such as Ruby, JavaScript, Python and Java.",
                "radarId": 3,
                "id": "en_2013-05_502",
                "blip_selector": "apache-pig",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 560,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "Octopus",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "75",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 70,
                "id": "en_2013-05_560",
                "blip_selector": "octopus",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 583,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "240",
                "name": "PhantomJS",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "50",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 75,
                "id": "en_2013-05_583",
                "blip_selector": "phantomjs",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 524,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "UIAutomator",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "40",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "UIAutomator looks like the most promising tool for testing Android user interfaces by allowing fine-grained control over components during test and facilitating testing on multiple Devices.",
                "radarId": 101,
                "id": "en_2013-05_524",
                "blip_selector": "uiautomator",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 448,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "25",
                "name": "Automated deployment pipeline",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "135",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The adoption of Continuous Delivery means many teams are creating an automated deployment pipeline that carries their code all the way to production. Pipelines allow the visualization of otherwise complex chains of build and deployment activities. Further, they provide the ability to reliably trace build artifacts as they progress through each stage on their path to production. Several vendors are now building CI servers that support the pipeline as a first-class feature and not just a visual element. We recommend teams look closely at these products to avoid wasting time trying to shoehorn a pipeline into a tool without adequate support.",
                "radarId": 4,
                "id": "en_2013-05_448",
                "blip_selector": "automated-deployment-pipeline",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 515,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2012-10",
                "radius": "285",
                "name": "Twitter Bootstrap",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "310",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "With JavaScript development on the rise, there is a growing need for reusable, extensible UI tooling. Twitter Bootstrap builds on the best offerings in the space, to provide a powerful set of patterns and components that help developers create responsive and adaptive applications with pleasant aesthetics.",
                "radarId": 99,
                "id": "en_2013-05_515",
                "blip_selector": "twitter-bootstrap",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 495,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "230",
                "name": "Edge Side Includes for page composition",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "170",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Breaking up monolithic applications and building systems from microservices requires a solid strategy to integrate output from disparate systems into a coherent experience for the end-user. Integrating at the presentation layer using Edge Side Includes (ESI) for page composition is a practical and elegant solution. This can occur within your environment using a reverse proxy like Varnish or closer to the user in a Content Delivery Network (CDN).",
                "radarId": 28,
                "id": "en_2013-05_495",
                "blip_selector": "edge-side-includes-for-page-composition",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 234,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "375",
                "name": "WS-*",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "190",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "We are reiterating our advice that given the progress and acceptance of simpler web-as-platform techniques such as REST and OAuth and the known issues with WS-*, it should only be used cautiously.",
                "radarId": 103,
                "id": "en_2013-05_234",
                "blip_selector": "ws",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 508,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "40",
                "name": "MongoDB",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "205",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 65,
                "id": "en_2013-05_508",
                "blip_selector": "mongodb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 557,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "212",
                "name": "Puppet-librarian and Chef-librarian",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "7",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 81,
                "id": "en_2013-05_557",
                "blip_selector": "puppet-librarian-and-chef-librarian",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 668,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "Zepto.js",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "268",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Zepto.js is a lightweight JavaScript library that is largely based on JQuery. The API is identical to JQuery although it does not offer full compatibility with it. With a vastly compressed file size, Zepto is a compelling option when building responsive web Applications.",
                "radarId": 104,
                "id": "en_2013-05_668",
                "blip_selector": "zepto-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 469,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "300",
                "name": "Light Table",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "45",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Like most good software developers, we choose our tools with care. We are especially keen on interesting departures from the norm, which is why we helped back the Light Table Kickstarter project. While still very early in development, the promised interactivity rivals the best of the Smalltalk world, with a modern twist; we are anxious to see what will come of this ambitious project.",
                "radarId": 53,
                "id": "en_2013-05_469",
                "blip_selector": "light-table",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 452,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "55",
                "name": "Aggregates as documents",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "125",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "When designing a domain model, the aggregate pattern helps to add structure and modularity. Mapped to a relational database the aggregate is not visible in the table structure. Document databases, like MongoDB, allow you to model aggregates as documents. This 1:1 mapping means that the aggregate root should be the object that is loaded from the collection.",
                "radarId": 1,
                "id": "en_2013-05_452",
                "blip_selector": "aggregates-as-documents",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 513,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "180",
                "name": "Couchbase",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "190",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Couchbase is a persistent cache with auto-sharding features, master-less clusters and replicated data to avoid cachemisses. Because it supports the Memcached protocol, it allows drop-in replacement for Memcached based systems.",
                "radarId": 21,
                "id": "en_2013-05_513",
                "blip_selector": "couchbase",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 480,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "300",
                "name": "RubyMotion",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "350",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Introducing a Ruby compiler and toolchain for developing iOS applications, RubyMotion has unsurprisingly caused quite a stir in the Thoughtworks development community. There continues to be a need to understand the underlying iOS APIs and some Objective-C when building applications, but there are clear benefits for those who find working with the Ruby language and tools more comfortable.",
                "radarId": 89,
                "id": "en_2013-05_480",
                "blip_selector": "rubymotion",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 390,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "100",
                "name": "Performance testing as a first-class citizen",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "95",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "While unit and acceptance testing are widely embraced as standard development practices, this trend has not continued into the realm of performance testing. Currently, the common tooling drives testers towards creating throw away code and a click-and-script mentality. Treating performance testing as a first-class citizen enables the creation of better tests that cover more functionality, leading to better tooling to create and run performance tests, resulting in a test suite that is maintainable and can itself be tested.",
                "radarId": 73,
                "id": "en_2013-05_390",
                "blip_selector": "performance-testing-as-a-first-class-citizen",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 486,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "375",
                "name": "Component-based frameworks",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "310",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "As the industry shifted from desktop GUI development to the web, it seemed natural to port the most successful patterns and designs to the new paradigm. After 15 years of trying, we feel that there are still no component-based frameworks that have successfully achieved this. We recommend not attempting to make web development into something that it fundamentally is not. It is time to accept the page and request-based nature of the web, and focus on the frameworks that support - rather than work against - these concepts.",
                "radarId": 18,
                "id": "en_2013-05_486",
                "blip_selector": "component-based-frameworks",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 666,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "210",
                "name": "TestFlight & HockeyApp",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "55",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Both TestFlight and HockeyApp allow you to manage the deployment of mobile applications without an app store, makinguser testing easier. They offer crash reporting and analytic capabilities to gather data in the field. HockeyApp supports IOS, Android, & Windows Phone, while TestFlight supports iOS and Android. We have used both tools successfully to help deliver mobile applications. This is clearly a fast evolving space.",
                "radarId": 97,
                "id": "en_2013-05_666",
                "blip_selector": "testflight-hockeyapp",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 643,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "305",
                "name": "PostgreSQL for NoSQL",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "256",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 78,
                "id": "en_2013-05_643",
                "blip_selector": "postgresql-for-nosql",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 477,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "300",
                "name": "Calatrava",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "185",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "We have previously been skeptical of claims of reusable code working across platforms. Our experience with many tools in the market has been mixed and we advise caution to our clients who are looking at these types of solutions. Taking an approach that carefully navigates these dangerous waters, we feel Calatrava is worth evaluating for mobile application development. The framework neatly follows the separation of business and presentation logic, maximising reuse where there is commonality, and providing native access where speed or device-specific idioms are to be followed.",
                "radarId": 11,
                "id": "en_2013-05_477",
                "blip_selector": "calatrava",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 510,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "170",
                "name": "Continuous integration in the cloud",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "230",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Continuous integration in the cloud is one of those obvious-in-hindsight infrastructure offerings that supports agile development. With no local software and minimal configuration, it just works. With mature offerings now in place, serious developers are left with no excuse for avoiding this important practice.",
                "radarId": 20,
                "id": "en_2013-05_510",
                "blip_selector": "continuous-integration-in-the-cloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 622,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "Icon fonts",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "35",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 46,
                "id": "en_2013-05_622",
                "blip_selector": "icon-fonts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 562,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "100",
                "name": "SMS and USSD as a UI",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "260",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 95,
                "id": "en_2013-05_562",
                "blip_selector": "sms-and-ussd-as-a-ui",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 418,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "220",
                "name": "Riak",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "190",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Riak is a distributed key-value store that is schema-less and data-type agnostic. It can be put to good use in write-heavy projects to store data such as sessions, shopping carts and streaming logs - whilst it retains the ability to perform complex queries in a full-text search. The distributed cluster can self-recover without a single master, has tuneable consistency and availability settings and can do collision detection and resolution if needed - all of which can be particularly helpful in high availability environments.",
                "radarId": 87,
                "id": "en_2013-05_418",
                "blip_selector": "riak",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 576,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "230",
                "name": "Analyzing test runs",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "160",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Failing tests reveal bugs in production code. However, analyzing test runs for other properties can reveal interesting information. A simple example would be to monitor which tests fail frequently and run them earlier in your build pipeline to get fast feedback. Similarly, tracking other properties such as test execution times and ratios of long-running tests to fast-tests can provide actionable metrics.",
                "radarId": 2,
                "id": "en_2013-05_576",
                "blip_selector": "analyzing-test-runs",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 482,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "260",
                "name": "JavaScript as a platform",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "320",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "JavaScript is moving outside of the browser, emerging as an important technology for cross-platform development. It is front-and-center in the approach to code reuse taken by Node.js, Meteor.js and mobile frameworks like Calatrava. Along with the recent proliferation of other languages that compile to JavaScript, this makes us wonder if we should start to consider JavaScript as a platform and not just a language.",
                "radarId": 50,
                "id": "en_2013-05_482",
                "blip_selector": "javascript-as-a-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 458,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "75",
                "name": "Graphite",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "25",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "While many tools exist for displaying graphs for system monitoring purposes, Graphite has emerged recently as the clear leader in this space. Capable of charting metrics in realtime, it features a round-robin database that is able to store long periods of historic data, while still providing more recent information at a higher fidelity. Numerous configuration options exist on the dashboard, and the resulting graphs can then be embedded in webpages to increase visibility.",
                "radarId": 37,
                "id": "en_2013-05_458",
                "blip_selector": "graphite",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 284,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "75",
                "name": "CSS frameworks",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "350",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "This language/framework was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 22,
                "id": "en_2013-05_284",
                "blip_selector": "css-frameworks",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 395,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "230",
                "name": "Microservices",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "130",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 61,
                "id": "en_2013-05_395",
                "blip_selector": "microservices",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 632,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "170",
                "name": "Database migrations for NoSQL",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "115",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "NoSQL data stores continue to become mainstream, and teams should acknowledge the need for database migrations for NoSQL. Especially with an implicit or dynamic schema you are likely to want to reconfigure data over time. There are several approaches such as running an explicit migration when deploying a new build of your application, or using dynamic migrations in code as documents are loaded and processed.",
                "radarId": 24,
                "id": "en_2013-05_632",
                "blip_selector": "database-migrations-for-nosql",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 479,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "320",
                "name": "Lua",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "300",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "An unlikely contender in the programming languages space, Lua has seen massive adoption across a variety of industries. It is used as a scripting platform in game development and music composition; embedded in point-of-sale appliances and network devices; and in extending NoSQL databases with safe execution semantics. We expect further growth in time to come.",
                "radarId": 58,
                "id": "en_2013-05_479",
                "blip_selector": "lua",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 545,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "320",
                "name": "Capturing client-side JavaScript errors",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "100",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 12,
                "id": "en_2013-05_545",
                "blip_selector": "capturing-client-side-javascript-errors",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 489,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "240",
                "name": "Responsive web design",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "95",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "One such technique for achieving this is responsive web design. Starting with a basic presentation of content - and typically keeping the essential information constant - the experience is enhanced to suit the features detected on more capable browsers. This commonly takes the form of layout and format changes based on screen size.",
                "radarId": 86,
                "id": "en_2013-05_489",
                "blip_selector": "responsive-web-design",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 541,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "Reactive Extensions for .Net",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "70",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "By putting IObservables and IObservers on an equal footing with IEnumerables and IEnumerators, Rx for .NET allows developers to use their existing knowledge of LINQ (Language Integrated Query) operators to query and compose asynchronous operations and event-based code using a common underlying abstraction of observable event streams. Microsoft has also released RxJS to bring the benefits of reactive programming to JavaScript. They open sourced the entire Rx framework, making it useful for Windows rich client applications and single-page JavaScript applications.",
                "radarId": 83,
                "id": "en_2013-05_541",
                "blip_selector": "reactive-extensions-for-net",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 549,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "Faraday",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "25",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Several Thoughtworks teams called out the usefulness of Faraday, a Ruby HTTP client library that provides a common interface over a variety of adapters and integrates nicely with Rack middleware.",
                "radarId": 32,
                "id": "en_2013-05_549",
                "blip_selector": "faraday",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 574,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "250",
                "name": "Perimeterless enterprise",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 74,
                "id": "en_2013-05_574",
                "blip_selector": "perimeterless-enterprise",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 564,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "240",
                "name": "Co-location by telepresence",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "115",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Increasing quality and range of choices for inexpensive or free video conferencing is leading to a new way of working for distributed teams. Always-on video connections can help create a sense of co-location by telepresence, even when the team is distributed geographically. This is becoming the defacto standard in some of our offshore delivery centers. We are also seeing increased use of screen-sharing tools like ScreenHero for remote pairing. We would caution those looking for a silver bullet to eliminate the need for physical co-location. There is no substitute for the understanding and empathy created by faceto- face communication.",
                "radarId": 15,
                "id": "en_2013-05_564",
                "blip_selector": "co-location-by-telepresence",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 490,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "250",
                "name": "Mobile first",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "140",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We are rapidly heading towards a world where the majority of consumer interactions are from mobile devices. Mobile first embraces this trend by designing user interfaces and server interactions that target mobile devices in the first instance. The mobile first strategy contrasts with approaches that assume a highly capable client device connected to a fast and reliable network and then degrade the experience to fit the limitations of the device.",
                "radarId": 63,
                "id": "en_2013-05_490",
                "blip_selector": "mobile-first",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 494,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "220",
                "name": "Semantic monitoring",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Development teams typically produce tests that specify and validate application behavior, but stop running them once the application goes into production. This is a missed opportunity. Semantic monitoring uses your tests to continuously evaluate your application, combining test-execution and realtime monitoring. With microservices, and similar fine-grained architectural approaches, it is increasingly important to test their interaction at run-time. Incorporating the validation of consumer-driven contracts into a monitoring facility is one way to approach this. While still evolving, we see great promise in the merging of two separate but important verification schemes.",
                "radarId": 92,
                "id": "en_2013-05_494",
                "blip_selector": "semantic-monitoring",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 625,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "310",
                "name": "Machine image as a build artifact",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "135",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 59,
                "id": "en_2013-05_625",
                "blip_selector": "machine-image-as-a-build-artifact",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 669,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "225",
                "name": "Play Framework 2",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "328",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The recent release of Play Framework 2.1.1 with support for controller dependency injection, asynchronous, non-blocking I/O, a code-reload workflow, database migrations, asset pipelining, and flexible deployment options has made it more attractive to developers. For this reason Play re-appears on the radar as something for teams to seriously consider when building web applications and services on the JVM. A word of caution however, Play embraces a functional programming style which, when working with the Java language, still translates into a plethora of static methods that may be difficult to unit test outside a running server.",
                "radarId": 77,
                "id": "en_2013-05_669",
                "blip_selector": "play-framework-2",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 475,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "250",
                "name": "BigQuery",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "225",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The amount of data that even a relatively low volume website can generate is huge. Once you add in analytics, business metrics, demographics, user profiles and multiple devices, it can become overwhelming. Many organizations use data warehouses as a repository with data being sucked in from all parts of the organization. The challenge here is that these often turn into “Data Fortresses.” Even getting timely business metrics becomes a challenge, let alone running exploratory queries across the entire data set. Technologies like the cloud based BigQuery help. The pay-as-you-go model and the ability to do ad hoc queries lets you gain insight without buying specialist hardware and software. A data-driven business should put data in the hands of the decision makers, not hidden behind technological barriers and bureaucracy.",
                "radarId": 8,
                "id": "en_2013-05_475",
                "blip_selector": "bigquery",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 416,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "135",
                "name": "NuGet",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "27",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Package systems for third-party library management continue to gain acceptance and features across all platforms. We called out NuGet as a recent entry, and the addition of Chocolatey NuGet exemplifies the advances and capabilities springing up around this essential agile engineering practice.",
                "radarId": 69,
                "id": "en_2013-05_416",
                "blip_selector": "nuget",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 280,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "170",
                "name": "Node.js",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "205",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 68,
                "id": "en_2013-05_280",
                "blip_selector": "node-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 258,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "110",
                "name": "Clojure",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "280",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 13,
                "id": "en_2013-05_258",
                "blip_selector": "clojure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 630,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "285",
                "name": "Nancy",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "331",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 66,
                "id": "en_2013-05_630",
                "blip_selector": "nancy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 554,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "Hystrix",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "30",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Managing dependencies in distributed systems can become complicated, and is a problem more people are facing with the move to finer-grained micro services. Hystrix is a library for  the JVM from Netflix that implements patterns for dealing with downstream failure, offers real-time monitoring of connections,and caching and batching mechanisms to make inter-servicedependencies more efficient.",
                "radarId": 45,
                "id": "en_2013-05_554",
                "blip_selector": "hystrix",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 519,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "210",
                "name": "Dropwizard",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "290",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 27,
                "id": "en_2013-05_519",
                "blip_selector": "dropwizard",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 460,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "75",
                "name": "Neo4J",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "225",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 67,
                "id": "en_2013-05_460",
                "blip_selector": "neo4j",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 488,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "190",
                "name": "Logs as data",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "125",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Log files generated by web servers, databases, networking infrastructure, and back-end systems are a valuable source of operational and behavioral data for a business. In the past, these files were mostly viewed as a source of diagnostic information in the case of failure, but with lowered cost of storage, and availability of tools such as Splunk for indexing and retrieving millions of events, they can also be a source of customer insights. Treating logs as data and storing complete logs instead of just collecting predefined metrics provides a means to answer novel questions that a business could not have previously anticipated.",
                "radarId": 56,
                "id": "en_2013-05_488",
                "blip_selector": "logs-as-data",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 514,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "240",
                "name": "Scratch, Alice, and Kodu",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "300",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "We think it is essential to inspire the next generation of technologists. Scratch, Alice, and Kodu are programming languages that rely on visual environments and building blocks as teaching devices. They offer exciting possibilities for educational programs and organizations intending to foster programming knowledge in environments beyond academia.",
                "radarId": 91,
                "id": "en_2013-05_514",
                "blip_selector": "scratch-alice-and-kodu",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 449,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "100",
                "name": "In-process acceptance testing",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "135",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Acceptance tests generally exercise the system from the ‘outside’, traversing an entire network stack for the security of exercising the complete application. In-process acceptance testing challenges the notion that test code and application under- test must run in different processes in order to achieve these benefits. When using an embedded container, it is easy to set up the system, run the tests over HTTP and to verify the final state without the setup costs associated with deploying to and communicating with a separate container.",
                "radarId": 48,
                "id": "en_2013-05_449",
                "blip_selector": "in-process-acceptance-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 516,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "125",
                "name": "Sinatra",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "315",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 93,
                "id": "en_2013-05_516",
                "blip_selector": "sinatra",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 663,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "Browser-based templating",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "53",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "We see several JavaScript frameworks embrace browser-based templating, moving more layout work to the client. While this approach is useful in many cases, it does introduce operational issues involving caching, performance, and search. We believe these tools should be assessed carefully to ensure suitability for the target deployment environment.",
                "radarId": 10,
                "id": "en_2013-05_663",
                "blip_selector": "browser-based-templating",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 314,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2011-07",
                "radius": "375",
                "name": "Logic in stored procedures",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "350",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "It is startling to us that we continue to find new systems in 2011 that implement significant business logic in stored procedures. Programming languages commonly used to implement stored procedures lack expressiveness, are difficult to test, and discourage clean modular design. You should only consider stored procedures executing within the database engine in exceptional circumstances, where there is a proven performance issue.",
                "radarId": 55,
                "id": "en_2013-05_314",
                "blip_selector": "logic-in-stored-procedures",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 570,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "305",
                "name": "Vumi",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "236",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 100,
                "id": "en_2013-05_570",
                "blip_selector": "vumi",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 521,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "190",
                "name": "HTML5 for offline applications",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "315",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "There is a tendency to equate the need for offline functionality with the need to build an app. Despite the slow standardization process, most HTML5 features have now been implemented across all major browsers. Its local storage capabilities, comprehensively supported across mobile and tablet browsers - makes HTML5 for offline applications a very suitable option.",
                "radarId": 43,
                "id": "en_2013-05_521",
                "blip_selector": "html5-for-offline-applications",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 600,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "Big enterprise solutions",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "210",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 7,
                "id": "en_2013-05_600",
                "blip_selector": "big-enterprise-solutions",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 315,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "135",
                "name": "Gradle",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "80",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "Why Everyone Either Hates or Leaves Maven",
                "description": "Language-based build tools like Gradle and Rake continue to offer finer-grained abstractions and more flexibility long term than XML and plug-in based tools like Ant and Maven. This allows them to grow gracefully as projects become more complex.",
                "radarId": 36,
                "id": "en_2013-05_315",
                "blip_selector": "gradle",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 307,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "TFS",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "54",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 98,
                "id": "en_2013-05_307",
                "blip_selector": "tfs",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 394,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "60",
                "name": "Embedded servlet containers",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "65",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "In previous radars we have talked about embedded servlet containers, and these are now widely adopted on our projects. Tools such as SimpleWeb and Webbit take the simple, embedded approach further and offer raw HTTP server functionality without implementing the Java Servlet specification. At the same time, Tomcat, the most popular Java application server, is increasingly used in embedded setups and Microsoft provides self-hosted servers for the .NET framework, lending further weight to this Trend.",
                "radarId": 30,
                "id": "en_2013-05_394",
                "blip_selector": "embedded-servlet-containers",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 674,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "165",
                "name": "Hadoop 2.0",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "260",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 40,
                "id": "en_2013-05_674",
                "blip_selector": "hadoop-2-0",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 446,
                "quadrant": "techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "120",
                "name": "Guerrilla user testing",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "120",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Bringing users in to a controlled environment for formal testing can be a slow and expensive proposition. Much useful, qualitative feedback can be gathered quickly and cheaply through guerrilla user testing - by going out into the world and testing with small samples of the general public. Another alternative is remote usability testing, where you can send out everything from wireframes to final applications for testing by people all over the world. Usabila, Loop11 and Treejack all provide tools where you can ask users to carry out specific tasks, and capture everything from the time taken to complete a task, to the user’s thoughts and feelings while doing so.",
                "radarId": 39,
                "id": "en_2013-05_446",
                "blip_selector": "guerrilla-user-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 505,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "220",
                "name": "Locust",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "25",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "We are strong believers in in-line automated performance testing, although open source tools in this space have been somewhat limited to date. Locust is a firm favorite that provides the ability to write tests in Python, with good support for running multiple injectors, basic statistics generation, and a useful web dashboard. Its approach to web load testing focuses more on the simulation of users than just generating hits per second. We would typically recommend Locust over and above older tools such as JMeter or Grinder.",
                "radarId": 54,
                "id": "en_2013-05_505",
                "blip_selector": "locust",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 579,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "Heavyweight test tools",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "59",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 42,
                "id": "en_2013-05_579",
                "blip_selector": "heavyweight-test-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 648,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "225",
                "name": "CoffeeScript",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "337",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "Dropbox dives into CoffeeScript, CoffeeScript Source Maps, Source Map Revision 3 Proposal, CoffeeScript is not a language worth learning",
                "description": "",
                "radarId": 16,
                "id": "en_2013-05_648",
                "blip_selector": "coffeescript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 478,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "290",
                "name": "ClojureScript",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "290",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "ClojureScript illustrates just how cross-platform the core of Clojure really is: they ported the primary parts to run on JavaScript. It is missing some of the whizzbang features of Clojure on the JVM and CLR, like software transactional memory, but has a surprisingly high fidelity with its more sophisticated cousins. One interesting option afforded by ClojureScript is the ability to send data structures à la JSON using ClojureScript as the data structure. Because Clojure is a Lisp, this means that you can also send “real” code.",
                "radarId": 14,
                "id": "en_2013-05_478",
                "blip_selector": "clojurescript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 617,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "120",
                "name": "Promises for asynchronous programming",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "110",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The use of promises for asynchronous programming is an old technique that is also known as futures. It is gaining renewed interest in light of the extensive use of JavaScript on both the client and server side. This technique eliminates the use of deeply nested callbacks, flags and pollers and has first-class support from libraries such as jQuery. Teams developing JavaScript codebases of significant complexity should take advantage of this.",
                "radarId": 79,
                "id": "en_2013-05_617",
                "blip_selector": "promises-for-asynchronous-programming",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 500,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "100",
                "name": "D3",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "60",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 23,
                "id": "en_2013-05_500",
                "blip_selector": "d3",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 481,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "330",
                "name": "Gremlin",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "280",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "This language/framework was included in this edition of the Radar for visibility. We felt that there wasn't anything substantial to add to the discourse around it, but that it was important to keep this in view.",
                "radarId": 38,
                "id": "en_2013-05_481",
                "blip_selector": "gremlin",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 658,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "180",
                "name": "Blue-green deployment",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "100",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Blue-green deployment is a pattern for performing software upgrades. By setting up the latest version of your application on an identical clone of your production application stack, traffic can be switched, near instantaneously, from the current production stack to the new one as soon as the test suite and the business determine it is appropriate. Though this is an old technique, infrastructure automation and resources in the cloud make it worth reconsidering.",
                "radarId": 9,
                "id": "en_2013-05_658",
                "blip_selector": "blue-green-deployment",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 520,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "225",
                "name": "Jekyll",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "73",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Jekyll represents the “microization” of frameworks in the web publishing space. While the focus is maintained on doing one thing - sites that feature blogs - as transparently as possible, it also shows the path to a more lightweight future. One example of this that we like is that it is now trivially easy to publish useful documentation for your software project.",
                "radarId": 52,
                "id": "en_2013-05_520",
                "blip_selector": "jekyll",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 594,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "Handwritten CSS",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "330",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 41,
                "id": "en_2013-05_594",
                "blip_selector": "handwritten-css",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 473,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "300",
                "name": "Azure",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "215",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Microsoft’s Azure cloud platform continues to play catchup with more mature clouds such as AWS, but we’ve been impressed with how Microsoft has responded to market demands. As with most Microsoft solutions it continues to be a contender and worth evaluating.",
                "radarId": 5,
                "id": "en_2013-05_473",
                "blip_selector": "azure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 456,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "75",
                "name": "Jasmine paired with Node.js",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "330",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "We have long thought of JavaScript as a first class language, and have been keenly following the development of testing tools in that space. The cream of the crop for out-of-browser testing is currently Jasmine. Jasmine paired with Node.js is the go-to choice for robust testing of both client- and serverside JavaScript.",
                "radarId": 49,
                "id": "en_2013-05_456",
                "blip_selector": "jasmine-paired-with-node-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 419,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-01",
                "radius": "375",
                "name": "Maven",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "29",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Language-based build tools like Gradle and Rake continue to offer finer-grained abstractions and more flexibility long term than XML and plug-in based tools like Ant and Maven. This allows them to grow gracefully as projects become more complex.",
                "radarId": 60,
                "id": "en_2013-05_419",
                "blip_selector": "maven",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 528,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "240",
                "name": "Continuous delivery for mobile devices",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "110",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "With HTML5 blurring the line between traditional native apps and web apps, we are beginning to experiment with continuous delivery for mobile devices. Services such as TestFlight allow you to deploy native apps to real devices multiple times per day. With a wholly or partially HTML5-based application changes can be deployed without submitting a new app to an app store. If your organization has an enterprise app store, you may be able to easily push builds to it. While the techniques for implementing CD to mobile devices are improving, we note that testing practices are lagging behind. To be successful you will need to increase your focus on automated testing to ensure that everything actually works once it gets to the device.",
                "radarId": 19,
                "id": "en_2013-05_528",
                "blip_selector": "continuous-delivery-for-mobile-devices",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 637,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "285",
                "name": "OWIN",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "354",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 72,
                "id": "en_2013-05_637",
                "blip_selector": "owin",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 646,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "Snowplow Analytics",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "60",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "We see great promise in Snowplow Analytics, an open source web analytics platform that derives intelligent information from regular web analytics, based on open data principles and cloud Storage.",
                "radarId": 96,
                "id": "en_2013-05_646",
                "blip_selector": "snowplow-analytics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 629,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "330",
                "name": "Minimizing application configuration",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "145",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Application configuration can be a source of pain when getting started with a new tool, managing deployments to different environments, or trying to understand why applications behave differently in different places. We are a big fan of minimizing application configuration, trying to ensure that applications work sensibly out of the box with the bare minimum of Configuration.",
                "radarId": 62,
                "id": "en_2013-05_629",
                "blip_selector": "minimizing-application-configuration",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 660,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "180",
                "name": "HTML5 storage instead of cookies",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "155",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 44,
                "id": "en_2013-05_660",
                "blip_selector": "html5-storage-instead-of-cookies",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 518,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "250",
                "name": "Require.js & NPM",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "290",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Our continued use of node.js on new production applications has re-enforced our need for reliable packaging of JavaScript code and libraries. The Node Package Manager (npm) is an important part of the node.js ecosystem and a useful tool for packaging node.js applications. Developers of browser applications with large amounts of JavaScript or CoffeeScript should consider Require.js to help with structuring their code and loading dependencies at run time",
                "radarId": 85,
                "id": "en_2013-05_518",
                "blip_selector": "require-js-npm",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 401,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "130",
                "name": "Windows infrastructure automation",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "95",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 102,
                "id": "en_2013-05_401",
                "blip_selector": "windows-infrastructure-automation",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 407,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "140",
                "name": "Frank",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "12",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Frank is an open source library that allows functional tests for iOS written in Cucumber and executed on a remote device. This fills an important niche where acceptance test-driven development was previously cumbersome and awkward.",
                "radarId": 34,
                "id": "en_2013-05_407",
                "blip_selector": "frank",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 406,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-01",
                "radius": "140",
                "name": "PSake",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "40",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "PSake (pronounced ‘sake’ like the Japanese rice wine) is a build automation tool implemented in PowerShell. PSake provides a tidy syntax for declaring build tasks and dependencies without programming in XML. You also have access to all the features of PowerShell and the .NET framework from within your build scripts.",
                "radarId": 80,
                "id": "en_2013-05_406",
                "blip_selector": "psake",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 304,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "360",
                "name": "Backbone.js",
                "ring": "Hold",
                "volume_date": "2013-05",
                "theta": "280",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Backbone.js is a great example of an abstraction pushed too far. While we initially liked the ease of wire-up, in practice it suffers from the same issues as all such databound frameworks from WebForms to client/server tools. We find that it blurs the framework and model too much, forcing either bad architectural decisions or elaborate framework hackery in order to preserve sanity.",
                "radarId": 6,
                "id": "en_2013-05_304",
                "blip_selector": "backbone-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 534,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "75",
                "name": "Redis",
                "ring": "Adopt",
                "volume_date": "2013-05",
                "theta": "200",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 84,
                "id": "en_2013-05_534",
                "blip_selector": "redis",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 605,
                "quadrant": "platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "205",
                "name": "Rackspace Cloud",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "262",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "While AWS continues to add more features, Rackspace Cloud has become a viable competition in the storage and compute space. Some users may value the more thorough customer support available for Rackspace, as well as the ability to mix in more traditional hosting models. We are not excited about this just because Rackspace is a client of ours and we have had the pleasure developing the platform. We have successfully used Rackspace Cloud with several other clients, and would look forward to it being offered in more geographical locations.",
                "radarId": 82,
                "id": "en_2013-05_605",
                "blip_selector": "rackspace-cloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 655,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "240",
                "name": "Gatling",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "38",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 35,
                "id": "en_2013-05_655",
                "blip_selector": "gatling",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 471,
                "quadrant": "platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "300",
                "name": "Datomic",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "225",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "A fundamental rethinking of how databases work, Datomic is an immutable database server with fascinating transactional and deployment characteristics. One of the common headaches on agile projects is managing database migrations, especially restoring previous states. Datomic makes the need for migrations go away - every version of the data (and schema) is preserved by the database. While still evolving, we appreciate Datomic’s boldness of vision.",
                "radarId": 25,
                "id": "en_2013-05_471",
                "blip_selector": "datomic",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 628,
                "quadrant": "techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "290",
                "name": "Collaborative analytics and data science",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "115",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 17,
                "id": "en_2013-05_628",
                "blip_selector": "collaborative-analytics-and-data-science",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 470,
                "quadrant": "tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "312",
                "name": "Riemann",
                "ring": "Assess",
                "volume_date": "2013-05",
                "theta": "65",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Riemann is an open source server that aggregates and relays events in real time. Written in Clojure, and based on Netty, it is capable of handling thousands of concurrent connections per node. Riemann uses a simple Protobuf protocol for events, which allows it to aggregate everything from CPU and memory use to orders placed to error rates. It forwards to systems like Graphite, triggers email alerts, and provides a dashboard for monitoring these metrics. Riemann is an important part of the movement towards handling data as generic streams of events in real-time, as opposed to using specialized systems for different types of data.",
                "radarId": 88,
                "id": "en_2013-05_470",
                "blip_selector": "riemann",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 638,
                "quadrant": "tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "170",
                "name": "Logstash & Graylog2",
                "ring": "Trial",
                "volume_date": "2013-05",
                "theta": "62",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 57,
                "id": "en_2013-05_638",
                "blip_selector": "logstash-graylog2",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2014-01",
        "blips": [
            {
                "ringSortOrder": "2",
                "blip_id": 648,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "225",
                "name": "CoffeeScript",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "337",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The expansion of single-page and mobile browser-based applications into mainstream use, along with continued growth of node.js for server-side applications, have led to increased adoption of CoffeeScript to simplify JavaScript codebases. As a language that compiles into JavaScript code for runtime execution, many concerns have been raised about the difficulty of debugging applications written in CoffeeScript. The introduction of Source Maps in CoffeeScript 1.6.1 is helping producers of development tools address this concern.  We expect this will lead to further adoption of the language following the lead of highly visible technology firms such as Dropbox.",
                "radarId": 78,
                "id": "en_2014-01_648",
                "blip_selector": "coffeescript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 643,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2014-01",
                "radius": "241",
                "name": "PostgreSQL for NoSQL",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "256",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 35,
                "id": "en_2014-01_643",
                "blip_selector": "postgresql-for-nosql",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 528,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "120",
                "name": "Continuous delivery for mobile devices",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Since the last radar a few advances have made continuous delivery for native apps on mobile devices less painful. Xctool, the recently open-sourced 'better xcodebuild' improves iOS build automation and unit testing. The arrival of automatic updates in iOS7 reduces the friction of regular releases. Travis-CI now supports OS X agents, removing another hurdle in seamless CD pipelines for mobile platforms. Our advice from the last radar on the value of hybrid approaches and the importance of test automation for mobile still applies.",
                "radarId": 2,
                "id": "en_2014-01_528",
                "blip_selector": "continuous-delivery-for-mobile-devices",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 526,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2014-01",
                "radius": "80",
                "name": "Mobile testing on mobile networks",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "110",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We increasingly see mobile applications that work really well during development and testing, but run into trouble when they are deployed in the real world. Mobile testing on mobile networks reveals how your app performs under a variety of conditions. You might test using 3G or LTE or deliberately use a poor WiFi network with overloaded access points. Measure network performance for your target environment, then simulate the conditions using latency and packet-loss inducing tools. In addition, it is sometimes necessary to examine exactly how your device and software are using the network with a tool such as Wireshark.",
                "radarId": 3,
                "id": "en_2014-01_526",
                "blip_selector": "mobile-testing-on-mobile-networks",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 600,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "Big enterprise solutions",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "200",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 45,
                "id": "en_2014-01_600",
                "blip_selector": "big-enterprise-solutions",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 583,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "235",
                "name": "PhantomJS",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "60",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "We see interest on Thoughtworks projects around PhantomJS, a headless web testing tool that allows functional testing against a realistic target.",
                "radarId": 60,
                "id": "en_2014-01_583",
                "blip_selector": "phantomjs",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 685,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "175",
                "name": "Hive",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "281",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 80,
                "id": "en_2014-01_685",
                "blip_selector": "hive",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 625,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "310",
                "name": "Machine image as a build artifact",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "170",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Most virtualization technologies provide a way to launch a machine from an image. By creating a machine image as a build artifact early in your build pipeline and promoting it through the pipeline as it passes further suites of tests, you can reliably deploy the exact machine that passed the tests into production. This technique eliminates most causes of the snowflake server anti-pattern.",
                "radarId": 20,
                "id": "en_2014-01_625",
                "blip_selector": "machine-image-as-a-build-artifact",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 401,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2014-01",
                "radius": "60",
                "name": "Windows infrastructure automation",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Previously, support for Windows in tools like Chef and Puppet was lacking, leading to large amounts of Powershell scripting to achieve simple infrastructure automation tasks. Achieving the same level of automation for Windows was more challenging than for Unix. In the last 12 months however, both Chef and Puppet support for Windows has improved drastically.  That support, combined with the inherent power of Powershell makes Windows infrastructure automation extremely viable.",
                "radarId": 5,
                "id": "en_2014-01_401",
                "blip_selector": "windows-infrastructure-automation",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 720,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "182",
                "name": "Ansible",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "52",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "In the category of DevOps orchestration engines, Ansible has nearly universal acclaim within Thoughtworks projects. It has useful tools and abstractions at a useful level of granularity.",
                "radarId": 50,
                "id": "en_2014-01_720",
                "blip_selector": "ansible",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 660,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "180",
                "name": "HTML5 storage instead of cookies",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "100",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "HTML5 storage, also known as local storage or web storage, is a mechanism for storing client side data in modern browsers, including iOS and Android mobile browsers. We recommend using HTML5 storage instead of cookies in almost all cases. HTML5 Storage can accommodate up to 5MB of data while cookies are limited to 4KB. Cookie data is transmitted in every request, which slows down your application and potentially exposes data over insecure HTTP connections. In contrast, HTML5 storage data remains securely in the browser. Cookies should be reserved for storing small simple pieces of data like a session ID.",
                "radarId": 8,
                "id": "en_2014-01_660",
                "blip_selector": "html5-storage-instead-of-cookies",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 532,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "300",
                "name": "PhoneGap/Apache Cordova",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "200",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "PhoneGap, now renamed as Apache Cordova, is a platform that lets you develop cross-platform mobile applications using HTML, CSS and JavaScript. It abstracts away platform specific native code through a set JavaScript APIs that remain consistent across different mobile platforms. Cordova is available for a wide array of platforms including iOS, Android, Blackberry, Windows Phone, and WebOS.",
                "radarId": 40,
                "id": "en_2014-01_532",
                "blip_selector": "phonegap-apache-cordova",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 712,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "32",
                "name": "Dependency management for JavaScript",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "35",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 49,
                "id": "en_2014-01_712",
                "blip_selector": "dependency-management-for-javascript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 724,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "192",
                "name": "Moco",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "44",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 59,
                "id": "en_2014-01_724",
                "blip_selector": "moco",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 725,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "235",
                "name": "Prototype On Paper",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "84",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 61,
                "id": "en_2014-01_725",
                "blip_selector": "prototype-on-paper",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 676,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "335",
                "name": "Elixir",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "280",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Elixir is a dynamic, functional, homoiconic programming language built on top of the Erlang virtual machine with a powerful macro system that makes it ideal for building Domain Specific Languages. Elixir has distinctive features such as the Pipe operator that allows developers to build a pipeline of functions like you would in the UNIX command shell. The shared byte code allows Elixir to interoperate with Erlang and leverage existing libraries while supporting tools such as the Mix build tool, the Iex interactive shell and the ExUnit unit testing framework. It is a practical alternative to Erlang for building DSLs.",
                "radarId": 84,
                "id": "en_2014-01_676",
                "blip_selector": "elixir",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 690,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "320",
                "name": "Low-cost robotics",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "193",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 39,
                "id": "en_2014-01_690",
                "blip_selector": "low-cost-robotics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 710,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "225",
                "name": "Provisioning testing",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "100",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 13,
                "id": "en_2014-01_710",
                "blip_selector": "provisioning-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 692,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "329",
                "name": "SPDY",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "233",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 42,
                "id": "en_2014-01_692",
                "blip_selector": "spdy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 691,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "294",
                "name": "Private Clouds",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "218",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The need for physically storing data within nations or organizations has increased significantly in recent years. There is concern around sensitivity of information hosted in cloud environments. Organizations are looking into private cloud as an alternative when data that needs to be housed in close proximity with control over access and distribution. Private cloud offers cloud infrastructure provisioned for exclusive use by a single organization with the following characteristics; on-demand self-service, broad network access, resource pooling, rapid elasticity and measured service.",
                "radarId": 41,
                "id": "en_2014-01_691",
                "blip_selector": "private-clouds",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 695,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Enterprise Data Warehouse",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "228",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 47,
                "id": "en_2014-01_695",
                "blip_selector": "enterprise-data-warehouse",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 395,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2014-01",
                "radius": "170",
                "name": "Microservices",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We are seeing an uptick in adoption of microservices as a technique for distributed system design, both in Thoughtworks and in the wider community. Frameworks such as Dropwizard and practices like declarative provisioning point to a maturing of the technologies and tools. Avoiding the usual monolithic approach and being sympathetic to the need to replace parts of systems individually has important positive implications for the total cost of ownership of systems. We see this as having greatest impact in the mid-to-long term, specifically with respect to the two-to-five year rewrite cycle.",
                "radarId": 11,
                "id": "en_2014-01_395",
                "blip_selector": "microservices",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 679,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "285",
                "name": "Python 3",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "284",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 90,
                "id": "en_2014-01_679",
                "blip_selector": "python-3",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 669,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "225",
                "name": "Play Framework 2",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "310",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 81,
                "id": "en_2014-01_669",
                "blip_selector": "play-framework-2",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 604,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "200",
                "name": "OpenStack",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "240",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The open source OpenStack project is gathering steam, and in recent months is becoming a more viable platform for deploying your own private clouds. Many issues which made OpenStack hard to get up and running have been addressed, and new features are being added all the time. It is clear that the OpenStack consortium and its members like Rackspace, Redhat, and HP are committed to the project as the basis for their own OpenStack-based cloud services.",
                "radarId": 34,
                "id": "en_2014-01_604",
                "blip_selector": "openstack",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 683,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "JSF",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "322",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 94,
                "id": "en_2014-01_683",
                "blip_selector": "jsf",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 280,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2014-01",
                "radius": "128",
                "name": "Node.js",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "205",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Node.js is a lightweight web container that is a strong option for development of micro services and as a server to mobile and single-page web applications. Due to the asynchronous nature of node.js, developers are turning to promise libraries to simplify their application code. As the use of promises mature within the node.js community, we expect to see more applications developed for node.js. For those teams that are reluctant to try node.js in production, it is still worthwhile to consider node.js for development tasks like running JavaScript tests outside of the browser or generating static web content from tools like CoffeeScript, SASS, and LESS.",
                "radarId": 29,
                "id": "en_2014-01_280",
                "blip_selector": "node-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 701,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "320",
                "name": "Tangible interaction",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "100",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 21,
                "id": "en_2014-01_701",
                "blip_selector": "tangible-interaction",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 307,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "TFS",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "54",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 73,
                "id": "en_2014-01_307",
                "blip_selector": "tfs",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 722,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "205",
                "name": "Chaos Monkey",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "71",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 52,
                "id": "en_2014-01_722",
                "blip_selector": "chaos-monkey",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 570,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2014-01",
                "radius": "240",
                "name": "Vumi",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "195",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Vumi is a scalable open source messaging engine driving conversations through frugal methods on mobile devices. Vumi facilitates SMS, IM and USSD interactions between companies and their clients, health services and their patients, governments and citzens, and more. Vumi integrates with telcos and allows you to build apps on top of it easily. You only have to pay for carrier charges.",
                "radarId": 36,
                "id": "en_2014-01_570",
                "blip_selector": "vumi",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 719,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Ant",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "68",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 71,
                "id": "en_2014-01_719",
                "blip_selector": "ant",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 723,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "184",
                "name": "Grunt.js",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "17",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Several of our Thoughtworks teams developing Node.js apps are using Grunt to automate most of the development activities like minification, compilation, and linting. Many of the common tasks are available as Grunt plugins. You can even programmatically generate the configuration if necessary.",
                "radarId": 54,
                "id": "en_2014-01_723",
                "blip_selector": "grunt-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 655,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "220",
                "name": "Gatling",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "35",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Gatling is another newer player in the automated performance testing space. It is similar to Locust and is much lighter weight than the older options such as JMeter and Grinder. Built on Scala, the DSL provides extensive functionality out of the box including easily configured data feeds and response assertions. In cases where customization is needed, it is easy to drop into Scala to provide extensions. The default generation of numerous dynamic views of the data via Highcharts adds to its appeal.",
                "radarId": 53,
                "id": "en_2014-01_655",
                "blip_selector": "gatling",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 704,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Siloed metrics",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "110",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "As more businesses move online we have noted a tendency to end up with siloed metrics. Specific tools are implemented to gather and display specific metrics: one tool for page-views and browser behavior, another for operational data and another to consolidate log messages. This leads to data silos and the need to swivel-chair integrate between the tools in order to gather business intelligence that is crucial to running the business. This is a tool-led split in the analytics domain that hurts the team’s ability to make decisions. A much better solution is to have a consolidated view of near-real time analytics using integrated dashboards displaying time-sensitive domain and team relevant information.",
                "radarId": 24,
                "id": "en_2014-01_704",
                "blip_selector": "siloed-metrics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 633,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "310",
                "name": "Development environments in the cloud",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "110",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 18,
                "id": "en_2014-01_633",
                "blip_selector": "development-environments-in-the-cloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 678,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "305",
                "name": "Pester",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "315",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 88,
                "id": "en_2014-01_678",
                "blip_selector": "pester",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 693,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "319",
                "name": "Storm",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "246",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 43,
                "id": "en_2014-01_693",
                "blip_selector": "storm",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 713,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "309",
                "name": "Cloud-init",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "11",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Cloud-init is a simple but powerful technique for carrying out actions on a cloud instance at boot time. It is particularly useful when used with instance metadata to allow a newly booted instance to pull the configuration, dependencies and software needed to perform a particular role. When used together with the Immutable or Phoenix server pattern, this can create a very responsive and light-weight mechanism for managing deployments in the cloud.",
                "radarId": 64,
                "id": "en_2014-01_713",
                "blip_selector": "cloud-init",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 460,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "115",
                "name": "Neo4J",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "255",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Graph databases store information as arbitrarily interconnected nodes linked by named relations, rather than as tables and joins. Schema-less and highly extensible, they are an excellent choice for modelling semi-structured data in complex domains. Neo4j is the front-runner in the space both its REST API and its Cypher query language support simple and fast storage and traversal of graphs.",
                "radarId": 28,
                "id": "en_2014-01_460",
                "blip_selector": "neo4j",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 557,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "212",
                "name": "Librarian-puppet and Librarian-Chef",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "7",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Both Puppet and Chef have had to deal with sharing community-contributed modules and manifests for commonly used services and tasks. Both the Puppet Forge and Chef’s Cookbook repository have helped, but people ended up copying and pasting these recipes into their own codebases, preventing them from taking advantage of later bugfixes and improvements. Librarian-puppet and Librarian-Chef attempt to solve this by making it easy to declare your module dependencies, including pulling in known versions of code from these community sites.",
                "radarId": 57,
                "id": "en_2014-01_557",
                "blip_selector": "librarian-puppet-and-librarian-chef",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 703,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Ignoring OWASP Top 10",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "170",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 23,
                "id": "en_2014-01_703",
                "blip_selector": "ignoring-owasp-top-10",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 711,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "160",
                "name": "Structured logging",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "130",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 14,
                "id": "en_2014-01_711",
                "blip_selector": "structured-logging",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 545,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "50",
                "name": "Capturing client-side JavaScript errors",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "110",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Capturing client-side JavaScript errors has helped our delivery teams identify issues specific to a browser or plug-in configuration that impact user experience. Over the past year a number of service providers have started to surface in support of this requirement. Other than storing these errors in application data stores, web applications can log this data to web analytics or existing monitoring tools such as New Relic to offload storage requirements.",
                "radarId": 1,
                "id": "en_2014-01_545",
                "blip_selector": "capturing-client-side-javascript-errors",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 726,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "184",
                "name": "SnapCI",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "29",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 62,
                "id": "en_2014-01_726",
                "blip_selector": "snapci",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 707,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "260",
                "name": "Client and server rendering with same code",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "120",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Increasingly, HTML is rendered not only on the server but also on the client, in the web browser. In many cases this split rendering will remain a necessity but with the growing maturity of JavaScript templating libraries an interesting approach has become viable: client and server rendering with same code.",
                "radarId": 7,
                "id": "en_2014-01_707",
                "blip_selector": "client-and-server-rendering-with-same-code",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 674,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "170",
                "name": "Hadoop 2.0",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "210",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 32,
                "id": "en_2014-01_674",
                "blip_selector": "hadoop-2-0",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 708,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "250",
                "name": "Instrument all the things",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "140",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "You cannot act on important business events unless you monitor them. The principle, instrument all the things, encourages us to think proactively about how we achieve this at the start of our software development.This allows us to expose key metrics, monitor them, and report on them to improve operational effectiveness.",
                "radarId": 9,
                "id": "en_2014-01_708",
                "blip_selector": "instrument-all-the-things",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 677,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "324",
                "name": "Julia",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "345",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 85,
                "id": "en_2014-01_677",
                "blip_selector": "julia",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 681,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "333",
                "name": "TypeScript",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "322",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 91,
                "id": "en_2014-01_681",
                "blip_selector": "typescript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 623,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "290",
                "name": "Focus on mean time to recovery",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "130",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "In previous radars we recommended arranging automated acceptance tests into longer journeys and, in what we call semantic monitoring, running these tests continuously against a production environment. We still believe that this is an important technique for scenarios the team can anticipate in advance. A variation of this approach, seen especially with startups, is to reduce the number of tests while increasing  monitoring and automatic alarms.  This shifts the focus from avoiding problems that can be anticipated to reducing mean time to recovery for all problems.",
                "radarId": 19,
                "id": "en_2014-01_623",
                "blip_selector": "focus-on-mean-time-to-recovery",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 682,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "295",
                "name": "Yeoman",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "303",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Yeoman attempts to make web application developers more productive by simplifying activities like scaffold, build and package management. It is a collection of the tools Yo, Grunt and Bower that work well as a set.",
                "radarId": 92,
                "id": "en_2014-01_682",
                "blip_selector": "yeoman",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 699,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "290",
                "name": "Datensparsamkeit",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "140",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 17,
                "id": "en_2014-01_699",
                "blip_selector": "datensparsamkeit",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 680,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "321",
                "name": "Pointer Events",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "327",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 89,
                "id": "en_2014-01_680",
                "blip_selector": "pointer-events",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 709,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "210",
                "name": "Masterless Chef/Puppet",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "130",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 10,
                "id": "en_2014-01_709",
                "blip_selector": "masterless-chef-puppet",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 694,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "329",
                "name": "Web Components standard",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "225",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 44,
                "id": "en_2014-01_694",
                "blip_selector": "web-components-standard",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 638,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "170",
                "name": "Logstash & Graylog2",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "62",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "As the systems we build involve more fine-grained services spread across more machines than ever before, the challenge of how to get information aggregated to allow for easy problem identification and resolution is more pressing than ever. Logstash has emerged as an easy way to parse and filter logs at source, and then forward them to a single aggregation point. Although Logstash provides some searching and filtering, Graylog2 is often used in conjunction to provide for more fully-featured querying and reporting.",
                "radarId": 58,
                "id": "en_2014-01_638",
                "blip_selector": "logstash-graylog2",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 500,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "100",
                "name": "D3",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "60",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "<a href='http://d3js.org/'>D3</a> continues to gain traction as a library for creating rich visualisations in the browser. Previously, it was somewhat low-level, requiring more work for the creation of commonly used visualisations than less sophisticated, more targeted libraries. Since the last radar, libraries like Rickshaw for charting and Crossfilter for in-browser dataset exploration have helped make D3 even more accessible than before.",
                "radarId": 48,
                "id": "en_2014-01_500",
                "blip_selector": "d3",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 705,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Velocity as productivity",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 25,
                "id": "en_2014-01_705",
                "blip_selector": "velocity-as-productivity",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 686,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "199",
                "name": "Reactive Extensions across languages",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "328",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Reactive Programming deals with streams or values that change over time. Using elements of data flow, implicit concurrency and transparent event propagation, these techniques enable efficient handling of events on a large scale with a high degree of efficiency and low latency. In the previous radar, we mentioned Reactive Extensions in .NET due to the extensive work done by Microsoft in making Rx a core part of the .NET framework. Since then, with the introduction of the Reactive Cocoa library for Objective C, the Java port of Reactive Extensions, the React JavaScript library, the Elm language based on Haskell & the Flapjax JavaScript library, we are extending this blip to include Reactive Extensions across languages.",
                "radarId": 82,
                "id": "en_2014-01_686",
                "blip_selector": "reactive-extensions-across-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 698,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "120",
                "name": "Segregated DOM plus node for JS Testing",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "100",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 4,
                "id": "en_2014-01_698",
                "blip_selector": "segregated-dom-plus-node-for-js-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 257,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2011-01",
                "radius": "100",
                "name": "Scala, the good parts",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "300",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 76,
                "id": "en_2014-01_257",
                "blip_selector": "scala-the-good-parts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 534,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "75",
                "name": "Redis",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "200",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Redis has proven a useful tool on multiple Thoughtworks projects, used as both structured cache and data store distributed across multiple countries.",
                "radarId": 30,
                "id": "en_2014-01_534",
                "blip_selector": "redis",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 622,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2014-01",
                "radius": "220",
                "name": "Icon fonts",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "25",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "With the rise of devices with multiple form factors and pixel densities, the issue of presenting high quality icons at all scales has become important. Icon fonts solve this problem by using browser support for WebFonts and SVG instead of scaled images or maintaining different icon sets. As always, when making extensive use of SVG, pay attention to power consumption on mobile devices and performance on older devices.",
                "radarId": 56,
                "id": "en_2014-01_622",
                "blip_selector": "icon-fonts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 706,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "210",
                "name": "Capture domain events explicitily",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "170",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 6,
                "id": "en_2014-01_706",
                "blip_selector": "capture-domain-events-explicitily",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 688,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "327",
                "name": "Akka",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "255",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Akka is a toolkit and runtime for building highly concurrent, distributed, and fault tolerant event-driven applications on the JVM. It offers very lightweight event-driven processes with approximately 2.7 million actors per GB RAM and a 'let-it-crash'model of fault-tolerance designed to work in a distributed environment. Akka can be used as a library for web-apps or as a stand-alone kernel to drop an application into.",
                "radarId": 37,
                "id": "en_2014-01_688",
                "blip_selector": "akka",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 637,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "285",
                "name": "OWIN",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "354",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "One thing that has slowed the evolution of a rich, open source web development ecosystem on the .NET platform has been over-dependence on IIS and the ASP.NET framework.  OWIN specifies an open HTTP handling interface that decouples web server from application much like Rack has done for the Ruby community.  We are excited about OWIN because it opens up the possibility of new .NET web development tools composed of simple, independently-developed modules.  Nancy is the perfect example of this.  We also hope it will increase the practice of deploying web applications as standalone, self-hosted services on the .NET platform.",
                "radarId": 87,
                "id": "en_2014-01_637",
                "blip_selector": "owin",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 667,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "115",
                "name": "Elastic Search",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "225",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "Over the past year we have seen a gradual uptake in the adoption of Elastic Search as an open source search platform. It is an extensible, multi-tenanted, and horizontally scalable search solution based on Apache Lucene. It allows complex data structures to be indexed and retrieved through a JSON based REST API. It provides an elegant model of operation with automatic discovery of peers in a cluster, failover, and replication. Elastic Search can be extended with a plugin system that allows adding new functionality and changing existing behavior. The community around this tool is quite vibrant as illustrated by the number of client libraries available in languages like Java, C#, Ruby, and JavaScript.",
                "radarId": 26,
                "id": "en_2014-01_667",
                "blip_selector": "elastic-search",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 560,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "312",
                "name": "Octopus",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "75",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Windows infrastructure automation should be adopted, however it still remains more difficult than automation on a Unix platform. Tools like Chef and Puppet are increasing their support, but there are also Windows specific solutions being developed like Octopus. Octopus allows automated deployment of your ASP.NET applications and Windows services and decreases dependency on PowerShell. It can be used with both NuGet using Octopak and TeamCity to create a full build, package, and deployment pipeline.",
                "radarId": 66,
                "id": "en_2014-01_560",
                "blip_selector": "octopus",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 554,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "245",
                "name": "Hystrix",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "17",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Managing the web of dependencies in a distributed system is complicated, and is a problem more people are facing with the move to finer-grained microservices. Hystrix is a library for the JVM from Netflix that implements patterns for dealing with downstream failure, offers real-time monitoring of connections, and caching and batching mechanisms to make inter-service dependencies more efficient. In combination with hystrix-dashboard and Turbine, this tool can be used to build more resilient systems and provide near-real time data on throughput, latency and fault tolerance.",
                "radarId": 55,
                "id": "en_2014-01_554",
                "blip_selector": "hystrix",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 700,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "317",
                "name": "Bridging physical and digital worlds with simple hardware",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 15,
                "id": "en_2014-01_700",
                "blip_selector": "bridging-physical-and-digital-worlds-with-simple-hardware",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 562,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "70",
                "name": "SMS and USSD as a UI",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "235",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "58%  of all phones sold last year globally were feature phones. In many developing countries, this is an even larger majority. If your market requires you to develop for these areas, you need to develop with this constraint in mind. These phones use SMS and USSD as a user interface. SMS is a long standing technique for sending messages, and USSD allows you to send SMS like messages in a secure session.  You should look at USSD and SMS as another UI and UX platform and treat them as first-class citizens.",
                "radarId": 31,
                "id": "en_2014-01_562",
                "blip_selector": "sms-and-ussd-as-a-ui",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 628,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "285",
                "name": "Collaborative analytics and data science",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "160",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "For years, teams and organizations have seen the dangers of siloing expertise around technical disciplines. While we value input from experts on advanced applications, developers should have basic knowledge of user interfaces, databases, and data science, the newest industry darling. While advanced applications requires deep expertise, we are pushing for collaborative analytics and data science, where all developers use basic statistical analysis and tools to make better decisions, and work closely with experts when things get complicated.",
                "radarId": 16,
                "id": "en_2014-01_628",
                "blip_selector": "collaborative-analytics-and-data-science",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 715,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "312",
                "name": "Sensu",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "58",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Many monitoring tools are built around the idea of the machine. We monitor what the machine is doing and which software is running on it. When it comes to cloud based infrastructure, especially patterns like Phoenix and Immutable servers this is a problematic approach. Machines come and go, but what is important is that the services remain working. Sensu allows a machine to register itself as playing a particular role and Sensu then monitors it on that basis. When we are finished with the machine we can simply de-register it.",
                "radarId": 67,
                "id": "en_2014-01_715",
                "blip_selector": "sensu",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 684,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "252",
                "name": "Go language",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "296",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "The Go language was originally developed by Google as a system programming language to replace C & C++. Four years out, Go is gaining traction in other areas. The combination of very small, statically linked binaries combined with an excellent HTTP library means Go has been popular with organizations making use of finer-grained, microservice architectures.",
                "radarId": 79,
                "id": "en_2014-01_684",
                "blip_selector": "go-language",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 696,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "CMS as a platform",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "251",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "",
                "radarId": 46,
                "id": "en_2014-01_696",
                "blip_selector": "cms-as-a-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 594,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "Handwritten CSS",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "330",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 93,
                "id": "en_2014-01_594",
                "blip_selector": "handwritten-css",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 702,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Cloud lift and shift",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "130",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 22,
                "id": "en_2014-01_702",
                "blip_selector": "cloud-lift-and-shift",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 689,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "320",
                "name": "Backend as a service",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "210",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "The recent explosion of mobile-focused products, coupled with widespread adoption of 'Lean Start-up' approaches that put a premium on time-to-market for new ideas, has spawned an ecosystem of Backend as a service (BaaS) offerings that enable developers to focus on the client application while offloading backend concerns. Assess adding these services to your toolkit where fast and low-cost proving of a new product idea is important. Our usual advice on build/buy/borrow decisions still applies: be clear on which functional areas are strategic to your business and which are commodities. For potentially strategic areas be sure to plan a migration path that will allow you to use the BaaS provider to get started quickly, while avoiding friction when your architecture evolves and you need to migrate to owning this functionality and customizing it as a differentiator.",
                "radarId": 38,
                "id": "en_2014-01_689",
                "blip_selector": "backend-as-a-service",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 630,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "285",
                "name": "Nancy",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "331",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Nancy is a lightweight, open-source web framework for .NET.  In the spirit of Sinatra for Ruby, Nancy provides just the essentials necessary to implement web applications with minimal extraneous code.  Because the framework is independent of any particular hosting environment, the developer is freed from the IIS and ASP.NET environment.  This makes Nancy an excellent complement to OWIN and compatible with other OWIN modules.  We are really happy to see the emergence of lightweight web frameworks in a number of other languages as well; Spark for Java, Flask for Python, etc..",
                "radarId": 86,
                "id": "en_2014-01_630",
                "blip_selector": "nancy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 716,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "309",
                "name": "Travis for OSX/iOS",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "67",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 68,
                "id": "en_2014-01_716",
                "blip_selector": "travis-for-osx-ios",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 258,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2012-10",
                "radius": "70",
                "name": "Clojure",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "280",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Clojure is a dynamic, functional language that runs on the JVM. Although its roots are in Lisp, one of the oldest computer languages, it also embodies many modern programming concepts, including lazy evaluation and advanced concurrency abstractions. Clojure has spawned a vibrant community of programmers who are contributing a rich set of frameworks and tools. One example of these is Midje, an innovative spin on unit testing and mocking frameworks.",
                "radarId": 74,
                "id": "en_2014-01_258",
                "blip_selector": "clojure",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 646,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "245",
                "name": "Snowplow Analytics & Piwik",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "75",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 63,
                "id": "en_2014-01_646",
                "blip_selector": "snowplow-analytics-piwik",
                "type": "Blip"
            },
            {
                "ringSortOrder": "4",
                "blip_id": 579,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "Heavyweight test tools",
                "ring": "Hold",
                "volume_date": "2014-01",
                "theta": "59",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "Many organizations that have moved to more agile ways of working continue to use heavyweight testing tools. These tools have problems that make them unsuitable for fast moving software delivery. Large complex tools have high learning curves and require specialist skills and training, making it hard for the team themselves to test. Often this results in an unnecessary overhead for every release as other teams get involved. Expensive and limiting software licenses makes this problem even worse. Some heavyweight tools use a 'model driven' approach where an attempt is made to accurately model the usage patterns of the application, which leads to costly test script maintenance and development time being lost to 'false positives'. We have seen few situations where simple open source solutions cannot give the required level of confidence for much less time, effort and money.",
                "radarId": 72,
                "id": "en_2014-01_579",
                "blip_selector": "heavyweight-test-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 519,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2014-01",
                "radius": "130",
                "name": "Dropwizard",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "290",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "",
                "radarId": 75,
                "id": "en_2014-01_519",
                "blip_selector": "dropwizard",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 574,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2014-01",
                "radius": "200",
                "name": "Perimeterless enterprise",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "115",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 12,
                "id": "en_2014-01_574",
                "blip_selector": "perimeterless-enterprise",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 717,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "333",
                "name": "Visual regression testing tools",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "24",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 69,
                "id": "en_2014-01_717",
                "blip_selector": "visual-regression-testing-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 697,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "240",
                "name": "Hadoop as a service",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "225",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "We observe organizations that have piloted Hadoop successfully starting to consolidate their Hadoop infrastructure services into a centralized, managed platform before rolling it out across the enterprise.These Hadoop as a service platforms are characterized by the control tier that interfaces with and coordinates among different core Hadoop infrastructure components. The capabilities of the platform are usually exposed via higher-level abstractions to the enterprise. Such a managed platform gives organizations the ability to deploy processes, infrastructure and datasets in a fairly consistent way across the organization. These services are built in private data centers and public cloud infrastructure.",
                "radarId": 33,
                "id": "en_2014-01_697",
                "blip_selector": "hadoop-as-a-service",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 508,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "40",
                "name": "MongoDB",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "215",
                "faded": "",
                "quadrantSortOrder": "3",
                "urlLabel": "",
                "description": "For problems that fit the document database model, MongoDB is now the most popular choice. In addition to ease of use and a solid technical implementation, the community and ecosystem contributed to this success. We are aware of problems where teams were tempted by the popularity of MongoDB when a document database was not a good fit or they did not understand the inherent complexity. When used appropriately, however, MongoDB has proven itself on many projects.",
                "radarId": 27,
                "id": "en_2014-01_508",
                "blip_selector": "mongodb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 714,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "300",
                "name": "Docker",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "40",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "The Docker open-source project has generated a great deal of interest within Thoughtworks, and is growing in momentum and maturity. Docker allows applications to be packaged and published as portable lightweight containers that run identically on a laptop or a production cluster. It provides tooling for the creation and management of application containers, and a run-time environment based on LXC (LinuX Containers).",
                "radarId": 65,
                "id": "en_2014-01_714",
                "blip_selector": "docker",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 721,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "232",
                "name": "Calabash",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "45",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "On mobile projects, we have been impressed with the functionality and gradually evolving capabilities and maturity of Calabash. It is an automated acceptance test tool for both Android and iOS applications that supports common ecosystem tools like Cucumber. It is an attractive choice on heterogeneous projects.",
                "radarId": 51,
                "id": "en_2014-01_721",
                "blip_selector": "calabash",
                "type": "Blip"
            },
            {
                "ringSortOrder": "2",
                "blip_id": 687,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "205",
                "name": "Web API",
                "ring": "Trial",
                "volume_date": "2014-01",
                "theta": "348",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Until recently, Microsoft's Web API was the least-worst option for building a RESTful service using ASP.NET. Web API 2 fixes a number of rough edges with better support for flexible routing, sub-resources, media types and improved testability. It continues to be our preferred library for building .NET REST APIs.",
                "radarId": 83,
                "id": "en_2014-01_687",
                "blip_selector": "web-api",
                "type": "Blip"
            },
            {
                "ringSortOrder": "3",
                "blip_id": 718,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "337",
                "name": "Xamarin",
                "ring": "Assess",
                "volume_date": "2014-01",
                "theta": "49",
                "faded": "",
                "quadrantSortOrder": "2",
                "urlLabel": "",
                "description": "",
                "radarId": 70,
                "id": "en_2014-01_718",
                "blip_selector": "xamarin",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 516,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "Include w/o Write Up",
                "lastModified": "2013-04",
                "radius": "125",
                "name": "Sinatra",
                "ring": "Adopt",
                "volume_date": "2014-01",
                "theta": "315",
                "faded": "",
                "quadrantSortOrder": "4",
                "urlLabel": "",
                "description": "Micro-frameworks are emerging as a way to handle increasing complexity in applications both on client- and server-side. Sinatra was one of the first examples of that trend in the server-side space, exposing a lightweight DSL to build fast services that can be easily composed. Similar offerings are available for other languages, including Spark for Java, Flask for Python, Sclatra for Scala, Compojure for Clojure and Nancy for .NET.",
                "radarId": 77,
                "id": "en_2014-01_516",
                "blip_selector": "sinatra",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2014-07",
        "blips": [
            {
                "ringSortOrder": "1",
                "blip_id": 714,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "210",
                "name": "Docker",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        75",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Docker</b> continues to gain momentum, and is seeing use on projects although mostly in non-production environments. Docker provides a set of tools to efficiently package and distribute executable machine images, which can then be launched as lightweight containers. A considerable community is growing around the tool. Notable is <a href='https://coreos.com/'>CoreOS</a> which is an operating system based on ChromeOS built for deploying Docker containers across a cluster with tools for deployment, service discovery and configuration.",
                "radarId": 54,
                "id": "en_2014-07_714",
                "blip_selector": "docker",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 633,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "250",
                "name": "Development environments in the cloud",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        169",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Development environments in the cloud</b> allow you to entirely outsource development infrastructure, leaving your team with nothing more than laptops and an internet connection. By using a combination of best-of-breed services such as private GitHub repositories and Snap CI's continuous integration in the cloud, your teams may never need to bother in-house IT for infrastructure again.",
                "radarId": 4,
                "id": "en_2014-07_633",
                "blip_selector": "development-environments-in-the-cloud",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 686,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "120",
                "name": "Reactive Extensions across languages",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        330",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The <b>reactive architecture</b> keeps spreading across platforms and paradigms simply because it solves a common problem in an elegant way, hiding inevitable application plumbing in a nice encapsulation.",
                "radarId": 85,
                "id": "en_2014-07_686",
                "blip_selector": "reactive-extensions-across-languages",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 743,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "219",
                "name": "GenyMotion",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        60",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Device fragmentation in the Android world is often cited as a problem because it can be difficult to understand how your applications will behave on a large number of disparate platforms. <a href='http://genymotion.com'><b>GenyMotion</b></a> is an emulator which can mimic the characteristics of a number of different Android devices. Our teams have found this very effective in giving fast feedback for our Android applications.",
                "radarId": 57,
                "id": "en_2014-07_743",
                "blip_selector": "genymotion",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 780,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "334",
                "name": "Wolfram Language",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        351",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We are intrigued by the possibilities offered by the <b>Wolfram language</b>. Building on the symbolic approaches of the Mathematica language it also has access to a vast array of algorithms and data from the Wolfram Alpha project, which means that very succinct programs can analyze and visualize powerful combinations of real-world data.",
                "radarId": 105,
                "id": "en_2014-07_780",
                "blip_selector": "wolfram-language",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 769,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "170",
                "name": "REST without PUT",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        107",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "In the last radar we talked about Capturing Explicit Domain Events, putting emphasis on recording the business-meaningful events that have triggered state transitions instead of just CRUD'ing entities. REST interfaces commonly use PUT to update resource state, however it's often better to POST to record a new event resource which captures intent. <b>REST without PUT </b>has a side-benefit of separating command and query interfaces and forces consumers to allow for eventual consistency.",
                "radarId": 15,
                "id": "en_2014-07_769",
                "blip_selector": "rest-without-put",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 669,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "225",
                "name": "Play Framework 2",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        333",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The <b>Play Framework 2</b> blip has generated many internal discussions. We had competing suggestions to move it to adopt and hold. These differences relate primarily to the specific applications for which it is used, how it is used, and what expectations people have for it. While none of these issues are unique for Play, Play has generated far more controversy than is typical in the standard library versus framework debate. We reiterate the cautions stated in the previous radar, and we will monitor how Play continues to mature to support its sweet spot.",
                "radarId": 93,
                "id": "en_2014-07_669",
                "blip_selector": "play-framework-2",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 696,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "CMS as a platform",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        216",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Content Management Systems (CMS) have their place. In many cases it is unreasonable to write editing and workflow functionality from scratch. However, we have experienced serious problems when <b>CMS as a platform</b> becomes an IT solution that grows beyond managing simple content.",
                "radarId": 47,
                "id": "en_2014-07_696",
                "blip_selector": "cms-as-a-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 733,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "253",
                "name": "Core Async",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        288",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The Clojure <b>core.async</b> library allows asynchronous communication using channels, with similar syntax and capabilities to Google's Go language. The core.async library solves many common problems in an elegant way, cleaning up event callback setup and adding simple concurrency primitives. It also highlights one of the advantages of the Lisp nature of Clojure: channels add operators that are consistent with existing Clojure operators, seamlessly weaving new functionality into the language core. In addition, core.async is supported in both Clojure and ClojureScript (despite JavaScript's lack of threads), utilizing underlying platform abstractions to provide a consistent interface to both languages.",
                "radarId": 88,
                "id": "en_2014-07_733",
                "blip_selector": "core-async",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 747,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "255",
                "name": "Humane registry",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        152",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "A Microservice architecture by its very nature increases significantly the number of applications, services, and interactions in your deployed environments. Our projects are showing renewed focus on building <a href='http://martinfowler.com/bliki/HumaneRegistry.html'><b>Humane Registries</b></a> which aggregate information about running services from the live environment and present it in a form for humans to comprehend. These registries favor up-to-date information from running services instead of human-curated documentation.",
                "radarId": 7,
                "id": "en_2014-07_747",
                "blip_selector": "humane-registry",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 623,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "220",
                "name": "Focus on mean time to recovery",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        158",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "In DevOps-savvy organizations delivery teams often configure production monitoring and respond to incidents themselves. This visibility and access into production environments allows those teams to make changes to their systems to improve their ability to recover quickly when something goes wrong. This <b>focus on mean time to recovery</b> improves quality of service overall, and allows teams to safely deploy more frequently. This can also reduce the emphasis on expensive test execution in non-production environments. Techniques we've used include end-to-end 'semantic monitoring' or reconciliation of real business transactions, and the injection of 'synthetic transactions' which exercise systems in non-destructive ways in production.",
                "radarId": 6,
                "id": "en_2014-07_623",
                "blip_selector": "focus-on-mean-time-to-recovery",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 779,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "290",
                "name": "TOTP Two-Factor Authentication",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        256",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Two-factor authentication</b> significantly improves security over simple password-based systems. <a href='http://tools.ietf.org/html/rfc6238'>RFC 6238</a> -- <a href='http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm'>Time-based One-Time Password</a> Algorithm -- is a standard for two-factor authentication. &quot;Standard&quot; authenticator apps from <a href='https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2'>Google</a> and <a href='http://www.windowsphone.com/en-us/store/app/authenticator/e7994dbc-2336-4950-91ba-ca22d653759b'>Microsoft</a> provide tokens to smartphone users, and there are a number of other client and server implementations readily available. With providers such as Google, Facebook, Dropbox and Evernote using <b>TOTP</b>, there really is no excuse to continue using simple password-based authentication where stronger security would be appropriate.",
                "radarId": 44,
                "id": "en_2014-07_779",
                "blip_selector": "totp-two-factor-authentication",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 719,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Ant",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        60",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We continue to see teams expend significant effort on un-maintainable <b>Ant</b> and Nant build scripts. These are hard to understand and extend due to the inherent lack of expressiveness and clean modularity provided by the tools. Alternatives like Gradle, Buildr, and PSake have clearly demonstrated superior maintainability and productivity.",
                "radarId": 80,
                "id": "en_2014-07_719",
                "blip_selector": "ant",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 706,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "210",
                "name": "Capture domain events explicitly",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        175",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "When using techniques such as &quot;instrument all the things&quot; and semantic logging, it can be very useful to <b>capture domain events explicitly</b>. You can avoid having to infer user intent behind state transitions by modeling these transitions as first-class concerns. One method of achieving this outcome is to use an event sourced architecture with application events being mapped to business meaningful events.",
                "radarId": 3,
                "id": "en_2014-07_706",
                "blip_selector": "capture-domain-events-explicitly",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 756,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "318",
                "name": "Om",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        294",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Adopting the entire Clojure stack (the Clojure and ClojureScript languages, and optionally the Datomic database) offers some advantages like immutable data structures from user interface to backend. Several frameworks have appeared in the Clojure space to leverage its unique features, but the most promising so far is <b>Om</b>. Om is a ClojureScript wrapper around Facebook's React JavaScript reactive programming framework. Yet Om leverages the inherent immutability of ClojureScript, allowing automatic features like snapshots of UI state and undo. And due to the efficiency of ClojureScript's data structures, some Om applications run faster than identical ones based on the raw underlying React framework. We expect significant evolution and innovation to continue around Om.",
                "radarId": 98,
                "id": "en_2014-07_756",
                "blip_selector": "om",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 734,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "375",
                "name": "DevOps as a team",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Some companies with good intentions create a separate <b>DevOps team</b>, which misconstrues the definition of DevOps. Rather than a role, DevOps is a cultural movement encouraging collaboration between operations specialists and developers. Rather than create yet another silo and suffer the consequences of Conway's Law, we advise you to embed these skills into teams, improving feedback loops and communication pathways by removing friction.",
                "radarId": 25,
                "id": "en_2014-07_734",
                "blip_selector": "devops-as-a-team",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 750,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "110",
                "name": "Java 8",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        315",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The team behind <b>Java 8</b> had to fight two battles: the community forces encouraging forever backwards compatibility (a long hallmark of Java) and the technical challenge of making a deep language change mesh with existing libraries and features. They succeeded on both fronts, breathing new life into the Java Language and placing it on par with other mainstream languages in terms of functional programming features. In particular, Java 8 has excellent syntactic magic that allows seamless interoperability between Lambda blocks, the new higher-order function feature, and SAM (Single Abstract Method) interfaces, the traditional way of passing behavior.",
                "radarId": 84,
                "id": "en_2014-07_750",
                "blip_selector": "java-8",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 737,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "305",
                "name": "Espruino",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        207",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Espruino</b> is a microcontroller that natively executes JavaScript and thus lets the large number of JavaScript programmers get started very quickly. Using an event-based model similar to Node.js, Espurino devices can be very power efficient while still being responsive. Less powerful than a Raspberry Pi and slightly slower than an Arduino, Espruino makes an interesting alternative in low-power environments that need responsive behavior but can sacrifice some of the raw high level features and execution speed of those platforms.",
                "radarId": 37,
                "id": "en_2014-07_737",
                "blip_selector": "espruino",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 726,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "184",
                "name": "SnapCI",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        15",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We mentioned Thoughtworks' <b>SnapCI</b> - a hosted service that provides deployment pipelines - on the last edition of the Radar. Since then, we have seen many teams successfully use SnapCI on their projects. If you need a simple continuous delivery solution in the cloud, SnapCI can provide it with one click. No hardware, no hassle.",
                "radarId": 66,
                "id": "en_2014-07_726",
                "blip_selector": "snapci",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 774,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "337",
                "name": "Spray/akka-http",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        327",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Spray/akka-http</b> is a suite of lightweight Scala libraries providing client/server RESTful support on top of Akka. It fully embraces the Actor-, Future-, and Stream-based programming models used by the underlying platform. This lets you work on RESTful applications with idiomatic Scala code without worrying about wrapping around other Java libraries.",
                "radarId": 102,
                "id": "en_2014-07_774",
                "blip_selector": "spray-akka-http",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 778,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "375",
                "name": "Testing as a separate organization",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        120",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We continue to see organizations create separate Development and QA teams. Fast feedback is a core tenet of Agile and critical to the success of a project. Using a separate QA team slows down this feedback, creates an &quot;us and them&quot; mentality and makes it more difficult to build quality into the software. Testing should be a tightly integrated activity and isn't something the team can outsource. We recommend integrated teams where testers work closely with developers instead of having <b>testing as a separate organization.</b>",
                "radarId": 27,
                "id": "en_2014-07_778",
                "blip_selector": "testing-as-a-separate-organization",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 731,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "288",
                "name": "CoAP",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        193",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>CoAP</b> is an open standards communication protocol for the Internet of Things (IoT). While there is currently a proliferation of competing standards in the IoT space, we particularly like CoAP. It is specifically designed for resource-constrained devices and local radio networks. It uses UDP for transport, but is semantically compatible with HTTP. CoAP uses a web-based model of devices with their own URLs and a request-response paradigm that supports RESTful and decentralized approaches.",
                "radarId": 35,
                "id": "en_2014-07_731",
                "blip_selector": "coap",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 698,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "120",
                "name": "Segregated DOM plus node for JS Testing",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        120",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "As client-side JavaScript applications grow in sophistication, we see an increased need for engineering sophistication to match. A common architectural flaw is unfettered access to the DOM from across the codebase - mixing DOM manipulation with application logic and AJAX calls. This makes the code difficult to understand and extend. Thinking about separation of concerns is a useful antidote, aggressively restricting all DOM access (usually jQuery usage) to a thin 'segregation layer'. One pleasant side-effect of this approach is that everything outside of the <b>segregated DOM</b> layer can be tested rapidly in isolation from the browser using a lean JavaScript engine such as <b>node.js.</b>",
                "radarId": 2,
                "id": "en_2014-07_698",
                "blip_selector": "segregated-dom-plus-node-for-js-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 674,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "130",
                "name": "Hadoop 2.0",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        210",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Hadoop's initial architecture was based on the paradigm of scaling data horizontally and metadata vertically. While data storage and processing were handled by the slave nodes reasonably well, the masters that managed metadata were a single point of failure and limiting for web scale usage. <b>Hadoop 2.0</b> has significantly re-architected both HDFS and the Map Reduce framework to address these issues. The HDFS namespace can be federated now using multiple name nodes on the same cluster and deployed in a HA mode. MapReduce has been replaced with YARN, which decouples cluster resource management from job state management and eliminates the scale/performance issues with the JobTracker. Most importantly, this change encourages deploying new distributed programming paradigms in addition to MapReduce on Hadoop clusters.",
                "radarId": 29,
                "id": "en_2014-07_674",
                "blip_selector": "hadoop-2-0",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 777,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "237",
                "name": "Tailored Service Template",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        96",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We see multiple organizations creating a <b>Tailored Service Template</b> which can be used to quickly seed new services, pre-configured to operate within that organization's production environment. The template contains a default set of decisions such as web frameworks, logging, monitoring, build, packaging, and deployment approaches. This is a very useful technique for encouraging collaborative evolution while retaining lightweight governance.",
                "radarId": 17,
                "id": "en_2014-07_777",
                "blip_selector": "tailored-service-template",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 771,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "323",
                "name": "Rust",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        319",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 101,
                "id": "en_2014-07_771",
                "blip_selector": "rust",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 761,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "248",
                "name": "Pact & Pacto",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        30",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Consumer-Driven Contracts are a testing approach to help service interfaces evolve with confidence without unknowingly breaking consumers. The similarly named <a href='https://github.com/realestate-com-au/pact'><b>Pact</b></a> and <a href='http://thoughtworks.github.io/pacto'><b>Pacto</b></a> are two new open-source tools which allow testing interactions between service providers and consumers in isolation against a contract. Both have grown out of projects which are building RESTful microservices and show great promise.",
                "radarId": 63,
                "id": "en_2014-07_761",
                "blip_selector": "pact-pacto",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 680,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "321",
                "name": "Pointer Events",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        302",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "After some delays, mainly caused by patent claims from Apple, the W3C has now finalized the Touch Events recommendation. However, in the meantime, <b>Pointer Events</b>, a newer, broader, and richer standard, is picking up momentum. We recommend considering Pointer Events for HTML interfaces that must work across different input methods.",
                "radarId": 99,
                "id": "en_2014-07_680",
                "blip_selector": "pointer-events",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 767,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "182",
                "name": "Q & Bluebird",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        342",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<a href='https://github.com/kriskowal/q'><b>Q</b></a> is a fully Promises/A+ compliant implementation in JavaScript that lets users compose promises arbitrarily deeply without the need for the deeply nested callbacks that obscure control flow. Q takes care of threading fulfilled values and rejected promises through the appropriate code paths. The space of Promises/A+ compliant libraries is currently very active with alternatives like <a href='https://github.com/petkaantonov/bluebird'><b>Bluebird</b></a> also rapidly gaining mindshare.",
                "radarId": 94,
                "id": "en_2014-07_767",
                "blip_selector": "q-bluebird",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 732,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "327",
                "name": "Consul",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        75",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 70,
                "id": "en_2014-07_732",
                "blip_selector": "consul",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 711,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "160",
                "name": "Structured logging",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        102",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Treating logs as data gives us greater insight into the operational activity of the systems we build. <b>Structured logging</b>, which is using a consistent, predetermined message format containing semantic information, builds on this technique and enables tools such as Graylog2 and Splunk to yield deeper insights.",
                "radarId": 16,
                "id": "en_2014-07_711",
                "blip_selector": "structured-logging",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 718,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "337",
                "name": "Xamarin",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        8",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Among the various choices available for building cross-platform mobile apps, <b>Xamarin</b> offers a fairly unique toolset. It supports C# and F# as the primary language with bindings to platform-specific SDKs and the Mono runtime environment that works across iOS, Android and Windows Phone. Applications are compiled to native code instead of the typical cross-platform approach that renders HTML-based UI in an embedded browser. This gives apps a more native look and feel. When using this toolset, it is imperative that the platform-specific UI tier be separated from the rest of the tiers to ensure code reuse across different platforms. The application binary tends to be a bit bigger due to the runtime environment that is included.",
                "radarId": 79,
                "id": "en_2014-07_718",
                "blip_selector": "xamarin",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 754,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "330",
                "name": "Mapbox",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        228",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<a href='http://mapbox.com'><b>Mapbox</b></a> is an open mapping platform we have used on several projects. It allows a developer to quickly add a map to an application and to style the map. Mapbox can serve as an alternative to conventional mapping platforms, and it also allows for mobile friendly maps.",
                "radarId": 40,
                "id": "en_2014-07_754",
                "blip_selector": "mapbox",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 776,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "330",
                "name": "Swagger",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        15",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<a href='https://helloreverb.com/developers/swagger'><b>Swagger</b></a> is a standard way to describe a RESTful API so that documentation and client examples can be generated automatically. We think there's a need for some standards in this area and hope that this approach embraces Postel's law and avoids the <a href='http://en.wikipedia.org/wiki/Robustness_principle'>tight-coupling and inflexibility</a> of standards like WSDL. A number of tools are now available to <a href='https://github.com/wordnik/swagger-ui'>render documentation and client pages</a> from swagger-compliant descriptions.",
                "radarId": 78,
                "id": "en_2014-07_776",
                "blip_selector": "swagger",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 740,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "294",
                "name": "Flume",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        68",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "When using techniques such as 'instrument all the things' and semantic logging, you may end up with huge amount of log data. Collecting, aggregating and moving this data can be problematic. <b>Flume</b> is a distributed system for exactly this purpose. It has a flexible architecture based on streaming data flows. With built-in support for HDFS, Flume can easily move multi-terabyte log data from many different sources to a centralized data store for further processing.",
                "radarId": 71,
                "id": "en_2014-07_740",
                "blip_selector": "flume",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 757,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "339",
                "name": "OpenID Connect",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        235",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>OpenID Connect</b> is a standard protocol for federated identity built on OAuth 2.0. It addresses a long-standing need for a simple, web-based protocol to exchange trusted authentication and authorization information. Previous standards like SAML or generic OAuth 2.0 have proven too broad and complex to ensure universal compatibility. Our hope is that OpenID Connect can provide a useful basis for secure access to RESTful microservices with authenticated end-user identity.",
                "radarId": 41,
                "id": "en_2014-07_757",
                "blip_selector": "openid-connect",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 760,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "190",
                "name": "Packer",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        35",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We featured 'Machine image as a build artifact' in the last Radar, as an excellent way to implement fast spin-up, immutable servers. The thing holding this technique back was the difficulty in building images, especially when targeting more than one platform. <a href='http://packer.io'><b>Packer</b></a>&nbsp;solves this, using your configuration management tool of choice to create images for a number of platforms including AWS, Rackspace, DigitalOcean and even Docker and Vagrant, although we have found the VMWare support to be problematic.",
                "radarId": 62,
                "id": "en_2014-07_760",
                "blip_selector": "packer",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 745,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "248",
                "name": "Gulp",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        45",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Gulp</b> is an alternative to Grunt. It is a command-line task automation tool that helps developers with SaaS compilation, autoprefixing, minification, concatenation and so on. Gulp's central idea is the use of streams, and its plugins are designed to do only one task.",
                "radarId": 60,
                "id": "en_2014-07_745",
                "blip_selector": "gulp",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 519,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "130",
                "name": "Dropwizard",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        285",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Dropwizard</b> is an opinionated combination of several lightweight Java tools and frameworks, many of which would merit mention in their own right. The package embodies many of our favorite techniques, including an embedded HTTP server, support for RESTful endpoints, built-in operational metrics and health-checks, and straightforward deployments. Dropwizard makes it easy to do the right thing, allowing you to concentrate on the essential complexity of a problem rather than the plumbing.",
                "radarId": 82,
                "id": "en_2014-07_519",
                "blip_selector": "dropwizard",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 700,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "317",
                "name": "Bridging physical and digital worlds with simple hardware",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        168",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The reduction in cost, size, power consumption and simplicity of physical devices has led to an explosion in devices that open physical domains to software. These devices often contain little more than a sensor and a communication component like Bluetooth Low Energy or WiFi. As software engineers, we need to expand our thinking to include <b>bridging physical and digital worlds with simple hardware</b>. We are already seeing this in the car, the home, the human body, agriculture and other physical environments. The cost and time required to prototype such devices is shrinking to match the fast iterations possible in software.",
                "radarId": 18,
                "id": "en_2014-07_700",
                "blip_selector": "bridging-physical-and-digital-worlds-with-simple-hardware",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 695,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Enterprise Data Warehouse",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        234",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "While centralized integration of data for analysis and reporting remains a good strategy, traditional <b>Enterprise Data Warehouse</b> (EDW) initiatives have a higher than 50% failure rate. Big up-front data modeling results in overbuilt warehouses that take years to deliver and are expensive to maintain. We are placing these old-style EDWs and techniques on hold in this edition of the radar. Instead, we advocate evolving towards an EDW. Test and learn by building small, valuable increments that are frequently released to production. Nontraditional tools and techniques can help, for example using a Data Vault schema design or even a NoSQL document store such as HDFS.",
                "radarId": 48,
                "id": "en_2014-07_695",
                "blip_selector": "enterprise-data-warehouse",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 773,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "300",
                "name": "Spark",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        23",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "For iterative processing such as machine learning and interactive analysis, Hadoop map-reduce does not work very well because of its batch-oriented nature. <b>Spark</b> is a fast and general engine for large-scale data processing. It aims to extend map-reduce for iterative algorithms and interactive low latency data mining. It also ships with a machine learning library.",
                "radarId": 77,
                "id": "en_2014-07_773",
                "blip_selector": "spark",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 678,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "240",
                "name": "Pester",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        324",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "PowerShell remains a widely used option for doing low-level automation on Windows machines. <b>Pester</b> is a testing library that makes it possible to execute and validate PowerShell commands. Pester simplifies testing of scripts during development with a powerful mocking system that makes it possible to setup stubs and doubles in tests. Pester tests can also be integrated into a continuous integration system to prevent regression defects.",
                "radarId": 92,
                "id": "en_2014-07_678",
                "blip_selector": "pester",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 764,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "90",
                "name": "Forward Secrecy",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        150",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Forward Secrecy</b> (sometimes known as &quot;Perfect Forward Secrecy&quot; or PFS) is a cryptographic technique that protects previous communications sessions even if a server’s master keys are later compromised. Despite being simple to enable for HTTPS connections, many servers are not configured this way, and we recommend enabling forward secrecy to improve security. Note that we don't generally like the word &quot;perfect&quot; when used to describe cryptographic protocols - even the best protocol can be broken by a flaw in implementation, random number generator, or by advances in cryptanalytic techniques. Even so, it's important to enable the best security available, whilst keeping informed of new attacks and protocol improvements.",
                "radarId": 1,
                "id": "en_2014-07_764",
                "blip_selector": "forward-secrecy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 574,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "200",
                "name": "Perimeterless enterprise",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        124",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Technology trends have broken down the garden walls that used to surround corporate IT networks and lead to a <b>perimeterless enterprise</b>. Employees frequently use their own consumer devices to access corporate data through cloud services and web APIs, often without the organization's knowledge. As devices continue to proliferate and more applications move to the cloud, businesses are being forced to rethink fundamental assumptions about data access and network security.",
                "radarId": 12,
                "id": "en_2014-07_574",
                "blip_selector": "perimeterless-enterprise",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 762,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "324",
                "name": "Papertrail",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        38",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Papertrail</b> is a log aggregation service that aggregates data from a variety of sources including web-servers, routers, databases and PaaS services. In addition to aggregation it provides search, filtering, and alerts and notifications out of the box. While undeniably convenient and expedient in many cases, we remain concerned about widespread adoption of services that centralize large quantities of data aggregated from multiple parties.",
                "radarId": 75,
                "id": "en_2014-07_762",
                "blip_selector": "papertrail",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 677,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "324",
                "name": "Julia",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        286",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Julia</b> is a dynamic, procedural and homoiconic programming language designed to address the needs of high performance scientific computing. The implementation of the language is organized around the concept of generic functions and dynamic method dispatch. Julia programs are largely functions that can contain multiple definitions for different combinations of argument types. The combination of these language features and the LLVM based just-in-time compiler help Julia achieve a high level of performance. Julia also supports a multiprocessing environment based on message passing to allow programs to run on multiple processes. This enables programmers to create distributed programs based on any of the models for parallel programming.",
                "radarId": 97,
                "id": "en_2014-07_677",
                "blip_selector": "julia",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 744,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "248",
                "name": "GoCD",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        55",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Owing to the increasing interest in Continuous Delivery and deployment pipelines, we see many teams trying to extend their Continuous Integration tooling with plugins that provide deployment pipelines at a visual level. <a href='http://go.cd'><b>GoCD</b></a> is a tool that was built with the concept of deployment pipelines at its core. GoCD has the ability to sequence workflows both sequentially and in parallel at many levels, to execute specific tasks only on certain machines as well as to deterministically promote and propagate artifacts, which is a key enabler for Continuous Delivery. These are capabilities that most Continuous Integration tools lack, and we recommend that teams who might have otherwise tried to build a deployment pipeline from their Continuous Integration server try GoCD instead. GoCD was built by Thoughtworks, is open-source, and is available for free for all teams. The <a href='https://github.com/gocd/gocd/'>source code</a> is available under the Apache 2.0 license.",
                "radarId": 58,
                "id": "en_2014-07_744",
                "blip_selector": "gocd",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 625,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "240",
                "name": "Machine image as a build artifact",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        135",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Many of our teams are getting great benefit from publishing virtual <b>machine images as a build artifact</b> during their automated build processes. These machine images are published with the application and all dependencies, often in an immutable state. With minimal additional configuration the image can be used to create identical virtual machines in all environments eliminating many common sources of error and waste. Tools are emerging to make this approach simpler, for example Packer in the tools section of the Radar. This approach is working well in companies that take a mature approach to cloud and virtualization, and where delivery teams have responsibility and access right through to production.",
                "radarId": 10,
                "id": "en_2014-07_625",
                "blip_selector": "machine-image-as-a-build-artifact",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 710,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "225",
                "name": "Provisioning testing",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        119",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Virtualization and Cloud Computing have made it easy to procure and provision hardware and virtual servers. But with this flexibility comes scale and complexity, and managing our virtual estates has become increasingly difficult. Using techniques more familiar in the software development world such as TDD, BDD and CI offers an approach to managing this complexity and gives us the confidence to make changes to our infrastructure in a safe, repeatable and automatable manner. <b>Provisioning testing</b> tools, like rspec-puppet, Test Kitchen and serverspec, are available for most platforms.",
                "radarId": 13,
                "id": "en_2014-07_710",
                "blip_selector": "provisioning-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 705,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Velocity as productivity",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        105",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Of all the approaches that we might disagree with, equating velocity with productivity has become so prevalent that we felt it important to call it out in our hold ring. When properly used, velocity allows the incorporation of &quot;yesterday's weather&quot; into the iteration planning process. Velocity is simply a capacity estimate for a given team at a given time. It can improve as a team gels or by fixing problems like technical debt or a flaky build server. However, like all metrics, it can be misused. For example, over-zealous project managers attempt to insist on continual improvement of velocity. Treating <b>velocity as productivity</b> leads to unproductive team behaviors that optimize the metric at the expense of actual working software.",
                "radarId": 28,
                "id": "en_2014-07_705",
                "blip_selector": "velocity-as-productivity",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 751,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "330",
                "name": "leaflet.js",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        53",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<a href='http://leafletjs.com'><b>Leaflet.js</b></a> is a JavaScript library for mobile-friendly interactive maps. The library places a huge emphasis on performance, usability and simplicity, and as such works efficiently across mobile platforms and desktop browsers. It is a viable library to consider when building interactive maps for mobiles.",
                "radarId": 73,
                "id": "en_2014-07_751",
                "blip_selector": "leaflet-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 722,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "205",
                "name": "Chaos Monkey",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        80",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Following our recommendation in the last radar to consider a focus on reducing mean time to recovery, we want to highlight <b>Chaos Monkey</b> from Netflix's Simian Army suite. It is a tool that randomly disables instances in the production environment during normal operation. When run with comprehensive monitoring and a team on stand by, it helps to uncover unexpected weaknesses in the system, which in turn allows the development team to build automatic recovery mechanisms ahead of time, rather than struggling to respond to an outage that caught everyone by surprise.",
                "radarId": 53,
                "id": "en_2014-07_722",
                "blip_selector": "chaos-monkey",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 691,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "210",
                "name": "Private Clouds",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        247",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The number and maturity of on-premise <b>private cloud</b> options continue to increase. From OpenStack-based options like Rackspace's private cloud to PAAS options like CloudFoundry, for those organizations seeking to make use of existing infrastructure or for whom an increased level of control is needed over off-premise cloud, then these solutions are well worth a look.",
                "radarId": 33,
                "id": "en_2014-07_691",
                "blip_selector": "private-clouds",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 736,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "335",
                "name": "Elm",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        278",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Elm</b> is a functional programming language that is used to build web based user interfaces in a functional reactive style. Elm is strongly statically typed and built on the Haskell platform. Elm has a Haskell-like syntax but compiles down to HTML, CSS and JavaScript. While still in its very early days, individuals and teams interested in exploring highly interactive web-based GUIs should look into this interesting little language.",
                "radarId": 96,
                "id": "en_2014-07_736",
                "blip_selector": "elm",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 758,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "375",
                "name": "OSGi",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        252",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "",
                "radarId": 49,
                "id": "en_2014-07_758",
                "blip_selector": "osgi",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 600,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "Big enterprise solutions",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        198",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The gap between what &quot;enterprise-class&quot; commercial packages provide and what is actually needed is widening. This is especially true for internet facing applications. Innovative solutions that really scale and easily support modern techniques such as continuous delivery are written by practitioners for practitioners. They originate with many internet scale companies and are refined as open source software. <b>Big enterprise solutions</b> often obstruct effective delivery due to their accumulated bloat, cumbersome licensing restrictions, and feature sets that are driven by check-lists and imaginary requirements far removed from the realities of most development teams.",
                "radarId": 46,
                "id": "en_2014-07_600",
                "blip_selector": "big-enterprise-solutions",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 775,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "314",
                "name": "Spring Boot",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        335",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<a href='http://projects.spring.io/spring-boot'><b>Spring Boot</b></a> allows easy set up of standalone Spring-based applications. It's ideal for pulling up new microservices and easy to deploy. It also makes data access less of a pain due to the hibernate mappings with much less boilerplate code.",
                "radarId": 103,
                "id": "en_2014-07_775",
                "blip_selector": "spring-boot",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 630,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "240",
                "name": "Nancy",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        315",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Nancy</b> continues to gain traction in the Alt.NET community and we have found it particularly useful for deploying low-ceremony, lightweight fakes for testing in a microservices environment.",
                "radarId": 91,
                "id": "en_2014-07_630",
                "blip_selector": "nancy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 768,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "244",
                "name": "R as Compute Platform",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        351",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "R is traditionally used as stand alone analysis tool by research teams. With improvements in packages like Rook and RJSONIO, it has become trivial to wrap the computational logic and expose it as an API. Thoughtworks teams are using <b>R as Compute platform</b> to crunch large datasets in real time, using in-memory storage integrated with enterprise systems.",
                "radarId": 95,
                "id": "en_2014-07_768",
                "blip_selector": "r-as-compute-platform",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 765,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "325",
                "name": "Property-based unit testing",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        116",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We value unit testing on projects and we like techniques such as <b>property-based unit testing</b> which augment it. This is a practice of using data generators to create randomized inputs within defined ranges. It allows a quick check for boundary conditions and other unanticipated failure modes and has burgeoning support on multiple platforms.",
                "radarId": 22,
                "id": "en_2014-07_765",
                "blip_selector": "property-based-unit-testing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 681,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "333",
                "name": "TypeScript",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        343",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>TypeScript</b> is an interesting approach to bringing a new programming language to the browser. With TypeScript, the new language features compile down to normal JavaScript, and yet as a superset of JavaScript it does not feel like a completely new language. It does not represent an either-or proposition and it does not relegate JavaScript to an intermediate execution platform. Many of the language features are based on planned future extensions of JavaScript.",
                "radarId": 104,
                "id": "en_2014-07_681",
                "blip_selector": "typescript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 725,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "235",
                "name": "Prototype On Paper",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        25",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We have long favored the use of hand-drawn, low fidelity prototypes to illustrate user interactions without getting caught up in the nitty-gritty of the graphic design. <b>Prototype On Paper</b> is a tool that allows individual mockups drawn on paper to be captured via camera on iOS or Android and linked together to allow for testing of user interaction. This bridges the gap nicely between the static, lo-fi paper prototypes and more hi-fi prototyping techniques.",
                "radarId": 64,
                "id": "en_2014-07_725",
                "blip_selector": "prototype-on-paper",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 720,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "80",
                "name": "Ansible",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        60",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Since first featuring <b>Ansible</b> in the last radar, we continue to be impressed with its capabilities and ease of use compared to other offerings in this space. Based on our experiences over the last year we have no hesitation in recommending Ansible as a great option for automated control of your infrastructure.",
                "radarId": 50,
                "id": "en_2014-07_720",
                "blip_selector": "ansible",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 749,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "200",
                "name": "Inverse Conway Maneuver",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        147",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Conway's Law asserts that organizations are constrained to produce application designs which are copies of their communication structures. This often leads to unintended friction points. The '<b>Inverse Conway Maneuver</b>' recommends evolving your team and organizational structure to promote your desired architecture. Ideally your technology architecture will display isomorphism with your business architecture.",
                "radarId": 8,
                "id": "en_2014-07_749",
                "blip_selector": "inverse-conway-maneuver",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 709,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "210",
                "name": "Masterless Chef/Puppet",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        130",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Chef and Puppet servers are a central place to store recipes/manifests that propagate configuration changes to managed machines. They are also a central database of node information and provide access control for manifests/recipes. The disadvantage of having these servers is that they become a bottleneck when multiple clients simultaneously connect to them. They are a single point of failure and take effort to be robust and reliable. In light of this, we recommend <b>chef-solo or standalone puppet</b> in conjunction with a version control system when the server is primarily used to store recipes/manifests. Teams can always introduce the servers as the need arises or if they find themselves reinventing solutions to the problems the servers have already solved.",
                "radarId": 11,
                "id": "en_2014-07_709",
                "blip_selector": "masterless-chef-puppet",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 594,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "Handwritten CSS",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        300",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Along with JavaScript and HTML, CSS is a core technology for creating websites. Unfortunately, the language itself lacks key features, which leads to a high level of duplication and a lack of meaningful abstractions. While CSS3 aims to rectify some of these issues, it will be years before the modules that make up CSS3 will be properly supported in most browsers. Fortunately, there is a solution today using <b>CSS preprocessors</b> like SASS and LESS. Due to their quality and support, we believe that the days of <b>handwritten CSS</b>, for anything apart from trivial work, are over.",
                "radarId": 106,
                "id": "en_2014-07_594",
                "blip_selector": "handwritten-css",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 702,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Cloud lift and shift",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        165",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "As cloud adoption grows we are unfortunately seeing a trend to treat the cloud as just another hosting provider. <b>Cloud lift and shift</b> is unfortunately being encouraged by large vendors re-branding existing hosting offerings as &quot;cloud.&quot; Few of these offer any real flexibility or pay-as-you-use pricing. If you think you can move to the cloud without re-architecting, you are probably not doing it right.",
                "radarId": 24,
                "id": "en_2014-07_702",
                "blip_selector": "cloud-lift-and-shift",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 646,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "245",
                "name": "Snowplow Analytics & Piwik",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        10",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "With increasing scrutiny over the privacy of data, more companies are concerned about sharing web analytics with third parties. <b>Snowplow Analytics and Piwik</b> are examples of open-source analytics platforms that can be self-hosted and provide a promising feature set and roadmap.",
                "radarId": 67,
                "id": "en_2014-07_646",
                "blip_selector": "snowplow-analytics-piwik",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 728,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "295",
                "name": "Appium",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        83",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Mobile test automation is becoming increasingly important. <a href='http://appium.io'><b>Appium</b></a> is a test automation framework which can be used to test mobile web, mobile native and mobile hybrid applications on iOS and Android. At the core, Appium is a webserver that exposes a REST API, receiving connections from a client, listening for commands, executing those commands on a mobile device and responding with an HTTP response representing the result of the command execution. It allows tests to be written against multiple platforms (iOS, Android) using the same API. Appium is open source with easy set up using npm.",
                "radarId": 69,
                "id": "en_2014-07_728",
                "blip_selector": "appium",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 692,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "329",
                "name": "SPDY",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        242",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>SPDY</b> is an open networking protocol for low-latency transport of web content proposed for HTTP 2.0 that has seen a rise in modern browser support. SPDY reduces page load time by prioritizing the transfer of subresources so that only one connection is required per client. Transport layer security is used in SPDY implementations with the transmission headers gzip or deflate compressed instead of human-readable text as in HTTP. It is great for high-latency environments.",
                "radarId": 42,
                "id": "en_2014-07_692",
                "blip_selector": "spdy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 703,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "Ignoring OWASP Top 10",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        135",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Barely a week goes by without the IT industry being embarrassed by yet another high profile loss of data, leak of passwords, or breach of a supposedly secure system. There are good resources to help with making sure security gets treated as a first-class concern during software development and we need to stop ignoring them; the <b>OWASP Top 10</b> is a good place to start.",
                "radarId": 26,
                "id": "en_2014-07_703",
                "blip_selector": "ignoring-owasp-top-10",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 730,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "190",
                "name": "CartoDB",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        85",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>CartoDB</b> is an open-source GIS tool built on PostGIS and PostgreSQL. It allows for storage and searching of geospatial data using SQL. It also provides a handy JavaScript library, CartoDB.js, for map styling and data visualization.",
                "radarId": 52,
                "id": "en_2014-07_730",
                "blip_selector": "cartodb",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 685,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "175",
                "name": "Hive",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        306",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Hive</b> is a data warehouse built on top of Hadoop which provides a SQL-like query and data definition language. Hive converts queries into MapReduce jobs that can be run across the entire Hadoop cluster. Like all useful abstractions, Hive does not try to deny the existence of the underlying mechanics of Hadoop and supports custom map-reduce operations as a powerful extension mechanism. Despite the superficial similarities to SQL, Hive does not try to be a replacement for low-latency, real-time query engines found on relational database systems. We strongly advise against using Hive for online ad-hoc querying purposes.",
                "radarId": 90,
                "id": "en_2014-07_685",
                "blip_selector": "hive",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 307,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2013-04",
                "radius": "375",
                "name": "TFS",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        30",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We continue to see teams run into productivity problems attempting to use <b>TFS</b> as a version control system. Teams that want to practice frequent code check-ins, a core part of continuous integration, have found its heavyweight approach significantly drains productivity. This often leads to teams checking in less frequently, causing more problematic merges. We recommend tools such as Git, Perforce, and Subversion instead.",
                "radarId": 81,
                "id": "en_2014-07_307",
                "blip_selector": "tfs",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 679,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "285",
                "name": "Python 3",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        310",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Python 3</b> was a major change from the previous Python 2.x that introduced backwards incompatible changes. It was notable for actually removing languages features, making Python 3 easier to use and more consistent without reducing its power. This has led to problems in adoption as some widely used supporting libraries have not been ported, and Python developers often have to find new ways of doing things. Nonetheless the drive towards making a language simpler is to be applauded, and if you are actively developing in Python, then give Python 3 another look.",
                "radarId": 100,
                "id": "en_2014-07_679",
                "blip_selector": "python-3",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 683,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "375",
                "name": "JSF",
                "ring": "Hold",
                "volume_date": "2014-07",
                "theta": "        330",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We continue to see teams run into trouble using <b>JSF</b>&nbsp;- JavaServer Faces - and are recommending you avoid this technology. Teams seem to choose JSF because it is a Java EE standard without really evaluating whether the programming model suits them. We think JSF is flawed because its programming model encourages use of its own abstractions rather than fully embracing the underlying web model. JSF, like ASP.NET webforms, attempts to create stateful component trees on top HTML markup and the stateless HTTP protocol. The improvements in JSF 2.0 and 2.2, such as the introduction of stateless views and the promotion of GET, are steps in the right direction, maybe even an acknowledgement that the original model was flawed, but we feel this is a too little too late. Rather than dealing with the complexity of JSF we recommend teams use simple frameworks and work closely with web technologies including HTTP, HTML and CSS.",
                "radarId": 107,
                "id": "en_2014-07_683",
                "blip_selector": "jsf",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 735,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "305",
                "name": "DigitalOcean",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        200",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Although the IaaS space is crowded, there is room for new competitors to enter the market. <a href='http://digitalocean.com'><b>DigitalOcean</b></a> has impressed us recently with its cost, speed and simplicity. If all you need is basic compute infrastructure, it is well worth a look.",
                "radarId": 36,
                "id": "en_2014-07_735",
                "blip_selector": "digitalocean",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 727,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "218",
                "name": "AngularJS",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        279",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We continue to see JavaScript frameworks as a useful way to structure code and bring better coding techniques to JavaScript. <b>AngularJS</b> is used widely by Thoughtworks projects. However we do advise teams to assess other good alternatives such as Ember.js and Knockout.js.",
                "radarId": 87,
                "id": "en_2014-07_727",
                "blip_selector": "angularjs",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 746,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "225",
                "name": "HAL",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        297",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We see lots of teams creating RESTful interfaces without paying any attention to hypermedia. <a href='http://stateless.co/hal_specification.html'><b>HAL</b></a> is a simple format for incorporating hyperlinks into JSON representations which is easy to implement and consume. HAL is well supported by libraries for parsing and representing JSON, and there are HAL-aware REST client libraries such as <a href='https://github.com/codegram/hyperclient'>Hyperclient</a> which make it easy to navigate resources by following links.",
                "radarId": 89,
                "id": "en_2014-07_746",
                "blip_selector": "hal",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 742,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "190",
                "name": "Foreman",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        65",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The big Cloud providers have clearly raised the bar for provisioning, monitoring, and configuration, simplifying these tasks dramatically through powerful tools. Organizations that want to keep their compute and storage resources in-house are looking for similar solutions that work within their organizational context. <a href='http://theforeman.org/'><b>Foreman</b></a> has worked really well for us, and it is open-source software, too.",
                "radarId": 56,
                "id": "en_2014-07_742",
                "blip_selector": "foreman",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 766,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "180",
                "name": "Protractor for AngularJS",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        20",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Protractor</b> is a testing framework based on Jasmine that wraps WebDriverJS with functionality specifically designed to execute end-to-end tests<b> for Angular.JS</b> applications. We've found it to be a standout in the rapidly evolving space of JavaScript testing frameworks. Despite being designed to run end-to-end tests with a real backend, Protractor tests can also be made to work with a stubbed HTTP gateway to run purely client side tests.",
                "radarId": 65,
                "id": "en_2014-07_766",
                "blip_selector": "protractor-for-angularjs",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 701,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "320",
                "name": "Tangible interaction",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        103",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "As the lines between hardware and software continue to blur, we see traditional computing increasingly embedded in everyday objects. Although connected devices are now ubiquitous in retail spaces, automobiles, homes, and workplaces, we still do not understand how to blend them into a useful computing experience that goes beyond a simple glass screen. <b>Tangible interaction</b> is a discipline that blends software and hardware technology, architecture, user experience, and industrial design. The goal is to provide natural environments made up of physical objects where humans can manipulate and understand digital data.",
                "radarId": 23,
                "id": "en_2014-07_701",
                "blip_selector": "tangible-interaction",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 716,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "300",
                "name": "Hosted solutions for testing iOS",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        60",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "All development for iOS must be carried out on OS X. Due to technical and licensing restrictions running server farms with OS X is neither easy nor common. In spite of these difficulties, <b>Travis CI</b>, with support from Sauce Labs, now provides cloud-based continuous integration services for iOS and OS X projects.",
                "radarId": 72,
                "id": "en_2014-07_716",
                "blip_selector": "hosted-solutions-for-testing-ios",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 748,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "192",
                "name": "iBeacon",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        202",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>iBeacons</b> are the Apple implementation of the broader category of beacons, which are small devices that use low energy Bluetooth (BLE) to provide fine-grained proximity information for mobile phones and other devices. Despite the hype surrounding iBeacons and the limitations to the accuracy and reliability of the information they provide, we do feel that they open interesting opportunities as trigger points for interacting with your users in a contextually relevant manner.",
                "radarId": 31,
                "id": "en_2014-07_748",
                "blip_selector": "ibeacon",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 694,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "329",
                "name": "Web Components standard",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        263",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "In the previous radar we cautioned against the use of traditional web component frameworks that provide a component model on the server side. The <b>Web Components standard</b> that originated at Google is something quite different. It provides an easier way to create recyclable widgets by helping with encapsulation of HTML, CSS and JavaScript, so they do not interfere with the rest of the page and the page does not interfere with them. Developers can use as much or as little of the framework as needed. Early support is provided by the Polymer Project.",
                "radarId": 45,
                "id": "en_2014-07_694",
                "blip_selector": "web-components-standard",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 690,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "320",
                "name": "Low-cost robotics",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        221",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "With the cost of industrial robots dropping and their safety and ease of use increasing, the world of useful, commercial robotics is opening up. Robots like Rethink Robotics' Baxter or Universal Robotics' U5, make it feasible for small to medium-sized businesses to automate repetitive tasks previously performed by humans. Increasingly, enterprise software will have to integrate with <b>low-cost robotics</b> as another participant in the value stream. The challenge lies in making the experience easy and productive for the human co-workers as well.",
                "radarId": 39,
                "id": "en_2014-07_690",
                "blip_selector": "low-cost-robotics",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 752,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "180",
                "name": "Living CSS Style Guides",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        141",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "A <b>living CSS style guide</b> is a page on your site that uses your current CSS styles and acts as a reference for all the currently available visual elements and design patterns. This helps to tightly integrate design into your delivery process by promoting co-ownership of the UI and avoids duplication of styling across your application. Styling changes are visible in the guide immediately and changes propagate across your site from a central location. A sensible way to do this is with a well organized SASS/LESS file structure with semantically named elements that separates structure, aesthetics, and interaction.",
                "radarId": 9,
                "id": "en_2014-07_752",
                "blip_selector": "living-css-style-guides",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 712,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "32",
                "name": "Dependency management for JavaScript",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        30",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Using <b>Dependency management </b>tools<b> for JavaScript</b> has helped our delivery teams handle large amounts of JavaScript by structuring their code and loading the dependencies at runtime. Though this simplified the effort in most cases, lazy loading complicates supporting offline mode. Different dependency management tools have different strengths, so choose based on your context.",
                "radarId": 51,
                "id": "en_2014-07_712",
                "blip_selector": "dependency-management-for-javascript",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 717,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "250",
                "name": "Visual regression testing tools",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        5",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Growing complexity in web applications has increased the awareness that appearance should be tested in addition to functionality. This has given rise to a variety of <b>visual regression testing tools</b>, including CSS Critic, dpxdt, Huxley, PhantomCSS, and Wraith. Techniques range from straightforward assertions of CSS values to actual screenshot comparison. While this is a field still in active development we believe that testing for visual regressions should be added to Continuous Delivery pipelines.",
                "radarId": 68,
                "id": "en_2014-07_717",
                "blip_selector": "visual-regression-testing-tools",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 257,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2011-01",
                "radius": "100",
                "name": "Scala, the good parts",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        345",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Scala is a large language that is popular because of its approachability for new developers. This banquet of features is a problem because many aspects of Scala, like implicit conversions and dynamics, can get you into trouble. To successfully use Scala, you need to research the language and have a very strong opinion on which parts are right for you, creating your own definition of <b>Scala, the good parts</b>. You can disable the parts you do not want using a system called feature flags.",
                "radarId": 86,
                "id": "en_2014-07_257",
                "blip_selector": "scala-the-good-parts",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 741,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "248",
                "name": "Flyway",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        70",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Automated database migrations are common on agile projects, and we are happy to see advances in the tools for this space. <b>Flyway</b> makes it as painless as possible to automate changes to databases. While not as feature-rich as some competing tools, we have used it on multiple projects and appreciate its low friction.",
                "radarId": 55,
                "id": "en_2014-07_741",
                "blip_selector": "flyway",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 684,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "90",
                "name": "Go language",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        300",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "The <b>Go language</b> gradually changed status from &quot;Just Another Language&quot; to a valuable tool in many projects. While steadfastly single paradigm in a world of increasingly complex languages, it seems to keep a nice balance between expressiveness, power, and simplicity.",
                "radarId": 83,
                "id": "en_2014-07_684",
                "blip_selector": "go-language",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 699,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "290",
                "name": "Datensparsamkeit",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        155",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "In our desire to support ever-changing business models, learn from past behavior and provide the best experience for every individual visitor, we are tempted to record as much data as possible. At the same time hackers are more ferocious than ever, with one spectacular security breach after another, and we now know of unprecedented mass-surveillance by government agencies. The term <b>Datensparsamkeit</b> is taken from German privacy legislation and describes the idea to only store as much personal information as is absolutely required for the business or applicable laws. Some examples are instead of storing a customer's full IP address in access logs, just using the first two or three octets and instead of logging transit journeys with a username using an anonymous token. If you never store the information, you do not need to worry about someone stealing it.",
                "radarId": 19,
                "id": "en_2014-07_699",
                "blip_selector": "datensparsamkeit",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 755,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "302",
                "name": "Mountebank",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        45",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "When testing services, we commonly need to stub out downstream collaborating services. Written by a Thoughtworker, <a href='http://www.mbtest.org'><b>Mountebank</b></a> is a lightweight service which you can configure via HTTP that is capable of stubbing and mocking HTTP, HTTPS, SMTP and TCP.",
                "radarId": 74,
                "id": "en_2014-07_755",
                "blip_selector": "mountebank",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 643,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "241",
                "name": "PostgreSQL for NoSQL",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        225",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>PostgreSQL</b> is expanding to become the NoSQL choice of SQL databases. Version 9.2 includes the ability to store JSON data with full querying capabilities on the content of the JSON document. Other extensions let the user store and query data in the form of key/value pairs. This lets you take advantage of the underlying storage and transactional capabilities of a time-tested database without being tied to a relational data model. This is ideal for those who want both SQL and NoSQL applications but prefer a single reliable infrastructure that they already know how to support.",
                "radarId": 32,
                "id": "en_2014-07_643",
                "blip_selector": "postgresql-for-nosql",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 723,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "248",
                "name": "Grunt.js",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        50",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "We have seen a growth in the <b>Grunt</b> ecosystem and it is currently being used in several of our projects. With the proliferation of plugins and the ease to author and publish self-written plugins to npm, automation using Grunt can be done with little effort. We suggest choosing a task runner that best meets the needs of the project and Grunt is one of the task runners you should consider.",
                "radarId": 59,
                "id": "en_2014-07_723",
                "blip_selector": "grunt-js",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 729,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "330",
                "name": "ARM Server SoC",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        186",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "AMD recently released an <a href='http://www.anandtech.com/show/7989/amd-announces-project-skybridge-pincompatible-arm-and-x86-socs-in-2015'>8-core <b>ARM SoC</b> (System on a Chip)</a> designed for servers and has committed to releasing an ARM SoC with integrated graphics in 2015. ARM-based servers are an interesting alternative to x86 because they are significantly more energy efficient. For some workloads, building an ARM-powered Cloud is preferable.",
                "radarId": 34,
                "id": "en_2014-07_729",
                "blip_selector": "arm-server-soc",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 763,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "225",
                "name": "Front end instrumentation",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        113",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "With the proliferation of single-page JavaScript applications, we have found that slow Ajax calls, excessive DOM manipulation, and unexpected JavaScript errors in the browser can have a big impact on perceived website responsiveness. It is very useful to collect and aggregate this profiling information from real end-users' browsers. <a href='http://newrelic.com/real-user-monitoring'><b>Real user monitoring</b></a> provides early warning and diagnosis of production issues, and helps pinpoint them to a specific locality.",
                "radarId": 14,
                "id": "en_2014-07_763",
                "blip_selector": "front-end-instrumentation",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 724,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "192",
                "name": "Moco",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        40",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Testing HTTP-based micro-services can be painful and tricky. Particularly in two scenarios, the consumption of a group of micro-services from front-end, and the communication between micro-services. To deal with these, <b>Moco</b> can be handy. It is a lightweight stub framework for testing HTTP-based endpoints. You can have an embedded stubbed service up and running with 2 lines of Java or Groovy code, or a standalone one with few lines of JSON to describe the required behavior.",
                "radarId": 61,
                "id": "en_2014-07_724",
                "blip_selector": "moco",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 739,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "293",
                "name": "EventStore",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        214",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Given the popularity of event sourcing, it is no surprise that tools in this space are maturing. <a href='http://geteventstore.com'><b>EventStore</b></a> is an open source functional database for storing immutable events and performing complex event processing on the event streams. Unlike other tools in this space, EventStore exposes event streams as Atom collections which therefore require no special infrastructure such as message buses or highly specialized clients to use.&nbsp;",
                "radarId": 38,
                "id": "en_2014-07_739",
                "blip_selector": "eventstore",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 759,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "317",
                "name": "Pace-layered Application Strategy",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        129",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Gartner's <b>Pace-layered Application Strategy</b> approach to architecture attempts to articulate the fact that decisions about architecture shouldn't be a one-size-fits-all approach. Instead, it is important to take a balanced view to your technology portfolio in terms of where to be conservative, and where to take risks. While we have qualms about some of the more prescriptive recommendations that seem to come with Pace, in general we like the concept and many organizations could benefit from adapting similar models.",
                "radarId": 21,
                "id": "en_2014-07_759",
                "blip_selector": "pace-layered-application-strategy",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 753,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "300",
                "name": "Machine image pipelines",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        142",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Many deployments require machine images for different server roles like applications and services, databases, and reverse proxies. Because building a machine image from scratch, using an operating system ISO and provisioning scripts, can take a considerable amount of time it can be useful to create a <b>build pipeline for machine images</b>. The first stage in the pipeline sets up a base image according to general standards in the organization. Subsequent stages can then enhance the base image for different purposes. If several applications or services have similar requirements, an application server for example, the pipeline can be extended by an intermediate stage, which takes the base image and provides an image with an application server but no application/service. These pipelines are not linear, they are trees that are branching out from the base image.",
                "radarId": 20,
                "id": "en_2014-07_753",
                "blip_selector": "machine-image-pipelines",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 693,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "319",
                "name": "Storm",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        249",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "Heterogeneous and overwhelmingly large amounts of data is not the only theme of big data. In certain circumstances, speed of processing can be as important as the volume. <b>Storm</b> is a distributed realtime computation system. It has similar scalability to Hadoop, with throughput as fast as a million tuples per second. It enables for real time processing what Hadoop does for batch.",
                "radarId": 43,
                "id": "en_2014-07_693",
                "blip_selector": "storm",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 570,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-01",
                "radius": "120",
                "name": "Vumi",
                "ring": "Adopt",
                "volume_date": "2014-07",
                "theta": "        240",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "In the last technology radar, we spoke about <b>Vumi</b> as a platform for using USSD as a UI for feature phones. Vumi has become very stable and its open source nature gives it appeal. In our projects, we have been able to integrate with telecommunication networks seamlessly and rapidly due to the simplicity of configuration. The platform is also readily available and scalable.",
                "radarId": 30,
                "id": "en_2014-07_570",
                "blip_selector": "vumi",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 738,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "200",
                "name": "Event Sourcing",
                "ring": "Trial",
                "volume_date": "2014-07",
                "theta": "        164",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Event Sourcing</b> ensures that all changes to application state are stored as a sequence of events. Not only can we query these events, we can also use the event log to reconstruct past states, and as a foundation to automatically adjust the state to cope with retroactive changes. Complementary to the capture of business meaningful events, the technique has positive implications for analytics in driving greater customer insight.",
                "radarId": 5,
                "id": "en_2014-07_738",
                "blip_selector": "event-sourcing",
                "type": "Blip"
            },
            {
                "ringSortOrder": "1",
                "blip_id": 770,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "editStatus": "In Editing",
                "lastModified": "2014-06",
                "radius": "331",
                "name": "Roslyn",
                "ring": "Assess",
                "volume_date": "2014-07",
                "theta": "        30",
                "faded": "",
                "quadrantSortOrder": "1",
                "urlLabel": "",
                "description": "<b>Roslyn</b>, a .NET compiler platform under the Apache License 2.0, is a next-generation set of compilers for C# and VB.NET written entirely as managed code. It provides access to the compiler as a service and includes code analysis APIs allowing developers to access information from the compiler that was previously treated as a black box, for example syntactic and semantic models. The most immediate impact should be seen in enhancements to .NET IDEs through refactoring and code generation tools. We also expect to see improved code diagnostics and static analysis, although it will be interesting to see what the community comes up with. Meanwhile Xamarin has a Mono-compatible copy of Roslyn source code hosted on GitHub and plans to bundle Roslyn’s compilers with Mono as it stabilizes, in addition to integrating the best parts into their code base.",
                "radarId": 76,
                "id": "en_2014-07_770",
                "blip_selector": "roslyn",
                "type": "Blip"
            }
        ]
    },
    {
        "date": "2015-01",
        "blips": [
            {
                "blip_id": 763,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "160",
                "name": "Front end instrumentation",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        161",
                "description": "<p>With the proliferation of complex JavaScript websites and applications, we are finding that browser-side issues such as&nbsp;slow network&nbsp;calls, poor render times, and JavaScript errors can have a big impact on user experience. Server-side monitoring clearly does not help in these scenarios and often these types of issues are being missed. <strong>Front end instrumentation</strong> extends the types of monitoring we are used to with&nbsp;server-side code to the browser, allowing for early warning of potential issues and far easier diagnosis should&nbsp;production issues occur.</p>",
                "radarId": 6,
                "id": "en_2015-01_763",
                "blip_selector": "front-end-instrumentation"
            },
            {
                "blip_id": 830,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "310",
                "name": "Swift",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        350",
                "description": "<p><a href='http://www.apple.com/swift/'>Swift,</a> Apple’s new development language, contains many improvements over the perennial Objective-C, including emphasis on functional programming and modern syntax. In most ways, this is an upgrade if you are coding on the Apple platform.</p>",
                "radarId": 103,
                "id": "en_2015-01_830",
                "blip_selector": "swift"
            },
            {
                "blip_id": 735,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "172",
                "name": "DigitalOcean",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        210",
                "description": "",
                "radarId": 31,
                "id": "en_2015-01_735",
                "blip_selector": "digitalocean"
            },
            {
                "blip_id": 815,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "300",
                "name": "Terraform",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        8",
                "description": "<p>With <strong>Terraform,</strong> cloud infrastructure can be managed by writing declarative definitions. The configuration of the servers instantiated by Terraform is usually left to tools like Puppet, Chef, or Ansible. We like Terraform because the syntax of its files is quite readable and because it supports multiple cloud providers while making no attempt to provide an artificial abstraction across these providers. At this stage, Terraform is new and not everything is implemented yet. We have also found its state management to be fragile, often needing awkward manual work to untangle.</p>",
                "radarId": 81,
                "id": "en_2015-01_815",
                "blip_selector": "terraform"
            },
            {
                "blip_id": 812,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "321",
                "name": "Dc.js",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        68",
                "description": "<p>We have recommended D3.js before and in this radar we want to extend our recommendation to <a href='http://dc-js.github.io/dc.js/'><strong>Dc.js</strong></a>, a charting library based on D3 for exploring large multi-dimensional datasets. With D3, it shares the ease with which beautiful interactive graphs can be created. It is different in that it trades the flexibility to create almost any kind of data visualization for a simpler programming model to create common chart types.</p>",
                "radarId": 73,
                "id": "en_2015-01_812",
                "blip_selector": "dc-js"
            },
            {
                "blip_id": 828,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "298",
                "name": "Reagent",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        320",
                "description": "",
                "radarId": 100,
                "id": "en_2015-01_828",
                "blip_selector": "reagent"
            },
            {
                "blip_id": 784,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "170",
                "name": "NoPSD",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        123",
                "description": "",
                "radarId": 12,
                "id": "en_2015-01_784",
                "blip_selector": "nopsd"
            },
            {
                "blip_id": 623,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "55",
                "name": "Focus on mean time to recovery",
                "ring": "Adopt",
                "volume_date": "2015-01",
                "theta": "        158",
                "description": "",
                "radarId": 1,
                "id": "en_2015-01_623",
                "blip_selector": "focus-on-mean-time-to-recovery"
            },
            {
                "blip_id": 796,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "321",
                "name": "Apache Mesos",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        185",
                "description": "",
                "radarId": 33,
                "id": "en_2015-01_796",
                "blip_selector": "apache-mesos"
            },
            {
                "blip_id": 756,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "163",
                "name": "Om",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        330",
                "description": "",
                "radarId": 92,
                "id": "en_2015-01_756",
                "blip_selector": "om"
            },
            {
                "blip_id": 825,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "336",
                "name": "Lotus",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        300",
                "description": "",
                "radarId": 98,
                "id": "en_2015-01_825",
                "blip_selector": "lotus"
            },
            {
                "blip_id": 778,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "375",
                "name": "Testing as a separate organization",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        108",
                "description": "<p>We continue to see organizations create separate Development and QA teams. Fast feedback is a core tenet of Agile and critical to the success of a project. Using a separate QA team slows down this feedback, creates an &quot;us and them&quot; mentality and makes it more difficult to build quality into the software. Testing should be a tightly integrated activity and isn't something the team can outsource. We recommend integrated teams where testers work closely with developers instead of having <b>testing as a separate organization.</b></p>",
                "radarId": 29,
                "id": "en_2015-01_778",
                "blip_selector": "testing-as-a-separate-organization"
            },
            {
                "blip_id": 753,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "300",
                "name": "Machine image pipelines",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        120",
                "description": "<p>Many deployments requires machine images for different server roles like applications and services, databases, and reverse proxies. Because building a machine image from scratch, using an operating system ISO and provisioning scripts, can take a considerable amount of time it can be useful to create a <b>build pipeline for machine images</b>. The first stage in the pipeline sets up a base image according to general standards in the organization. Subsequent stages can then enhance the base image for different purposes. If several applications or services have similar requirements, an application server for example, the pipeline can be extended by an intermediate stage, which takes the base image and provides an image with an application server but no application/service. These pipelines are not linear, they are trees that are branching out from the base image.</p>",
                "radarId": 20,
                "id": "en_2015-01_753",
                "blip_selector": "machine-image-pipelines"
            },
            {
                "blip_id": 742,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "190",
                "name": "Foreman",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        62",
                "description": "<p>The big Cloud providers have clearly raised the bar for provisioning, monitoring, and configuration, simplifying these tasks dramatically through powerful tools. Organizations that want to keep their compute and storage resources in-house are looking for similar solutions that work within their organizational context. <a href='http://theforeman.org/'><b>Foreman</b></a> has worked really well for us, and it is open-source software, too.</p>",
                "radarId": 58,
                "id": "en_2015-01_742",
                "blip_selector": "foreman"
            },
            {
                "blip_id": 797,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "311",
                "name": "CoreOS",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        201",
                "description": "",
                "radarId": 36,
                "id": "en_2015-01_797",
                "blip_selector": "coreos"
            },
            {
                "blip_id": 806,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "264",
                "name": "Composer",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        76",
                "description": "<p>Although the idea of dependency management is not new and considered to be a fundamental development practice, it is not widely adopted by the PHP community. <a href='https://getcomposer.org'>Composer</a> is a tool for dependency management in PHP. It is strongly influenced by tools from other technology&nbsp;stacks like Node's npm and Ruby's Bundler.&nbsp;</p>",
                "radarId": 55,
                "id": "en_2015-01_806",
                "blip_selector": "composer"
            },
            {
                "blip_id": 723,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "248",
                "name": "Grunt.js",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        48",
                "description": "<p><strong>Grunt</strong> is rapidly becoming the de facto JavaScript build tool with high adoption and a growing ecosystem. While slower than newer alternatives, such as Gulp, in terms of file processing, Grunt covers a broader set of build-related activities, has a proliferation of plugins and makes it easy to author and publish self-written plugins to npm.</p>",
                "radarId": 61,
                "id": "en_2015-01_723",
                "blip_selector": "grunt-js"
            },
            {
                "blip_id": 776,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "241",
                "name": "Swagger",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        10",
                "description": "",
                "radarId": 69,
                "id": "en_2015-01_776",
                "blip_selector": "swagger"
            },
            {
                "blip_id": 800,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "287",
                "name": "Jackrabbit Oak",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        211",
                "description": "",
                "radarId": 38,
                "id": "en_2015-01_800",
                "blip_selector": "jackrabbit-oak"
            },
            {
                "blip_id": 754,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "330",
                "name": "Mapbox",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        222",
                "description": "<p><a href='http://mapbox.com'><b>Mapbox</b></a> is an open mapping platform we have used on several projects. It allows a developer to quickly add a map to an application and to style the map. Mapbox can serve as an alternative to conventional mapping platforms, and it also allows for mobile friendly maps.</p>",
                "radarId": 40,
                "id": "en_2015-01_754",
                "blip_selector": "mapbox"
            },
            {
                "blip_id": 820,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "176",
                "name": "Nashorn",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        322",
                "description": "",
                "radarId": 91,
                "id": "en_2015-01_820",
                "blip_selector": "nashorn"
            },
            {
                "blip_id": 684,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "lastModified": "41640",
                "radius": "90",
                "name": "Go language",
                "ring": "Adopt",
                "volume_date": "2015-01",
                "theta": "        300",
                "description": "<p>The <a href='https://golang.org/'><b>Go language</b></a> gradually changed status from &quot;Just Another Language&quot; to a valuable tool in many projects. While steadfastly single paradigm in a world of increasingly complex languages, it seems to keep a nice balance between expressiveness, power, and simplicity.</p>",
                "radarId": 83,
                "id": "en_2015-01_684",
                "blip_selector": "go-language"
            },
            {
                "blip_id": 786,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "201",
                "name": "Static site generators",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        103",
                "description": "<p><strong>Static site generators</strong> like Middleman or Jekyll have become popular for creating simple websites or blogs, but we are increasingly seeing their use as part of more complex application stacks. The default assumption that all content delivered over HTTP has to be dynamically created on request is shifting, with more teams looking to use static pre-generated content.</p>",
                "radarId": 15,
                "id": "en_2015-01_786",
                "blip_selector": "static-site-generators"
            },
            {
                "blip_id": 788,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "320",
                "name": "Blockchain beyond bitcoin",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        150",
                "description": "",
                "radarId": 18,
                "id": "en_2015-01_788",
                "blip_selector": "blockchain-beyond-bitcoin"
            },
            {
                "blip_id": 745,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "339",
                "name": "Gulp",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        53",
                "description": "<p>In the last radar we called out <strong>Gulp</strong> as a strong competitor to Grunt, with a clean API and fast builds thanks to its streaming approach. While we still like it as a tool, we are moving it out from trial back to assess since Grunt has both a broader usage model and better industry adoption and tooling. We do see some teams successfully using Gulp inside Grunt, when the speed of intermediate result caching is required, but we are not recommending it as the default&nbsp;JavaScript build tool.&nbsp;</p>",
                "radarId": 75,
                "id": "en_2015-01_745",
                "blip_selector": "gulp"
            },
            {
                "blip_id": 803,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "330",
                "name": "Text it as a service / Rapidpro.io",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        254",
                "description": "",
                "radarId": 46,
                "id": "en_2015-01_803",
                "blip_selector": "text-it-as-a-service-rapidpro-io"
            },
            {
                "blip_id": 791,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "375",
                "name": "Microservice envy",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        153",
                "description": "",
                "radarId": 24,
                "id": "en_2015-01_791",
                "blip_selector": "microservice-envy"
            },
            {
                "blip_id": 750,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "110",
                "name": "Java 8",
                "ring": "Adopt",
                "volume_date": "2015-01",
                "theta": "        330",
                "description": "<p>The team behind <b>Java 8</b> had to fight two battles: the community forces encouraging forever backwards compatibility (a long hallmark of Java) and the technical challenge of making a deep language change mesh with existing libraries and features. They succeeded on both fronts, breathing new life into the Java Language and placing it on par with other mainstream languages in terms of functional programming features. In particular, Java 8 has excellent syntactic magic that allows seamless interoperability between Lambda blocks, the new higher-order function feature, and SAM (Single Abstract Method) interfaces, the traditional way of passing behavior.</p>",
                "radarId": 84,
                "id": "en_2015-01_750",
                "blip_selector": "java-8"
            },
            {
                "blip_id": 762,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "201",
                "name": "Papertrail",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        29",
                "description": "<p>In the previous radar, we mentioned the log aggregation service <b>Papertrail</b> as a way to collect and analyze logs from a variety of sources including web&nbsp;servers, routers, databases and PaaS services. Our subsequent experiences using it and the&nbsp;integrations from PaaS providers such as Heroku nudge it into something we would happily recommend as a&nbsp;convenient and expedient option, notwithstanding our concerns&nbsp;about widespread adoption of services that centralize large quantities of data aggregated from multiple parties.</p>",
                "radarId": 65,
                "id": "en_2015-01_762",
                "blip_selector": "papertrail"
            },
            {
                "blip_id": 755,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "302",
                "name": "Mountebank",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        38",
                "description": "<p>When testing services, we commonly need to stub out downstream collaborating services. Written by a Thoughtworker, <a href='http://www.mbtest.org'><b>Mountebank</b></a> is a lightweight service which you can configure via HTTP that is capable of stubbing and mocking HTTP, HTTPS, SMTP and TCP.</p>",
                "radarId": 77,
                "id": "en_2015-01_755",
                "blip_selector": "mountebank"
            },
            {
                "blip_id": 792,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "375",
                "name": "Programming in your CI/CD tool",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        144",
                "description": "",
                "radarId": 25,
                "id": "en_2015-01_792",
                "blip_selector": "programming-in-your-ci-cd-tool"
            },
            {
                "blip_id": 771,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "323",
                "name": "Rust",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        330",
                "description": "<p><a href='http://www.rust-lang.org/'><b>Rust</b></a> is a system programming language with modern affordances. It features a rich typing system, safe memory model and task-based concurrency. Compared to the Go language, Rust is more friendly to people who would like to write code in a functional style.</p>",
                "radarId": 101,
                "id": "en_2015-01_771",
                "blip_selector": "rust"
            },
            {
                "blip_id": 810,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "241",
                "name": "Postman",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        24",
                "description": "<p><a href='http://www.getpostman.com/features'>Postman</a> is a Chrome extension that acts as a REST client in your browser, allowing you to create requests and inspect responses. &nbsp;It is a useful tool when developing an API&nbsp;or implementing a client to call an existing API. It offers a suite of extensions that allow you to use it as a full-blown test runner too, although we discourage&nbsp;the record and replay style of testing it promotes.</p>",
                "radarId": 66,
                "id": "en_2015-01_810",
                "blip_selector": "postman"
            },
            {
                "blip_id": 768,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "244",
                "name": "R as Compute Platform",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        345",
                "description": "<p>R is traditionally used as stand alone analysis tool by research teams. With improvements in packages like Rook and RJSONIO, it has become trivial to wrap the computational logic and expose it as an API. Thoughtworks teams are using <b>R as Compute platform</b> to crunch large datasets in real time, using in-memory storage integrated with enterprise systems.</p>",
                "radarId": 94,
                "id": "en_2015-01_768",
                "blip_selector": "r-as-compute-platform"
            },
            {
                "blip_id": 807,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "240",
                "name": "Cursive",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        72",
                "description": "",
                "radarId": 56,
                "id": "en_2015-01_807",
                "blip_selector": "cursive"
            },
            {
                "blip_id": 726,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41640",
                "radius": "184",
                "name": "SnapCI",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        19",
                "description": "<p>We mentioned Thoughtworks' <b>SnapCI</b> -- a hosted service that provides deployment pipelines -- on the last edition of the Radar. Since then, we have seen many teams successfully use SnapCI on their projects. If you need a simple continuous delivery solution in the cloud, SnapCI can provide it with one click. No hardware, no hassle.</p>",
                "radarId": 67,
                "id": "en_2015-01_726",
                "blip_selector": "snapci"
            },
            {
                "blip_id": 783,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "220",
                "name": "Local storage sync",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        129",
                "description": "",
                "radarId": 11,
                "id": "en_2015-01_783",
                "blip_selector": "local-storage-sync"
            },
            {
                "blip_id": 696,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "375",
                "name": "CMS as a platform",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        210",
                "description": "<p>In previous editions of the radar, we have written about the pitfalls of trying to use a <strong>CMS as a platform</strong>&nbsp;and we continue to see this problematic approach “in the wild.” CMS as an editing, collaboration and&nbsp;workflow&nbsp;platform can work well, and we certainly do not discount these features.&nbsp;We have had success using <a href='http://martinfowler.com/articles/two-stack-cms/'>Two Stack CMS</a>,&nbsp;an approach that <a href='http://martinfowler.com/bliki/EditingPublishingSeparation.html'>separates the concerns of <em>editing</em> and <em>publishing</em></a> content.</p>",
                "radarId": 49,
                "id": "en_2015-01_696",
                "blip_selector": "cms-as-a-platform"
            },
            {
                "blip_id": 773,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "300",
                "name": "Spark",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        15",
                "description": "<p>For iterative processing such as machine learning and interactive analysis, Hadoop map-reduce does not work very well because of its batch-oriented nature. <b>Spark</b> is a fast and general engine for large-scale data processing. It aims to extend map-reduce for iterative algorithms and interactive low latency data mining. It also ships with a machine learning library.</p>",
                "radarId": 80,
                "id": "en_2015-01_773",
                "blip_selector": "spark"
            },
            {
                "blip_id": 757,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "339",
                "name": "OpenID Connect",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        243",
                "description": "<p><b>OpenID Connect</b> is a standard protocol for federated identity built on OAuth 2.0. It addresses a long-standing need for a simple, web-based protocol to exchange trusted authentication and authorization information. Previous standards like SAML or generic OAuth 2.0 have proven too broad and complex to ensure universal compatibility. Our hope is that OpenID Connect can provide a useful basis for secure access to RESTful microservices with authenticated end-user identity.</p>",
                "radarId": 44,
                "id": "en_2015-01_757",
                "blip_selector": "openid-connect"
            },
            {
                "blip_id": 811,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "298",
                "name": "Blackbox",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        83",
                "description": "<p><a href='https://github.com/StackExchange/blackbox'><strong>Blackbox</strong></a> is a simple tool for encrypting specific files while at rest in your source repository. This is particularly useful if you need to store passwords or private keys. Blackbox works with Git, Mercurial and Subversion and uses GPG for the encryption. &nbsp;Each user has their own key, which&nbsp;makes&nbsp;it easy to revoke access on a granular level.</p>",
                "radarId": 71,
                "id": "en_2015-01_811",
                "blip_selector": "blackbox"
            },
            {
                "blip_id": 702,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "lastModified": "41640",
                "radius": "375",
                "name": "Cloud lift and shift",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        171",
                "description": "<p>As cloud adoption grows we are unfortunately seeing a trend to treat the cloud as just another hosting provider. <b>Cloud lift and shift</b> is unfortunately being encouraged by large vendors re-branding existing hosting offerings as &quot;cloud.&quot; Few of these offer any real flexibility or pay-as-you-use pricing. If you think you can move to the cloud without re-architecting, you are probably not doing it right.</p>",
                "radarId": 22,
                "id": "en_2015-01_702",
                "blip_selector": "cloud-lift-and-shift"
            },
            {
                "blip_id": 793,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "375",
                "name": "SAFe™",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        135",
                "description": "",
                "radarId": 26,
                "id": "en_2015-01_793",
                "blip_selector": "safe"
            },
            {
                "blip_id": 699,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "225",
                "name": "Datensparsamkeit",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        168",
                "description": "",
                "radarId": 5,
                "id": "en_2015-01_699",
                "blip_selector": "datensparsamkeit"
            },
            {
                "blip_id": 751,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "330",
                "name": "leaflet.js",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        45",
                "description": "<p><a href='http://leafletjs.com'><b>Leaflet.js</b></a> is a JavaScript library for mobile-friendly interactive maps. The library places a huge emphasis on performance, usability and simplicity, and as such works efficiently across mobile platforms and desktop browsers. It is a viable library to consider when building interactive maps for mobiles.</p>",
                "radarId": 76,
                "id": "en_2015-01_751",
                "blip_selector": "leaflet-js"
            },
            {
                "blip_id": 760,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "190",
                "name": "Packer",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        38",
                "description": "<p>We featured 'Machine image as a build artifact' in the last Radar, as an excellent way to implement fast spin-up, immutable servers. The thing holding this technique back was the difficulty in building images, especially when targeting more than one platform. <a href='http://packer.io'><b>Packer</b></a>&nbsp;solves this, using your configuration management tool of choice to create images for a number of platforms including AWS, Rackspace, DigitalOcean and even Docker and Vagrant, although we have found the VMWare support to be problematic.</p>",
                "radarId": 63,
                "id": "en_2015-01_760",
                "blip_selector": "packer"
            },
            {
                "blip_id": 814,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "312",
                "name": "Packet beat",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        30",
                "description": "",
                "radarId": 78,
                "id": "en_2015-01_814",
                "blip_selector": "packet-beat"
            },
            {
                "blip_id": 718,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "187",
                "name": "Xamarin",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        5",
                "description": "",
                "radarId": 70,
                "id": "en_2015-01_718",
                "blip_selector": "xamarin"
            },
            {
                "blip_id": 781,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "178",
                "name": "Canary builds",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        174",
                "description": "",
                "radarId": 4,
                "id": "en_2015-01_781",
                "blip_selector": "canary-builds"
            },
            {
                "blip_id": 804,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "291",
                "name": "U2F",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        264",
                "description": "",
                "radarId": 48,
                "id": "en_2015-01_804",
                "blip_selector": "u2f"
            },
            {
                "blip_id": 827,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "321",
                "name": "React.js",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        310",
                "description": "<p>One benefit to the ongoing&nbsp;avalanche of front-end JavaScript frameworks is that occasionally, a new&nbsp;idea crops up that makes us think. &nbsp;<strong>React.js</strong> is a UI/View framework in which&nbsp;JavaScript functions&nbsp;generate HTML in a reactive data flow. &nbsp;Although we are wary of mixing code and markup, it results in UI components that are nicely encapsulated and composable. &nbsp;React.js is getting a lot of developer attention and will benefit&nbsp;from more tools and examples<strong><strong><strong><strong>&nbsp;</strong></strong></strong></strong>becoming available.</p>",
                "radarId": 99,
                "id": "en_2015-01_827",
                "blip_selector": "react-js"
            },
            {
                "blip_id": 779,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "290",
                "name": "TOTP Two-Factor Authentication",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        259",
                "description": "<p><b>Two-factor authentication</b> significantly improves security over simple password-based systems. <a href='http://tools.ietf.org/html/rfc6238'>RFC 6238</a> -- <a href='http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm'>Time-based One-Time Password</a> Algorithm -- is a standard for two-factor authentication. 'Standard' authenticator apps from <a href='https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2'>Google</a> and <a href='http://www.windowsphone.com/en-us/store/app/authenticator/e7994dbc-2336-4950-91ba-ca22d653759b'>Microsoft</a> provide tokens to smartphone users, and there are a number of other client and server implementations readily available. With providers such as Google, Facebook, Dropbox and Evernote using <b>TOTP</b>, there really is no excuse to continue using simple password-based authentication where stronger security would be appropriate.</p>",
                "radarId": 47,
                "id": "en_2015-01_779",
                "blip_selector": "totp-two-factor-authentication"
            },
            {
                "blip_id": 728,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "190",
                "name": "Appium",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        86",
                "description": "<p>Mobile test automation is becoming increasingly important. <a href='http://appium.io'><b>Appium</b></a> is a test automation framework that can test mobile web, mobile native and mobile hybrid applications on iOS and Android. We have used this in multiple projects and have seen significant gains.&nbsp;At the core, Appium is a webserver that exposes a REST API, receiving connections from a client, listening for commands, executing those commands on a mobile device and responding with an HTTP response representing the result of the command execution. It allows tests to be written against iOS and Android&nbsp;using the same API. Appium is open source with easy setup using npm.</p>",
                "radarId": 53,
                "id": "en_2015-01_728",
                "blip_selector": "appium"
            },
            {
                "blip_id": 798,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "311",
                "name": "MariaDB",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        227",
                "description": "",
                "radarId": 41,
                "id": "en_2015-01_798",
                "blip_selector": "mariadb"
            },
            {
                "blip_id": 749,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "200",
                "name": "Inverse Conway Maneuver",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        142",
                "description": "<p>Conway's Law asserts that organizations are constrained to produce application designs which are copies of their communication structures. This often leads to unintended friction points. The '<b>Inverse Conway Maneuver</b>' recommends evolving your team and organizational structure to promote your desired architecture. Ideally your technology architecture will display isomorphism with your business architecture.</p>",
                "radarId": 9,
                "id": "en_2015-01_749",
                "blip_selector": "inverse-conway-maneuver"
            },
            {
                "blip_id": 734,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "375",
                "name": "Separate DevOps team",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        117",
                "description": "",
                "radarId": 28,
                "id": "en_2015-01_734",
                "blip_selector": "separate-devops-team"
            },
            {
                "blip_id": 767,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "182",
                "name": "Q & Bluebird",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        337",
                "description": "<p><a href='https://github.com/kriskowal/q'><b>Q</b></a> is a fully Promises/A+ compliant implementation in JavaScript that lets users compose promises arbitrarily deeply without the need for the deeply nested callbacks that obscure control flow. Q takes care of threading fulfilled values and rejected promises through the appropriate code paths. The space of Promises/A+ compliant libraries is currently very active with alternatives like <a href='https://github.com/petkaantonov/bluebird'><b>Bluebird</b></a> also rapidly gaining mindshare.</p>",
                "radarId": 93,
                "id": "en_2015-01_767",
                "blip_selector": "q-bluebird"
            },
            {
                "blip_id": 761,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "248",
                "name": "Pact & Pacto",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        34",
                "description": "<p>Consumer-Driven Contracts are a testing approach to help service interfaces evolve with confidence without unknowingly breaking consumers. The similarly named <a href='https://github.com/realestate-com-au/pact'><b>Pact</b></a> and <a href='http://thoughtworks.github.io/pacto'><b>Pacto</b></a> are two new open-source tools which allow testing interactions between service providers and consumers in isolation against a contract. Both have grown out of projects which are building RESTful microservices and show great promise.</p>",
                "radarId": 64,
                "id": "en_2015-01_761",
                "blip_selector": "pact-pacto"
            },
            {
                "blip_id": 789,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "290",
                "name": "Enterprise Data Lake",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        135",
                "description": "",
                "radarId": 19,
                "id": "en_2015-01_789",
                "blip_selector": "enterprise-data-lake"
            },
            {
                "blip_id": 790,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "375",
                "name": "Long lived branches with Gitflow",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        162",
                "description": "",
                "radarId": 23,
                "id": "en_2015-01_790",
                "blip_selector": "long-lived-branches-with-gitflow"
            },
            {
                "blip_id": 714,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "180",
                "name": "Docker",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        67",
                "description": "<p>Since our last radar, <a href='https://www.docker.com/'><strong>Docker</strong></a> has hit 1.0 and has been declared production ready by the authors. During this same period we have seen an explosion of tools based on Docker. We now have PAAS solutions in the form of <a href='http://deis.io/'>Deis</a>, cluster management in <a href='https://coreos.com/using-coreos/clustering/'>CoreOS</a> and&nbsp;<a href='https://github.com/googlecloudplatform/kubernetes'>Kubernetes</a>, and <a href='http://msopentech.com/blog/2014/08/28/docker-containers-on-microsoft-azure-with-kubernetes-visualizer/'>Microsoft</a>, <a href='https://cloud.google.com/compute/docs/containers'>Google</a>,&nbsp;<a href='http://aws.amazon.com/blogs/aws/cloud-container-management/'>AWS</a>&nbsp;and&nbsp;a host of smaller players&nbsp;are offering or will shortly offer&nbsp;Docker hosting. Microsoft is even <a href='http://www.zdnet.com/docker-container-support-coming-to-microsofts-next-windows-server-release-7000034708/'>looking to support Docker</a> in their next version of Windows Server.&nbsp;Aside from all this change, Docker is being used in anger now by many people, for dev &amp; test and for production loads.&nbsp;We fully expect to see a large pace of change in the Docker ecosystem over&nbsp;the next year, and strongly suggest you take a look at what Docker could offer your own organisation.</p>",
                "radarId": 57,
                "id": "en_2015-01_714",
                "blip_selector": "docker"
            },
            {
                "blip_id": 818,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "162",
                "name": "Django Rest",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        300",
                "description": "",
                "radarId": 88,
                "id": "en_2015-01_818",
                "blip_selector": "django-rest"
            },
            {
                "blip_id": 732,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "327",
                "name": "Consul",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        75",
                "description": "<p><a href='http://consul.io'><b>Consul</b></a> makes it simple for services to register themselves and discover other services via DNS or HTTP. It scales automatically, with service look up locally or across data centers. Consul also provides a flexible key/value store for dynamic configuration, with notification of configuration changes. The internal gossip protocol used by Consul is powered by the <a href='http://serfdom.io'>Serf</a> library, leveraging and building upon the membership and failure detection features.</p>",
                "radarId": 72,
                "id": "en_2015-01_732",
                "blip_selector": "consul"
            },
            {
                "blip_id": 813,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "310",
                "name": "Gorilla REPL",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        60",
                "description": "<p><strong><a href='http://gorilla-repl.org/'>GorillaREPL</a></strong> is a tool for creating nicely-rendered documents consisting of text,&nbsp;live Clojure code, and plots. &nbsp;In some ways similar to iPython notebooks, GorillaREPL should be particularly useful for data analysts or code&nbsp;tutorials. &nbsp;But beyond that, GorillaREPL is fun!. &nbsp;It is a creative way to&nbsp;demonstrate&nbsp;the power&nbsp;of Clojure’s simple abstractions over immutable values.&nbsp;</p>",
                "radarId": 74,
                "id": "en_2015-01_813",
                "blip_selector": "gorilla-repl"
            },
            {
                "blip_id": 799,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "337",
                "name": "Netflix OSS Full stack",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        232",
                "description": "",
                "radarId": 42,
                "id": "en_2015-01_799",
                "blip_selector": "netflix-oss-full-stack"
            },
            {
                "blip_id": 801,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "300",
                "name": "OpenAM",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        238",
                "description": "<p>When Oracle ceased&nbsp;development on&nbsp;Sun’s OpenSSO—an open source access management platform—It was picked up by ForgeRock and integrated into their Open Identity Suite. &nbsp;Now named <strong><a href='http://forgerock.com/products/open-identity-stack/openam/'>OpenAM</a></strong>, it fills the niche for a scalable, open-source platform that supports a variety of federated identity&nbsp;standards, including OpenID Connect and SAML 2.0. &nbsp;These standards are a necessary enabler for secure microservice implementations.</p>",
                "radarId": 43,
                "id": "en_2015-01_801",
                "blip_selector": "openam"
            },
            {
                "blip_id": 744,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "51",
                "name": "GoCD",
                "ring": "Adopt",
                "volume_date": "2015-01",
                "theta": "        30",
                "description": "",
                "radarId": 52,
                "id": "en_2015-01_744",
                "blip_selector": "gocd"
            },
            {
                "blip_id": 794,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "375",
                "name": "Security sandwich",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        126",
                "description": "<p>Traditional approaches to security have relied on up-front specification followed by validation at the end. This <strong>“Security Sandwich”</strong> approach is hard to integrate into Agile teams, since much of the design happens throughout the process, and it does not leverage the automation opportunities provided by continuous delivery. Organizations should look at how they can inject security practices throughout the agile development cycle. This includes: evaluating the right level of Threat Modeling to do up-front; when to classify security concerns as their own stories, acceptance criteria, or cross-cutting non-functional requirements; including automatic static and dynamic security testing into your build pipeline; and how to include deeper testing, such as penetration testing, into releases in&nbsp;a continuous delivery&nbsp;model. In much the same way that DevOps has recast how historically adversarial&nbsp;groups can work together, the same is happening for security and development professionals.&nbsp;</p>",
                "radarId": 27,
                "id": "en_2015-01_794",
                "blip_selector": "security-sandwich"
            },
            {
                "blip_id": 802,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "305",
                "name": "SDN",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        248",
                "description": "",
                "radarId": 45,
                "id": "en_2015-01_802",
                "blip_selector": "sdn"
            },
            {
                "blip_id": 795,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "312",
                "name": "Linux security modules",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        217",
                "description": "",
                "radarId": 39,
                "id": "en_2015-01_795",
                "blip_selector": "linux-security-modules"
            },
            {
                "blip_id": 787,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "320",
                "name": "Append-only data store",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        165",
                "description": "",
                "radarId": 17,
                "id": "en_2015-01_787",
                "blip_selector": "append-only-data-store"
            },
            {
                "blip_id": 747,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "255",
                "name": "Humane registry",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        148",
                "description": "<p>A Microservice architecture by its very nature increases significantly the number of applications, services, and interactions in your deployed environments. Our projects are showing renewed focus on building <a href='http://martinfowler.com/bliki/HumaneRegistry.html'><b>Humane Registries</b></a> which aggregate information about running services from the live environment and present it in a form for humans to comprehend. These registries favor up-to-date information from running services instead of human-curated documentation.</p>",
                "radarId": 8,
                "id": "en_2015-01_747",
                "blip_selector": "humane-registry"
            },
            {
                "blip_id": 752,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "180",
                "name": "Living CSS Style Guides",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        135",
                "description": "<p>A <b>living CSS style guide</b> is a page on your site that uses your current CSS styles and acts as a reference for all the currently available visual elements and design patterns. This helps to tightly integrate design into your delivery process by promoting co-ownership of the UI and avoids duplication of styling across your application. Styling changes are visible in the guide immediately and changes propagate across your site from a central location. A sensible way to do this is with a well organized SASS/LESS file structure with semantically named elements that separates structure, aesthetics, and interaction.</p>",
                "radarId": 10,
                "id": "en_2015-01_752",
                "blip_selector": "living-css-style-guides"
            },
            {
                "blip_id": 748,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "192",
                "name": "iBeacon",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        240",
                "description": "<p><b>iBeacons</b> are the Apple implementation of the broader category of beacons, which are small devices that use low energy Bluetooth (BLE) to provide fine-grained proximity information for mobile phones and other devices. Despite the hype surrounding iBeacons and the limitations to the accuracy and reliability of the information they provide, we do feel that they open interesting opportunities as trigger points for interacting with your users in a contextually relevant manner.</p>",
                "radarId": 32,
                "id": "en_2015-01_748",
                "blip_selector": "ibeacon"
            },
            {
                "blip_id": 777,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "237",
                "name": "Tailored Service Template",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        97",
                "description": "<p>We see multiple organizations creating a <b>Tailored Service Template</b> which can be used to quickly seed new services, pre-configured to operate within that organization's production environment. The template contains a default set of decisions such as web frameworks, logging, monitoring, build, packaging, and deployment approaches. This is a very useful technique for encouraging collaborative evolution while retaining lightweight governance.</p>",
                "radarId": 16,
                "id": "en_2015-01_777",
                "blip_selector": "tailored-service-template"
            },
            {
                "blip_id": 808,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "193",
                "name": "Gitlab",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        53",
                "description": "",
                "radarId": 60,
                "id": "en_2015-01_808",
                "blip_selector": "gitlab"
            },
            {
                "blip_id": 727,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "218",
                "name": "AngularJS",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        277",
                "description": "<p>We continue to see JavaScript frameworks as a useful way to structure code and bring better coding techniques to JavaScript. <b>AngularJS</b> is used widely by Thoughtworks projects. However, we are a bit concerned about the future of the framework. &nbsp;The 2.0 version&nbsp;currently under development represents a ground-up&nbsp;redesign that some might not be happy with. &nbsp;Without an evolutionary migration path, maintainers of existing AngularJS&nbsp;applications will be forced to either live with an unsupported version or undertake a large rewrite. &nbsp;We advise teams to first assess their requirements to understand if a single-page JavaScript application is really necessary. &nbsp;In many cases, a traditional page-model app&nbsp;is simpler to write and easier to maintain. &nbsp;Remember that there are&nbsp;other good alternatives to AngularJS,&nbsp;such as Ember.js,&nbsp;Knockout.js, and&nbsp;React.js.</p>",
                "radarId": 85,
                "id": "en_2015-01_727",
                "blip_selector": "angularjs"
            },
            {
                "blip_id": 758,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "375",
                "name": "OSGi",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        240",
                "description": "",
                "radarId": 50,
                "id": "en_2015-01_758",
                "blip_selector": "osgi"
            },
            {
                "blip_id": 823,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "307",
                "name": "Flight.js",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        280",
                "description": "<p>In the crowded space of JavaScript frameworks, we want to highlight <a href='https://flightjs.github.io/'><strong>Flight.js</strong></a> as an alternative to consider. Flight is extremely lightweight and gets by without much magic when adding behavior to DOM nodes. Its event-driven and component-based nature promotes writing decoupled code. This makes testing individual components comparatively easy. Care must be taken, however, when components need to interact with each other. &nbsp;There is little support for testing and a real danger to get into <em>event hell</em>. We do like that it uses functional mixins for behaviour, like composition instead of inheritance.</p>",
                "radarId": 96,
                "id": "en_2015-01_823",
                "blip_selector": "flight-js"
            },
            {
                "blip_id": 741,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "90",
                "name": "Flyway",
                "ring": "Adopt",
                "volume_date": "2015-01",
                "theta": "        60",
                "description": "<p>With techniques such as continuous delivery becoming more mainstream, automated database migrations are a baseline capability&nbsp;for many software teams. While&nbsp;there are many tools in this space, we continue to recommend <strong>Flyway</strong> for its low-friction approach. Flyway has a vibrant open-source community behind it, and support for both traditional and cloud-based databases such as Amazon Redshift and Google Cloud SQL.</p>",
                "radarId": 51,
                "id": "en_2015-01_741",
                "blip_selector": "flyway"
            },
            {
                "blip_id": 816,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "375",
                "name": "Citrix for development",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        45",
                "description": "",
                "radarId": 82,
                "id": "en_2015-01_816",
                "blip_selector": "citrix-for-development"
            },
            {
                "blip_id": 821,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "232",
                "name": "Retrofit",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        352",
                "description": "",
                "radarId": 95,
                "id": "en_2015-01_821",
                "blip_selector": "retrofit"
            },
            {
                "blip_id": 770,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "331",
                "name": "Roslyn",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        23",
                "description": "<p><b>Roslyn</b>, a .NET compiler platform under the Apache License 2.0, is a next-generation set of compilers for C# and VB.NET written entirely as managed code. It provides access to the compiler as a service and includes code analysis APIs allowing developers to access information from the compiler that was previously treated as a black box, for example syntactic and semantic models. The most immediate impact should be seen in enhancements to .NET IDEs through refactoring and code generation tools. We also expect to see improved code diagnostics and static analysis, although it will be interesting to see what the community comes up with. Meanwhile Xamarin has a Mono-compatible copy of Roslyn source code hosted on GitHub and plans to bundle Roslyn’s compilers with Mono as it stabilizes, in addition to integrating the best parts into their code base.</p>",
                "radarId": 79,
                "id": "en_2015-01_770",
                "blip_selector": "roslyn"
            },
            {
                "blip_id": 739,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "293",
                "name": "EventStore",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        206",
                "description": "<p>Given the popularity of event sourcing, it is no surprise that tools in this space are maturing. <a href='http://geteventstore.com'><b>EventStore</b></a> is an open source functional database for storing immutable events and performing complex event processing on the event streams. Unlike other tools in this space, EventStore exposes event streams as Atom collections which therefore require no special infrastructure such as message buses or highly specialized clients to use.&nbsp;</p>",
                "radarId": 37,
                "id": "en_2015-01_739",
                "blip_selector": "eventstore"
            },
            {
                "blip_id": 785,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "240",
                "name": "Partition infrastructure along team bounds",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        116",
                "description": "<p>Many of our customers have made DevOps a reality in their organization with delivery teams that build, deploy, and support their own applications and services. &nbsp;Unfortunately, a regular roadblock on that journey is allowing teams to have superuser privileges in production environments. &nbsp;In most organizations, the production environment is shared, and therefore risky to provide access widely. &nbsp;It is effective when we can <strong>partition infrastructure along team bounds,</strong> so that those teams can have safe isolated access to do their work, without risking impact to other systems. &nbsp;Where cloud environments are used, this is much easier to implement, aligning account structures to team boundaries.&nbsp;</p>",
                "radarId": 13,
                "id": "en_2015-01_785",
                "blip_selector": "partition-infrastructure-along-team-bounds"
            },
            {
                "blip_id": 764,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "90",
                "name": "Forward Secrecy",
                "ring": "Adopt",
                "volume_date": "2015-01",
                "theta": "        135",
                "description": "<p><b>Forward Secrecy</b> (sometimes known as 'Perfect Forward Secrecy' or PFS) is a cryptographic technique that protects previous communications sessions even if a server’s master keys are later compromised. Despite being simple to enable for HTTPS connections, many servers are not configured this way, and we recommend enabling forward secrecy to improve security. Note that we don't generally like the word 'perfect' when used to describe cryptographic protocols -- even the best protocol can be broken by a flaw in implementation, random number generator, or by advances in cryptanalytic techniques. Even so, it is important to enable the best security available, while&nbsp;keeping informed of new attacks and protocol improvements.</p>",
                "radarId": 2,
                "id": "en_2015-01_764",
                "blip_selector": "forward-secrecy"
            },
            {
                "blip_id": 769,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "170",
                "name": "REST without PUT",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        110",
                "description": "<p>In the last radar we talked about Capturing Explicit Domain Events, putting emphasis on recording the business-meaningful events that have triggered state transitions instead of just CRUD'ing entities. REST interfaces commonly use PUT to update resource state, however it's often better to POST to record a new event resource which captures intent. <b>REST without PUT </b>has a side-benefit of separating command and query interfaces and forces consumers to allow for eventual consistency.</p>",
                "radarId": 14,
                "id": "en_2015-01_769",
                "blip_selector": "rest-without-put"
            },
            {
                "blip_id": 775,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "314",
                "name": "Spring Boot",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        340",
                "description": "<p><a href='http://projects.spring.io/spring-boot'><b>Spring boot</b></a> allows easy set up of standalone Spring-based applications. It's ideal for pulling up new microservices and easy to deploy. It also makes data access less of a pain due to the hibernate mappings with much less boilerplate code.</p>",
                "radarId": 102,
                "id": "en_2015-01_775",
                "blip_selector": "spring-boot"
            },
            {
                "blip_id": 817,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "257",
                "name": "Dashing",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        292",
                "description": "",
                "radarId": 87,
                "id": "en_2015-01_817",
                "blip_selector": "dashing"
            },
            {
                "blip_id": 782,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "250",
                "name": "Hipster batch",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        155",
                "description": "<p>There has been a lot of recent attention to the use of ATOM-style event feeds over HTTP as a method of integration. &nbsp;Instead of maintaining&nbsp;a live service to expose those feeds, it is often acceptable to use old-style scheduled batch processing to create and publish feed files. &nbsp;When combined with cloud technology like Amazon's S3 file storage and hypermedia linking, this can create a highly available, yet simple and testable solution. &nbsp;Our teams have started to call this old-meets-new approach '<strong>Hipster batch</strong>'.</p>",
                "radarId": 7,
                "id": "en_2015-01_782",
                "blip_selector": "hipster-batch"
            },
            {
                "blip_id": 805,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "227",
                "name": "Boot2docker",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        81",
                "description": "",
                "radarId": 54,
                "id": "en_2015-01_805",
                "blip_selector": "boot2docker"
            },
            {
                "blip_id": 683,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "lastModified": "41640",
                "radius": "375",
                "name": "JSF",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        315",
                "description": "",
                "radarId": 104,
                "id": "en_2015-01_683",
                "blip_selector": "jsf"
            },
            {
                "blip_id": 729,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "330",
                "name": "ARM Server SoC",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        190",
                "description": "<p>AMD recently released an <a href='http://www.anandtech.com/show/7989/amd-announces-project-skybridge-pincompatible-arm-and-x86-socs-in-2015'>8-core <b>ARM SoC</b> (System on a Chip)</a> designed for servers and has committed to releasing an ARM SoC with integrated graphics in 2015. ARM-based servers are an interesting alternative to x86 because they are significantly more energy efficient. For some workloads, building an ARM-powered Cloud is preferable.</p>",
                "radarId": 34,
                "id": "en_2015-01_729",
                "blip_selector": "arm-server-soc"
            },
            {
                "blip_id": 824,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "330",
                "name": "Haskell Hadoop library",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        290",
                "description": "",
                "radarId": 97,
                "id": "en_2015-01_824",
                "blip_selector": "haskell-hadoop-library"
            },
            {
                "blip_id": 819,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "262",
                "name": "Ionic Framework",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        315",
                "description": "",
                "radarId": 90,
                "id": "en_2015-01_819",
                "blip_selector": "ionic-framework"
            },
            {
                "blip_id": 705,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "375",
                "name": "Velocity as productivity",
                "ring": "Hold",
                "volume_date": "2015-01",
                "theta": "        99",
                "description": "<p>We continue to see teams and organizations equating velocity with productivity. When properly used, velocity allows the incorporation of \\”yesterday's weather\\”&nbsp;into a team’s internal iteration planning process. The key here is that velocity is an internal measure for a team, it is just a capacity estimate for that given team at that given time. Organizations and managers who equate internal velocity with external productivity start to set targets for velocity, forgetting that what actually matters is working software in production. Treating <b>velocity as productivity</b> leads to unproductive team behaviors that optimize this metric at the expense of actual working software.</p>",
                "radarId": 30,
                "id": "en_2015-01_705",
                "blip_selector": "velocity-as-productivity"
            },
            {
                "blip_id": 731,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "288",
                "name": "CoAP",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        195",
                "description": "<p><a href='http://coap.technology/'><b>CoAP</b></a> is an open standards communication protocol for the Internet of Things (IoT). While there is currently a proliferation of competing standards in the IoT space, we particularly like CoAP. It is specifically designed for resource-constrained devices and local radio networks. It uses UDP for transport, but is semantically compatible with HTTP. CoAP uses a web-based model of devices with their own URLs and a request-response paradigm that supports RESTful and decentralized approaches.</p>",
                "radarId": 35,
                "id": "en_2015-01_731",
                "blip_selector": "coap"
            },
            {
                "blip_id": 759,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "317",
                "name": "Pace-layered Application Strategy",
                "ring": "Assess",
                "volume_date": "2015-01",
                "theta": "        105",
                "description": "<p>Gartner's <strong>Pace-layered Application Strategy</strong> approach to architecture attempts to articulate the fact that decisions about architecture should not be a one-size fits all approach. Instead, it is important to take a balanced view of&nbsp;your technology portfolio. We have qualms about some of the prescriptive recommendations that come with Pace. In particular, we have&nbsp;found some situations where the layering concept is too simplistic. That said, we believe the core idea that different components and systems within an architecture need&nbsp;to change at different paces is sound.</p>",
                "radarId": 21,
                "id": "en_2015-01_759",
                "blip_selector": "pace-layered-application-strategy"
            },
            {
                "blip_id": 746,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "225",
                "name": "HAL",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        307",
                "description": "<p>We see lots of teams creating RESTful interfaces without paying any attention to hypermedia. <a href='http://stateless.co/hal_specification.html'><b>HAL</b></a> is a simple format for incorporating hyperlinks into JSON representations which is easy to implement and consume. HAL is well supported by libraries for parsing and representing JSON, and there are HAL-aware REST client libraries such as <a href='https://github.com/codegram/hyperclient'>Hyperclient</a> which make it easy to navigate resources by following links.</p>",
                "radarId": 89,
                "id": "en_2015-01_746",
                "blip_selector": "hal"
            },
            {
                "blip_id": 646,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41640",
                "radius": "245",
                "name": "Snowplow Analytics & Piwik",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        15",
                "description": "<p>With increasing scrutiny over the privacy of data, more companies are concerned about sharing web analytics with third parties. <b>Snowplow Analytics and Piwik</b> are examples of open-source analytics platforms that can be self-hosted and provide a promising feature set and roadmap.</p>",
                "radarId": 68,
                "id": "en_2015-01_646",
                "blip_selector": "snowplow-analytics-piwik"
            },
            {
                "blip_id": 711,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "100",
                "name": "Structured logging",
                "ring": "Adopt",
                "volume_date": "2015-01",
                "theta": "        113",
                "description": "",
                "radarId": 3,
                "id": "en_2015-01_711",
                "blip_selector": "structured-logging"
            },
            {
                "blip_id": 743,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "219",
                "name": "GenyMotion",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        57",
                "description": "<p>Device fragmentation in the Android world is often cited as a problem because it can be difficult to understand how your applications will behave on a large number of disparate platforms. <a href='http://genymotion.com'><b>GenyMotion</b></a> is an emulator which can mimic the characteristics of a number of different Android devices. Our teams have found this very effective in giving fast feedback for our Android applications.</p>",
                "radarId": 59,
                "id": "en_2015-01_743",
                "blip_selector": "genymotion"
            },
            {
                "blip_id": 809,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "lastModified": "42005",
                "radius": "205",
                "name": "IndexedDB",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        43",
                "description": "",
                "radarId": 62,
                "id": "en_2015-01_809",
                "blip_selector": "indexeddb"
            },
            {
                "blip_id": 733,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "lastModified": "41791",
                "radius": "253",
                "name": "Core Async",
                "ring": "Trial",
                "volume_date": "2015-01",
                "theta": "        285",
                "description": "<p>The Clojure <b>core.async</b> library allows asynchronous communication using channels, with similar syntax and capabilities to Google's Go language. The core.async library solves many common problems in an elegant way, cleaning up event callback setup and adding simple concurrency primitives. It also highlights one of the advantages of the Lisp nature of Clojure: channels add operators that are consistent with existing Clojure operators, seamlessly weaving new functionality into the language core. In addition, core.async is supported in both Clojure and ClojureScript (despite JavaScript's lack of threads), utilizing underlying platform abstractions to provide a consistent interface to both languages.</p>",
                "radarId": 86,
                "id": "en_2015-01_733",
                "blip_selector": "core-async"
            }
        ]
    },
    {
        "date": "2015-05",
        "blips": [
            {
                "blip_id": 784,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "NoPSD",
                "display_name": "NoPSD",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "135",
                "tag": null,
                "description": "<p><a href=\"https://www.thoughtworks.com/p2magazine/issue02/continuous-design/\"><strong>NoPSD</strong></a> is a movement to integrate design activities into the iterative feedback cycles required to build great software. The name aims to dislodge the PSD as the final canonical design artifact rather than taking a dig at the Adobe software. Instead of signing off on a pixel-perfect design specification at the start of a project, teams are urged to embrace Continuous Design: embedding designers into delivery teams, using lo-fi techniques for prototyping, and collaborating to refine the design in the target UI technology (normally HTML and CSS). This approach speeds responding to real user feedback, allows testing designs across multiple devices and form-factors, and embraces the dynamic nature of both digital products and the product creation process.</p>",
                "radarId": 8,
                "id": "en_2015-05_784",
                "blip_selector": "nopsd"
            },
            {
                "blip_id": 683,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "JSF",
                "display_name": "JSF",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "315",
                "tag": null,
                "description": "<p>We continue to see teams run into trouble using <strong>JSF</strong> - JavaServer Faces - and are recommending you avoid this technology. Teams seem to choose JSF because it is a Java EE standard without really evaluating whether the programming model suits them. We think JSF is flawed because its programming model encourages use of its own abstractions rather than fully embracing the underlying web model. JSF, like ASP.NET webforms, attempts to create stateful component trees on top HTML markup and the stateless HTTP protocol. The improvements in JSF 2.0 and 2.2, such as the introduction of stateless views and the promotion of GET, are steps in the right direction, maybe even an acknowledgement that the original model was flawed, but we feel this is a too little too late. Rather than dealing with the complexity of JSF we recommend teams use simple frameworks and work closely with web technologies including HTTP, HTML and CSS.</p>",
                "radarId": 92,
                "id": "en_2015-05_683",
                "blip_selector": "jsf"
            },
            {
                "blip_id": 803,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Text it as a service / Rapidpro.io",
                "display_name": "Text it as a service / Rapidpro.io",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "254",
                "tag": null,
                "description": "<p><strong>Text-it-as-a-service</strong> / <strong><a href=\"http://rapidpro.io/\">Rapidpro</a></strong> offers ability to easily set up or modify complex short message service application for business without extensive need of a developer. With the lower costs of text messages compared to USSD sessions, this provides a more affordable way to build scalable applications targeting feature phones and we have seen success in our projects. Flows are very simple to build and actions can be triggered at any point such as sending an sms, email or even calling an external api.</p>",
                "radarId": 42,
                "id": "en_2015-05_803",
                "blip_selector": "text-it-as-a-service-rapidpro-io"
            },
            {
                "blip_id": 732,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Consul",
                "display_name": "Consul",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "70",
                "tag": null,
                "description": "",
                "radarId": 54,
                "id": "en_2015-05_732",
                "blip_selector": "consul"
            },
            {
                "blip_id": 864,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "340",
                "name": "Spark Photon/Spark Electron",
                "display_name": "Spark Photon/Spark Electron",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "248",
                "tag": null,
                "description": "<p><strong><a href=\"https://www.spark.io/\">Spark</a></strong> is a full stack solution for cloud connected devices. <strong>Spark Photon</strong> is a microcontroller with wifi module. <strong>Spark Electron</strong> is a variant that connects to a cellular network. Spark OS adds REST API to the devices. This simplifies the entry to IoT and building your own connected devices.</p>",
                "radarId": 41,
                "id": "en_2015-05_864",
                "blip_selector": "spark-photon-spark-electron"
            },
            {
                "blip_id": 699,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "225",
                "name": "Datensparsamkeit",
                "display_name": "Datensparsamkeit",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "158",
                "tag": null,
                "description": "<p>The term <a href=\"http://martinfowler.com/bliki/Datensparsamkeit.html\"><strong>Datensparsamkeit</strong></a> is taken from German privacy legislation and describes the idea to only store as much personal information as is absolutely required for the business or applicable laws. Customer privacy continues to be a hot topic. Companies such as <a href=\"http://www.washingtonpost.com/blogs/the-switch/wp/2014/12/01/is-ubers-rider-database-a-sitting-duck-for-hackers/\">Uber are apparently collecting highly personal customer data, as well as being quite lax with security.</a> This is a disaster waiting to happen. Following datensparsamkeit or using <a href=\"https://en.wikipedia.org/wiki/De-identification\">de-identification</a> techniques even in jurisdictions where it is not legally mandated, can allow you to reduce the information you store. If you never store the information, you do not need to worry about someone stealing it.</p>",
                "radarId": 6,
                "id": "en_2015-05_699",
                "blip_selector": "datensparsamkeit"
            },
            {
                "blip_id": 863,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Time series databases",
                "display_name": "Time series databases",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "259",
                "tag": null,
                "description": "",
                "radarId": 43,
                "id": "en_2015-05_863",
                "blip_selector": "time-series-databases"
            },
            {
                "blip_id": 872,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Application Servers",
                "display_name": "Application Servers",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "202",
                "tag": null,
                "description": "",
                "radarId": 45,
                "id": "en_2015-05_872",
                "blip_selector": "application-servers"
            },
            {
                "blip_id": 756,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "163",
                "name": "Om",
                "display_name": "Om",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "320",
                "tag": null,
                "description": "<p>We have seen continued interest in <strong>Om</strong> , a ClojureScript wrapper around Facebook's ReactJS front-end programming framework. Om leverages the inherent immutability of ClojureScript, allowing automatic features like snapshots of UI state and undo. And due to the efficiency of ClojureScript's data structures, some Om applications run faster than identical ones based on the raw underlying React framework. The ecosystem of components and applications around Om is growing and our teams are starting to pick it up.</p>",
                "radarId": 82,
                "id": "en_2015-05_756",
                "blip_selector": "om"
            },
            {
                "blip_id": 818,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "162",
                "name": "Django REST",
                "display_name": "Django REST",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "290",
                "tag": null,
                "description": "<p>We have used the <a href=\"http://www.django-rest-framework.org/\">Django REST framework</a>, which is a flexible and customizable framework that makes it easy to build web APIs, in several of our projects. It allows you to build RESTful APIs in Python with Django, exposing API endpoints which are accessible from a consumer front-end. Django REST gives a browsable web API that allows developers to visualize data being transferred through the API and returns response examples, which the consumer application will receive. It provides a number of authentication schemes out of the box, and allows implementation of custom schemes.</p>",
                "radarId": 79,
                "id": "en_2015-05_818",
                "blip_selector": "django-rest"
            },
            {
                "blip_id": 850,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "Apache Kafka",
                "display_name": "Apache Kafka",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "84",
                "tag": null,
                "description": "",
                "radarId": 64,
                "id": "en_2015-05_850",
                "blip_selector": "apache-kafka"
            },
            {
                "blip_id": 816,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Citrix for development",
                "display_name": "Citrix for development",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "45",
                "tag": null,
                "description": "<p>For security and compliance reasons, offshore teams are sometimes asked to use <strong>Citrix</strong> to connect to an onshore virtual desktop, where they do <strong>development</strong>. While a good tool for some use cases, Citrix provides an extremely poor remote development experience and often cripples an offshore team. There are many better technical solutions, such as the NoMachine remote desktop or Cloud9 IDE, which can provide a more workable experience. An even better solution is to tackle the underlying security and compliance concerns. Since you are trusting the remote team to work on your source code and check in to your code repository, you should try to get to a point where you also trust them to have source code on their machines. They will be much more productive!</p>",
                "radarId": 76,
                "id": "en_2015-05_816",
                "blip_selector": "citrix-for-development"
            },
            {
                "blip_id": 692,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "SPDY",
                "display_name": "SPDY",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "247",
                "tag": null,
                "description": "",
                "radarId": 47,
                "id": "en_2015-05_692",
                "blip_selector": "spdy"
            },
            {
                "blip_id": 855,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Brighter",
                "display_name": "Brighter",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "77",
                "tag": null,
                "description": "<p><a href=\"https://www.goparamore.io/\"><strong>Brighter</strong></a> is an open source library for .Net that provides scaffolding to implement Command Invocation. We have had good feedback from teams using it, especially in conjunction with the ports and adaptors pattern and <strong>CQRS</strong>. They especially like that it integrates well with <strong>Polly</strong> to provide circuit breaking functionality.</p>",
                "radarId": 53,
                "id": "en_2015-05_855",
                "blip_selector": "brighter"
            },
            {
                "blip_id": 835,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Git based CMS/Git for non-code",
                "display_name": "Git based CMS/Git for non-code",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "124",
                "tag": null,
                "description": "<p>These days, most software developers are used to working with Git for source code control and collaboration. But Git can be used as a base mechanism for other circumstances where a group of people need to collaborate on textual documents (that can easily be merged). We’ve seen increasing amounts of projects use <a href=\"http://git-scm.com/\"><strong>Git</strong></a> as the basis for a lightweight <strong>CMS</strong> , with text-based editing formats. Git has powerful features for tracking changes and exploring alternatives, with a distributed storage model that is fast in use and tolerant of networking issues. The biggest problem with wider adoption is that Git isn’t very easy to learn for non-programmers, but we expect to see more tools that build on top of the core Git plumbing. Such tools simplify the workflow for specific audiences, such as content authors. We would also welcome more tools to support diffing and merging for non-textual documents.</p>",
                "radarId": 16,
                "id": "en_2015-05_835",
                "blip_selector": "git-based-cms-git-for-non-code"
            },
            {
                "blip_id": 792,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Programming in your CI/CD tool",
                "display_name": "Programming in your CI/CD tool",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "142",
                "tag": null,
                "description": "",
                "radarId": 21,
                "id": "en_2015-05_792",
                "blip_selector": "programming-in-your-ci-cd-tool"
            },
            {
                "blip_id": 834,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Phoenix Environments",
                "display_name": "Phoenix Environments",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "113",
                "tag": null,
                "description": "<p>The idea of <a href=\"http://martinfowler.com/bliki/PhoenixServer.html\">phoenix servers</a> is now well established and has brought many benefits when applied to the right kinds of problems, but what about the environment we deploy these servers into? The concept of <strong>Phoenix Environments</strong> can help. We can use automation to allow us to create whole environments, including network configuration, load balancing and firewall ports, for example by using <strong>CloudFormation</strong> in AWS. We can then prove that the process works, by tearing the environments down and recreating them from scratch on a regular basis. Phoenix Environments can support provisioning new environments for testing, development, UAT and so on. They can also simplify the provision of a disaster recovery environment. As with Phoenix Servers this pattern is not always applicable and we need to think about carefully about things like state and dependencies. Treating the whole environment as a <a href=\"http://martinfowler.com/bliki/BlueGreenDeployment.html\">green/blue deployment</a> can be one approach when environment reconfiguration needs to be done.</p>",
                "radarId": 17,
                "id": "en_2015-05_834",
                "blip_selector": "phoenix-environments"
            },
            {
                "blip_id": 807,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "240",
                "name": "Cursive",
                "display_name": "Cursive",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "63",
                "tag": null,
                "description": "<p><a href=\"https://cursiveclojure.com/\">Cursive</a> is a Clojure IDE that works as a plugin for IntelliJ. While still in early access, we have found it very useful when working with larger Clojure codebases. Cursive provides strong renaming and navigation support, has shown itself to be stable and reliable, and is great for environments with mixed JVM languages. For organizations adopting Clojure, Cursive has helped lower the barrier to entry for existing developers.</p>",
                "radarId": 55,
                "id": "en_2015-05_807",
                "blip_selector": "cursive"
            },
            {
                "blip_id": 837,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Flux",
                "display_name": "Flux",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "135",
                "tag": null,
                "description": "<p><a href=\"https://facebook.github.io/flux/\"><strong>Flux</strong></a> is an application architecture that Facebook has adopted for its web application development. Usually mentioned in conjunction with <strong>react.js</strong> , Flux is based on a one-way flow of data up through the rendering pipeline triggered by users or other external events modifying data stores. It’s been a while since we’ve seen any alternatives to the venerable model-view-* architectures and Flux embraces the modern web landscape of client-side JavaScript applications talking to multiple back-end services.</p>",
                "radarId": 15,
                "id": "en_2015-05_837",
                "blip_selector": "flux"
            },
            {
                "blip_id": 808,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "193",
                "name": "GitLab",
                "display_name": "GitLab",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "56",
                "tag": null,
                "description": "<p><strong>GitLab</strong> is an on-premise Git repository hosting platform that gives proprietary software development teams the familiar and ubiquitous workflow that hosted version control services like GitHub and BitBucket provide OSS developers. While it is available as free community edition software, the commercial enterprise option provides support and deep integration with LDAP servers.</p>",
                "radarId": 56,
                "id": "en_2015-05_808",
                "blip_selector": "gitlab"
            },
            {
                "blip_id": 852,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Origami",
                "display_name": "Origami",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "49",
                "tag": null,
                "description": "<p><strong><a href=\"https://facebook.github.io/origami/\">Origami</a></strong> is a free tool for designing user prototypes with a variety of keyboard shortcuts for common functions. It provides the possibility of exporting the prototypes as code snippets to Objective-C for iOS, Java for Android and JavaScript for Web. This tool can be used to rapidly build interactive user facing prototypes and testing user flows. We recommend investigating this tool if the use case fits from the experience we have gathered from several of our teams.</p>",
                "radarId": 69,
                "id": "en_2015-05_852",
                "blip_selector": "origami"
            },
            {
                "blip_id": 793,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "SAFe™",
                "display_name": "SAFe™",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "129",
                "tag": null,
                "description": "<p>Scaling agile across enterprises is a continuing challenge. Several approaches have been proposed, with <strong>SAFe™</strong> being one gaining significant mindshare. While SAFe™ provides a useful checklist for areas of concern, they are easy to misuse, by introducing the same kind of large release tendencies like the release train and gated control processes that agile removes. Enterprises in particular look for a degree of commonality across endeavors that SAFe™ seems to provide, promoting aggressive standardization when some degree of customization provides significant value. Other lean approaches that include experimentation and incorporate continuous improvement practices like the Improvement Katas offer organizations a better model for scaling agile.</p>\n\n<p>Scaled Agile Framework® and SAFe™ are trademarks of Scaled Agile, Inc.</p>",
                "radarId": 22,
                "id": "en_2015-05_793",
                "blip_selector": "safe"
            },
            {
                "blip_id": 860,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "REST-assured",
                "display_name": "REST-assured",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "28",
                "tag": null,
                "description": "",
                "radarId": 60,
                "id": "en_2015-05_860",
                "blip_selector": "rest-assured"
            },
            {
                "blip_id": 794,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Security sandwich",
                "display_name": "Security sandwich",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "116",
                "tag": null,
                "description": "<p>Traditional approaches to security have relied on up-front specification followed by validation at the end. This <strong>“Security Sandwich”</strong> approach is hard to integrate into Agile teams, since much of the design happens throughout the process, and it does not leverage the automation opportunities provided by continuous delivery. Organizations should look at how they can inject security practices throughout the agile development cycle. This includes: evaluating the right level of Threat Modeling to do up-front; when to classify security concerns as their own stories, acceptance criteria, or cross-cutting non-functional requirements; including automatic static and dynamic security testing into your build pipeline; and how to include deeper testing, such as penetration testing, into releases in a continuous delivery model. In much the same way that DevOps has recast how historically adversarial groups can work together, the same is happening for security and development professionals. (But despite our dislike of the Security Sandwich model, it is much better than not considering security at all, which is sadly still a common circumstance.)</p>",
                "radarId": 23,
                "id": "en_2015-05_794",
                "blip_selector": "security-sandwich"
            },
            {
                "blip_id": 630,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "125",
                "name": "Nancy",
                "display_name": "Nancy",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "315",
                "tag": null,
                "description": "",
                "radarId": 77,
                "id": "en_2015-05_630",
                "blip_selector": "nancy"
            },
            {
                "blip_id": 817,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "257",
                "name": "Dashing",
                "display_name": "Dashing",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "280",
                "tag": null,
                "description": "<p>The importance of big, visible displays in team areas has been written about many times before, and we certainly value the approach of helping everyone see and understand key pieces of information about how our software or our teams are doing. <a href=\"http://dashing.io/\">Dashing</a> is a Ruby-based dashboard system we have been using for many years to create clear, visible displays optimized for large monitors. It is very hackable, allowing you to pull in information from a variety of sources from build systems, ticket or story tracking tools, or production monitoring systems.</p>",
                "radarId": 78,
                "id": "en_2015-05_817",
                "blip_selector": "dashing"
            },
            {
                "blip_id": 846,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "280",
                "name": "Security Monkey",
                "display_name": "Security Monkey",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "7",
                "tag": null,
                "description": "",
                "radarId": 75,
                "id": "en_2015-05_846",
                "blip_selector": "security-monkey"
            },
            {
                "blip_id": 833,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Consumer-driven contract testing",
                "display_name": "Consumer-driven contract testing",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "162",
                "tag": null,
                "description": "",
                "radarId": 1,
                "id": "en_2015-05_833",
                "blip_selector": "consumer-driven-contract-testing"
            },
            {
                "blip_id": 779,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "TOTP Two-Factor Authentication",
                "display_name": "TOTP Two-Factor Authentication",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "252",
                "tag": null,
                "description": "<p>Passwords continue to be a poor mechanism for authenticating users and we’ve recently seen companies such as Yahoo! move to a “no passwords” solution—a one-time code is texted to your phone whenever you need to log in from a new browser. If you are still using passwords we recommend employing <strong>two-factor authentication</strong> which can significantly improve security. <a href=\"http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm\">Time-based One-Time Password</a> ( <strong>TOTP</strong> ) is the standard algorithm in this space, with free smartphone authenticator apps from <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2\">Google</a> and <a href=\"http://www.windowsphone.com/en-us/store/app/authenticator/e7994dbc-2336-4950-91ba-ca22d653759b\">Microsoft</a>.</p>",
                "radarId": 28,
                "id": "en_2015-05_779",
                "blip_selector": "totp-two-factor-authentication"
            },
            {
                "blip_id": 856,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Polly",
                "display_name": "Polly",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "35",
                "tag": null,
                "description": "<p>Several of our teams working on .Net projects have recommended <a href=\"https://github.com/michael-wolfenden/Polly\"><strong>Polly</strong></a> as being useful when building microservice based systems. It encourages the fluent expression of transient exception handling policies and the circuit breaker pattern including policies such as Retry, Retry Forever and Wait and Retry. Libraries already exist in other languages, Hystrix for Java for example, and Polly is a welcome addition from the .Net community.</p>",
                "radarId": 59,
                "id": "en_2015-05_856",
                "blip_selector": "polly"
            },
            {
                "blip_id": 849,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Prometheus",
                "display_name": "Prometheus",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "21",
                "tag": null,
                "description": "<p>SoundCloud have recently open sourced a Graphite replacement, <a href=\"http://prometheus.io/\"><strong>Prometheus</strong></a>. Developed as a reaction to difficulties with <strong>Graphite</strong> in their production systems, Prometheus works differently to Graphite, by primarily supporting a pull-based HTTP model (although a more Graphite-like push model is also supported). It also goes beyond Graphite by being built to support alerting based on captured metrics, so it becomes a much more active part of your operational toolset. Some caution should be used in adopting new technology in the production monitoring space, but early reports are that SoundCloud are happy using it in production, and Docker are also contributing to ongoing development.</p>",
                "radarId": 73,
                "id": "en_2015-05_849",
                "blip_selector": "prometheus"
            },
            {
                "blip_id": 796,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "321",
                "name": "Apache Mesos",
                "display_name": "Apache Mesos",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "190",
                "tag": null,
                "description": "<p><a href=\"http://mesos.apache.org/\">Mesos</a> is a platform that abstracts out underlying computing resources to make it easier to build massively scalable distributed systems. It can be used to provide a scheduling layer for Docker, or to act as an abstraction layer to things like AWS. Twitter has used it to great effect to help them scale their infrastructure. Tools build on top of Mesos are starting to appear such as <a href=\"http://nerds.airbnb.com/introducing-chronos/\">Chronos</a>, which is a distributed, fault tolerant cron replacement.</p>",
                "radarId": 30,
                "id": "en_2015-05_796",
                "blip_selector": "apache-mesos"
            },
            {
                "blip_id": 848,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Quick",
                "display_name": "Quick",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "14",
                "tag": null,
                "description": "",
                "radarId": 74,
                "id": "en_2015-05_848",
                "blip_selector": "quick"
            },
            {
                "blip_id": 866,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "CoreCLR and CoreFX",
                "display_name": "CoreCLR and CoreFX",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "195",
                "tag": null,
                "description": "",
                "radarId": 31,
                "id": "en_2015-05_866",
                "blip_selector": "coreclr-and-corefx"
            },
            {
                "blip_id": 847,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "pdfmake",
                "display_name": "pdfmake",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "35",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/bpampuch/pdfmake\">pdfmake</a></strong> is a JavaScript library which allows for creation and printing of PDF documents directly in the browser. To use pdfmake you construct a document object that supports structural elements such as tables, columns, and rich styling, then helper methods can create and print or download a PDF without leaving client-side JavaScript.</p>",
                "radarId": 71,
                "id": "en_2015-05_847",
                "blip_selector": "pdfmake"
            },
            {
                "blip_id": 838,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "Products over projects",
                "display_name": "Products over projects",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "113",
                "tag": null,
                "description": "<p>Most software development efforts are done using the mental model of a project, something that is planned, executed, and delivered within defined time-slots. Agile development challenged much of this model, replacing an up-front determination of requirements with an on-going discovery process that runs concurrently with development. Lean startup techniques, such as A/B testing of <a href=\"http://martinfowler.com/bliki/ObservedRequirement.html\">observed requirements</a>, further erode this mindset. We consider that most software efforts should follow the lead of <a href=\"https://info.thoughtworks.com/lean-enterprise-book.html\">Lean Enterprise</a> and consider themselves to be building products that support underlying business processes. Such products do not have a final delivery, rather an on-going process of exploring how best to support and optimize that business process which continues as long as the business is worthwhile. For these reasons we encourage organizations to think in terms of <strong>products rather than projects</strong>.</p>",
                "radarId": 10,
                "id": "en_2015-05_838",
                "blip_selector": "products-over-projects"
            },
            {
                "blip_id": 879,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Ember.js",
                "display_name": "Ember.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "282",
                "tag": null,
                "description": "",
                "radarId": 86,
                "id": "en_2015-05_879",
                "blip_selector": "ember-js"
            },
            {
                "blip_id": 819,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "262",
                "name": "Ionic Framework",
                "display_name": "Ionic Framework",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "300",
                "tag": null,
                "description": "<p><a href=\"http://ionicframework.com/\">Ionic framework</a> is an open-source front-end framework that offers a library of mobile-optimized HTML, CSS and JavaScript components and tools for building highly interactive applications. It is built with SASS and optimized for AngularJS. We have seen success in several of our projects employing this framework, with its ease to install and test. We recommend investigating this framework when you are performance obsessed and looking for a seamlessly integrated front-end framework.</p>",
                "radarId": 80,
                "id": "en_2015-05_819",
                "blip_selector": "ionic-framework"
            },
            {
                "blip_id": 825,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "336",
                "name": "Lotus",
                "display_name": "Lotus",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "321",
                "tag": null,
                "description": "<p>We don’t know who named <strong><a href=\"http://lotusrb.org/\">Lotus</a></strong>, but we can only assume they are too young to have worked with a certain office collaboration product. Lotus is a new Rack-based MVC framework written in Ruby that can be deployed modularly so that you are free to use only the portions of the framework you need. It is a modern alternative to the monolithic Ruby-on-Rails framework (that turned 10 this year). Lotus has the potential to make full-stack Ruby MVC development as easy as 1-2-3.</p>",
                "radarId": 89,
                "id": "en_2015-05_825",
                "blip_selector": "lotus"
            },
            {
                "blip_id": 744,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "51",
                "name": "GoCD",
                "display_name": "GoCD",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "54",
                "tag": null,
                "description": "<p>Continuously delivering high quality software to production in a rapid and reliable manner requires coordinating many automated steps. <a href=\"http://go.cd\"><strong>GoCD</strong></a> is an open-source tool built by ThoughtWorks to handle exactly this scenario, with the concept of deployment pipelines at its core, it handles complex workflows over many nodes and enables transparent, traceable promotion of trusted artifacts across environments. While it is possible to craft deployment pipelines on top of continuous integration tools, our teams see the benefit derived from a tool purpose built for this job.</p>",
                "radarId": 49,
                "id": "en_2015-05_744",
                "blip_selector": "gocd"
            },
            {
                "blip_id": 844,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "PlantUML",
                "display_name": "PlantUML",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "28",
                "tag": null,
                "description": "<p>Developing a software system by first creating a large number of detailed diagrams is an approach that, in our experience, does not compare favourably to the alternatives. However, describing a particularly complex and intricate part of the system with a diagram is usually a good idea, and the UML itself offers a number of useful and commonly understood diagrams. We like <a href=\"http://plantuml.sourceforge.net/\"><strong>PlantUML</strong></a>for creating these diagrams because it allows expressing the intent behind the diagrams in a clear textual form, without having to fiddle with overloaded graphical tools. Having a textual form also allows versioning and storage alongside the source code.</p>",
                "radarId": 72,
                "id": "en_2015-05_844",
                "blip_selector": "plantuml"
            },
            {
                "blip_id": 806,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "95",
                "name": "Composer",
                "display_name": "Composer",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "72",
                "tag": null,
                "description": "",
                "radarId": 48,
                "id": "en_2015-05_806",
                "blip_selector": "composer"
            },
            {
                "blip_id": 788,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Blockchain beyond bitcoin",
                "display_name": "Blockchain beyond bitcoin",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "158",
                "tag": null,
                "description": "<p>While the currency aspect of Bitcoin and other cryptocurrencies gets most of the news, we are equally excited about possibilities for using the <strong>Blockchain beyond bitcoin</strong> and financial transactions. The Blockchain is a mechanism for verifying the contents of a shared ledger without relying on a centralized service. We already see the Blockchain (either the underlying technology or the public Bitcoin Blockchain) being used at the heart of systems as varied as identity, ownership, record-keeping, voting, cloud storage and even managing networks of smart devices. If you are building systems that require trust over decentralized networks, then the Blockchain is a technology worth assessing.</p>",
                "radarId": 13,
                "id": "en_2015-05_788",
                "blip_selector": "blockchain-beyond-bitcoin"
            },
            {
                "blip_id": 623,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "55",
                "name": "Focus on mean time to recovery",
                "display_name": "Focus on mean time to recovery",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "144",
                "tag": null,
                "description": "<p>Traditionally operations groups look to improve the mean time between failures. While avoiding failures is obviously still important, lessons from cloud computing have taught us to expect failure and instead to <strong>focus on mean time to recovery</strong>. Continuous Delivery automation makes rolling out rapid fixes easier and we are also seeing a growth in monitoring techniques to spot failures quickly through a ‘production immune system’. Teams are also successfully using semantic monitoring and synthetic transactions to exercise production systems in non-destructive ways. This combined focus allows teams to move rapidly with higher confidence, it can also reduce the emphasis on expensive test-execution in pre-production environments and is particularly important in responding to the ever-growing list of security vulnerabilities that are being discovered.</p>",
                "radarId": 2,
                "id": "en_2015-05_623",
                "blip_selector": "focus-on-mean-time-to-recovery"
            },
            {
                "blip_id": 820,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "176",
                "name": "Nashorn",
                "display_name": "Nashorn",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "310",
                "tag": null,
                "description": "<p><strong>Nashorn</strong> is a new JavaScript engine for Java that has been released with Java 8. When the exact same code should be run in the web browser and on the server, which is often the case for validation and data migration logic, it is the tool of choice in the Java world, and that is the case despite some rough edges. We are not convinced that using Nashorn to host entire applications, via Node support or the Avatar project, is a good idea.</p>",
                "radarId": 81,
                "id": "en_2015-05_820",
                "blip_selector": "nashorn"
            },
            {
                "blip_id": 787,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Append-only data store",
                "display_name": "Append-only data store",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "169",
                "tag": null,
                "description": "<p>Immutable data structures are becoming more popular with functional languages such as Clojure providing immutability by default. Immutability allows code to be more easily written, read, and reasoned about. Using an <strong>append-only data store</strong> can confer some of these benefits in the database layer, as well as making audit and historical querying simple. Implementation options vary, from specific append-only data stores such as <a href=\"http://www.datomic.com/\">Datomic</a> to simply using an “append-don’t-update” approach with a traditional database.</p>",
                "radarId": 12,
                "id": "en_2015-05_787",
                "blip_selector": "append-only-data-store"
            },
            {
                "blip_id": 830,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Swift",
                "display_name": "Swift",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "347",
                "tag": null,
                "description": "<p>With some real-world experience under our belt, <a href=\"https://developer.apple.com/swift/\"><strong>Swift</strong></a> still shows a lot of promise. Some of the problems, like long compile times, are being addressed. However, continued language changes cause extra development effort and make building older versions of your own software burdensome. Testing and refactoring also remain painful. On balance, though, you should still consider Swift when starting new development projects for the Apple ecosystem.</p>",
                "radarId": 91,
                "id": "en_2015-05_830",
                "blip_selector": "swift"
            },
            {
                "blip_id": 843,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Bokeh/Vega",
                "display_name": "Bokeh/Vega",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "70",
                "tag": null,
                "description": "<p>In the world of data science and analytics, much of the work is done using Python and R, languages which sadly offer few options for web-accessible plotting of visualizations. One approach is to convert the result of analysis into something that can be easily visualized and interacted with in the browser. We’re aware of two tools that are an attempt to do this. <a href=\"http://bokeh.pydata.org/\"><strong>Bokeh</strong></a> is a Python and JavaScript library that allows you to create interactive visualizations “in the style of D3.js” but with high performance over large or streaming data sets. <a href=\"http://trifacta.github.io/vega/\"><strong>Vega</strong></a> is a declarative visualization grammar for D3 that consumes server-generated JSON datasets and translates visualization descriptions into D3.js code.</p>",
                "radarId": 66,
                "id": "en_2015-05_843",
                "blip_selector": "bokeh-vega"
            },
            {
                "blip_id": 877,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Offline first web applications",
                "display_name": "Offline first web applications",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "124",
                "tag": null,
                "description": "",
                "radarId": 9,
                "id": "en_2015-05_877",
                "blip_selector": "offline-first-web-applications"
            },
            {
                "blip_id": 776,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "241",
                "name": "Swagger",
                "display_name": "Swagger",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "21",
                "tag": null,
                "description": "<p><strong><a href=\"https://helloreverb.com/developers/swagger\">Swagger</a></strong><a href=\"https://helloreverb.com/developers/swagger\"><strong>2.0</strong></a> is a standard way to describe a RESTful API so that human-readable documentation and client examples can be generated automatically. The update to version 2.0 provides some significant flexibility enhancements and the list of tools for generating documentation continues to expand. There are also several alternatives to Swagger emerging from the vendor community, most significantly <a href=\"http://raml.org/\">RAML</a> and <a href=\"http://apiblueprint.org/\">API Blueprint</a>.</p>",
                "radarId": 61,
                "id": "en_2015-05_776",
                "blip_selector": "swagger"
            },
            {
                "blip_id": 814,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "312",
                "name": "Packetbeat",
                "display_name": "Packetbeat",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "42",
                "tag": null,
                "description": "<p>As distributed systems become more complex, it can be useful to have tools that help you understand how your system is behaving in production. <a href=\"https://www.elastic.co/beats/packetbeat\">Packetbeat</a> is an open source tool which uses agents to sniff traffic between nodes, allowing you to see traffic patterns, error rates and other useful information. It requires <a href=\"http://www.elasticsearch.org/overview/elasticsearch/\">Elasticsearch</a> and <a href=\"http://www.elasticsearch.org/overview/kibana/\">Kibana</a> to work, but if you are already using these tools as part of log aggregation, it could be an easy drop-in to give you more insight into your production system.</p>",
                "radarId": 70,
                "id": "en_2015-05_814",
                "blip_selector": "packetbeat"
            },
            {
                "blip_id": 711,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "100",
                "name": "Structured logging",
                "display_name": "Structured logging",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "108",
                "tag": null,
                "description": "<p>Treating logs as data gives us greater insight into the operational activity of the systems we build. <strong>Structured logging</strong> , which is using a consistent, predetermined message format containing semantic information, builds on this technique and enables tools such as Graylog2 and Splunk to yield deeper insights. We recommend adopting structured logging because the benefits outweigh the minimal effort involved and the practice is becoming the default standard.</p>",
                "radarId": 4,
                "id": "en_2015-05_711",
                "blip_selector": "structured-logging"
            },
            {
                "blip_id": 802,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "305",
                "name": "SDN",
                "display_name": "SDN",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "243",
                "tag": null,
                "description": "<p>Software Defined Networking ( <strong>SDN</strong> ) is a broad topic, but is becoming ever more important. The ability to configure our networking devices using software is blurring the lines of where our application deployments end. It encompasses everything from virtual networking appliances like AWS’ Load Balancers or <a href=\"https://github.com/coreos/flannel\">CoreOS’ Flannel</a>, to networking equipment that supports standards like <a href=\"https://www.opennetworking.org/sdn-resources/openflow\">OpenFlow</a>. Where cloud providers have previously focused on compute and storage, we expect the growing array of SDN tools to deliver further efficiencies to how we handle our systems both off and on premise.</p>",
                "radarId": 40,
                "id": "en_2015-05_802",
                "blip_selector": "sdn"
            },
            {
                "blip_id": 799,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "337",
                "name": "Netflix OSS Full stack",
                "display_name": "Netflix OSS Full stack",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "232",
                "tag": null,
                "description": "<p>While we are reluctant to recommend wholesale adoption of the <strong>Netflix OSS Full Stack</strong> unless you happen to be entering the globally distributed video streaming business, the stack is chock full of interesting ideas, complete with open source implementations. Some of the tools, Asgard for example, are highly coupled into a virtually turnkey architecture, making them challenging to use individually. Other tools like Ice and Hystrix, which we featured on the radar previously, can be used stand-alone. We think teams should understand the ideas and approaches encapsulated within the tools even when they choose not to leverage the full stack.</p>",
                "radarId": 38,
                "id": "en_2015-05_799",
                "blip_selector": "netflix-oss-full-stack"
            },
            {
                "blip_id": 734,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Separate DevOps team",
                "display_name": "Separate DevOps team",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "103",
                "tag": null,
                "description": "",
                "radarId": 24,
                "id": "en_2015-05_734",
                "blip_selector": "separate-devops-team"
            },
            {
                "blip_id": 809,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "205",
                "name": "IndexedDB",
                "display_name": "IndexedDB",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "42",
                "tag": null,
                "description": "",
                "radarId": 58,
                "id": "en_2015-05_809",
                "blip_selector": "indexeddb"
            },
            {
                "blip_id": 821,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "232",
                "name": "Retrofit",
                "display_name": "Retrofit",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "340",
                "tag": null,
                "description": "<p><a href=\"http://square.github.io/retrofit/\">Retrofit</a> offers a reliable way to build HTTP clients on Android projects by converting a REST API into a Java interface. Retrofit integrates with OkHttp and allows developers to provide custom error handling for requests. It does JSON parsing automatically using Gson and has a very well supported community.</p>",
                "radarId": 84,
                "id": "en_2015-05_821",
                "blip_selector": "retrofit"
            },
            {
                "blip_id": 862,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Apache Kylin",
                "display_name": "Apache Kylin",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "185",
                "tag": null,
                "description": "",
                "radarId": 29,
                "id": "en_2015-05_862",
                "blip_selector": "apache-kylin"
            },
            {
                "blip_id": 800,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "287",
                "name": "Jackrabbit Oak",
                "display_name": "Jackrabbit Oak",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "217",
                "tag": null,
                "description": "<p><a href=\"http://jackrabbit.apache.org/oak/\">Jackrabbit Oak</a>, formerly named Jackrabbit 3, is a scalable and performant implementation of hierarchical content repository for use as the foundation of content management system. In addition to file based storage solution, MongoDB and RDMS storage are also supported, and preferred in large volume use scenarios. Although implemented in Java, it can be easily accessed from various platforms via standards like JCR.</p>",
                "radarId": 35,
                "id": "en_2015-05_800",
                "blip_selector": "jackrabbit-oak"
            },
            {
                "blip_id": 836,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Reactive Architectures",
                "display_name": "Reactive Architectures",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "102",
                "tag": null,
                "description": "",
                "radarId": 18,
                "id": "en_2015-05_836",
                "blip_selector": "reactive-architectures"
            },
            {
                "blip_id": 797,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "311",
                "name": "CoreOS",
                "display_name": "CoreOS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "201",
                "tag": null,
                "description": "<p><strong>CoreOS</strong> is a Linux distribution designed to run large, scalable systems. All applications deployed on a CoreOS instance are run in separate Docker containers, and CoreOS provides a suite of tools to help manage them, including etcd their own distributed configuration store. Newer services, such as fleet, help cluster management by ensuring that a specific number of service instances are always kept running. FastPatch allows atomic CoreOS upgrades using an active-passive root partition scheme and helps with quick rollback in case of problems. These new developments make CoreOS well worth looking into if you are already comfortable with Docker.</p>",
                "radarId": 32,
                "id": "en_2015-05_797",
                "blip_selector": "coreos"
            },
            {
                "blip_id": 871,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Threat Modeling",
                "display_name": "Threat Modeling",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "102",
                "tag": null,
                "description": "<p>At this point the vast majority of development teams are aware of the importance of writing secure software and dealing with their users’ data in a responsible way. They do face a steep learning curve and a vast number of potential threats, ranging from organized crime and government spying to teenagers who attack systems 'for the lulz'. <a href=\"https://www.owasp.org/index.php/Category:Threat_Modeling\"><strong>Threat modeling</strong></a>is a set of techniques, mostly from a defensive perspective, that help understand and classify potential threats. When turned into 'evil user stories' this can give a team a manageable and effective approach to making their systems more secure.</p>",
                "radarId": 11,
                "id": "en_2015-05_871",
                "blip_selector": "threat-modeling"
            },
            {
                "blip_id": 735,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "172",
                "name": "DigitalOcean",
                "display_name": "DigitalOcean",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "234",
                "tag": null,
                "description": "<p>We have been using <a href=\"http://digitalocean.com\"><strong>DigitalOcean</strong></a> for basic compute infrastructure, and the service continues to impress us. If you need developer-friendly cloud infrastructure, it is worth a look.</p>",
                "radarId": 27,
                "id": "en_2015-05_735",
                "blip_selector": "digitalocean"
            },
            {
                "blip_id": 791,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Microservice envy",
                "display_name": "Microservice envy",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "155",
                "tag": null,
                "description": "",
                "radarId": 20,
                "id": "en_2015-05_791",
                "blip_selector": "microservice-envy"
            },
            {
                "blip_id": 790,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Long lived branches with Gitflow",
                "display_name": "Long lived branches with Gitflow",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "168",
                "tag": null,
                "description": "<p><strong>Gitflow</strong> is a strict branching pattern for releases using Git. Although not an inherently bad pattern, we often see it misused. If the feature and develop branches are short lived and merged often, you are really using the power of Git, which makes these activities easy. However, a problem we often see is that these become <strong>long lived branches</strong> , which results in the dreaded merge conflicts many people began using Git to escape. A merge is a merge. Regardless of the source control tool or pattern you use. If you wait more than a day or two to merge, you could hit a big merge conflict. This becomes a real issue if you have a larger team. If you have more than a few people waiting to merge, you can have a serious a bottleneck. Introducing patterns like Gitflow require the discipline to merge often to be successful. So by all means use the pattern, but only if you have the discipline to prevent long lived branches</p>",
                "radarId": 19,
                "id": "en_2015-05_790",
                "blip_selector": "long-lived-branches-with-gitflow"
            },
            {
                "blip_id": 773,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Apache Spark",
                "display_name": "Apache Spark",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "198",
                "tag": null,
                "description": "",
                "radarId": 25,
                "id": "en_2015-05_773",
                "blip_selector": "apache-spark"
            },
            {
                "blip_id": 869,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "287",
                "name": "H2O",
                "display_name": "H2O",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "211",
                "tag": null,
                "description": "<p>Predictive analytics are used in more and more products, often directly in end-user facing functionality. <a href=\"http://docs.0xdata.com/\"><strong>H2O</strong></a> is an interesting new open source package (with a startup behind it) that makes predictive analytics accessible to project teams due to its easy-to-use user interface. At the same time it integrates with the data scientists’ favourite tools, R and Python, as well as Hadoop and Spark. It offers great performance and, in our experience, easy integration at runtime, especially on JVM-based platforms.</p>",
                "radarId": 34,
                "id": "en_2015-05_869",
                "blip_selector": "h2o"
            },
            {
                "blip_id": 873,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Cloudera Impala",
                "display_name": "Cloudera Impala",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "216",
                "tag": null,
                "description": "",
                "radarId": 26,
                "id": "en_2015-05_873",
                "blip_selector": "cloudera-impala"
            },
            {
                "blip_id": 865,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Deis",
                "display_name": "Deis",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "206",
                "tag": null,
                "description": "",
                "radarId": 33,
                "id": "en_2015-05_865",
                "blip_selector": "deis"
            },
            {
                "blip_id": 789,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Enterprise Data Lake",
                "display_name": "Enterprise Data Lake",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "147",
                "tag": null,
                "description": "<p>An <strong>Enterprise Data Lake</strong> is an immutable data store of largely un-processed “raw” data, acting as a source for other processing streams but also made directly available to a significant number of internal, technical consumers using some efficient processing engine. Examples include HDFS or HBase within a Hadoop, Spark or Storm processing framework. We can contrast this with a typical system that collects raw data into some highly restricted space that is only made available to these consumers as the end result of a highly controlled ETL process.</p>\n\n<p>Embracing the concept of the data lake is about eliminating bottlenecks due to lack of ETL developer staffing or excessive up front data model design. It is about empowering developers to create their own data processing pipelines in an agile fashion when they need it and how they need it—within reasonable limits—and so has much in common with another model that we think highly of, the DevOps model.</p>",
                "radarId": 14,
                "id": "en_2015-05_789",
                "blip_selector": "enterprise-data-lake"
            },
            {
                "blip_id": 718,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "187",
                "name": "Xamarin",
                "display_name": "Xamarin",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "14",
                "tag": null,
                "description": "<p>We are excited by the progress made by <strong>Xamarin</strong> in offering a solid choice for building cross-platform mobile apps. It supports C# and F# as the primary languages with bindings to platform specific SDKs and the Mono runtime environment that works across iOS, Android and Windows Phone. Applications are compiled to native code giving apps a more native look and feel. When using this toolset, it is imperative that the platform specific UI tier be separated from the rest of the tiers to ensure code reuse across different platforms. The recent open-sourcing of the .NET platform should be beneficial for <strong>Xamarin</strong> both in allowing access to a broader set of .NET tooling and also making development easier on other operating systems.</p>",
                "radarId": 62,
                "id": "en_2015-05_718",
                "blip_selector": "xamarin"
            },
            {
                "blip_id": 795,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "312",
                "name": "Linux security modules",
                "display_name": "Linux security modules",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "222",
                "tag": null,
                "description": "",
                "radarId": 36,
                "id": "en_2015-05_795",
                "blip_selector": "linux-security-modules"
            },
            {
                "blip_id": 801,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "OpenAM",
                "display_name": "OpenAM",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "238",
                "tag": null,
                "description": "<p>When Oracle ceased development on Sun’s OpenSSO—an open source access management platform—It was picked up by ForgeRock and integrated into their Open Identity Suite. Now named <strong><a href=\"http://forgerock.com/products/open-identity-stack/openam/\">OpenAM</a></strong>, it fills the niche for a scalable, open-source platform that supports OpenID Connect and SAML 2.0. However, OpenAM’s long history has resulted in a sprawling codebase whose documentation can be inscrutable. Hopefully, a slimmed-down alternative with better support for automated deployment and provisioning will emerge soon.</p>",
                "radarId": 39,
                "id": "en_2015-05_801",
                "blip_selector": "openam"
            },
            {
                "blip_id": 775,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Spring Boot",
                "display_name": "Spring Boot",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "350",
                "tag": null,
                "description": "<p><a href=\"http://projects.spring.io/spring-boot\"><strong>Spring Boot</strong></a> allows easy set up of standalone Spring-based applications. It's ideal for pulling up new microservices and easy to deploy. It also makes data access less of a pain due to the hibernate mappings with much less boilerplate code. We like that Spring Boot simplifies Java services built with Spring, but have learned to be cautious of the many dependencies. Spring still lurks just beneath the surface.</p>",
                "radarId": 85,
                "id": "en_2015-05_775",
                "blip_selector": "spring-boot"
            },
            {
                "blip_id": 853,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Hamms",
                "display_name": "Hamms",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "49",
                "tag": null,
                "description": "",
                "radarId": 57,
                "id": "en_2015-05_853",
                "blip_selector": "hamms"
            },
            {
                "blip_id": 805,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "227",
                "name": "Boot2docker",
                "display_name": "Boot2docker",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "84",
                "tag": null,
                "description": "<p><strong>Boot2docker</strong> is a lightweight linux distribution running Docker, packaged as a VM for OSX and Windows. This is a great way to get started experimenting with Docker. For teams using microservices, it can also be an effective way to run multiple services on a local machine for dev and test purposes, where the overhead of multiple vagrant VMs may be too much.</p>",
                "radarId": 52,
                "id": "en_2015-05_805",
                "blip_selector": "boot2docker"
            },
            {
                "blip_id": 828,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "298",
                "name": "Reagent",
                "display_name": "Reagent",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "334",
                "tag": null,
                "description": "<p><a href=\"http://holmsand.github.io/reagent/\">Reagent</a> has emerged as a lightweight minimalist alternative to Om for wrapping React.js in ClojureScript. Whereas Om provides a comprehensive Clojure-idiomatic front-end programming framework, Reagent takes advantage of Clojure’s expressiveness to focus on simple components and a readable DSL for writing HTML. By representing HTML in Clojure data, Reagent retains the performance and understandability of React.js without embedding foreign markup in the code.</p>",
                "radarId": 90,
                "id": "en_2015-05_828",
                "blip_selector": "reagent"
            },
            {
                "blip_id": 841,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Gor",
                "display_name": "Gor",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "63",
                "tag": null,
                "description": "",
                "radarId": 67,
                "id": "en_2015-05_841",
                "blip_selector": "gor"
            },
            {
                "blip_id": 783,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Local storage sync",
                "display_name": "Local storage sync",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "147",
                "tag": null,
                "description": "<p>When implementing single-page applications, sooner or later the question of offline use will come up. Given how hard it is to get this right when retrofitting an offline mode into an existing application, there is a trend towards implementing single-page applications with an “offline-first” mindset. An important implementation technique that we have used successfully is <strong>local storage sync</strong>. With this technique, the user facing code never makes requests to the backend. It retrieves data solely from local storage. A background worker synchronises the data in local storage with the backend systems, usually employing calls to some form of REST API.</p>",
                "radarId": 7,
                "id": "en_2015-05_783",
                "blip_selector": "local-storage-sync"
            },
            {
                "blip_id": 857,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "ZAP",
                "display_name": "ZAP",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "7",
                "tag": null,
                "description": "",
                "radarId": 63,
                "id": "en_2015-05_857",
                "blip_selector": "zap"
            },
            {
                "blip_id": 827,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "React.js",
                "display_name": "React.js",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "330",
                "tag": null,
                "description": "<p>One benefit to the ongoing avalanche of front-end JavaScript frameworks is that occasionally, a new idea crops up that makes us think. <a href=\"http://facebook.github.io/react/\"><strong>React.js</strong></a> is a UI/View framework in which JavaScript functions generate HTML in a reactive data flow. We have seen several smaller projects achieve success with React.js and developers are drawn to its clean, composeable approach to componentization.</p>",
                "radarId": 83,
                "id": "en_2015-05_827",
                "blip_selector": "react-js"
            },
            {
                "blip_id": 823,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Flight.js",
                "display_name": "Flight.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "295",
                "tag": null,
                "description": "<p>In the crowded space of JavaScript frameworks, we want to highlight <a href=\"https://flightjs.github.io/\"><strong>Flight.js</strong></a> as a lightweight framework to build components. Flight gets by without much magic when adding behavior to DOM nodes. Its event-driven and component-based nature promotes writing decoupled code. This makes testing individual components comparatively easy. Care must be taken, however, when components need to interact with each other. There is little support for testing and a real danger to get into <em>event hell</em>. We do like that it uses functional mixins for behavior, like composition instead of inheritance.</p>",
                "radarId": 87,
                "id": "en_2015-05_823",
                "blip_selector": "flight-js"
            },
            {
                "blip_id": 811,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "298",
                "name": "Blackbox",
                "display_name": "Blackbox",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "77",
                "tag": null,
                "description": "<p><a href=\"https://github.com/StackExchange/blackbox\"><strong>Blackbox</strong></a> is a simple tool for encrypting specific files while at rest in your source repository. This is particularly useful if you need to store passwords or private keys. Blackbox works with Git, Mercurial and Subversion and uses GPG for the encryption. Each user has their own key, which makes it easy to revoke access on a granular level. There is a lot happening in this space and a few other players to consider including <strong>git-crypt</strong> and <strong>Trousseau</strong>.</p>",
                "radarId": 65,
                "id": "en_2015-05_811",
                "blip_selector": "blackbox"
            },
            {
                "blip_id": 824,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Haskell Hadoop library",
                "display_name": "Haskell Hadoop library",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "308",
                "tag": null,
                "description": "<p>While there are lots of fans of <strong>Haskell</strong> among ThoughtWorks' language devotees, we rarely see it on the kinds of projects we work on—until recently. Several open source projects now marry <strong>Hadoop</strong> ’s map/reduce jobs to Haskell’s syntax, which some developers and/or data scientists find appealing.</p>",
                "radarId": 88,
                "id": "en_2015-05_824",
                "blip_selector": "haskell-hadoop-library"
            },
            {
                "blip_id": 755,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "Mountebank",
                "display_name": "Mountebank",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "36",
                "tag": null,
                "description": "",
                "radarId": 50,
                "id": "en_2015-05_755",
                "blip_selector": "mountebank"
            },
            {
                "blip_id": 804,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "291",
                "name": "U2F",
                "display_name": "U2F",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "264",
                "tag": null,
                "description": "<p>Securing online accounts is at the same time extremely important and notoriously difficult. Two-factor authentication does greatly increase security and we have recommended TOTP as a good solution. A new entrant in this field is Universal 2nd Factor ( <strong>U2F</strong> ), a solution based on public key cryptography and inexpensive USB hardware tokens. While developed at Google, it has now become a standard managed by the FIDO Alliance. We do like the promise of better protection against phishing and man-in-the-middle attacks, but are concerned because the standard currently references a specific elliptic curve digital signature algorithm that is considered to be flawed.</p>",
                "radarId": 44,
                "id": "en_2015-05_804",
                "blip_selector": "u2f"
            },
            {
                "blip_id": 781,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "178",
                "name": "Canary builds",
                "display_name": "Canary builds",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "169",
                "tag": null,
                "description": "<p>Many projects have external code dependencies, a large amount of which is provided by open source projects. In order to ensure our builds are reproducible, we integrate against known versions of them, but that can mean that it takes a while for us to integrate against newer versions of these libraries leading to a larger merge effort down the line. One approach we have seen to avoid this is to have a nightly <strong>Canary Build</strong> which tries to pull in the latest version of all dependencies. If the build is green, we know we can change which versions we depend on.</p>",
                "radarId": 5,
                "id": "en_2015-05_781",
                "blip_selector": "canary-builds"
            },
            {
                "blip_id": 840,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "NaCl",
                "display_name": "NaCl",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "56",
                "tag": null,
                "description": "<p>The <a href=\"http://nacl.cr.yp.to/\"><strong>NaCl</strong></a> library (pronounced 'Salt') provides a set of features for encryption, decryption, and signatures designed to make it easier to implement secure network communication or other cryptography requirements. Although these functions exist in other libraries, NaCl promises higher speed and easier to use APIs. Current support is for C and C++ with Python wrappers in progress.</p>",
                "radarId": 68,
                "id": "en_2015-05_840",
                "blip_selector": "nacl"
            },
            {
                "blip_id": 798,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "311",
                "name": "MariaDB",
                "display_name": "MariaDB",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "227",
                "tag": null,
                "description": "<p>After Oracle's acquisition of MySQL, more and more close sourced modules are bundled into its enterprise edition. There are concerns over the future of MySQL. <a href=\"https://mariadb.org/\">MariaDB</a> is a community-developed GPL-only fork of MySQL intended to remain truly open source, yet fully compatible and competitive with MySQL. High-profile adopters include large-scale internet organizations Google and Wikipedia, as well as key Linux distributors RedHat and SUSE.</p>",
                "radarId": 37,
                "id": "en_2015-05_798",
                "blip_selector": "mariadb"
            },
            {
                "blip_id": 832,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "120",
                "name": "Generated infrastructure diagrams",
                "display_name": "Generated infrastructure diagrams",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "126",
                "tag": null,
                "description": "",
                "radarId": 3,
                "id": "en_2015-05_832",
                "blip_selector": "generated-infrastructure-diagrams"
            },
            {
                "blip_id": 758,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "OSGi",
                "display_name": "OSGi",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "225",
                "tag": null,
                "description": "<p><strong>OSGi</strong> (Open Service Gateway initiative) is a specification that aims to remedy the lack of a module system for Java, allowing for dynamic reloading of components. While some projects (notably Eclipse) use OSGi successfully, other uses have exposed the hazards of adding abstractions to platforms never designed for them. Projects that rely on OSGi to define a component system quickly realize that it solves only a small part of the overall problem, and often adds its own accidental complexity to projects such as more complex builds. Most projects now either use old-fashioned JAR files or microservice architectures to manage components, and await the native solution in Java in the Jigsaw module specification.</p>",
                "radarId": 46,
                "id": "en_2015-05_758",
                "blip_selector": "osgi"
            },
            {
                "blip_id": 810,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "70",
                "name": "Postman",
                "display_name": "Postman",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-05",
                "theta": "18",
                "tag": null,
                "description": "",
                "radarId": 51,
                "id": "en_2015-05_810",
                "blip_selector": "postman"
            }
        ]
    },
    {
        "date": "2015-11",
        "blips": [
            {
                "blip_id": 630,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "125",
                "name": "Nancy",
                "display_name": "Nancy",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "315",
                "tag": null,
                "description": "<p>Since we last talked about <strong><a href=\"http://nancyfx.org/\">Nancy</a></strong> on the technology radar it has become the default choice on our .NET projects. Architectures centred around small, vertical slices and microservices simply require light-weight deployment options and low ceremony tooling.</p>",
                "radarId": 88,
                "id": "en_2015-11_630",
                "blip_selector": "nancy"
            },
            {
                "blip_id": 881,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "QA in production",
                "display_name": "QA in production",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "98",
                "tag": null,
                "description": "",
                "radarId": 17,
                "id": "en_2015-11_881",
                "blip_selector": "qa-in-production"
            },
            {
                "blip_id": 791,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "365",
                "name": "Microservice envy",
                "display_name": "Microservice envy",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "147",
                "tag": null,
                "description": "<p>We remain convinced that microservices can offer significant advantages to organizations, in terms of improving team autonomy and faster frequency of change. The additional complexity that comes from distributed systems requires an additional level of maturity and investment. We are concerned that some teams are rushing in to adopting microservices without understanding the changes to development, test, and operations that are required to do them well. Our general advice remains simple. Avoid <strong>microservice envy</strong>  and start with one or two services before rushing headlong into developing more, to allow your teams time to adjust and understand the right level of granularity.</p>",
                "radarId": 26,
                "id": "en_2015-11_791",
                "blip_selector": "microservice-envy"
            },
            {
                "blip_id": 806,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "95",
                "name": "Composer",
                "display_name": "Composer",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "68",
                "tag": null,
                "description": "<p>Although the idea of dependency management is not new and considered to be a fundamental development practice, it is not widely adopted by the PHP community. <strong><a href=\"https://getcomposer.org\">Composer</a></strong> is a tool for dependency management in PHP. It is strongly influenced by tools from other technology stacks like Node's npm and Ruby's Bundler. We are now seeing wide adoption across PHP projects and it is fairly mature. You can still have to do some shims for internal libraries, you can use it for most external libraries.</p>",
                "radarId": 56,
                "id": "en_2015-11_806",
                "blip_selector": "composer"
            },
            {
                "blip_id": 759,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Pace-layered Application Strategy",
                "display_name": "Pace-layered Application Strategy",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "135",
                "tag": null,
                "description": "<p>Gartner's <strong>Pace-layered Application Strategy</strong> approach appears to be creating an unhelpful focus on the idea of layers within an architecture. We find thinking about the pace of change within different <strong>business capabilities</strong> (which can be made up of several architectural layers) to be a more useful concept. The danger in focusing on layers is that many types of change cut across multiple layers. For example, being able to add new class of stock to a website is not just about having an easy-to-change CMS; you also need to update the database, integration points, warehouse systems, etc. The recognition that some parts of an architecture need to be more maneuverable than others is useful. However, a focus on layers is proving unhelpful.</p>",
                "radarId": 27,
                "id": "en_2015-11_759",
                "blip_selector": "pace-layered-application-strategy"
            },
            {
                "blip_id": 827,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "React.js",
                "display_name": "React.js",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "306",
                "tag": null,
                "description": "<p>One benefit of the ongoing avalanche of front-end JavaScript frameworks is that occasionally a new idea crops up that makes us think. <a href=\"http://facebook.github.io/react/\"><strong>React.js</strong></a> is a UI/view framework in which JavaScript functions generate HTML in a reactive data flow. It differs significantly from frameworks like <a href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/angularjs\">AngularJS</a> in that it only allows one-way data bindings, greatly simplifying the rendering logic. We have seen several smaller projects achieve success with React.js, and developers are drawn to its clean, composable approach to componentization.</p>",
                "radarId": 91,
                "id": "en_2015-11_827",
                "blip_selector": "react-js"
            },
            {
                "blip_id": 863,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Time series databases",
                "display_name": "Time series databases",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "263",
                "tag": null,
                "description": "<p>A <strong>time series database</strong> (TSDB) is a system that is optimized for handling time series data. It allows users to perform CRUD operations on various time series organized as database objects. It also provides the ability to perform statistical calculations on the series as a whole. Although TSDBs are not entirely a new technology we are seeing a renewed interest in the these databases primarily in the realm of IoT applications. This is being facilitated by many open source and commercial platforms (such as  <strong>OpenTSDB</strong> , <strong>InfluxDB</strong> , <strong>Druid</strong> , <strong>BlueFloodDB</strong> etc.) that have mushroomed recently. Its also worth mentioning that some of these systems use other distributed databases such <strong>Cassandra</strong> and <strong>HBase</strong> as their underlying storage engine.</p>",
                "radarId": 51,
                "id": "en_2015-11_863",
                "blip_selector": "time-series-databases"
            },
            {
                "blip_id": 830,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Swift",
                "display_name": "Swift",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "337",
                "tag": null,
                "description": "<p>A year after its public debut, <a href=\"https://developer.apple.com/swift/\"><strong>Swift</strong></a> is now our default choice for development in the Apple ecosystem. With the recent release of Swift 2, the language approaches a level of maturity that provides the stability and performance required for most projects. Swift still has issues, especially around tool support, refactoring and testing. However, we feel that these are not substantial enough to warrant avoiding Swift. At the same time, porting large, existing Objective-C codebases is unlikely to pay off. The announcement that Swift will become open source software is a further positive sign. We are hopeful that this will not just be another dumping of internally developed code into a public repository, because Apple has clearly stated that community contributions are encouraged and will be accepted.</p>",
                "radarId": 89,
                "id": "en_2015-11_830",
                "blip_selector": "swift"
            },
            {
                "blip_id": 732,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "195",
                "name": "Consul",
                "display_name": "Consul",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "71",
                "tag": null,
                "description": "<p>We continue to be impressed with <strong><a href=\"http://consul.io\">Consul</a></strong>, a service discovery tool supporting both DNS and HTTP-based discovery mechanisms. It goes beyond other discovery tools by providing customizable health-checks for registered services, ensuring that unhealthy instances are marked accordingly. More tools have emerged to work with Consul to make it even more powerful. <a href=\"https://github.com/hashicorp/consul-template\">Consul Template</a> enables configuration files to be populated with information from Consul, making things like client-side load balancing using mod_proxy much easier. In the world of Docker, <a href=\"https://github.com/gliderlabs/registrator\">registrator</a> can automatically register docker containers as they appear with Consul with extremely little effort, making it much easier to manage container-based setups.</p>",
                "radarId": 61,
                "id": "en_2015-11_732",
                "blip_selector": "consul"
            },
            {
                "blip_id": 849,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Prometheus",
                "display_name": "Prometheus",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "36",
                "tag": null,
                "description": "",
                "radarId": 80,
                "id": "en_2015-11_849",
                "blip_selector": "prometheus"
            },
            {
                "blip_id": 879,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Ember.js",
                "display_name": "Ember.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "288",
                "tag": null,
                "description": "<p>Widespread usage of AngularJS continues on ThoughtWorks projects, although not every experience is positive. We continue to advise teams to assess whether the additional complexity of a single-page JavaScript application is necessary to meet their requirements.  We also recommend assessing alternative frameworks, and in this radar edition we highlight <a href=\"http://emberjs.com/\"><strong>Ember.js</strong></a> which is growing in popularity within ThoughtWorks.  Ember is praised for its approach of opinionated convention over configuration, responsive core team of committers, performance, and build tooling support via Ember CLI.</p>",
                "radarId": 95,
                "id": "en_2015-11_879",
                "blip_selector": "ember-js"
            },
            {
                "blip_id": 861,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "BEM",
                "display_name": "BEM",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "173",
                "tag": null,
                "description": "<p>Debugging CSS problems can be painful. How many times have you had to trawl through thousands of overridden styles to work out the source of your problem? This has led many of our teams to introduce various guidelines such as avoiding cascading and overrides, making styles opt-in and emphasizing thoughtful naming. <a href=\"http://getbem.com/\"><strong>BEM</strong></a> is a simple CSS naming convention (standing for Block, Element, Modifier) that helps give semantic clarity and structure to your CSS. By using BEM, it becomes much easier to understand which CSS rules are influencing the appearance of an element and, more importantly, the intent of those rules. This approach can be seen as moving the OO lesson of favoring composition over inheritance to the world of CSS.</p>",
                "radarId": 7,
                "id": "en_2015-11_861",
                "blip_selector": "bem"
            },
            {
                "blip_id": 882,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Idempotency filter",
                "display_name": "Idempotency filter",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "135",
                "tag": null,
                "description": "",
                "radarId": 12,
                "id": "en_2015-11_882",
                "blip_selector": "idempotency-filter"
            },
            {
                "blip_id": 795,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "312",
                "name": "Linux security modules",
                "display_name": "Linux security modules",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "225",
                "tag": null,
                "description": "<p>While server hardening is an old technique that is considered fairly commonplace by sysadmins who have had to manage production systems, it has not become commonplace among the developer community. However, the rise in the DevOps culture has resulted in renewed focus on tools like SELinux, AppArmor and Grsecurity that aim to make this simpler, at least on the Linux ecosystem. Each of these tools comes with their own strengths and weaknesses and it is currently hard to pick one as being the only one you will need. That said, we highly recommend that all teams at least assess which <strong>Linux security modules</strong> would be the right one for them and make security and server hardening a part of their development workflow.</p>",
                "radarId": 45,
                "id": "en_2015-11_795",
                "blip_selector": "linux-security-modules"
            },
            {
                "blip_id": 940,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Sleepy Puppy",
                "display_name": "Sleepy Puppy",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "12",
                "tag": null,
                "description": "",
                "radarId": 84,
                "id": "en_2015-11_940",
                "blip_selector": "sleepy-puppy"
            },
            {
                "blip_id": 715,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "215",
                "name": "Sensu",
                "display_name": "Sensu",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "20",
                "tag": null,
                "description": "<p>Many monitoring tools are built around the concept of the machine or instance. The increasing use of patterns like <a href=\"http://martinfowler.com/bliki/PhoenixServer.html\">Phoenix Server</a> and tools like <a href=\"https://www.docker.com/\">Docker</a> mean this is an increasingly unhelpful way to model infrastructure: Instances are becoming transient while services are the things that persist. <a href=\"https://sensu.io/\"><strong>Sensu</strong></a> allows an instance to register itself as playing a particular role, and Sensu then monitors it on that basis. Over time, different instances playing that role may come and go. Given these factors and the increasing maturity of the tool, we felt it was time to bring Sensu back on to the radar.</p>",
                "radarId": 69,
                "id": "en_2015-11_715",
                "blip_selector": "sensu"
            },
            {
                "blip_id": 857,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "175",
                "name": "ZAP",
                "display_name": "ZAP",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "7",
                "tag": null,
                "description": "<p>The <strong><a href=\"https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project\">ZED Attack Proxy (ZAP)</a></strong> is a project from OWASP which allows you to probe an existing site for security vulnerabilities in an automated fashion. It can be used as part of periodic security testing, or else integrated into a CD pipeline to provide ongoing checks for common vulnerabilities. The use of a tool like ZAP doesn’t replace the need to think carefully about security and do other sorts of more thorough testing, but as another tool to help ensure our systems are more secure it’s a good addition to the toolbox.</p>",
                "radarId": 71,
                "id": "en_2015-11_857",
                "blip_selector": "zap"
            },
            {
                "blip_id": 927,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Rancher",
                "display_name": "Rancher",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "257",
                "tag": null,
                "description": "<p><strong><a href=\"http://rancher.com/\">Rancher</a></strong> is an open source solution that allows deployment of containers into a cluster of machines, which is becoming an increasingly common scenario. It provides services such lifecycle management, monitoring, health checks and discovery. Also included is a completely containerized operating system based on <a href=\"https://www.docker.com/\">Docker</a>. The broad focus on containerization and very small footprint are key advantages for Rancher. A similar solution in this space is <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>.</p>",
                "radarId": 50,
                "id": "en_2015-11_927",
                "blip_selector": "rancher"
            },
            {
                "blip_id": 888,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Monitoring of invariants",
                "display_name": "Monitoring of invariants",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "116",
                "tag": null,
                "description": "",
                "radarId": 22,
                "id": "en_2015-11_888",
                "blip_selector": "monitoring-of-invariants"
            },
            {
                "blip_id": 816,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Citrix for development",
                "display_name": "Citrix for development",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "45",
                "tag": null,
                "description": "<p>Many organizations are still forcing distributed or offshore development teams to use <strong>Citrix remote desktop for development</strong>. Although this provides a simple security model – assets supposedly never leave the organization’s servers - using remote desktops for development absolutely cripples developer productivity. There’s not much point paying a cheaper hourly rate for developers if you’re going to impose both the distribution and remote-desktop burdens on them, and we wish more offshore vendors would admit these drawbacks to their clients. It’s much better to use either a 'clean room' secured offshore environment where local development can be done, or a <a href=\"/radar/techniques/hosted-ide-s\">Hosted IDE</a> (e.g. <a href=\"/radar/tools/ievms\">ievms</a>)</p>",
                "radarId": 86,
                "id": "en_2015-11_816",
                "blip_selector": "citrix-for-development"
            },
            {
                "blip_id": 897,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Gitrob",
                "display_name": "Gitrob",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "58",
                "tag": null,
                "description": "<p>Safely storing secrets such as passwords and access tokens in code repositories is now supported by a growing number of tools - for example, <a href=\"https://github.com/AGWA/git-crypt\">git-crypt</a> and <a href=\"https://www.thoughtworks.com/radar/tools/blackbox\">Blackbox</a>, which we mentioned in the previous Technology Radar. Despite the availability of these tools, it is still, unfortunately, all too common that secrets are stored unprotected. In fact, it is so common that automated exploit software is used to find AWS credentials and spin up EC2 instances to mine Bitcoins, leaving the attacker with the Bitcoins and the account owner with the bill. <a href=\"https://github.com/michenriksen/gitrob\"><strong>Gitrob</strong></a> takes a similar approach and scans an organization’s GitHub repositories, flagging all files that might contain sensitive information that shouldn’t have been pushed to the repository. This is obviously a reactive approach. Gitrob can only alert teams when it is (almost) too late. For this reason, Gitrob can only ever be a complementary tool, to minimize damage.</p>",
                "radarId": 63,
                "id": "en_2015-11_897",
                "blip_selector": "gitrob"
            },
            {
                "blip_id": 755,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "90",
                "name": "Mountebank",
                "display_name": "Mountebank",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "45",
                "tag": null,
                "description": "<p>Good testing of components in an enterprise system is critical and with increased emphasis on service-based separation and deployment automation—critical factors for success with microservices—better tooling in this space is needed. The industry term “service virtualization” refers to tools that can emulate specific components in such an environment. We have seen great success with <a href=\"http://www.mbtest.org/\"><strong>Mountebank</strong></a>, a lightweight tool for stubbing and mocking HTTP, HTTPS, SMTP and TCP.</p>",
                "radarId": 57,
                "id": "en_2015-11_755",
                "blip_selector": "mountebank"
            },
            {
                "blip_id": 929,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Presto",
                "display_name": "Presto",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "250",
                "tag": null,
                "description": "",
                "radarId": 49,
                "id": "en_2015-11_929",
                "blip_selector": "presto"
            },
            {
                "blip_id": 871,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "115",
                "name": "Threat Modeling",
                "display_name": "Threat Modeling",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "103",
                "tag": null,
                "description": "<p>With the number of high-profile security breaches in the past months, software development teams no longer need convincing that they must place an emphasis on writing secure software and dealing with their users’ data in a responsible way. The teams face a steep learning curve, though, and the vast number of potential threats - ranging from organized crime and government spying to teenagers who attack systems 'for the lulz' can be overwhelming. <a href=\"https://www.owasp.org/index.php/Category:Threat_Modeling\"><strong>Threat modeling</strong></a> provides a set of techniques, mostly from a defensive perspective, that help you understand and classify potential threats. Turned into 'evil-user stories', threat models can give a team a manageable and effective approach to making their systems more secure.</p>",
                "radarId": 6,
                "id": "en_2015-11_871",
                "blip_selector": "threat-modeling"
            },
            {
                "blip_id": 925,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Kubernetes",
                "display_name": "Kubernetes",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "218",
                "tag": null,
                "description": "<p><strong><a href=\"http://kubernetes.io/\">Kubernetes</a></strong> is Google's answer to the problem of deploying containers into a cluster of machines, which is becoming an increasingly common scenario. It is not the solution used by Google internally but an open source project that originated at Google and has seen a fair number of external contributions. <a href=\"https://www.docker.com/\">Docker</a> and <a href=\"https://coreos.com/rkt/\">Rocket</a> are supported as container formats, and services offered include health management, replication and discovery. A similar solution in this space is <a href=\"/radar/platforms/rancher\">Rancher</a>.</p>",
                "radarId": 44,
                "id": "en_2015-11_925",
                "blip_selector": "kubernetes"
            },
            {
                "blip_id": 841,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Gor",
                "display_name": "Gor",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "60",
                "tag": null,
                "description": "<p><a href=\"https://github.com/buger/gor\"><strong>Gor</strong></a> is an open-source tool for capturing and replaying live HTTP traffic into a test environment in order to continuously test your system with real data. It can be used to increase confidence in code deployments, configuration changes and infrastructure changes.</p>",
                "radarId": 76,
                "id": "en_2015-11_841",
                "blip_selector": "gor"
            },
            {
                "blip_id": 896,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "SysDig",
                "display_name": "SysDig",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "13",
                "tag": null,
                "description": "",
                "radarId": 70,
                "id": "en_2015-11_896",
                "blip_selector": "sysdig"
            },
            {
                "blip_id": 936,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "SignalR",
                "display_name": "SignalR",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "324",
                "tag": null,
                "description": "",
                "radarId": 92,
                "id": "en_2015-11_936",
                "blip_selector": "signalr"
            },
            {
                "blip_id": 848,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "305",
                "name": "Quick",
                "display_name": "Quick",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "30",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/Quick/Quick\">Quick</a></strong> is a testing framework for Swift and Objective-C, which comes bundled with <strong>Nimble</strong> , a matcher framework for tests. Quick helps verify the behavior of Swift and Objective-C programs. Quick has the same syntactic flavour as <strong>RSpec</strong> and <strong>Jasmine</strong> and is easy to set up. It is very organized, allows for assertion of types and makes it easy to test asynchronous code.</p>",
                "radarId": 81,
                "id": "en_2015-11_848",
                "blip_selector": "quick"
            },
            {
                "blip_id": 909,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Visual Studio Code",
                "display_name": "Visual Studio Code",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "6",
                "tag": null,
                "description": "<p><strong><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a></strong> is Microsoft’s free IDE editor, available across platforms. We find the version-control integration with Git very beneficial to promoting continuous integration practices. Visual Studio Code also provides a means of integrating with external tools via tasks, with autodetection of grunt/gulp tasks eliminating the need for running grunt/gulp tasks via terminals and simply using the editor. With the growth of the Docker ecosystem, this IDE offers support for the dockerfile with snippets and definitions of valid commands.</p>",
                "radarId": 85,
                "id": "en_2015-11_909",
                "blip_selector": "visual-studio-code"
            },
            {
                "blip_id": 885,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "HSTS",
                "display_name": "HSTS",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "258",
                "tag": null,
                "description": "",
                "radarId": 38,
                "id": "en_2015-11_885",
                "blip_selector": "hsts"
            },
            {
                "blip_id": 895,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "GitUp",
                "display_name": "GitUp",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "52",
                "tag": null,
                "description": "",
                "radarId": 64,
                "id": "en_2015-11_895",
                "blip_selector": "gitup"
            },
            {
                "blip_id": 862,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Apache Kylin",
                "display_name": "Apache Kylin",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "186",
                "tag": null,
                "description": "<p><a href=\"http://www.kylin.io/\"><strong>Apache Kylin</strong></a> is an open source analytics solution from eBay Inc. that enables SQL based multidimensional analysis (OLAP) on very large datasets. Kylin is intended to be a Hadoop based hybrid OLAP (HOLAP) solution that will eventually support both MOLAP and ROLAP style multidimensional analysis. With Kylin you can define cubes using a Cube Designer and initiate an offline process that builds these cubes. The offline process performs a pre-join step to join facts and dimension tables into a flattened out structure. This is followed by a pre-aggregation phase where individual cuboids are built using Map Reduce jobs. The results are stored in HDFS sequence files and are later loaded into HBase. The data requests can originate from SQL submitted using a SQL-based tool. The query engine (based on <strong>Apache Calcite</strong> ), determines if the target dataset exists in HBase. If so, the engine directly accesses the target data from HBase and returns the result with sub-second latency. If not, the engine routes the queries to <strong>Hive</strong> (or any other SQL on Hadoop solution enabled on the cluster).</p>",
                "radarId": 39,
                "id": "en_2015-11_862",
                "blip_selector": "apache-kylin"
            },
            {
                "blip_id": 947,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Bug bounties",
                "display_name": "Bug bounties",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "155",
                "tag": null,
                "description": "<p>More and more organizations are starting to use <strong>bug bounties</strong> to encourage reporting of what are often security-related bugs, and in general help improve the quality of their software. To support these programs, companies like <a href=\"https://hackerone.com/\">HackerOne</a> and <a href=\"https://bugcrowd.com/\">BugCrowd</a> can help organizations manage this process more easily. We have limited experience with these offerings ourselves, but we like the idea of encouraging people to help come forward and highlight what can often be damaging vulnerabilities in an open and transparent way. It's worth noting that there might be some legal issues with encouraging users to find vulnerabilities in your software, so please do check that out first.</p>",
                "radarId": 19,
                "id": "en_2015-11_947",
                "blip_selector": "bug-bounties"
            },
            {
                "blip_id": 792,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Programming in your CI/CD tool",
                "display_name": "Programming in your CI/CD tool",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "124",
                "tag": null,
                "description": "<p>We still see teams configure their CI and CD tools by directly embedding complex multi-line commands directly into the configuration of the tool. Often these embedded commands also contains steps that would only ever take effect in the build environment including things such as CI specific environment variables, steps that would create/modify files and templates only in the CI environment etc. This makes the build environment a special beast - whose results cannot be duplicated locally on a developer's machine.</p>\n\n<p>This is extremely problematic because the CI/CD tool, which is supposed to expose problems in your code, itself becomes a complex beast whose behavior is hard to debug and whose results are hard to replicate.</p>\n\n<p>The way to avoid <strong>programming in your CI/CD tool</strong> is to extract the complexities of the build process from the guts of the tool and into a simple script which can be invoked by a single command. This script can then be executed on any developer workstation and therefore eliminates the privileged/singular status of the build environment.</p>",
                "radarId": 28,
                "id": "en_2015-11_792",
                "blip_selector": "programming-in-your-ci-cd-tool"
            },
            {
                "blip_id": 900,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "NPM for all the things",
                "display_name": "NPM for all the things",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "120",
                "tag": null,
                "description": "",
                "radarId": 14,
                "id": "en_2015-11_900",
                "blip_selector": "npm-for-all-the-things"
            },
            {
                "blip_id": 787,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Accumulate-only data",
                "display_name": "Accumulate-only data",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "168",
                "tag": null,
                "description": "<p>Immutable data structures are becoming more popular, with functional languages such as Clojure and Scala providing immutability by default. Immutability allows code to be more easily written, read and reasoned about. Using an <strong>accumulate-only data store</strong> can confer some of these benefits in the database layer, as well as make audit and historical querying simple. Implementation options vary, from specific accumulative data stores such as <a href=\"http://www.datomic.com/\">Datomic</a> to simply using an “append-don’t-update” approach with a traditional database. <strong>Accumulate-only</strong> is a design strategy whereby data is removed via retraction rather than update; <strong>append-only</strong> is an implementation technique.</p>",
                "radarId": 18,
                "id": "en_2015-11_787",
                "blip_selector": "accumulate-only-data"
            },
            {
                "blip_id": 773,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "Apache Spark",
                "display_name": "Apache Spark",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "202",
                "tag": null,
                "description": "<p><a href=\"https://spark.apache.org/\"><strong>Apache Spark</strong></a> has been steadily gaining ground as a fast and general engine for large-scale data processing. The engine is written in Scala and is well suited for applications that reuse a working set of data across multiple parallel operations. It’s designed to work as a standalone cluster or as part of Hadoop YARN cluster. It can access data from sources such as HDFS, Cassandra, S3 etc. Spark also offers many higher level operators in order to ease the development of data parallel applications. As a generic data processing platform it has enabled development of many higher level tools such as interactive SQL (Spark SQL), real time streaming (Spark Streaming), machine learning library (MLib), R-on-Spark etc.</p>",
                "radarId": 33,
                "id": "en_2015-11_773",
                "blip_selector": "apache-spark"
            },
            {
                "blip_id": 924,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "AWS ECS",
                "display_name": "AWS ECS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "192",
                "tag": null,
                "description": "",
                "radarId": 40,
                "id": "en_2015-11_924",
                "blip_selector": "aws-ecs"
            },
            {
                "blip_id": 837,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Flux",
                "display_name": "Flux",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "143",
                "tag": null,
                "description": "",
                "radarId": 11,
                "id": "en_2015-11_837",
                "blip_selector": "flux"
            },
            {
                "blip_id": 873,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Cloudera Impala",
                "display_name": "Cloudera Impala",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "225",
                "tag": null,
                "description": "<p>For a while now the Hadoop community has been trying to bring low-latency, interactive SQL capability to the Hadoop platform (better known as SQL-on-Hadoop). This has led to a few open source systems such as Cloudera Impala, Apache Drill, Facebook’s Presto etc being developed actively through 2014. We think the SQL-on-Hadoop trend signals an important shift as it changes Hadoop's proposition from being a batch oriented technology that was complementary to databases into something that could compete with them.  <a href=\"http://www.cloudera.com/content/cloudera/en/products-and-services/cdh/impala.html\"><strong>Cloudera Impala</strong></a> was one of the first SQL-on-Hadoop platforms. It is a distributed, massively-parallel, C++ based query engine. The core component of this platform is the Impala daemon that coordinates the execution of the SQL query across one or more nodes of the Impala cluster. Impala is designed to read data from files stored on HDFS in all popular file formats. It leverages Hive's metadata catalog, in order to share databases and tables between the two database platforms. Impala comes with a shell as well as JDBC and ODBC drivers for applications to use.</p>",
                "radarId": 35,
                "id": "en_2015-11_873",
                "blip_selector": "cloudera-impala"
            },
            {
                "blip_id": 891,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Fastly",
                "display_name": "Fastly",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "236",
                "tag": null,
                "description": "<p><strong><a href=\"https://www.fastly.com/\">Fastly</a></strong>, one of a number of CDNs on the market, has a large and growing following on ThoughtWorks projects and is used by many web-scale household names, such as GitHub and Twitter. Its feature set, speed and price point combine to make it a very attractive option when you’re looking for an edge caching solution. We have also seen significant cost savings on projects that move to this platform from another CDN. If you are in the market for a CDN, you could do worse than investigate this one.</p>",
                "radarId": 36,
                "id": "en_2015-11_891",
                "blip_selector": "fastly"
            },
            {
                "blip_id": 734,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "380",
                "name": "Separate DevOps team",
                "display_name": "Separate DevOps team",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "102",
                "tag": null,
                "description": "<p>In the last radar issue we advised against creating a <strong>separate DevOps team</strong> , as DevOps is about creating a culture of shared responsibility in delivery teams. We recommend embedding operations skills into delivery teams to reduce friction and deliver better outcomes. However where there is a need for significant investment in tooling and automation, we do see a role for a Delivery Engineering team.  Rather than being a helpdesk, these teams build tooling and enable teams to deploy, monitor, and maintain their own production environments.</p>",
                "radarId": 30,
                "id": "en_2015-11_734",
                "blip_selector": "separate-devops-team"
            },
            {
                "blip_id": 937,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "React Native",
                "display_name": "React Native",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "333",
                "tag": null,
                "description": "<p>Yet another entrant into the cross-platform mobile development world, Facebook’s <a href=\"https://facebook.github.io/react-native/\"><strong>React Native</strong></a> brings the React.js programming model to iOS and Android developers. React Native programs are written in JavaScript, but unlike a hybrid framework such as Ionic, React Native gives developers access to native UI components on the target platform. This is an approach we’ve seen before (e.g., <a href=\"http://calatrava.github.io/\">Calatrava</a>), but React Native has already inspired a substantial developer community and builds on the momentum generated by React.js. This framework could play a significant role in the future of mobile app development.</p>",
                "radarId": 100,
                "id": "en_2015-11_937",
                "blip_selector": "react-native"
            },
            {
                "blip_id": 911,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Espresso",
                "display_name": "Espresso",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "72",
                "tag": null,
                "description": "<p><strong><a href=\"https://developer.android.com/training/testing/espresso\">Espresso</a></strong> is an Android functional-testing tool. Its small-core API hides the messy implementation details and helps in writing concise tests, with faster and reliable test execution.</p>",
                "radarId": 74,
                "id": "en_2015-11_911",
                "blip_selector": "espresso"
            },
            {
                "blip_id": 865,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Deis",
                "display_name": "Deis",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "212",
                "tag": null,
                "description": "<p>Heroku, with its 12-factor application model, has changed the way we think about building, deploying, and hosting web applications.  <a href=\"http://deis.io/\"><strong>Deis</strong></a> encapsulates the Heroku PaaS model in an open-source framework that deploys onto Docker containers hosted anywhere.  Deis is still evolving, but for applications that fit the 12-factor model it has the potential to greatly simplify deployment and hosting in the environment of your choice.  Deis is yet another example of the rich ecosystem of platforms and tools emerging around Docker.</p>",
                "radarId": 43,
                "id": "en_2015-11_865",
                "blip_selector": "deis"
            },
            {
                "blip_id": 789,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Data Lake",
                "display_name": "Data Lake",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "142",
                "tag": null,
                "description": "<p>A <a href=\"http://martinfowler.com/bliki/DataLake.html\"><strong>Data Lake</strong></a> is an immutable data store of largely unprocessed 'raw' data, acting as a source for data analytics. Whereas the more familiar Data Warehouse filters and processes the data before storing it, the lake just captures the raw data, leaving it to the users of that data to carry out the particular analysis that they need. Examples include HDFS or HBase within a <a href=\"https://hadoop.apache.org/\">Hadoop</a>, <a href=\"http://spark.apache.org/\">Spark</a> or <a href=\"https://storm.apache.org/\">Storm</a> processing framework. Usually only a small group of data scientists work on the raw data, developing streams of processed data into lakeshore data marts for most users to query. A Data Lake should only be used for analytics and reporting. For collaboration between operational systems we prefer using services designed for that purpose.</p>",
                "radarId": 20,
                "id": "en_2015-11_789",
                "blip_selector": "data-lake"
            },
            {
                "blip_id": 907,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "Pageify",
                "display_name": "Pageify",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "42",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/paramadeep/pageify\">Pageify</a></strong> is a Ruby library for building page objects for UI automation tests, focusing on faster test execution and code readability. It offers simple APIs to dynamically define, operate and assert on the page objects, allowing readable code even when handling elements with complex hierarchies in the DOM. It bundles integration for <strong>WebDriver</strong> and <strong>Capybara</strong>.</p>",
                "radarId": 79,
                "id": "en_2015-11_907",
                "blip_selector": "pageify"
            },
            {
                "blip_id": 832,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "120",
                "name": "Generated infrastructure diagrams",
                "display_name": "Generated infrastructure diagrams",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "142",
                "tag": null,
                "description": "<p>When we need a diagram that describes the current infrastructure or physical architecture we usually take to our favorite technical diagramming tool. If you are using the cloud or virtualization technologies this no longer makes sense, we can use the provided APIs to interrogate the actual infrastructure and generate a live, <strong>automated infrastructure diagram</strong> using simple tools like <a href=\"http://www.graphviz.org/\">GraphViz</a> or by outputting SVG.</p>",
                "radarId": 3,
                "id": "en_2015-11_832",
                "blip_selector": "generated-infrastructure-diagrams"
            },
            {
                "blip_id": 836,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Reactive Architectures",
                "display_name": "Reactive Architectures",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "103",
                "tag": null,
                "description": "<p>The techniques of functional reactive programming have steadily gained in popularity over recent years, and we’re seeing increased interest in extending this concept to distributed systems architectures. Partly inspired by “<a href=\"http://www.reactivemanifesto.org/\">The Reactive Manifesto</a>”, these <strong>reactive architectures</strong> are based on a one-way, asynchronous flow of immutable events through a network of independent processes (perhaps implemented as microservices). In the right setting, these systems are scalable and resilient and decrease the coupling between individual processing units. However, architectures based entirely on asynchronous message passing introduce complexity and often rely on proprietary frameworks. We recommend assessing the performance and scalability needs of your system before committing to this as a default architectural style.</p>",
                "radarId": 23,
                "id": "en_2015-11_836",
                "blip_selector": "reactive-architectures"
            },
            {
                "blip_id": 779,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "TOTP Two-Factor Authentication",
                "display_name": "TOTP Two-Factor Authentication",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "225",
                "tag": null,
                "description": "",
                "radarId": 31,
                "id": "en_2015-11_779",
                "blip_selector": "totp-two-factor-authentication"
            },
            {
                "blip_id": 948,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "Gitflow",
                "display_name": "Gitflow",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "169",
                "tag": null,
                "description": "",
                "radarId": 24,
                "id": "en_2015-11_948",
                "blip_selector": "gitflow"
            },
            {
                "blip_id": 931,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Over-ambitious API Gateways",
                "display_name": "Over-ambitious API Gateways",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "216",
                "tag": null,
                "description": "",
                "radarId": 53,
                "id": "en_2015-11_931",
                "blip_selector": "over-ambitious-api-gateways"
            },
            {
                "blip_id": 912,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Gauge",
                "display_name": "Gauge",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "66",
                "tag": null,
                "description": "<p><strong><a href=\"https://gauge.org/\">Gauge</a></strong> is a lightweight cross-platform test-automation tool. Specifications are written in free-form Markdown, so test cases can be written in the business language and can be incorporated into any existing documentation format. Supported languages are implemented as plugins to a single core implementation, which ensures consistency across language implementations. This tool, open sourced by ThoughtWorks, also supports parallel execution out of the box for all supported platforms.</p>",
                "radarId": 75,
                "id": "en_2015-11_912",
                "blip_selector": "gauge"
            },
            {
                "blip_id": 946,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "340",
                "name": "Let's Encrypt",
                "display_name": "Let's Encrypt",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "48",
                "tag": null,
                "description": "<p>Although more sites every day are implementing HTTPS to help protect their own users and improve the integrity of the web as a whole, there are many more sites to go. In addition, we see more and more people using HTTPS within their enterprises, to provide additional security guarantees. One of the main blockers to wider adoption has been the process of getting a certificate in the first place. Aside from the cost, the process itself is far from slick. <a href=\"https://letsencrypt.org/\"><strong>Let’s Encrypt</strong></a>, a new Certificate Authority, aims to solve all this. First, it provides certificates for free. Second, and arguably more important, it also provides an extremely easy-to-use command-line API, making it easy to fully automate the process of issuing, upgrading and installing certificates. We think that Let’s Encrypt, in beta at the moment, has the chance to be revolutionary in terms of helping more of the web get on to HTTPS, and at the same time showing what good, automatable tools for the security-conscious should look like.</p>",
                "radarId": 78,
                "id": "en_2015-11_946",
                "blip_selector": "let-s-encrypt"
            },
            {
                "blip_id": 887,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "iFrames for sandboxing",
                "display_name": "iFrames for sandboxing",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "128",
                "tag": null,
                "description": "",
                "radarId": 13,
                "id": "en_2015-11_887",
                "blip_selector": "iframes-for-sandboxing"
            },
            {
                "blip_id": 833,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Consumer-driven contract testing",
                "display_name": "Consumer-driven contract testing",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "168",
                "tag": null,
                "description": "<p>When two independently developed services are collaborating, changes to the supplier’s API can cause failures for all its consumers. Consuming services usually cannot test against live suppliers since such tests are slow and <a href=\"http://martinfowler.com/articles/nonDeterminism.html#RemoteServices\">brittle</a>, so it’s best to use <a href=\"http://martinfowler.com/bliki/TestDouble.html\">Test Doubles</a>, leading to the danger that the test doubles get out of sync with the real supplier service. Consumer teams can protect themselves from these failures by using <a href=\"http://martinfowler.com/bliki/IntegrationContractTest.html\">integration contract tests</a> – tests that compare actual service responses with test values. While such contract tests are valuable, they are even more useful when consuming services provide these tests to the supplier, who can then run all their consumers’ contract tests to determine if their changes are likely to cause problems – adopting <a href=\"http://www.martinfowler.com/articles/consumerDrivenContracts.html\">consumer-driven contracts</a>. Such <strong>consumer-driven contract tests</strong> are an essential part of a mature <a href=\"http://martinfowler.com/articles/microservice-testing/\">microservice testing</a> portfolio.</p>",
                "radarId": 1,
                "id": "en_2015-11_833",
                "blip_selector": "consumer-driven-contract-testing"
            },
            {
                "blip_id": 856,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Polly",
                "display_name": "Polly",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "33",
                "tag": null,
                "description": "<p>Several of our teams working on .NET projects have recommended <strong><a href=\"https://github.com/michael-wolfenden/Polly\">Polly</a></strong> as being useful in building microservice-based systems. It encourages the fluent expression of transient exception-handling policies and the Circuit Breaker pattern, including policies such as Retry, Retry Forever and Wait and Retry. Similar libraries already exist in other languages (Hystrix for Java for example), and Polly is a welcome addition from the .NET community. Integrating well with Polly is <strong><a href=\"https://www.thoughtworks.com/radar/tools/brighter\">Brighter</a></strong>. Brighter is another small open source .Net library that provides scaffolding to implement command invocation. Combining the two libraries provides useful circuit-breaking functionality especially in the context of the Ports and Adapters pattern and CQRS. Although they can be used separately, in the wild our teams find they work well together.</p>",
                "radarId": 67,
                "id": "en_2015-11_856",
                "blip_selector": "polly"
            },
            {
                "blip_id": 928,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "Concourse CI",
                "display_name": "Concourse CI",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "78",
                "tag": null,
                "description": "",
                "radarId": 73,
                "id": "en_2015-11_928",
                "blip_selector": "concourse-ci"
            },
            {
                "blip_id": 938,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "Material UI",
                "display_name": "Material UI",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "315",
                "tag": null,
                "description": "<p><a href=\"http://material-ui.com/\"><strong>Material UI</strong></a> provides reusable components for use in <a href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/react-js\">React</a> applications that implement Google's Material Design language. Filling a similar space to <a href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/twitter-bootstrap\">Twitter Bootstrap</a>, it gets you up and running quickly but doesn't have the same drawbacks as your application grows. <a href=\"http://elemental-ui.com/\">Elemental UI</a> is worth investigating as an alternative.</p>",
                "radarId": 98,
                "id": "en_2015-11_938",
                "blip_selector": "material-ui"
            },
            {
                "blip_id": 943,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "340",
                "name": "TLA+",
                "display_name": "TLA+",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "342",
                "tag": null,
                "description": "<p>Building systems using microservices requires us to think more deeply about failure isolation and testing. *<em><a href=\"https://lamport.azurewebsites.net/tla/tla.html\">TLA+</a> *</em>is a formal specification language that can be useful in both these scenarios. For failure isolation, TLA+ can be used to identify invariants in your system that can be monitored directly. An invariant can be the ratio of number of requests to one service to the number of requests to a second service, for example. Any change in this ratio would lead to an alert. TLA+ is also being used to identify subtle design flaws in distributed systems. Amazon, for example, used model-checking based on a formal specification written in TLA+ to identify subtle bugs in Dynamo DB before it was released to the public. For most systems, the investment required to create the formal specification and then perform model checking is probably too great; however, for critical systems - complex ones, or those with many users - we think it’s very valuable to have another tool in our toolbox.</p>",
                "radarId": 101,
                "id": "en_2015-11_943",
                "blip_selector": "tla"
            },
            {
                "blip_id": 903,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Enlive",
                "display_name": "Enlive",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "288",
                "tag": null,
                "description": "",
                "radarId": 90,
                "id": "en_2015-11_903",
                "blip_selector": "enlive"
            },
            {
                "blip_id": 884,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Docker for builds",
                "display_name": "Docker for builds",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "158",
                "tag": null,
                "description": "<p>One of the many innovative uses of <a href=\"https://www.docker.com/\">Docker</a> that we’ve seen on our projects is a technique to manage build-time dependencies. In the past, it was common to run build agents on an OS, augmented with dependencies needed for the target build. But with Docker it is possible to run the compilation step in an isolated environment complete with dependencies without contaminating the build agent. This technique of using <strong>Docker for builds</strong>  has proven particularly useful for compiling Golang binaries, and the <a href=\"https://github.com/CenturyLinkLabs/golang-builder\">golang-builder</a> container is available for this very purpose.</p>",
                "radarId": 9,
                "id": "en_2015-11_884",
                "blip_selector": "docker-for-builds"
            },
            {
                "blip_id": 846,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "280",
                "name": "Security Monkey",
                "display_name": "Security Monkey",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "18",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/Netflix/security_monkey\">Security Monkey</a></strong> is another tool in Netflix’s Simian Army, which is a suite of tools designed to ensure that systems are being built in a resilient fashion. As well as providing a (configurable) assessment of any potential security vulnerabilities in your AWS setup, it can also be used to monitor changes on an ongoing basis, alerting different groups as required. It does overlap in some ways with AWS’ own <a href=\"https://aws.amazon.com/premiumsupport/trustedadvisor/\">Trusted Advisor Report</a> and <a href=\"http://aws.amazon.com/cloudtrail/\">CloudTrail</a> service, as it was developed prior to both these services being made generally available, but its capabilities do go beyond these offerings. If either of those services don’t quite meet your requirements, Security Monkey is worth a look.</p>",
                "radarId": 83,
                "id": "en_2015-11_846",
                "blip_selector": "security-monkey"
            },
            {
                "blip_id": 810,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "70",
                "name": "Postman",
                "display_name": "Postman",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "23",
                "tag": null,
                "description": "<p><strong><a href=\"http://www.getpostman.com/features\">Postman</a></strong> is a Chrome extension that acts as a REST client in your browser, allowing you to create requests and inspect responses.  It is a useful tool when developing an API or implementing a client to call an existing API. Postman supports OAuth1 and OAuth2 tokens allowing addition of them to requests where necessary. The response is available as a prettified JSON or XML. With Postman you are able to retrieve a history of requests performed to quickly edit and test the API response to different data. It offers a suite of extensions that allow you to use it as a full-blown test runner too, although we discourage the record and replay style of testing it promotes.</p>",
                "radarId": 58,
                "id": "en_2015-11_810",
                "blip_selector": "postman"
            },
            {
                "blip_id": 889,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Mesosphere DCOS",
                "display_name": "Mesosphere DCOS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "231",
                "tag": null,
                "description": "",
                "radarId": 46,
                "id": "en_2015-11_889",
                "blip_selector": "mesosphere-dcos"
            },
            {
                "blip_id": 908,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "ievms",
                "display_name": "ievms",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "54",
                "tag": null,
                "description": "",
                "radarId": 77,
                "id": "en_2015-11_908",
                "blip_selector": "ievms"
            },
            {
                "blip_id": 850,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "285",
                "name": "Apache Kafka",
                "display_name": "Apache Kafka",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "84",
                "tag": null,
                "description": "<p>Many recent developments in enterprise software revolve around asynchronous sequences of immutable event sequences as opposed to synchronous, point-to-point requests that modify state. <a href=\"http://kafka.apache.org/\"><strong>Apache</strong>   <strong>Kafka</strong></a> is an open-source messaging framework that supports this architectural style by publishing ordered message feeds to many independent, lightweight consumers. Kafka’s unique design allows the number of consumers to scale while maintaining strong ordering on the messages.</p>",
                "radarId": 72,
                "id": "en_2015-11_850",
                "blip_selector": "apache-kafka"
            },
            {
                "blip_id": 869,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "H2O",
                "display_name": "H2O",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "247",
                "tag": null,
                "description": "<p>Predictive analytics are used in more and more products, often directly in end user-facing functionality. <a href=\"http://h2o.ai/\"><strong>H2O</strong></a> is an interesting open source package (with a startup behind it) that makes predictive analytics accessible to development teams, offering straightforward use of a wide variety of analytics, great performance and easy integration on JVM-based platforms. At the same time it integrates with the data scientists’ favorite tools, R and Python, as well as Hadoop and Spark.</p>",
                "radarId": 37,
                "id": "en_2015-11_869",
                "blip_selector": "h2o"
            },
            {
                "blip_id": 893,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Decoupling deployment from release",
                "display_name": "Decoupling deployment from release",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "155",
                "tag": null,
                "description": "",
                "radarId": 2,
                "id": "en_2015-11_893",
                "blip_selector": "decoupling-deployment-from-release"
            },
            {
                "blip_id": 883,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Event Storming",
                "display_name": "Event Storming",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "150",
                "tag": null,
                "description": "<p><a href=\"http://ziobrando.blogspot.be/2013/11/introducing-event-storming.html\"><strong>Event Storming</strong></a> is a useful way to do rapid “outside-in” domain modeling: starting with the events that occur in the domain rather than a static data model. Run as a facilitated workshop, it focuses on discovering key domain events, placing them along a timeline, identifying their triggers and then exploring their relationships. This approach is particularly useful for people taking a CQRS or <a href=\"https://www.thoughtworks.com/radar/techniques/event-sourcing\">Event Sourcing</a> approach. Getting the right people in the room is important - a blend of business and technical people who bring both the questions and the answers. Ensuring that you have enough wall space for modeling is the second key to success. Look to discover the big picture, with the goal of collectively understanding the domain in all of its complexity, before diving into solutions.</p>",
                "radarId": 10,
                "id": "en_2015-11_883",
                "blip_selector": "event-storming"
            },
            {
                "blip_id": 864,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "340",
                "name": "Particle Photon/Particle Electron",
                "display_name": "Particle Photon/Particle Electron",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "244",
                "tag": null,
                "description": "<p><strong><a href=\"https://www.particle.io/\">Particle</a></strong> (formally Spark.io) is a full stack solution for cloud connected devices. <strong>Particle Photon</strong> is a microcontroller with wifi module. <strong>Particle Electron</strong> is a variant that connects to a cellular network. Particle OS adds REST API to the devices. This simplifies the entry to IoT and building your own connected devices.</p>",
                "radarId": 48,
                "id": "en_2015-11_864",
                "blip_selector": "particle-photon-particle-electron"
            },
            {
                "blip_id": 834,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Phoenix Environments",
                "display_name": "Phoenix Environments",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "105",
                "tag": null,
                "description": "",
                "radarId": 16,
                "id": "en_2015-11_834",
                "blip_selector": "phoenix-environments"
            },
            {
                "blip_id": 921,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Microsoft Nano Server",
                "display_name": "Microsoft Nano Server",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "237",
                "tag": null,
                "description": "<p>In contrast to modern cloud and container solutions based on Linux, even Windows Server Core is large and unwieldy. Microsoft is reacting and has provided the <a href=\"http://www.theregister.co.uk/2015/05/15/wrestling_with_microsoft_nano_server_preview/?page=1\">first previews</a> of <a href=\"https://msdn.microsoft.com/en-us/library/mt126167.aspx\"><strong>Nano Server</strong></a>, a further-stripped-down version of Windows Server that drops the GUI stack, 32-bit Win32 support, local logins and remote desktop support, resulting in an on-disk size of about 400MB. The early previews are difficult to work with, and the final solution will be restricted to using the CoreCLR, but for companies that are interested in running .NET-based solutions, Nano Server is definitely worth a look at this stage.</p>",
                "radarId": 47,
                "id": "en_2015-11_921",
                "blip_selector": "microsoft-nano-server"
            },
            {
                "blip_id": 934,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "340",
                "name": "HyperResource",
                "display_name": "HyperResource",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "306",
                "tag": null,
                "description": "<p><strong><a href=\"http://hyperresource.com/doc/\">HyperResource</a></strong> is a Ruby framework for building a RESTful API client. The framework accepts JSON in <strong>HAL</strong> format and dynamically generates a model object complete with hypermedia links. Although the framework is still in its infancy, we like that it embraces <a href=\"http://martinfowler.com/articles/richardsonMaturityModel.html\">Richardson level 3 REST</a> for better service discoverability and self-documenting protocols.</p>",
                "radarId": 97,
                "id": "en_2015-11_934",
                "blip_selector": "hyperresource"
            },
            {
                "blip_id": 935,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Axon",
                "display_name": "Axon",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "279",
                "tag": null,
                "description": "<p>While we still have some reservations about <a href=\"http://martinfowler.com/bliki/CQRS.html\">CQRS</a> as a general pattern, the approach can work very well in specific places. In those specific situations, however, a lot of work is left to the developer to properly execute CQRS. <strong><a href=\"http://www.axonframework.org/\">Axon</a></strong> is a framework that can help with this on the JVM, and we’ve used it with some success. Although it certainly can’t be considered a perfect solution right now, it continues to evolve and may make much more sense than trying to write everything from scratch.</p>",
                "radarId": 94,
                "id": "en_2015-11_935",
                "blip_selector": "axon"
            },
            {
                "blip_id": 939,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "Traveling Ruby",
                "display_name": "Traveling Ruby",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "351",
                "tag": null,
                "description": "<p><a href=\"https://github.com/FooBarWidget/traveling-ruby\"><strong>Traveling Ruby</strong></a> makes it possible to distribute portable, ready-to-run, platform-agnostic Ruby binaries without the need to install an interpreter, packages or additional gems. It decouples running Ruby applications from the development environment they run in.</p>",
                "radarId": 102,
                "id": "en_2015-11_939",
                "blip_selector": "traveling-ruby"
            },
            {
                "blip_id": 904,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Browsersync",
                "display_name": "Browsersync",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "84",
                "tag": null,
                "description": "",
                "radarId": 59,
                "id": "en_2015-11_904",
                "blip_selector": "browsersync"
            },
            {
                "blip_id": 914,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Hosted IDE's",
                "display_name": "Hosted IDE's",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "129",
                "tag": null,
                "description": "",
                "radarId": 21,
                "id": "en_2015-11_914",
                "blip_selector": "hosted-ide-s"
            },
            {
                "blip_id": 860,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "REST-assured",
                "display_name": "REST-assured",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "26",
                "tag": null,
                "description": "<p><strong><a href=\"https://code.google.com/p/rest-assured/\">REST-assured</a></strong> is a Java domain specific language for testing and validating RESTful services. It simplifies the testing of REST based services built on top of HTTP Builder. REST-assured supports the different REST requests and can be used to validate and verify the responses from the APIs. It also provides a JSON schema validation and can thus be used to verify that the endpoints are returning the right types of expected data.</p>",
                "radarId": 68,
                "id": "en_2015-11_860",
                "blip_selector": "rest-assured"
            },
            {
                "blip_id": 944,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Frege",
                "display_name": "Frege",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "297",
                "tag": null,
                "description": "<p>Following many other programming languages, one of the language geeks’ absolute favourites, <a href=\"https://www.haskell.org/\">Haskell</a>, is now also available on the JVM in the form of <a href=\"https://github.com/Frege/frege\"><strong>Frege</strong></a>. This brings a purely functional programming language onto the platform, allowing for easy interoperability with other JVM languages and libraries.</p>",
                "radarId": 96,
                "id": "en_2015-11_944",
                "blip_selector": "frege"
            },
            {
                "blip_id": 809,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "205",
                "name": "IndexedDB",
                "display_name": "IndexedDB",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "39",
                "tag": null,
                "description": "<p>As single page applications and offline-first become more viable and widespread there is a growing need to persist data in the web browser. Local Storage is very easy to use and well supported by the web browsers. For more complex use cases, there is IndexedDB. While it can be a good solution we recommend to only use it when absolutely necessary, due to the increase in complexity and a somewhat clumsy API. We have also had positive experience with the <a href=\"https://github.com/mozilla/localForage\">localForage</a> framework that provides an abstraction layer over the various persistence solutions.</p>",
                "radarId": 66,
                "id": "en_2015-11_809",
                "blip_selector": "indexeddb"
            },
            {
                "blip_id": 913,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "RAML",
                "display_name": "RAML",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "24",
                "tag": null,
                "description": "",
                "radarId": 82,
                "id": "en_2015-11_913",
                "blip_selector": "raml"
            },
            {
                "blip_id": 918,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "365",
                "name": "High performance envy/web scale envy",
                "display_name": "High performance envy/web scale envy",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "158",
                "tag": null,
                "description": "",
                "radarId": 25,
                "id": "en_2015-11_918",
                "blip_selector": "high-performance-envy-web-scale-envy"
            },
            {
                "blip_id": 796,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Apache Mesos",
                "display_name": "Apache Mesos",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "191",
                "tag": null,
                "description": "",
                "radarId": 32,
                "id": "en_2015-11_796",
                "blip_selector": "apache-mesos"
            },
            {
                "blip_id": 784,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "60",
                "name": "NoPSD",
                "display_name": "NoPSD",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "129",
                "tag": null,
                "description": "<p>'Just In Time Design' is an important and useful concept for visual design that the <a href=\"https://www.thoughtworks.com/p2magazine/issue02/continuous-design/\"><strong>NoPSD</strong></a> movement attempts to capture. You don't need to design the whole application or every UI element up front. Design things as you need them with as lightweight tools as you can use. We have seen a corresponding growth in simpler tools with faster learning curves, such as <a href=\"http://www.sketchapp.com/\"><strong>Sketch</strong></a>, as well as an increasing return to pen-and-paper (especially when paired with an existing robust <a href=\"https://www.thoughtworks.com/radar/techniques/living-css-style-guides\"><strong>digital style guide</strong></a>). Because of the limitations of flat mock-ups when you’re designing for screens, creating prototypes of varying fidelity with tools such as <a href=\"http://www.invisionapp.com/\"><strong>Invision</strong></a>, <a href=\"http://framerjs.com/\"><strong>FramerJS</strong></a> and <strong>Origami</strong> - or simply HTML/CSS and a bit of JavaScript - has also become increasingly common and valuable for communicating design intent.</p>",
                "radarId": 4,
                "id": "en_2015-11_784",
                "blip_selector": "nopsd"
            },
            {
                "blip_id": 838,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "95",
                "name": "Products over projects",
                "display_name": "Products over projects",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "116",
                "tag": null,
                "description": "",
                "radarId": 5,
                "id": "en_2015-11_838",
                "blip_selector": "products-over-projects"
            },
            {
                "blip_id": 886,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "BFF - Backend for frontends",
                "display_name": "BFF - Backend for frontends",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "165",
                "tag": null,
                "description": "",
                "radarId": 8,
                "id": "en_2015-11_886",
                "blip_selector": "bff-backend-for-frontends"
            },
            {
                "blip_id": 853,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "240",
                "name": "Hamms",
                "display_name": "Hamms",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "45",
                "tag": null,
                "description": "<p>Many many wonderful stories of failure in our industry are caused by the assumption that networks are always reliable and servers respond quickly and correctly all the time. <a href=\"https://github.com/kevinburke/hamms\"><strong>Hamms</strong></a> is an interesting open-source tool which acts as a badly behaved HTTP server, triggering a number of failures including connection failures or slow and/or malformed responses. It may be useful for testing that your software handles failures gracefully.</p>",
                "radarId": 65,
                "id": "en_2015-11_853",
                "blip_selector": "hamms"
            },
            {
                "blip_id": 941,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "OkHttp",
                "display_name": "OkHttp",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "324",
                "tag": null,
                "description": "",
                "radarId": 99,
                "id": "en_2015-11_941",
                "blip_selector": "okhttp"
            },
            {
                "blip_id": 932,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Superficial private cloud",
                "display_name": "Superficial private cloud",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "252",
                "tag": null,
                "description": "",
                "radarId": 55,
                "id": "en_2015-11_932",
                "blip_selector": "superficial-private-cloud"
            },
            {
                "blip_id": 793,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "390",
                "name": "SAFe™",
                "display_name": "SAFe™",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "113",
                "tag": null,
                "description": "",
                "radarId": 29,
                "id": "en_2015-11_793",
                "blip_selector": "safe"
            },
            {
                "blip_id": 877,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "250",
                "name": "Offline first web applications",
                "display_name": "Offline first web applications",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "113",
                "tag": null,
                "description": "<p><strong>Offline first web applications</strong> provide the ability to design web applications for offline access by employing caching and updating mechanisms. The implementation requires a flag in the DOM to check whether the accessing device is offline or online, accessing local storage when offline, and synchronising data when online. All the major browsers now support an offline mode, which bootstraps the process of downloading and caching the resources such as HTML, CSS, JavaScript, images and other kinds of resources. There are some tools which help simplify offline first implementation such as <a href=\"http://hood.ie/\"><strong>Hoodie</strong></a>, and <a href=\"http://couchdb.apache.org/\"><strong>CouchDB</strong></a> also offers ability to work with a locally deployed application on a local data storage.</p>",
                "radarId": 15,
                "id": "en_2015-11_877",
                "blip_selector": "offline-first-web-applications"
            },
            {
                "blip_id": 775,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Spring Boot",
                "display_name": "Spring Boot",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "342",
                "tag": null,
                "description": "<p><a href=\"http://projects.spring.io/spring-boot\"><strong>Spring Boot</strong></a> allows easy setup of standalone Spring-based applications. It's ideal for pulling up new microservices and easy to deploy. It also makes data access less of a pain, thanks to the JPA mappings through Spring Data. We like that Spring Boot simplifies Java services built with Spring but have learned to be cautious of the many dependencies. Spring still lurks just beneath the surface. If you’re writing microservices with Java, you might also consider using <strong>Dropwizard</strong> or a microframework like <a href=\"http://sparkjava.com/\">Spark</a> to get the benefits of Spring Boot without the enormous weight of Spring.</p>",
                "radarId": 93,
                "id": "en_2015-11_775",
                "blip_selector": "spring-boot"
            },
            {
                "blip_id": 866,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "CoreCLR and CoreFX",
                "display_name": "CoreCLR and CoreFX",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "205",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/dotnet/coreclr\">CoreCLR</a></strong> and** <a href=\"https://github.com/dotnet/corefx\">CoreFX</a>** is the core platform and framework for .NET. Although not new, they have recently been open sourced by Microsoft. A key change is that these dependencies are bin-deployable, they do not need to be installed on a machine in advance.  This eases side-by-side deployments, allowing applications to use different framework versions without conflicts. Something written in .NET is then an implementation detail, you can install a .NET dependency into any environment. A .NET tool is no different than something written in C from an external dependency perspective, making it a much more attractive option for general purpose applications and utilities. CoreFX is also being factored into individual NuGet dependencies, so that applications can pull what they need, keeping the footprint for .NET applications and libraries small and making it easier to replace part of the framework.</p>",
                "radarId": 42,
                "id": "en_2015-11_866",
                "blip_selector": "coreclr-and-corefx"
            },
            {
                "blip_id": 692,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "SPDY",
                "display_name": "SPDY",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "234",
                "tag": null,
                "description": "<p>The <strong><a href=\"https://www.chromium.org/spdy/spdy-whitepaper\">SPDY</a></strong> protocol was developed by Google from 2009 as an experiment to provide an alternative protocol to address performance shortcomings of HTTP/1.1. The new HTTP/2 standard protocol includes many of the key performance features of SPDY, and Google has announced it will drop browser SPDY support in early 2016. If your application requires the features of SPDY, we recommend you look instead at HTTP/2.</p>",
                "radarId": 54,
                "id": "en_2015-11_692",
                "blip_selector": "spdy"
            },
            {
                "blip_id": 892,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "125",
                "name": "ECMAScript 6",
                "display_name": "ECMAScript 6",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "292",
                "tag": null,
                "description": "",
                "radarId": 87,
                "id": "en_2015-11_892",
                "blip_selector": "ecmascript-6"
            },
            {
                "blip_id": 919,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "AWS Lambda",
                "display_name": "AWS Lambda",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "213",
                "tag": null,
                "description": "<p>AWS releases a huge number of new features on what seems like a monthly basis, so it can sometimes be hard for any new service offering to rise above the noise, but <strong><a href=\"https://aws.amazon.com/lambda/\">Lambda</a></strong> certainly manages to attract notice. Initially just supporting JavaScript, but now adding support for JVM-based applications (with more no doubt to follow), Lambda allows you to fire up very short-lived processes either in reaction to an event, or via a call from the related <a href=\"https://aws.amazon.com/api-gateway/\">API Gateway</a>. For stateless services, this means you don’t need to worry about running any long-lived machines, potentially reducing costs and improving security. Despite other forays into the PaaS space by AWS, Lambda looks the closest to getting this right.</p>",
                "radarId": 34,
                "id": "en_2015-11_919",
                "blip_selector": "aws-lambda"
            },
            {
                "blip_id": 899,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "205",
                "name": "Docker Toolbox",
                "display_name": "Docker Toolbox",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "65",
                "tag": null,
                "description": "<p>Previously, we recommended <a href=\"https://www.thoughtworks.com/radar/tools/boot2docker\">boot2docker</a> as a way of easily running Docker on your local Windows or OS X machine. <strong><a href=\"https://www.docker.com/toolbox\">Docker Toolbox</a></strong> now replaces boot2docker, adding some tooling as well. Now included is <a href=\"https://kitematic.com/\">Kitematic</a> for managing your containers, as well as <a href=\"https://docs.docker.com/compose/\">Docker Compose</a> for managing multi-Docker setup (Mac only). It can be used safely as a drop-in replacement for boot2docker, and it will even handle the upgrade for you.</p>",
                "radarId": 62,
                "id": "en_2015-11_899",
                "blip_selector": "docker-toolbox"
            },
            {
                "blip_id": 872,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Application Servers",
                "display_name": "Application Servers",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "198",
                "tag": null,
                "description": "",
                "radarId": 52,
                "id": "en_2015-11_872",
                "blip_selector": "application-servers"
            },
            {
                "blip_id": 902,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Carthage",
                "display_name": "Carthage",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "78",
                "tag": null,
                "description": "",
                "radarId": 60,
                "id": "en_2015-11_902",
                "blip_selector": "carthage"
            },
            {
                "blip_id": 923,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Ceph",
                "display_name": "Ceph",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2015-11",
                "theta": "199",
                "tag": null,
                "description": "",
                "radarId": 41,
                "id": "en_2015-11_923",
                "blip_selector": "ceph"
            }
        ]
    },
    {
        "date": "2016-04",
        "blips": [
            {
                "blip_id": 970,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Pitest",
                "display_name": "Pitest",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "30",
                "tag": null,
                "description": "",
                "radarId": 76,
                "id": "en_2016-04_970",
                "blip_selector": "pitest"
            },
            {
                "blip_id": 871,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "70",
                "name": "Threat Modeling",
                "display_name": "Threat Modeling",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "113",
                "tag": null,
                "description": "",
                "radarId": 3,
                "id": "en_2016-04_871",
                "blip_selector": "threat-modeling"
            },
            {
                "blip_id": 903,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "250",
                "name": "Enlive",
                "display_name": "Enlive",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "310",
                "tag": null,
                "description": "<p>Most templating frameworks like <a href=\"https://mustache.github.io/\">Mustache</a> or <a href=\"http://freemarker.org/\">FreeMarker</a> mix code with markup in a single file to implement complex, dynamic content. <a href=\"https://github.com/cgrand/enlive/wiki\"><strong>Enlive</strong></a> is a Clojure-based templating framework that completely separates programming language from HTML markup and employs CSS selectors to find and replace parts of the document. Enlive demonstrates the power of functional programming to implement complex behavior through a series of simple, composable functions acting on a common abstraction. Our teams working in Clojure have found it to be a very useful and straightforward tool.</p>",
                "radarId": 90,
                "id": "en_2016-04_903",
                "blip_selector": "enlive"
            },
            {
                "blip_id": 982,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "TensorFlow",
                "display_name": "TensorFlow",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "263",
                "tag": null,
                "description": "",
                "radarId": 50,
                "id": "en_2016-04_982",
                "blip_selector": "tensorflow"
            },
            {
                "blip_id": 931,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Over-ambitious API Gateways",
                "display_name": "Over-ambitious API Gateways",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "225",
                "tag": null,
                "description": "<p>One of our common complaints is the pushing of business smarts into middleware, resulting in application servers and enterprise service buses with ambitions to run critical application logic. These require complex programming in environments not well suited to the purpose. We're seeing a worrying re-emergence of this disease with <strong>overambitious API Gateway</strong> products. API Gateways can provide utility in dealing with some generic concerns - for example, authentication and rate-limiting - but any domain smarts such as data transformation or rule processing should live in applications or services where they can be controlled by product teams working closely with the domains they support.</p>",
                "radarId": 52,
                "id": "en_2016-04_931",
                "blip_selector": "over-ambitious-api-gateways"
            },
            {
                "blip_id": 1004,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "380",
                "name": "A single CI instance for all teams",
                "display_name": "A single CI instance for all teams",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "165",
                "tag": null,
                "description": "",
                "radarId": 23,
                "id": "en_2016-04_1004",
                "blip_selector": "a-single-ci-instance-for-all-teams"
            },
            {
                "blip_id": 895,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "260",
                "name": "GitUp",
                "display_name": "GitUp",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "56",
                "tag": null,
                "description": "<p>Git can be confusing. Really confusing. And even when it’s used in a simple trunk-based development process, there are still enough nuances to how it works that people can tie themselves in knots from time to time. When this happens, having an understanding of how Git works under the hood is very useful, and <strong><a href=\"http://gitup.co/\">GitUp</a></strong> is a Mac-based tool that gives you exactly that. GitUp provides a graphical representation of what is happening as you type normal Git commands into the terminal. You can learn the various Git commands while also understanding what each one does as you use it. GitUp is a useful tool for both people new to Git and those with more Git experience.</p>",
                "radarId": 59,
                "id": "en_2016-04_895",
                "blip_selector": "gitup"
            },
            {
                "blip_id": 932,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Superficial private cloud",
                "display_name": "Superficial private cloud",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "247",
                "tag": null,
                "description": "",
                "radarId": 53,
                "id": "en_2016-04_932",
                "blip_selector": "superficial-private-cloud"
            },
            {
                "blip_id": 960,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Dagger",
                "display_name": "Dagger",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "286",
                "tag": null,
                "description": "",
                "radarId": 87,
                "id": "en_2016-04_960",
                "blip_selector": "dagger"
            },
            {
                "blip_id": 977,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Pivotal Cloud Foundry",
                "display_name": "Pivotal Cloud Foundry",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "250",
                "tag": null,
                "description": "",
                "radarId": 36,
                "id": "en_2016-04_977",
                "blip_selector": "pivotal-cloud-foundry"
            },
            {
                "blip_id": 836,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Reactive architectures",
                "display_name": "Reactive architectures",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "98",
                "tag": null,
                "description": "",
                "radarId": 14,
                "id": "en_2016-04_836",
                "blip_selector": "reactive-architectures"
            },
            {
                "blip_id": 881,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "QA in production",
                "display_name": "QA in production",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "105",
                "tag": null,
                "description": "<p>Traditionally, QA roles have focused on assessing the quality of a software product in a pre-production environment. With the rise of Continuous Delivery, the QA role is shifting to include analyzing software product quality in production. This involves monitoring of the production systems, coming up with alert conditions to detect urgent errors, determining ongoing quality issues and figuring out what measurements you can use in the production environment to make this work. While there is a danger that some organizations will go too far and neglect pre-production QA, our experience shows that <strong>QA in production</strong> is a valuable tool for organizations that have already progressed to a reasonable degree of Continuous Delivery.</p>",
                "radarId": 13,
                "id": "en_2016-04_881",
                "blip_selector": "qa-in-production"
            },
            {
                "blip_id": 997,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "340",
                "name": "Content Security Policies",
                "display_name": "Content Security Policies",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "170",
                "tag": null,
                "description": "",
                "radarId": 15,
                "id": "en_2016-04_997",
                "blip_selector": "content-security-policies"
            },
            {
                "blip_id": 793,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "387",
                "name": "SAFe™",
                "display_name": "SAFe™",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "105",
                "tag": null,
                "description": "<p>The <a href=\"http://www.scaledagileframework.com/\">Scaled Agile Framework®</a> (aka  <strong>SAFe™</strong> ) continues to gain mindshare in many organizations at scale. In addition, tools and certification are becoming a significant aspect of the adoption of SAFe™. We continue to be concerned that actual adoptions are prone to over-standardization and are tending towards large release practices, resulting in practices that hinder agile adoption. In its place, we continue to recommend lean approaches that include experimentation and incorporate continuous improvement practices like the Improvement Katas offer organizations a better model for scaling agile.</p>\n\n<p>Scaled Agile Framework® and SAFe™ are trademarks of Scaled Agile, Inc.</p>",
                "radarId": 27,
                "id": "en_2016-04_793",
                "blip_selector": "safe"
            },
            {
                "blip_id": 827,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "React.js",
                "display_name": "React.js",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "306",
                "tag": null,
                "description": "",
                "radarId": 83,
                "id": "en_2016-04_827",
                "blip_selector": "react-js"
            },
            {
                "blip_id": 896,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "SysDig",
                "display_name": "SysDig",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "21",
                "tag": null,
                "description": "<p>Although <strong><a href=\"http://www.sysdig.org/\">SysDig</a></strong> isn’t the newest tool on the Technology Radar, we’re still surprised by how many people haven’t heard of it. A pluggable open source CLI for Linux system troubleshooting, SysDig has some pretty powerful features. One of the key things we like is the ability to generate a system trace on a machine that is experiencing difficulties, which you can then interrogate afterward to find out what was happening. SysDig also contains support for working with containers, something that makes a previously useful tool even more powerful.</p>",
                "radarId": 64,
                "id": "en_2016-04_896",
                "blip_selector": "sysdig"
            },
            {
                "blip_id": 953,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Fetch",
                "display_name": "Fetch",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "319",
                "tag": null,
                "description": "<p>Our teams are moving away from JQuery or raw XHR for remote JavaScript calls and instead are using the new <a href=\"https://fetch.spec.whatwg.org/\">Fetch</a> API and the <strong><a href=\"https://github.com/github/fetch\">Fetch</a></strong> polyfill in particular. The semantics remain similar but have cleaner support for promises and CORS support. We are seeing this as the new de-facto approach.</p>",
                "radarId": 91,
                "id": "en_2016-04_953",
                "blip_selector": "fetch"
            },
            {
                "blip_id": 914,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Hosted IDE's",
                "display_name": "Hosted IDE's",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "160",
                "tag": null,
                "description": "<p>Many organizations want to leverage distributed or offshore development but have security concerns with their code and other intellectual property sitting outside their control. The result is often to use high-latency remote-desktop solutions for development, adhering to an organization’s security controls but crippling developer productivity. An alternative is to use a <strong>Hosted IDE</strong> delivered to a browser via VPN. The IDE, code and build environment are hosted within the organization's private cloud, easing security concerns, and the developer experience is significantly improved. Tools in this space include <a href=\"https://orionhub.org/\">Orion</a> and <a href=\"http://www.eclipse.org/che/\">Che</a> from the Eclipse Foundation, <a href=\"https://c9.io/\">Cloud9</a> and <a href=\"https://codenvy.com/\">Code Envy</a>.</p>",
                "radarId": 16,
                "id": "en_2016-04_914",
                "blip_selector": "hosted-ide-s"
            },
            {
                "blip_id": 987,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "ESP8266",
                "display_name": "ESP8266",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "218",
                "tag": null,
                "description": "<p>Our growing ranks of hardware hackers have been excited by the <strong><a href=\"http://esp8266.net/\">ESP8266</a></strong> Wi-Fi microcontroller. Rather than a specific technology innovation, it is the combination of low price point and small form factor that has sparked an inflection point in people's thinking about what is now feasible to achieve with custom hardware devices. Its main characteristics are: Wi-Fi capabilities (it can act as station, access point or a combination of both), low power, open hardware, Arduino SDK programmability, Lua programmability, huge community support and low cost compared with other IoT modules.</p>",
                "radarId": 43,
                "id": "en_2016-04_987",
                "blip_selector": "esp8266"
            },
            {
                "blip_id": 972,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Apache Flink",
                "display_name": "Apache Flink",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "84",
                "tag": null,
                "description": "<p><strong><a href=\"http://flink.apache.org/\">Apache Flink</a></strong> is a new-generation platform for scalable distributed batch and stream processing. At its core is a streaming data-flow engine. It also supports tabular (SQL-like), graph-processing and machine-learning operations. Apache Flink stands out with feature-rich capabilities for stream processing: event time, rich streaming window operations, fault tolerance and exactly-once semantics. While it hasn't reached version 1.0, it has raised significant community interest due to innovations in stream processing, memory handling, state management and simplicity of configuration.</p>",
                "radarId": 67,
                "id": "en_2016-04_972",
                "blip_selector": "apache-flink"
            },
            {
                "blip_id": 834,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "Phoenix Environments",
                "display_name": "Phoenix Environments",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "113",
                "tag": null,
                "description": "<p>The time taken to provision and update environments continues to be a significant bottleneck on many software projects. Phoenix Environments can help with this delay by extending the idea of <a href=\"http://martinfowler.com/bliki/PhoenixServer.html\">Phoenix Servers</a> to cover entire environments. We feel this is such a valuable and time-saving technique that you should consider trialing this approach. Using automation, we can create whole environments - including network configuration, load balancing and firewall ports - for example by using <a href=\"https://aws.amazon.com/cloudformation/\"><strong>CloudFormation</strong></a> in AWS. We can then prove that the process works by tearing the environments down and recreating them from scratch on a regular basis. <strong>Phoenix Environments</strong> can support provisioning new environments for testing, development, UAT and disaster recovery. As with Phoenix Servers, this pattern is not always applicable, and we need to think carefully about things like state and dependencies. Treating the whole environment as a <a href=\"http://martinfowler.com/bliki/BlueGreenDeployment.html\">blue/green deployment</a> can be one approach when environment reconfiguration needs to be done.</p>",
                "radarId": 12,
                "id": "en_2016-04_834",
                "blip_selector": "phoenix-environments"
            },
            {
                "blip_id": 892,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "125",
                "name": "ES6",
                "display_name": "ES6",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "288",
                "tag": null,
                "description": "<p>Over many years, JavaScript has grown to become probably the most widely used programming language in the world. Nevertheless, the language itself has a few problems that many have attempted to address by using libraries or even by implementing their own languages that run on top of JavaScript (of which we’ve mentioned both <a href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/coffeescript\">CoffeeScript</a> and <a href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/clojurescript\">ClojureScript</a> before). <strong><a href=\"http://es6-features.org/\">ES6</a></strong> (aka ECMAScript 6 or ECMAScript 2015), the new version of JavaScript, addresses many of the concerns of the older versions currently in use. Although browser support is scarce, support from mature transpilers like <a href=\"http://babeljs.io\">Babel</a> allows you to write ES6 and have it supported in older browsers. For new projects, we strongly suggest starting with ES6 from day one.</p>",
                "radarId": 82,
                "id": "en_2016-04_892",
                "blip_selector": "es6"
            },
            {
                "blip_id": 950,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Jepsen",
                "display_name": "Jepsen",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "48",
                "tag": null,
                "description": "<p>With the growth in usage of NoSQL data stores, and the growth in popularity of polyglot approaches to persistence, teams now have many choices when it comes to storing their data. While this has brought many advantages, product behavior with flaky networks can introduce subtle (and not so subtle) issues that are often not well understood, even in some cases by the product developers themselves. The <a href=\"https://github.com/aphyr/jepsen\"><strong>Jepsen</strong></a> toolkit and accompanying <a href=\"https://aphyr.com/tags/Jepsen\">blog</a> have become the de-facto reference for anyone looking to understand how different database and queuing technologies react under adverse conditions. Crucially, the approach to testing, which includes clients in the transactions, shines a spotlight on possible failure modes for many teams building microservices.</p>",
                "radarId": 73,
                "id": "en_2016-04_950",
                "blip_selector": "jepsen"
            },
            {
                "blip_id": 967,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Pinpoint",
                "display_name": "Pinpoint",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "36",
                "tag": null,
                "description": "",
                "radarId": 75,
                "id": "en_2016-04_967",
                "blip_selector": "pinpoint"
            },
            {
                "blip_id": 900,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "NPM for all the things",
                "display_name": "NPM for all the things",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "120",
                "tag": null,
                "description": "<p>The JavaScript world has a plethora of dependency and package-management tools, all of which rely on the Node Package Manager (NPM). Teams are starting to see these extra tools as redundant and are recommending that if you can use solely NPM for package and dependency management, you should. The simplification of using <strong>NPM for all the things</strong> helps reduce some of the churn in the JavaScript tools space.</p>",
                "radarId": 11,
                "id": "en_2016-04_900",
                "blip_selector": "npm-for-all-the-things"
            },
            {
                "blip_id": 893,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Decoupling deployment from release",
                "display_name": "Decoupling deployment from release",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "158",
                "tag": null,
                "description": "<p>Implementing <a href=\"http://martinfowler.com/bliki/ContinuousDelivery.html\">Continuous Delivery</a> continues to be a challenge for many organizations, and it remains important to highlight useful techniques such as <strong>decoupling deployment from release</strong>. We recommend strictly using the term <em>Deployment</em> when referring to the act of deploying a change to application components or infrastructure. The term <em>Release</em> should be used when a feature change is released to end users, with a business impact. Using techniques such as feature toggles and dark launches, we can deploy changes to production systems more frequently without releasing features. More-frequent deployments reduce the risk associated with change, while business stakeholders retain control over when features are released to end users.</p>",
                "radarId": 1,
                "id": "en_2016-04_893",
                "blip_selector": "decoupling-deployment-from-release"
            },
            {
                "blip_id": 954,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Robolectric",
                "display_name": "Robolectric",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "343",
                "tag": null,
                "description": "",
                "radarId": 94,
                "id": "en_2016-04_954",
                "blip_selector": "robolectric"
            },
            {
                "blip_id": 887,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "iFrames for sandboxing",
                "display_name": "iFrames for sandboxing",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "128",
                "tag": null,
                "description": "<p>Modern web pages tend to contain a plethora of JavaScript widgets and snippets coming from a variety of third-party sources. This can have a negative impact on both security and performance. While we are still waiting for fuller JavaScript isolation with web components, our teams have benefited from using HTML5 <a href=\"http://www.html5rocks.com/en/tutorials/security/sandboxed-iframes/\"><strong>iFrames for sandboxing</strong></a> untrusted JavaScript.</p>",
                "radarId": 10,
                "id": "en_2016-04_887",
                "blip_selector": "iframes-for-sandboxing"
            },
            {
                "blip_id": 919,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "215",
                "name": "AWS Lambda",
                "display_name": "AWS Lambda",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "200",
                "tag": null,
                "description": "<p>Our teams continue to enjoy using <strong><a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a></strong> and are beginning to use it to experiment with <a href=\"/radar/techniques/serverless-architecture\">Serverless architectures</a>, combining Lambda with the <a href=\"https://aws.amazon.com/api-gateway/\">API Gateway</a> to produce highly scalable systems with invisible infrastructure. We have run into significant problems using Java for Lambda functions, with erratic latencies up to several seconds as the Lambda container is started. We recommend sticking with JavaScript or Python for the time being.</p>",
                "radarId": 31,
                "id": "en_2016-04_919",
                "blip_selector": "aws-lambda"
            },
            {
                "blip_id": 897,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Gitrob",
                "display_name": "Gitrob",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "72",
                "tag": null,
                "description": "<p>Attackers continue to use automated software to crawl public GitHub repositories to find AWS credentials and spin up EC2 instances to mine Bitcoins or for other nefarious purposes. Although adoption of tools like <a href=\"https://github.com/AGWA/git-crypt\">git-crypt</a> and <a href=\"/radar/tools/blackbox\">Blackbox</a> to safely store secrets such as passwords and access tokens in code repositories is increasing, it is still all too common that secrets are stored unprotected. It is also not uncommon to see project secrets accidentally checked in to developers' personal repositories. <a href=\"https://github.com/michenriksen/gitrob\"><strong>Gitrob</strong></a> can help minimize the damage of exposing secrets. It scans an organization's GitHub repositories, flagging all files that might contain sensitive information that shouldn't have been pushed to the repository. The current release of the tool has some limitations: It can only be used to scan public GitHub organizations and their members, it doesn't inspect the contents of files, it doesn't review the entire commit history, and it fully scans all repositories each time it is run. Despite these limitations, it can be a helpful reactive tool to help alert teams before it is too late. It should be considered a complementary approach to a proactive tool such as <a href=\"https://github.com/thoughtworks/talisman\">Talisman</a>.</p>",
                "radarId": 69,
                "id": "en_2016-04_897",
                "blip_selector": "gitrob"
            },
            {
                "blip_id": 929,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Presto",
                "display_name": "Presto",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "244",
                "tag": null,
                "description": "<p><strong><a href=\"https://prestodb.io/\">Presto</a></strong> is an open source distributed SQL query engine designed and optimized for running interactive analytics workloads. Presto's massively parallel processing architecture - combined with advanced code-generation techniques and in-memory processing pipelines - makes it highly scalable. It supports a large subset of ANSI SQL including complex queries, joins, aggregations and window functions. Presto comes with support for a wide range of data sources including <strong>Hive</strong> , <strong>Cassandra</strong> , <strong>MySQL</strong> and <strong>PostgreSQL</strong> , thereby unifying the interactive analytics interface across data stores of an organization. Applications can connect to Presto using its JDBC interface.</p>",
                "radarId": 47,
                "id": "en_2016-04_929",
                "blip_selector": "presto"
            },
            {
                "blip_id": 924,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "AWS ECS",
                "display_name": "AWS ECS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "192",
                "tag": null,
                "description": "<p>The <strong><a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html\">Elastic Container Service (ECS)</a></strong> is AWS’ entry into the multihost Docker space. Although there is a lot of competition in this area, there aren’t many off-premises managed solutions out there yet. Although ECS seems like a good first step, we are worried that it is overly complicated at the moment and lacks a good abstraction layer. If you want to run <a href=\"https://www.docker.com/\">Docker</a> on AWS, though, this tool should certainly be high on your list. Just don’t expect it to be easy to get started with.</p>",
                "radarId": 39,
                "id": "en_2016-04_924",
                "blip_selector": "aws-ecs"
            },
            {
                "blip_id": 676,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Elixir",
                "display_name": "Elixir",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "310",
                "tag": null,
                "description": "<p>We continue to see a lot of excitement from people using the <a href=\"http://elixir-lang.org/\"><strong>Elixir</strong></a> programming language. Elixir, which is built on top of the Erlang virtual machine, is showing promise for creating highly concurrent and fault-tolerant systems. Elixir has distinctive features such as the Pipe operator, which allows developers to build a pipeline of functions as you would in the UNIX command shell. The shared byte code allows Elixir to interoperate with Erlang and leverage existing libraries while supporting tools such as the Mix build tool, the Iex interactive shell and the ExUnit unit testing framework.</p>",
                "radarId": 100,
                "id": "en_2016-04_676",
                "blip_selector": "elixir"
            },
            {
                "blip_id": 986,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "GraphQL",
                "display_name": "GraphQL",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "327",
                "tag": null,
                "description": "",
                "radarId": 102,
                "id": "en_2016-04_986",
                "blip_selector": "graphql"
            },
            {
                "blip_id": 888,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Monitoring of invariants",
                "display_name": "Monitoring of invariants",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "140",
                "tag": null,
                "description": "<p>In monitoring, the common approach is to conceive of erroneous conditions and set alerts when these appear. But it’s often difficult to enumerate the myriad failure modes in a software system. <strong>Monitoring of invariants</strong> is a complementary approach to setting expected normal ranges, often by examining historical behavior, and alerting whenever a system goes outside those bounds.</p>",
                "radarId": 18,
                "id": "en_2016-04_888",
                "blip_selector": "monitoring-of-invariants"
            },
            {
                "blip_id": 969,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "HashiCorp Vault",
                "display_name": "HashiCorp Vault",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "60",
                "tag": null,
                "description": "<p>Having a way to securely manage secrets is increasingly becoming a huge project issue. The old idea of just having a file with secrets or environment variables is becoming hard to manage, especially in environments with multiple applications like <a href=\"/radar/techniques/microservices\">microservices</a> or microcontainer environments, where the applications need to access a multitude of secrets. <a href=\"https://github.com/hashicorp/vault\"><strong>HashiCorp Vault</strong></a> is a promising tool that tries to solve the problem by providing mechanisms for securely accessing secrets through an unified interface. It has some features that make life easier, such as encryption and automatically generating secrets for known tools, among others.</p>",
                "radarId": 71,
                "id": "en_2016-04_969",
                "blip_selector": "hashicorp-vault"
            },
            {
                "blip_id": 913,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "325",
                "name": "RAML",
                "display_name": "RAML",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "18",
                "tag": null,
                "description": "<p>With a growing landscape of services providing RESTful APIs, it is becoming increasingly important to document them. We have previously mentioned <a href=\"https://www.thoughtworks.com/radar/tools/swagger\">Swagger</a>, and in this Technology Radar we’d like to highlight the RESTful API modeling language (<a href=\"http://raml.org/\"><strong>RAML</strong></a>). Our teams feel that in comparison to Swagger it is more lightweight and moves the focus from adding documentation to existing APIs to designing APIs.</p>",
                "radarId": 78,
                "id": "en_2016-04_913",
                "blip_selector": "raml"
            },
            {
                "blip_id": 937,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "React Native",
                "display_name": "React Native",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "327",
                "tag": null,
                "description": "",
                "radarId": 92,
                "id": "en_2016-04_937",
                "blip_selector": "react-native"
            },
            {
                "blip_id": 775,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "95",
                "name": "Spring Boot",
                "display_name": "Spring Boot",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "324",
                "tag": null,
                "description": "",
                "radarId": 84,
                "id": "en_2016-04_775",
                "blip_selector": "spring-boot"
            },
            {
                "blip_id": 940,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Sleepy Puppy",
                "display_name": "Sleepy Puppy",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "6",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/Netflix/sleepy-puppy\">Sleepy Puppy</a></strong> is a delayed cross-site scripting (XSS) payload-management framework recently open sourced by Netflix. It enables you to test vulnerabilities for XSS past the target application when the perpetrator intends to attack a secondary underlying system. With XSS being one of the OWASP Top10, we see this framework assisting with automated security checks for several applications. It simplifies the capturing, managing and tracking of XSS propagation over long periods of time, with customizable payloads. Sleepy puppy also exposes an API that can be integrated with vulnerability tools like <a href=\"https://www.thoughtworks.com/radar/tools/zap\">ZAP</a>, for automated security checks.</p>",
                "radarId": 80,
                "id": "en_2016-04_940",
                "blip_selector": "sleepy-puppy"
            },
            {
                "blip_id": 872,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Application Servers",
                "display_name": "Application Servers",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "202",
                "tag": null,
                "description": "<p>The rise of containers, phoenix servers and continuous delivery has seen a move away from the usual approach to deploying web applications. Traditionally we have built an artifact and then installed that artifact into an application server. The result was long feedback loops for changes, increased build times and the not insignificant overhead of managing these application servers in production. Many of them are a pain to automate too. Most teams we work with favor bundling an embedded http server within your web application. There are plenty of options available: Jetty, SimpleWeb, Webbit and Owin Self-Host amongst others. Easier automation, easier deployment and a reduction in the amount of infrastructure you have to manage lead us to recommend embedded servers over <strong>application servers</strong> for future projects.</p>",
                "radarId": 51,
                "id": "en_2016-04_872",
                "blip_selector": "application-servers"
            },
            {
                "blip_id": 988,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Sandstorm",
                "display_name": "Sandstorm",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "257",
                "tag": null,
                "description": "<p>For people who want the benefit of cloud-based collaboration tools but don't want to inadvertently \"become the product\" of a major cloud provider, <a href=\"https://sandstorm.io/\"><strong>Sandstorm</strong></a> provides an interesting open source alternative with the potential for self-hosting. Of particular interest is the isolation approach, whereby containerization is applied per document rather than per application, and syscall whitelisting is added to further <a href=\"http://docs.sandstorm.io/en/latest/using/security-practices/#server-sandboxing\">secure the sandbox</a>.</p>",
                "radarId": 49,
                "id": "en_2016-04_988",
                "blip_selector": "sandstorm"
            },
            {
                "blip_id": 912,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Gauge",
                "display_name": "Gauge",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "63",
                "tag": null,
                "description": "<p><strong><a href=\"https://gauge.org/\">Gauge</a></strong> is a lightweight cross-platform test-automation tool. Specifications are written in free-form Markdown so test cases can be written in the business language, as opposed to using the more common but restrictive \"given-when-then\" format. Language and IDE support are implemented as plugins to a single core implementation, allowing testers to use the same IDEs as the rest of the team, with powerful capabilities such as autocompletion and refactoring. This tool, open sourced by ThoughtWorks, also supports parallel execution out of the box for all supported platforms.</p>",
                "radarId": 58,
                "id": "en_2016-04_912",
                "blip_selector": "gauge"
            },
            {
                "blip_id": 837,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Flux",
                "display_name": "Flux",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "143",
                "tag": null,
                "description": "<p><a href=\"https://facebook.github.io/flux/\"><strong>Flux</strong></a> is an application architecture introduced by Facebook. Usually mentioned in conjunction with <strong>React.js</strong> , Flux is based on a one-way flow of data up through the rendering pipeline. Flux embraces the modern web landscape of client-side JavaScript applications in a way that avoids the venerable MV* clichés. ThoughtWorks teams are now starting to gain some experience with this architectural style and find that it meshes well with service orientation and solves some of the problems inherent in two-way data binding.</p>",
                "radarId": 8,
                "id": "en_2016-04_837",
                "blip_selector": "flux"
            },
            {
                "blip_id": 714,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "125",
                "name": "Docker",
                "display_name": "Docker",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "210",
                "tag": null,
                "description": "",
                "radarId": 28,
                "id": "en_2016-04_714",
                "blip_selector": "docker"
            },
            {
                "blip_id": 869,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "240",
                "name": "H2O",
                "display_name": "H2O",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "210",
                "tag": null,
                "description": "<p>Predictive analytics are used in more and more products, often directly in end user-facing functionality. <a href=\"http://h2o.ai/\"><strong>H2O</strong></a> is an interesting open source package (with a startup behind it) that makes predictive analytics accessible to development teams, offering straightforward use of a wide variety of analytics, great performance and easy integration on JVM-based platforms. At the same time it integrates with the data scientists’ favorite tools, R and Python, as well as Hadoop and Spark.</p>",
                "radarId": 32,
                "id": "en_2016-04_869",
                "blip_selector": "h2o"
            },
            {
                "blip_id": 963,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "OWASP Dependency-Check",
                "display_name": "OWASP Dependency-Check",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "35",
                "tag": null,
                "description": "",
                "radarId": 62,
                "id": "en_2016-04_963",
                "blip_selector": "owasp-dependency-check"
            },
            {
                "blip_id": 727,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "AngularJS",
                "display_name": "AngularJS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "286",
                "tag": null,
                "description": "<p>While we have delivered many successful projects using <a href=\"https://angularjs.org/\"><strong>AngularJS</strong></a> and are seeing an acceleration of adoption in corporate settings, we have decided to move Angular back to Assess on this edition of the Radar. This move is intended as a note of caution: <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> and <a href=\"/radar/languages-and-frameworks/ember-js\">Ember</a> offer strong alternatives; the migration path from Angular version 1 to version 2 is causing uncertainty; and we see some organizations adopting the framework without really thinking through whether a single-page application fits their needs. We have passionate internal debates about this topic but have certainly seen codebases become overly complex from a combination of two-way binding and inconsistent state-management patterns. We believe that rather than requiring that a solid framework be jettisoned, these issues can be solved through careful design and use of Redux or Flux from the outset.</p>",
                "radarId": 97,
                "id": "en_2016-04_727",
                "blip_selector": "angularjs"
            },
            {
                "blip_id": 905,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Load Impact",
                "display_name": "Load Impact",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "42",
                "tag": null,
                "description": "",
                "radarId": 61,
                "id": "en_2016-04_905",
                "blip_selector": "load-impact"
            },
            {
                "blip_id": 979,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Realm",
                "display_name": "Realm",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "250",
                "tag": null,
                "description": "<p><strong><a href=\"https://realm.io/\">Realm</a></strong> is a database designed for use on mobile devices, with its own persistence engine to achieve high performance. Realm is marketed as a replacement for SQLite and Core Data, and our teams have enjoyed using it. Note that migrations are not quite as straightforward as the Realm documentation would have you believe. Still, Realm has us excited, and we suggest you take a look.</p>",
                "radarId": 48,
                "id": "en_2016-04_979",
                "blip_selector": "realm"
            },
            {
                "blip_id": 904,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "240",
                "name": "Browsersync",
                "display_name": "Browsersync",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "77",
                "tag": null,
                "description": "<p>We've had rave reviews from a number of ThoughtWorks teams using <a href=\"http://www.browsersync.io/\"><strong>Browsersync</strong></a>. As the number of devices we deliver web applications to grows, so does the amount of effort that must be devoted to testing across these different devices. Browsersync is a free, open source tool that can dramatically reduce this effort by synchronizing manual browser testing across multiple mobile or desktop browsers. Providing both a CLI and a UI option, the tool is build-pipeline friendly and automates repetitive tasks such as form filling.</p>",
                "radarId": 56,
                "id": "en_2016-04_904",
                "blip_selector": "browsersync"
            },
            {
                "blip_id": 999,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Serverless architecture",
                "display_name": "Serverless architecture",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "120",
                "tag": null,
                "description": "<p><strong>Serverless architecture</strong> replaces long-running virtual machines with ephemeral compute power that comes into existence on request and disappears immediately after use. Examples include <a href=\"https://www.firebase.com/\">Firebase</a> and <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a>. Use of this architecture can mitigate some security concerns such as security patching and SSH access control, and can make much more efficient use of compute resources. These systems cost very little to operate and can have inbuilt scaling features (this is especially true for AWS Lambda). An example architecture could be a JavaScript app with static assets served by a CDN or S3 coupled with AJAX calls served by the API Gateway and Lambda. While serverless architectures have significant benefits, there are drawbacks too: Deploying, managing and sharing code across services is more complex, and local or offline testing is more difficult if not impossible.</p>",
                "radarId": 20,
                "id": "en_2016-04_999",
                "blip_selector": "serverless-architecture"
            },
            {
                "blip_id": 958,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Aurelia",
                "display_name": "Aurelia",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "294",
                "tag": null,
                "description": "",
                "radarId": 98,
                "id": "en_2016-04_958",
                "blip_selector": "aurelia"
            },
            {
                "blip_id": 955,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Cylon.js",
                "display_name": "Cylon.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "302",
                "tag": null,
                "description": "<p>The intersection between IoT devices and the JavaScript ecosystem offers interesting possibilities. <strong><a href=\"https://cylonjs.com/\">Cylon.js</a></strong> is a JavaScript library for building interfaces for robotics and the Internet of Things, which has excited our technical community. It offers support for 50+ platform devices, as well as general-purpose input/output support with a shared set of drivers provided by the cylon-gpio module. Control of the devices is then possible through a web browser interface.</p>",
                "radarId": 99,
                "id": "en_2016-04_955",
                "blip_selector": "cylon-js"
            },
            {
                "blip_id": 902,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "230",
                "name": "Carthage",
                "display_name": "Carthage",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "70",
                "tag": null,
                "description": "<p>Dependency management in iOS and OS X projects used to be either completely manual or completely automatic as part of using <a href=\"https://cocoapods.org/\">CocoaPods</a>. With <strong><a href=\"https://github.com/Carthage/Carthage\">Carthage</a></strong> , a new middle ground has become available. Carthage manages dependencies - it downloads, builds and updates frameworks - but it leaves the integration of the frameworks into the build of the project to the project. This is in contrast to CocoaPods, which basically takes over the project structure and build setup. It should be noted that Carthage can only deal with dynamic frameworks, which are not available on iOS 7 and below.</p>",
                "radarId": 57,
                "id": "en_2016-04_902",
                "blip_selector": "carthage"
            },
            {
                "blip_id": 918,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "365",
                "name": "High performance envy/web scale envy",
                "display_name": "High performance envy/web scale envy",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "120",
                "tag": null,
                "description": "<p>We see many teams run into trouble because they have chosen complex tools, frameworks or architectures because they \"might need to scale\". Companies such as Twitter and Netflix need to be able to support extreme loads and so need these architectures, but they also have extremely skilled development teams able to handle the complexity. Most situations do not require these kinds of engineering feats; teams should keep their  <strong>web scale envy</strong> in check in favor of simpler solutions that still get the job done.</p>",
                "radarId": 26,
                "id": "en_2016-04_918",
                "blip_selector": "high-performance-envy-web-scale-envy"
            },
            {
                "blip_id": 951,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Redux",
                "display_name": "Redux",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "335",
                "tag": null,
                "description": "<p><a href=\"http://redux.js.org/\"><strong>Redux</strong></a> is a great, mature tool that has helped many of our teams reframe how they think about managing state in client-side apps. Using a <a href=\"/radar/techniques/flux\">Flux</a>-style approach, it enables a loosely coupled state-machine architecture that's easy to reason about. We've found it a good companion to some of our favored JavaScript frameworks, such as <a href=\"/radar/languages-and-frameworks/ember-js\">Ember</a> and <a href=\"/radar/languages-and-frameworks/react-js\">React</a>.</p>",
                "radarId": 93,
                "id": "en_2016-04_951",
                "blip_selector": "redux"
            },
            {
                "blip_id": 925,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Kubernetes",
                "display_name": "Kubernetes",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "230",
                "tag": null,
                "description": "",
                "radarId": 34,
                "id": "en_2016-04_925",
                "blip_selector": "kubernetes"
            },
            {
                "blip_id": 952,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Dapper",
                "display_name": "Dapper",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "294",
                "tag": null,
                "description": "",
                "radarId": 88,
                "id": "en_2016-04_952",
                "blip_selector": "dapper"
            },
            {
                "blip_id": 968,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "LambdaCD",
                "display_name": "LambdaCD",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "42",
                "tag": null,
                "description": "",
                "radarId": 74,
                "id": "en_2016-04_968",
                "blip_selector": "lambdacd"
            },
            {
                "blip_id": 927,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Rancher",
                "display_name": "Rancher",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "260",
                "tag": null,
                "description": "",
                "radarId": 37,
                "id": "en_2016-04_927",
                "blip_selector": "rancher"
            },
            {
                "blip_id": 883,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Event Storming",
                "display_name": "Event Storming",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "150",
                "tag": null,
                "description": "<p><a href=\"http://ziobrando.blogspot.be/2013/11/introducing-event-storming.html\"><strong>Event Storming</strong></a> is a useful way to do rapid \"outside-in\" domain modeling: starting with the events that occur in the domain rather than a static data model. Run as a facilitated workshop, it focuses on discovering key domain events, placing them along a timeline, identifying their triggers and then exploring their relationships. This approach is particularly useful for people taking an <a href=\"https://www.thoughtworks.com/radar/techniques/event-sourcing\">Event Sourced</a> approach. Getting the right people in the room is important - a blend of business and technical people who bring both the questions and the answers. Ensuring that you have enough wall space for modeling is the second key to success. Look to discover the big picture, with the goal of collectively understanding the domain in all of its complexity, before diving into solutions.</p>",
                "radarId": 7,
                "id": "en_2016-04_883",
                "blip_selector": "event-storming"
            },
            {
                "blip_id": 995,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Unikernels",
                "display_name": "Unikernels",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "110",
                "tag": null,
                "description": "",
                "radarId": 21,
                "id": "en_2016-04_995",
                "blip_selector": "unikernels"
            },
            {
                "blip_id": 961,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Butterknife",
                "display_name": "Butterknife",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "278",
                "tag": null,
                "description": "",
                "radarId": 86,
                "id": "en_2016-04_961",
                "blip_selector": "butterknife"
            },
            {
                "blip_id": 992,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Deflect",
                "display_name": "Deflect",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "212",
                "tag": null,
                "description": "<p><a href=\"https://deflect.ca/\"><strong>Deflect</strong></a> is an open source service protecting NGOs, activist and independent media companies from DDoS attacks. Similar to a commercial CDN, it uses distributed reverse-proxy caching and also hides your server IP addresses and blocks public access to admin URLs. Particular effort is put in to combat the botnets typically used for extrajudicial censoring of independent voices.</p>",
                "radarId": 42,
                "id": "en_2016-04_992",
                "blip_selector": "deflect"
            },
            {
                "blip_id": 1001,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Hosting PII data in the EU",
                "display_name": "Hosting PII data in the EU",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "150",
                "tag": null,
                "description": "<p>In a number of countries around the world, we see government agencies seeking broad access to private, personally identifiable information (PII). In the EU, the highest court has invalidated the Safe Harbor framework, and Privacy Shield, its successor, is expected to be challenged too. At the same time, the use of cloud computing is increasing, and all the major cloud providers—Amazon, Google and Microsoft—offer multiple data centers and regions within the European Union. Therefore, we recommend that companies, especially those with a global user base, assess the feasibility of a safe haven for their users' data, protected by the most progressive privacy laws, by <strong>Hosting PII in the EU</strong>.</p>",
                "radarId": 17,
                "id": "en_2016-04_1001",
                "blip_selector": "hosting-pii-data-in-the-eu"
            },
            {
                "blip_id": 990,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "MemSQL",
                "display_name": "MemSQL",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "225",
                "tag": null,
                "description": "<p>As Moore's Law predicts, we continue to increase the capacity of computer systems and reduce their cost, and so new processing techniques become possible that only a few years ago would have seemed out of reach. One of these techniques is the in-memory database: Instead of using slow disks or relatively slow SSDs to store data, we can keep it in memory for high performance. One such in-memory database, <a href=\"http://www.memsql.com/\"><strong>MemSQL</strong></a>, is making waves because it is horizontally scalable across a cluster and provides a familiar SQL-based query language. MemSQL also connects to Spark for analytics against real-time data, rather than stale data in a warehouse.</p>",
                "radarId": 44,
                "id": "en_2016-04_990",
                "blip_selector": "memsql"
            },
            {
                "blip_id": 923,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Ceph",
                "display_name": "Ceph",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "205",
                "tag": null,
                "description": "<p><strong><a href=\"http://ceph.com/\">Ceph</a></strong> is a storage platform that can be used as object storage, as block storage, and as a file system, typically running on a cluster of commodity servers. With its first major release having been in July 2012, Ceph is certainly not a new product. We do want to highlight it on this Technology Radar as an important building block for private clouds. It is particularly attractive because its RADOS Gateway component can expose the object store through a RESTful interface that is compatible with <a href=\"https://aws.amazon.com/s3/\">Amazon S3</a> and the <a href=\"https://wiki.openstack.org/wiki/Swift\">OpenStack Swift APIs</a>.</p>",
                "radarId": 41,
                "id": "en_2016-04_923",
                "blip_selector": "ceph"
            },
            {
                "blip_id": 948,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "385",
                "name": "Gitflow",
                "display_name": "Gitflow",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "135",
                "tag": null,
                "description": "<p>We firmly believe that long-lived version-control branches harm valuable engineering practices such as continuous integration, and this belief underlies our dislike for <strong>Gitflow</strong>. We love the flexibility of <a href=\"https://git-scm.com\">Git</a> underneath but abhor tools that encourage bad engineering practices. Very short-lived branches hurt less, but most teams we see using Gitflow feel empowered to abuse its branch-heavy workflow, which encourages late integration (therefore discouraging true continuous integration).</p>",
                "radarId": 25,
                "id": "en_2016-04_948",
                "blip_selector": "gitflow"
            },
            {
                "blip_id": 879,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Ember.js",
                "display_name": "Ember.js",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "302",
                "tag": null,
                "description": "<p><a href=\"http://emberjs.com/\"><strong>Ember.js</strong></a> has developed further support based on project experiences and is clearly a strong contender in the field of JavaScript application frameworks. Ember is praised for its developer experience, with far fewer surprises than other frameworks such as <a href=\"/radar/languages-and-frameworks/angularjs\">AngularJS</a>. The Ember CLI build tooling, convention-over-configuration approach and <a href=\"/radar/languages-and-frameworks/es6\">ES6</a> support also gain positive feedback.</p>",
                "radarId": 89,
                "id": "en_2016-04_879",
                "blip_selector": "ember-js"
            },
            {
                "blip_id": 849,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Prometheus",
                "display_name": "Prometheus",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "24",
                "tag": null,
                "description": "<p>SoundCloud has recently open sourced its monitoring and alerting toolkit, <a href=\"http://prometheus.io/\"><strong>Prometheus</strong></a>. Developed in reaction to difficulties with <a href=\"http://graphite.readthedocs.org/\">Graphite</a> in its production systems, Prometheus primarily supports a pull-based HTTP model (although a more Graphite-like push model is also supported). It also goes further by supporting alerts, making it an active part of your operational toolset. As of this writing, Prometheus is still only in release 0.15.1 but is evolving rapidly. We’re glad to see the recent product focus on core time-series DB and multidimensional indexing capabilities while allowing for export to a wider variety of front-end graphing tools.</p>",
                "radarId": 77,
                "id": "en_2016-04_849",
                "blip_selector": "prometheus"
            },
            {
                "blip_id": 956,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Immutable.js",
                "display_name": "Immutable.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "335",
                "tag": null,
                "description": "<p>Immutability is often emphasized in the functional programming paradigm, and most languages have the ability to create immutable objects, which cannot be changed once created. <strong><a href=\"https://facebook.github.io/immutable-js/\">Immutable.js</a></strong> is a library for JavaScript that provides many persistent immutable data structures, which are highly efficient on modern JavaScript virtual machines. Immutable.js objects are, however, not normal JavaScript objects, so references to JavaScript objects from immutable objects should be avoided. Our teams have had value using this library for tracking mutation and maintaining state, and it is a library we encourage developers to investigate, especially when it's combined with the rest of the Facebook stack.</p>",
                "radarId": 103,
                "id": "en_2016-04_956",
                "blip_selector": "immutable-js"
            },
            {
                "blip_id": 886,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "BFF - Backend for frontends",
                "display_name": "BFF - Backend for frontends",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "173",
                "tag": null,
                "description": "<p>Valuable services support many variations in clients, such as mobile versus web and different forms of web interface. It’s tempting to design a single back-end API to support all clients with a reusable API. But client needs vary, as do constraints such as bandwidth for mobile devices versus the desire for lots of data on fast web connections. Consequently it’s often best to <strong>define different back-end services for each kind of front-end</strong> client. These back ends should be developed by teams aligned with each front end to ensure that each back end properly meets the needs of its client.</p>",
                "radarId": 4,
                "id": "en_2016-04_886",
                "blip_selector": "bff-backend-for-frontends"
            },
            {
                "blip_id": 789,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Data Lake",
                "display_name": "Data Lake",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "158",
                "tag": null,
                "description": "",
                "radarId": 6,
                "id": "en_2016-04_789",
                "blip_selector": "data-lake"
            },
            {
                "blip_id": 830,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "70",
                "name": "Swift",
                "display_name": "Swift",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "342",
                "tag": null,
                "description": "<p><a href=\"https://developer.apple.com/swift/\"><strong>Swift</strong></a> is now our default choice for development in the Apple ecosystem. With the release of Swift 2, the language approached a level of maturity that provides the stability and performance required for most projects. A good number of libraries that support iOS development—<a href=\"https://github.com/SwiftyJSON/SwiftyJSON\">SwiftyJSON</a>, <a href=\"https://github.com/Quick/Quick\">Quick</a>, etc.—are now migrated over to Swift, which is where the rest of the applications should follow. Swift has now been open sourced, and we are seeing a community of developers dedicated to continuously improving development in iOS.</p>",
                "radarId": 85,
                "id": "en_2016-04_830",
                "blip_selector": "swift"
            },
            {
                "blip_id": 989,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Amazon API Gateway",
                "display_name": "Amazon API Gateway",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "186",
                "tag": null,
                "description": "<p><a href=\"https://aws.amazon.com/api-gateway/\"><strong>Amazon API Gateway</strong></a> is Amazon's offering enabling developers to expose API services to Internet clients, offering the usual API gateway features like traffic management, monitoring, authentication and authorization. Our teams have been using this service to front other AWS capabilities like AWS Lambda as part of <a href=\"/radar/techniques/serverless-architecture\">serverless architectures</a>. We continue to monitor for the challenges presented by <a href=\"/radar/platforms/overambitious-api-gateways\">overambitious API gateways</a>, but at this stage Amazon's offering appears to be lightweight enough to avoid those problems.</p>",
                "radarId": 38,
                "id": "en_2016-04_989",
                "blip_selector": "amazon-api-gateway"
            },
            {
                "blip_id": 885,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "190",
                "name": "HSTS",
                "display_name": "HSTS",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "220",
                "tag": null,
                "description": "<p><a href=\"https://www.owasp.org/index.php/HTTP_Strict_Transport_Security\">HTTP Strict Transport Security</a> ( <strong>HSTS</strong> ) is a now widely supported policy that allows websites to protect themselves from downgrade attacks. A downgrade attack in the context of HTTPS is one that can cause users of your site to fall back to HTTP rather than HTTPS, allowing for further attacks such as man-in-the-middle attacks. By using the server header, you inform browsers that they should only use HTTPS to access your website, and should ignore downgrade attempts to contact the site via HTTP. Browser support is now widespread enough that this easy-to-implement feature should be considered for any site using HTTPS.</p>",
                "radarId": 33,
                "id": "en_2016-04_885",
                "blip_selector": "hsts"
            },
            {
                "blip_id": 959,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "JSPatch",
                "display_name": "JSPatch",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "315",
                "tag": null,
                "description": "",
                "radarId": 106,
                "id": "en_2016-04_959",
                "blip_selector": "jspatch"
            },
            {
                "blip_id": 962,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Serverspec",
                "display_name": "Serverspec",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "28",
                "tag": null,
                "description": "",
                "radarId": 63,
                "id": "en_2016-04_962",
                "blip_selector": "serverspec"
            },
            {
                "blip_id": 1003,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "360",
                "name": "Big Data envy",
                "display_name": "Big Data envy",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "150",
                "tag": null,
                "description": "<p>While we've long understood the value of Big Data to better understand how people interact with us, we've noticed an alarming trend of <strong>Big Data envy</strong> : organizations using complex tools to handle \"not-really-that-big” Data. Distributed map-reduce algorithms are a handy technique for large data sets, but many data sets we see could easily fit in a single-node relational or graph database. Even if you do have more data than that, usually the best thing to do is to first pick out the data you need, which can often then be processed on such a single node. So we urge that before you spin up your clusters, take a realistic assessment of what you need to process, and if it fits—maybe in RAM—use the simple option.</p>",
                "radarId": 24,
                "id": "en_2016-04_1003",
                "blip_selector": "big-data-envy"
            },
            {
                "blip_id": 983,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Nomad",
                "display_name": "Nomad",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "237",
                "tag": null,
                "description": "",
                "radarId": 46,
                "id": "en_2016-04_983",
                "blip_selector": "nomad"
            },
            {
                "blip_id": 964,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Webpack",
                "display_name": "Webpack",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "14",
                "tag": null,
                "description": "",
                "radarId": 65,
                "id": "en_2016-04_964",
                "blip_selector": "webpack"
            },
            {
                "blip_id": 795,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "167",
                "name": "Linux security modules",
                "display_name": "Linux security modules",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "240",
                "tag": null,
                "description": "<p>In earlier versions of the Radar, we have highlighted the value of <strong>Linux security modules</strong> , talking about how they enable people to think about server hardening as a part of their development workflow. More recently, with <a href=\"https://linuxcontainers.org/\">LXC</a> and <a href=\"/radar/platforms/docker\">Docker</a> containers now shipping with default <a href=\"https://wiki.ubuntu.com/AppArmor\">AppArmor</a> profiles on certain Linux distributions, it has forced the hand of many teams to understand how these tools work. In the event that teams use container images to run any process that they did not themselves create, these tools help them assess questions about who has access to what resources on the shared host and the capabilities that these contained services have, and be conservative in managing levels of access.</p>",
                "radarId": 35,
                "id": "en_2016-04_795",
                "blip_selector": "linux-security-modules"
            },
            {
                "blip_id": 889,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Mesosphere DCOS",
                "display_name": "Mesosphere DCOS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "231",
                "tag": null,
                "description": "<p><strong><a href=\"https://mesosphere.com/product/\">Mesosphere DCOS</a></strong> is a platform built on top of <a href=\"http://mesos.apache.org/\">Mesos</a>. It provides an abstraction over underling machines, giving you a pool of storage and compute that allows services built for DCOS to operate at massive scale (Support is already there for Hadoop, Spark and Cassandra, among others). This is probably overkill for more modest workloads at the moment (where plain old Mesos could still be a good fit), but it will be interesting to see if Mesosphere starts trying to position DCOS as a general-purpose system.</p>",
                "radarId": 45,
                "id": "en_2016-04_889",
                "blip_selector": "mesosphere-dcos"
            },
            {
                "blip_id": 980,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Repsheet",
                "display_name": "Repsheet",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "12",
                "tag": null,
                "description": "",
                "radarId": 79,
                "id": "en_2016-04_980",
                "blip_selector": "repsheet"
            },
            {
                "blip_id": 971,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Grasp",
                "display_name": "Grasp",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "66",
                "tag": null,
                "description": "",
                "radarId": 70,
                "id": "en_2016-04_971",
                "blip_selector": "grasp"
            },
            {
                "blip_id": 779,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "TOTP Two-Factor Authentication",
                "display_name": "TOTP Two-Factor Authentication",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "240",
                "tag": null,
                "description": "<p>Password security is still a hotly debated topic with the <a href=\"https://www.gov.uk/government/publications/password-policy-simplifying-your-approach/password-policy-executive-summary\">UK government advocating technical controls</a> that let users remember simpler passwords and <a href=\"https://www.youtube.com/watch?v=yzGzB-yYKcc\">Edward Snowden’s password advice</a> being described as only \"<a href=\"http://www.wired.com/2015/04/snowden-sexy-margaret-thatcher-password-isnt-so-sexy/\">borderline secure</a>\". Passwords are generally one of the weakest links in the security chain, so we recommend employing <strong>two-factor authentication</strong> , which can significantly improve security. <a href=\"http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm\">Time-based One-Time Password</a> ( <strong>TOTP</strong> ) is the standard algorithm in this space, with straightforward server-side implementations and free smartphone authenticator apps from <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2\">Google</a> and <a href=\"http://www.windowsphone.com/en-us/store/app/authenticator/e7994dbc-2336-4950-91ba-ca22d653759b\">Microsoft</a>.</p>",
                "radarId": 29,
                "id": "en_2016-04_779",
                "blip_selector": "totp-two-factor-authentication"
            },
            {
                "blip_id": 957,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Recharts",
                "display_name": "Recharts",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "351",
                "tag": null,
                "description": "",
                "radarId": 105,
                "id": "en_2016-04_957",
                "blip_selector": "recharts"
            },
            {
                "blip_id": 796,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "Apache Mesos",
                "display_name": "Apache Mesos",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "190",
                "tag": null,
                "description": "<p><strong><a href=\"http://mesos.apache.org/\">Mesos</a></strong> is a platform that abstracts out underlying computing resources to make it easier to build massively scalable distributed systems. It can be used to provide a scheduling layer for <a href=\"https://www.docker.com/\">Docker</a>, or to act as an abstraction layer to things like AWS. Twitter has used it to great effect to help it scale its infrastructure. Tools built on top of Mesos are starting to appear, such as <a href=\"http://nerds.airbnb.com/introducing-chronos/\">Chronos</a>, which is a distributed, fault-tolerant cron replacement. Prominent success stories are appearing, such as <a href=\"https://mesosphere.com/blog/2015/04/23/apple-details-j-a-r-v-i-s-the-mesos-framework-that-runs-siri/\">Apple's Siri</a> rearchitecting to use Mesos.</p>",
                "radarId": 30,
                "id": "en_2016-04_796",
                "blip_selector": "apache-mesos"
            },
            {
                "blip_id": 466,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Zipkin",
                "display_name": "Zipkin",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "7",
                "tag": null,
                "description": "",
                "radarId": 66,
                "id": "en_2016-04_466",
                "blip_selector": "zipkin"
            },
            {
                "blip_id": 850,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Apache Kafka",
                "display_name": "Apache Kafka",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "84",
                "tag": null,
                "description": "",
                "radarId": 55,
                "id": "en_2016-04_850",
                "blip_selector": "apache-kafka"
            },
            {
                "blip_id": 946,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "Let's Encrypt",
                "display_name": "Let's Encrypt",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "49",
                "tag": null,
                "description": "",
                "radarId": 60,
                "id": "en_2016-04_946",
                "blip_selector": "let-s-encrypt"
            },
            {
                "blip_id": 976,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Jenkins as a deployment pipeline",
                "display_name": "Jenkins as a deployment pipeline",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "45",
                "tag": null,
                "description": "",
                "radarId": 81,
                "id": "en_2016-04_976",
                "blip_selector": "jenkins-as-a-deployment-pipeline"
            },
            {
                "blip_id": 965,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Alamofire",
                "display_name": "Alamofire",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "278",
                "tag": null,
                "description": "<p>Networking and decoding in iOS applications have been a difficult endeavor for many years. There have been many libraries and attempts to solve this ongoing problem. It looks as though <a href=\"https://github.com/Alamofire/Alamofire\"><strong>Alamofire</strong></a> is the most robust and developer-friendly library to handle decoding JSON. It was written by the same creator as its Objective-C counterpart (AFNetworking), which was used at great length during the Objective-C days.</p>",
                "radarId": 96,
                "id": "en_2016-04_965",
                "blip_selector": "alamofire"
            },
            {
                "blip_id": 941,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "OkHttp",
                "display_name": "OkHttp",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "343",
                "tag": null,
                "description": "<p><strong><a href=\"http://square.github.io/okhttp/\">OkHttp</a></strong> is a Java HTTP connection library from Square that provides a fluent interface for creating connections, as well as support for the faster HTTP/2 protocol. Even when using HTTP/1.1, OkHttp can provide performance improvements via connection pooling and transparent gzip compression. Supporting both blocking synchronous and nonblocking asynchronous calls, it can also be used as a drop-in replacement for the widely used Apache HttpClient.</p>",
                "radarId": 104,
                "id": "en_2016-04_941",
                "blip_selector": "okhttp"
            },
            {
                "blip_id": 908,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "285",
                "name": "ievms",
                "display_name": "ievms",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "54",
                "tag": null,
                "description": "<p>Despite the shrinking usage of Internet Explorer, for many products the IE user base is not an insignificant share of the market, and browser compatibility needs to be tested. This is particularly troublesome if you prefer the joys of a UNIX-based system for development. To aid in this dilemma, <a href=\"https://github.com/xdissent/ievms\"><strong>ievms</strong></a> provides a utility script that brings together Windows-distributed VM images and VirtualBox to automate the setup and testability of various IE versions, from 6 up to Edge.</p>",
                "radarId": 72,
                "id": "en_2016-04_908",
                "blip_selector": "ievms"
            },
            {
                "blip_id": 998,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Bluetooth Mesh",
                "display_name": "Bluetooth Mesh",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "199",
                "tag": null,
                "description": "<p>While many deployments of smart devices rely on Wi-Fi connectivity, we have been seeing success with <strong>Bluetooth Mesh</strong> networks that don't necessitate a hub or gateway. With better energy usage than Wi-Fi and better smartphone adoption than ZigBee, Bluetooth LE deployed as a self-healing mesh provides interesting new approaches for connecting local device-area networks. We are still waiting for the formal approach to emerge from the Bluetooth SIG but have already had successful deployments. We particularly like the lack of infrastructure required to stand up a decentralized network but still retain the option to \"progressively enhance\" the system with the addition of a gateway and cloud services.</p>",
                "radarId": 40,
                "id": "en_2016-04_998",
                "blip_selector": "bluetooth-mesh"
            },
            {
                "blip_id": 996,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "OWASP ASVS",
                "display_name": "OWASP ASVS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "130",
                "tag": null,
                "description": "",
                "radarId": 19,
                "id": "en_2016-04_996",
                "blip_selector": "owasp-asvs"
            },
            {
                "blip_id": 947,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Bug bounties",
                "display_name": "Bug bounties",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "165",
                "tag": null,
                "description": "",
                "radarId": 5,
                "id": "en_2016-04_947",
                "blip_selector": "bug-bounties"
            },
            {
                "blip_id": 936,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "SignalR",
                "display_name": "SignalR",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "351",
                "tag": null,
                "description": "<p>We have a number of reservations about the use of HTML5 WebSockets. By allowing the server to initiate actions on the browser, WebSockets departs from the connectionless, request/response model that underpins the World Wide Web today. Security is another big risk with WebSockets. For example, the standard does not impose any cross-origin request policy. However, we do recognize that in certain monitoring or alerting applications, WebSockets can be very useful. If you need to build a .NET WebSockets server, <a href=\"http://signalr.net/\"><strong>SignalR</strong></a> conveniently implements much of the additional code you need for a robust production application. This includes some recommended security practices such as validating connection tokens and activating SSL when encryption is needed. Although ThoughtWorks teams have been very happy with SignalR, there are still fundamental issues with WebSockets that you should consider before diving in.</p>",
                "radarId": 95,
                "id": "en_2016-04_936",
                "blip_selector": "signalr"
            },
            {
                "blip_id": 1000,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "VR beyond gaming",
                "display_name": "VR beyond gaming",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "100",
                "tag": null,
                "description": "",
                "radarId": 22,
                "id": "en_2016-04_1000",
                "blip_selector": "vr-beyond-gaming"
            },
            {
                "blip_id": 732,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "55",
                "name": "Consul",
                "display_name": "Consul",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "45",
                "tag": null,
                "description": "",
                "radarId": 54,
                "id": "en_2016-04_732",
                "blip_selector": "consul"
            },
            {
                "blip_id": 736,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Elm",
                "display_name": "Elm",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "319",
                "tag": null,
                "description": "",
                "radarId": 101,
                "id": "en_2016-04_736",
                "blip_selector": "elm"
            },
            {
                "blip_id": 838,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "95",
                "name": "Products over projects",
                "display_name": "Products over projects",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "135",
                "tag": null,
                "description": "<p>We’ve long been championing the idea that thinking of software development as a project - something budgeted and delivered during a limited time slot - doesn’t fit the needs of the modern business. Important software efforts need to be an ongoing product that supports and rethinks the business process it is supporting. Such efforts are not complete until the business process, and its software, cease to be useful. Our observation of this <strong>products over projects</strong> approach, both with our own projects and outside, makes us determine that it is the approach to use for all but exceptional cases.</p>",
                "radarId": 2,
                "id": "en_2016-04_838",
                "blip_selector": "products-over-projects"
            },
            {
                "blip_id": 928,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "325",
                "name": "Concourse CI",
                "display_name": "Concourse CI",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "78",
                "tag": null,
                "description": "<p>Many development teams are making the move from simple continuous integration servers to Continuous Delivery pipelines, often spanning multiple environments, reaching into production. To implement such a pipeline successfully and operate it in a sustainable way requires a CI/CD tool that treats build pipelines and artifacts as first-class citizens; and unfortunately there aren’t many. <a href=\"http://concourse.ci/\"><strong>Concourse CI</strong></a> is a promising new entrant in this field, and our teams that have tried it are excited about its setup, which enables builds that run in containers, has a clean, usable UI and discourages snowflake build servers.</p>",
                "radarId": 68,
                "id": "en_2016-04_928",
                "blip_selector": "concourse-ci"
            },
            {
                "blip_id": 882,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Idempotency filter",
                "display_name": "Idempotency filter",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-04",
                "theta": "135",
                "tag": null,
                "description": "<p>Many services, especially legacy services, are written with the assumption that any request will occur only once. Networks being what they are, this can be difficult to arrange. An <strong>idempotency filter</strong> is a simple component that merely checks for duplicate requests and ensures that they are sent to the supplier service only once. Such a filter should do only this one task and be used as a decorator over existing service calls.</p>",
                "radarId": 9,
                "id": "en_2016-04_882",
                "blip_selector": "idempotency-filter"
            }
        ]
    },
    {
        "date": "2016-11",
        "blips": [
            {
                "blip_id": 976,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Jenkins as a deployment pipeline",
                "display_name": "Jenkins as a deployment pipeline",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "45",
                "tag": null,
                "description": "<p>We know we're in perilous territory here, since we build a competing tool, but we feel we have to address a persistent problem. Continuous Integration tools like CruiseControl and Jenkins are valuable for software development, but as your build process gets more complex it requires something beyond just Continuous Integration: It requires a <a href=\"http://martinfowler.com/bliki/DeploymentPipeline.html\">deployment pipeline</a>. We frequently see people trying to use <strong>Jenkins as a Deployment Pipeline</strong> with the aid of plugins, but our experience is that these quickly become a tangle. Jenkins 2.0 introduces \"Pipeline as Code\" but continues to model pipelines using plugins and fails to change the core Jenkins product to model pipelines directly. In our experience, tools that are built around a first-class representation of deployment pipelines are much more suitable, and this is what drove us to replace CruiseControl with <a href=\"https://www.go.cd/\">GoCD</a>. Today we see several products that embrace deployment pipelines, including <a href=\"/radar/tools/concourse-ci\">ConcourseCI</a>, <a href=\"/radar/tools/lambdacd\">LambdaCD</a>, <a href=\"http://spinnaker.io/\">Spinnaker,</a> <a href=\"https://github.com/drone\">Drone</a> and <a href=\"/radar/tools/gocd\">GoCD</a>.</p>",
                "radarId": 83,
                "id": "en_2016-11_976",
                "blip_selector": "jenkins-as-a-deployment-pipeline"
            },
            {
                "blip_id": 957,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Recharts",
                "display_name": "Recharts",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "325",
                "tag": null,
                "description": "<p>We've been enjoying how <strong><a href=\"http://recharts.org/\">Recharts</a></strong> integrates <a href=\"/radar/tools/d3\">D3</a> charts into <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> in a clean and declarative manner.</p>",
                "radarId": 105,
                "id": "en_2016-11_957",
                "blip_selector": "recharts"
            },
            {
                "blip_id": 1027,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "JSONassert",
                "display_name": "JSONassert",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "62",
                "tag": null,
                "description": "<p>More projects are emitting and consuming information formatted as JSON. Writing tests in Java for JSON can be laborious. <strong><a href=\"http://jsonassert.skyscreamer.org/\">JSONassert</a></strong> is a small library to help write smaller tests dealing with JSON by simplifying assertions and providing better error messages.</p>",
                "radarId": 61,
                "id": "en_2016-11_1027",
                "blip_selector": "jsonassert"
            },
            {
                "blip_id": 977,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Pivotal Cloud Foundry",
                "display_name": "Pivotal Cloud Foundry",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "234",
                "tag": null,
                "description": "<p>The PaaS space has seen a lot of movement since we last mentioned <a href=\"/radar/platforms/cloud-foundry\">Cloud Foundry</a> in 2012. While there are various distributions of the open source core, we have been impressed by the offering and ecosystem assembled as <a href=\"http://pivotal.io/platform\"><strong>Pivotal Cloud Foundry</strong></a>. While we expect continued convergence between the unstructured approach (<a href=\"/radar/platforms/docker\">Docker</a>, <a href=\"/radar/platforms/apache-mesos\">Mesos</a>, <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>, etc.) and the more structured and opinionated buildpack style offered by Cloud Foundry and others, we see real benefit for organizations that are willing to accept the constraints and rate of evolution to adopt a PaaS. Of particular interest is the speed of development that comes from the simplification and standardization of the interaction between development teams and platform operations.</p>",
                "radarId": 31,
                "id": "en_2016-11_977",
                "blip_selector": "pivotal-cloud-foundry"
            },
            {
                "blip_id": 676,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Elixir",
                "display_name": "Elixir",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "302",
                "tag": null,
                "description": "<p>Interest in the <a href=\"http://elixir-lang.org/\"><strong>Elixir</strong></a> programming language continues to build. Increasingly, we see it used in serious projects and hear feedback from developers who find its Actor model to be robust and very fast. Elixir, which is built on top of the Erlang virtual machine, is showing promise for creating highly concurrent and fault-tolerant systems. Elixir has distinctive features such as the Pipe operator, which allows developers to build a pipeline of functions as you would in the UNIX command shell. The shared byte code allows Elixir to interoperate with Erlang and leverage existing libraries while supporting tools such as the Mix build tool, the IEx interactive shell and the <a href=\"http://elixir-lang.org/docs/stable/ex_unit/ExUnit.html\">ExUnit</a> unit-testing framework.</p>",
                "radarId": 91,
                "id": "en_2016-11_676",
                "blip_selector": "elixir"
            },
            {
                "blip_id": 1066,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "ECMAScript 2017",
                "display_name": "ECMAScript 2017",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "283",
                "tag": null,
                "description": "<p><strong>ECMAScript 2017</strong> —not to be confused with ES7 (a.k.a. ECMAScript 2016)—brings several noteworthy improvements to the language. Browsers are expected to implement this standard fully in the summer of 2017, but the <a href=\"/radar/tools/babel\">Babel</a> JavaScript compiler already supports a number of the features today. If you make extensive use of JavaScript and your codebase is under active development, we recommend that you add Babel to your build pipeline and begin using the <a href=\"https://www.npmjs.com/package/babel-preset-es2017\">supported features</a></p>\n\n<p>.</p>",
                "radarId": 99,
                "id": "en_2016-11_1066",
                "blip_selector": "ecmascript-2017"
            },
            {
                "blip_id": 1016,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "HoloLens",
                "display_name": "HoloLens",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "225",
                "tag": null,
                "description": "<p>In the <strong><a href=\"https://www.microsoft.com/microsoft-hololens/en-us\">HoloLens</a></strong>, Microsoft has delivered the first truly usable AR headset. Not only is it a beautiful piece of industrial design and an eminently comfortable device to wear, but it also clearly demonstrates the promise of AR for the enterprise via its gorgeous optics and deep Windows 10 integration. We expect HoloLens to be the first AR platform on which we deliver substantial application functionality to our clients in the near term, and we look forward to its evolution as it gains broader traction.</p>",
                "radarId": 42,
                "id": "en_2016-11_1016",
                "blip_selector": "hololens"
            },
            {
                "blip_id": 969,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "HashiCorp Vault",
                "display_name": "HashiCorp Vault",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "68",
                "tag": null,
                "description": "<p>Having a way to securely manage secrets is increasingly becoming a huge project issue. The old practice of keeping secrets in a file or in environment variables is becoming hard to manage, especially in environments with multiple applications and large numbers of <a href=\"/radar/techniques/microservices\">microservices</a>. <a href=\"https://github.com/hashicorp/vault\"><strong>HashiCorp Vault</strong></a> addresses the problem by providing mechanisms for securely accessing secrets through a unified interface. It has served us well on a number of projects, and our teams liked how easy it was to integrate Vault with their services. Storing and updating secrets is a bit cumbersome, because it relies on a command-line tool and a fair amount of discipline from the team.</p>",
                "radarId": 60,
                "id": "en_2016-11_969",
                "blip_selector": "hashicorp-vault"
            },
            {
                "blip_id": 1053,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "OpenVR",
                "display_name": "OpenVR",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "247",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/ValveSoftware/openvr\">OpenVR</a></strong> is the underlying SDK in making many of the VR head-mounted displays (HMDs) work with Unity and will likely keep growing in importance. Much of the VR work at ThoughtWorks was built on top of OpenVR, because it will run on any HMD, unlike the other SDKs. Though it is not open source, it is free via the license. The Oculus SDK is more restrictive in its licensing and only works on Oculus devices. <a href=\"https://osvr.github.io/\">OSVR</a>, while truly open source, doesn't seem to have as much adoption yet. If you're going to develop a VR application and target as many devices as possible—and not use Unity or Unreal to develop them—OpenVR is the most concrete and pragmatic solution right now.</p>",
                "radarId": 46,
                "id": "en_2016-11_1053",
                "blip_selector": "openvr"
            },
            {
                "blip_id": 850,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Apache Kafka",
                "display_name": "Apache Kafka",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "189",
                "tag": null,
                "description": "<p>Many organizations are now looking closely at new data architectures that capture information as immutable sequences of events at scale. <a href=\"http://kafka.apache.org/\"><strong>Apache Kafka</strong></a> continues to build momentum as an open source messaging framework that provides a solution for publishing ordered event feeds to large numbers of independent, lightweight consumers. Configuring Kafka is nontrivial, but our teams are reporting positive experiences with the framework.</p>",
                "radarId": 26,
                "id": "en_2016-11_850",
                "blip_selector": "apache-kafka"
            },
            {
                "blip_id": 836,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "Reactive architectures",
                "display_name": "Reactive architectures",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "113",
                "tag": null,
                "description": "<p>We see continued adoption and success of <strong>reactive architectures</strong> , with reactive language extensions and reactive frameworks being very popular (we added several such blips in this edition of the Radar). User interfaces, in particular, benefit greatly from a reactive style of programming. Our caveats last time still hold true: Architectures based on asynchronous message passing introduce complexity and make the overall system harder to understand—it's no longer possible to simply read the program code and understand what the system does. We recommend assessing the performance and scalability needs of your system before committing to this architectural style.</p>",
                "radarId": 9,
                "id": "en_2016-11_836",
                "blip_selector": "reactive-architectures"
            },
            {
                "blip_id": 1010,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "338",
                "name": "IndiaStack",
                "display_name": "IndiaStack",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "230",
                "tag": null,
                "description": "<p><strong><a href=\"http://www.indiastack.org\">IndiaStack</a></strong> is a set of Open APIs designed with the goal of transforming India from a data-poor to a data-rich country. The stack emphasizes layered innovation by specifying a minimal set of APIs and encourages the rest of the ecosystem to build custom applications on top of these APIs. <a href=\"http://www.indiastack.org/Resource#Aadhaar\">Aadhaar</a> serves as one of the foundation layers, providing authentication services for more than a billion Indian citizens. In addition, there are services to provide paperless transactions through digital signatures (eSign), unified online payment (UPI) and an electronic consent layer ((e-KYC)[https://uidai.gov.in/ecosystem/authentication-devices-documents/about-aadhaar-paperless-offline-e-kyc.html]) to securely provide Aadhaar details to service providers. We believe in the Open API–driven initiative to bring digital innovation, and the design principles behind IndiaStack could be used as a change agent for other regions/countries.</p>",
                "radarId": 43,
                "id": "en_2016-11_1010",
                "blip_selector": "indiastack"
            },
            {
                "blip_id": 1030,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Android-x86",
                "display_name": "Android-x86",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "83",
                "tag": null,
                "description": "<p><strong><a href=\"http://www.android-x86.org/\">Android-x86</a></strong> is a port of the <a href=\"http://source.android.com/\">Android open source</a> project to x86 platforms. The project started by hosting various patches from the community for x86 support but then later created its own codebase to provide support for different x86 platforms. We have seen significant time savings by utilizing Android-x86 in our CI servers instead of emulators for hermetic UI testing. However, for UI-specific tests targeting a particular device resolution—simulating low memory, bandwidth and battery—it is better to stick with emulators.</p>",
                "radarId": 72,
                "id": "en_2016-11_1030",
                "blip_selector": "android-x86"
            },
            {
                "blip_id": 919,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "215",
                "name": "AWS Lambda",
                "display_name": "AWS Lambda",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "216",
                "tag": null,
                "description": "<p>Our teams continue to enjoy using <strong><a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a></strong> and are beginning to use it to experiment with <a href=\"/radar/techniques/serverless-architecture\">serverless architectures</a>, combining Lambda with the <a href=\"/radar/platforms/amazon-api-gateway\">API Gateway</a>. We do recommend that Lambda functions contain only a moderate amount of code. Ensuring the quality of a solution based on a tangle of many large Lambda functions is difficult, and such a solution may not be cost-effective. For more complex needs, deployments based on containers or VMs are still preferable. In addition, we have run into significant problems using Java for Lambda functions, with erratic latencies up to several seconds as the Lambda container is started. Of course, you can sidestep this issue by using JavaScript or Python, and if Lambda functions do not contain a lot of code, the choice of programming language should not matter too much.</p>",
                "radarId": 29,
                "id": "en_2016-11_919",
                "blip_selector": "aws-lambda"
            },
            {
                "blip_id": 997,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "340",
                "name": "Content Security Policies",
                "display_name": "Content Security Policies",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "150",
                "tag": null,
                "description": "<p>We are finding <a href=\"https://en.wikipedia.org/wiki/Content_Security_Policy\"><strong>Content Security Policies</strong></a> to be a helpful addition to our security toolkit when dealing with websites that pull assets from mixed contexts. The policy defines a set of rules about where assets can come from (and whether to allow inline script tags). The browser then refuses to load or execute JavaScript, CSS or images that violate those rules. When used in conjunction with good practices, such as output encoding, it provides good mitigation for XSS attacks. Interestingly, the optional endpoint for posting JSON reports of violations is how Twitter discovered that ISPs were injecting HTML or JavaScript into their pages.</p>",
                "radarId": 13,
                "id": "en_2016-11_997",
                "blip_selector": "content-security-policies"
            },
            {
                "blip_id": 1063,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "WebRTC",
                "display_name": "WebRTC",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "353",
                "tag": null,
                "description": "<p>Widespread adoption of AR/VR as a collaboration and communication medium requires a modern and readily available video streaming platform. <strong><a href=\"https://webrtc.org/\">WebRTC</a></strong> is an emerging standard for real-time communication between browsers that enables video streaming within commonly available web technologies. The range of browsers that support this standard is increasing, but Microsoft and Apple have been slow to adopt WebRTC in their proprietary browsers. If momentum continues to build, WebRTC could form the future foundation for AR/VR collaboration on the web.</p>",
                "radarId": 109,
                "id": "en_2016-11_1063",
                "blip_selector": "webrtc"
            },
            {
                "blip_id": 989,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Amazon API Gateway",
                "display_name": "Amazon API Gateway",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "191",
                "tag": null,
                "description": "<p><a href=\"https://aws.amazon.com/api-gateway/\"><strong>Amazon API Gateway</strong></a> is Amazon's offering enabling developers to expose API services to Internet clients. It offers the usual API gateway features like traffic management, monitoring, authentication and authorization. Our teams have been using this service to front other AWS capabilities like AWS Lambda as part of <a href=\"/radar/techniques/serverless-architecture\">serverless architectures</a>. We continue to monitor for the challenges presented by <a href=\"/radar/platforms/overambitious-api-gateways\">overambitious API gateways</a>, but at this stage Amazon's offering appears to be lightweight enough to avoid those problems.</p>",
                "radarId": 36,
                "id": "en_2016-11_989",
                "blip_selector": "amazon-api-gateway"
            },
            {
                "blip_id": 1004,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "380",
                "name": "A single CI instance for all teams",
                "display_name": "A single CI instance for all teams",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "162",
                "tag": null,
                "description": "<p>There might be the impression that it's easier to manage a <strong>single CI (Continuous Integration) instance for all teams</strong> because it gives them a single configuration and monitoring point. But a bloated instance that is shared by every team in an organization can cause a lot of damage. We have found that problems like build timeouts, configuration conflicts and gigantic build queues appear more frequently. Having this single point of failure can interrupt the work of many teams. Carefully consider the trade-off between these pitfalls and having a single point of configuration. In organizations with multiple teams, we recommend having CI instances distributed by teams, with enterprise decisions based not on the single CI installation but on defining guidelines about the instances' selection and configuration.</p>",
                "radarId": 19,
                "id": "en_2016-11_1004",
                "blip_selector": "a-single-ci-instance-for-all-teams"
            },
            {
                "blip_id": 789,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Data Lake",
                "display_name": "Data Lake",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "147",
                "tag": null,
                "description": "<p>A <strong><a href=\"http://martinfowler.com/bliki/DataLake.html\">Data Lake</a></strong> is an immutable data store of largely unprocessed \"raw\" data, acting as a source for data analytics. While the technique can clearly be misused, we have used it successfully at clients, hence motivating its move to trial. We continue to recommend other approaches for operational collaborations, limiting the use of the data lake to reporting, analytics and feeding data into data marts.</p>",
                "radarId": 6,
                "id": "en_2016-11_789",
                "blip_selector": "data-lake"
            },
            {
                "blip_id": 795,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "Linux security modules",
                "display_name": "Linux security modules",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "247",
                "tag": null,
                "description": "<p><a href=\"http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-167.pdf\">Application whitelisting</a> has proven to be <a href=\"http://www.asd.gov.au/infosec/top-mitigations/top-4-strategies-explained.htm#mitigation1\">one of the most effective ways to mitigate cyber intrusion attacks</a>. A convenient way to implement this widely recommended practice is through <strong>Linux security modules</strong>. With SELinux or AppArmor included by default in most Linux distributions, and with more comprehensive tools such as Grsecurity readily available, we have moved this technology into the Adopt ring in this edition. These tools help teams assess questions about who has access to what resources on shared hosts, including contained services. This conservative approach to access management will help teams build security into their SDLC processes.</p>",
                "radarId": 25,
                "id": "en_2016-11_795",
                "blip_selector": "linux-security-modules"
            },
            {
                "blip_id": 727,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "AngularJS",
                "display_name": "AngularJS",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "300",
                "tag": null,
                "description": "<p><a href=\"https://angularjs.org/\"><strong>AngularJS</strong></a> helped revolutionize the world of single-page JavaScript applications, and we have delivered many projects successfully with it over the years. However, we are no longer recommending it (v1) for teams starting fresh projects. We prefer the ramp-up speed and more maintainable codebases we are seeing with <a href=\"/radar/languages-and-frameworks/ember-js\">Ember</a> and <a href=\"/radar/languages-and-frameworks/react-js\">React</a>, particularly in conjunction with <a href=\"/radar/languages-and-frameworks/redux\">Redux</a>.</p>",
                "radarId": 110,
                "id": "en_2016-11_727",
                "blip_selector": "angularjs"
            },
            {
                "blip_id": 925,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Kubernetes",
                "display_name": "Kubernetes",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "225",
                "tag": null,
                "description": "<p><strong><a href=\"http://kubernetes.io/\">Kubernetes</a></strong> is Google's answer to the problem of deploying containers into a cluster of machines, which is becoming an increasingly common scenario. It is not the solution used by Google internally but an open source project that originated at Google and has seen a fair number of external contributions. Since we mentioned Kubernetes on the previous Radar, our initial positive impressions have been confirmed, and we are seeing successful use of Kubernetes in production at our clients.</p>",
                "radarId": 30,
                "id": "en_2016-11_925",
                "blip_selector": "kubernetes"
            },
            {
                "blip_id": 1025,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Pa11y",
                "display_name": "Pa11y",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "40",
                "tag": null,
                "description": "<p><a href=\"http://pa11y.org/\"><strong>Pa11y</strong></a> is an automatic accessibility tester that can run from the command line and be embedded into a build pipeline. Our teams have had success using Pa11y on a highly dynamic site by first creating a static HTML version, then running the accessibility tests against that. For many systems—especially government websites—accessibility testing is a requirement, and Pa11y makes it all a lot easier.</p>",
                "radarId": 65,
                "id": "en_2016-11_1025",
                "blip_selector": "pa11y"
            },
            {
                "blip_id": 827,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "React.js",
                "display_name": "React.js",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "306",
                "tag": null,
                "description": "<p>In the avalanche of front-end JavaScript frameworks, <a href=\"http://facebook.github.io/react/\"><strong>React.js</strong></a> stands out due to its design around a reactive data flow. Allowing only one-way data binding greatly simplifies the rendering logic and avoids many of the issues that commonly plague applications written with other frameworks. We're seeing the benefits of React.js on a growing number of projects, large and small, while at the same time we continue to be concerned about the state and the future of other popular frameworks like <a href=\"/radar/languages-and-frameworks/angularjs\">AngularJS</a>. This has led to React.js becoming our default choice for JavaScript frameworks.</p>",
                "radarId": 85,
                "id": "en_2016-11_827",
                "blip_selector": "react-js"
            },
            {
                "blip_id": 1040,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Differential privacy",
                "display_name": "Differential privacy",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "140",
                "tag": null,
                "description": "<p>It has long been known that \"anonymized\" bulk data sets can reveal information about individuals, especially when multiple data sets are cross-referenced together. With <a href=\"https://www.washingtonpost.com/news/the-switch/wp/2016/05/13/new-government-data-shows-a-staggering-number-of-americans-have-stopped-basic-online-activities/\">increasing concern over personal privacy</a>, some companies—including <a href=\"https://www.wired.com/2016/06/apples-differential-privacy-collecting-data/\">Apple</a> and <a href=\"http://research.google.com/pubs/pub42852.html\">Google</a>—are turning to <strong>differential privacy</strong> techniques in order to improve individual privacy while retaining the ability to perform useful analytics on large numbers of users. Differential privacy is a cryptographic technique that attempts to maximize the accuracy of statistical queries from a database while minimizing the chances of identifying its records. These results can be achieved by introducing a low amount of \"noise\" to the data, but it’s important to note that this is an ongoing research area. Apple has announced plans to incorporate differential privacy into its products—and we wholeheartedly applaud its commitment to customers' privacy—but the usual Apple secrecy has left some security experts <a href=\"https://blog.cryptographyengineering.com/2016/06/15/what-is-differential-privacy/\">scratching their heads</a>. We continue to recommend <a href=\"http://martinfowler.com/bliki/Datensparsamkeit.html\">Datensparsamkeit</a> as an alternative approach: simply storing the minimum data you actually need will achieve better privacy results in most cases.</p>",
                "radarId": 14,
                "id": "en_2016-11_1040",
                "blip_selector": "differential-privacy"
            },
            {
                "blip_id": 696,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "CMS as a platform",
                "display_name": "CMS as a platform",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "202",
                "tag": null,
                "description": "<p>We are seeing too many organizations run into trouble as they attempt to use their <strong>CMS as a platform</strong> for delivering large and complex digital applications. This is often driven by the vendor-fueled hope of bypassing unresponsive IT organizations and enabling the business to drag and drop changes directly to production. While we are very supportive of providing content producers with the right tools and workflows, for applications with complex business logic we tend to recommend treating your CMS as a component of your platform (often in a hybrid or headless mode) cooperating cleanly with other services, rather than attempting to implement all of your functionality in the CMS itself.</p>",
                "radarId": 50,
                "id": "en_2016-11_696",
                "blip_selector": "cms-as-a-platform"
            },
            {
                "blip_id": 1059,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Quick and Nimble",
                "display_name": "Quick and Nimble",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "335",
                "tag": null,
                "description": "<p>Most of our iOS teams are now using the <strong><a href=\"https://github.com/Quick/Quick\">Quick</a> and <a href=\"https://github.com/Quick/Nimble\">Nimble</a></strong> pairing for their unit tests. In the <a href=\"http://rspec.info/\">RSpec</a> family of behavior-driven development (BDD) testing tools, it provides very readable tests (with describe blocks) across <a href=\"/radar/languages-and-frameworks/swift\">Swift</a> and Objective-C and has good support for asynchronous testing.</p>",
                "radarId": 95,
                "id": "en_2016-11_1059",
                "blip_selector": "quick-and-nimble"
            },
            {
                "blip_id": 996,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "OWASP ASVS",
                "display_name": "OWASP ASVS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "120",
                "tag": null,
                "description": "<p>As more development teams incorporate security earlier in the development life cycle, figuring out requirements to limit security risks can seem like a daunting task. Few people have the extensive technical knowledge needed to identify all the risks that an application might face, and teams might struggle just trying to decide where to begin. Relying on frameworks such as OWASP's <a href=\"https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project\"><strong>ASVS</strong></a> (Application Security Verification Standard) can help make this easier. Although somewhat lengthy, it contains a thorough list of requirements categorized by functions such as authentication, access control, and error handling and logging, which can be reviewed as needed. It is also helpful as a resource for testers when it comes time to verify software.</p>",
                "radarId": 16,
                "id": "en_2016-11_996",
                "blip_selector": "owasp-asvs"
            },
            {
                "blip_id": 961,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "250",
                "name": "Butterknife",
                "display_name": "Butterknife",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "278",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/JakeWharton/butterknife\">Butterknife</a></strong> is a field and method binding view-injection library. It allows the injection of arbitrary objects, views and listeners, thereby ensuring cleaner code with reduced glue code for Android development. With Butterknife, multiple views can be grouped into a list or array with common actions applied to the views simultaneously, without heavy reliance on XML configurations. Our project teams have used this library and benefited from its simplicity and ease of use.</p>",
                "radarId": 88,
                "id": "en_2016-11_961",
                "blip_selector": "butterknife"
            },
            {
                "blip_id": 995,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Unikernels",
                "display_name": "Unikernels",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "110",
                "tag": null,
                "description": "<p>With the continued rise to domination of the container model led by Docker adoption, we think it's worth calling attention to the continued rapid development in the <strong>Unikernel</strong> space. Unikernels are single-purpose library operating systems that can be compiled down from high-level languages to run directly on the hypervisors used by commodity cloud platforms. They promise a number of advantages over containers, not least their superfast startup time and very small attack surface area. Many are still at the research-project phase—<a href=\"http://research.microsoft.com/en-us/projects/drawbridge/\">Drawbridge</a> from Microsoft Research, <a href=\"https://mirage.io/\">MirageOS</a> and <a href=\"http://galois.com/project/halvm/\">HaLVM</a> amongst others—but we think the ideas are very interesting and combine nicely with the technique of <a href=\"/radar/techniques/serverless-architecture\">serverless architecture</a>.</p>",
                "radarId": 17,
                "id": "en_2016-11_995",
                "blip_selector": "unikernels"
            },
            {
                "blip_id": 1022,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "Talisman",
                "display_name": "Talisman",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "29",
                "tag": null,
                "description": "<p>With the maturity of tools such as <a href=\"/radar/tools/hashicorp-vault\">Vault</a>, there is no longer an excuse for storing secrets in code repositories, particularly since this often ends up being the soft underbelly of important systems. We’ve previously mentioned repository-scanning tools such as <a href=\"/radar/tools/gitrob\">Gitrob</a>, but we are now pushing proactive tools such as (the ThoughtWorks-created) <strong><a href=\"https://github.com/thoughtworks/talisman\">Talisman</a></strong>, which is a prepush hook for Git that scans commits for secrets matching predefined patterns.</p>",
                "radarId": 67,
                "id": "en_2016-11_1022",
                "blip_selector": "talisman"
            },
            {
                "blip_id": 1009,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Tarantool",
                "display_name": "Tarantool",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "253",
                "tag": null,
                "description": "<p><strong><a href=\"https://tarantool.org\">Tarantool</a></strong> is an open source <a href=\"/radar/tools/nosql\">NoSQL</a> solution that combines database and cache into one entity and provides APIs for writing application logic in <a href=\"/radar/languages-and-frameworks/lua\">Lua</a>. Both in-memory and disk-based engines are supported, and users can create multiple indexes (HASH, TREE, RTREE, BITSET) based on their use cases. The data itself is stored in <a href=\"http://msgpack.org\">MessagePack</a> format and uses the same protocol to communicate between clients and server. Tarantool supports write-ahead logs, transactions and asynchronous master-master replication. We are happy with the architectural decision of embracing single-writer policy and cooperative multitasking to handle concurrent connections.</p>",
                "radarId": 47,
                "id": "en_2016-11_1009",
                "blip_selector": "tarantool"
            },
            {
                "blip_id": 1039,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Client-directed query",
                "display_name": "Client-directed query",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "170",
                "tag": null,
                "description": "<p>Although many problems that people encounter with RESTful approaches to APIs can be attributed to the <a href=\"/radar/techniques/anemic-rest\">anemic REST</a> antipattern, some use cases warrant exploration of other approaches. In particular, organizations that have to support a long tail of client applications (and thus a likely proliferation of API versions even if they employ <a href=\"/radar/techniques/consumer-driven-contract-testing\">consumer-driven contracts</a>)—and have a large portion of their APIs supporting the endless-list style of activity feeds—may hit some limits in RESTful architectures. These can sometimes be mitigated by employing the <strong>client-directed query</strong> approach to client-server interaction. We see this approach being successfully used in both <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> and <a href=\"https://github.com/Netflix/falcor\">Falcor</a>, where clients have more control over both the contents and the granularity of the data returned to them. This does put more responsibility onto the service layer and can still lead to tight coupling to the underlying data model, but the benefits may be worth exploring if well-modeled RESTful APIs aren’t working for you.</p>",
                "radarId": 11,
                "id": "en_2016-11_1039",
                "blip_selector": "client-directed-query"
            },
            {
                "blip_id": 971,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Grasp",
                "display_name": "Grasp",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "45",
                "tag": null,
                "description": "<p>We had our collective minds blown by a little JavaScript command-line refactoring tool called <strong><a href=\"http://www.graspjs.com/\">Grasp</a></strong>. Providing a rich set of selectors and operating against the abstract syntax tree, it is leagues ahead of fiddling with sed and grep. A useful addition to the toolkit in our ongoing quest to treat <a href=\"/radar/languages-and-frameworks/javascript-as-a-first-class-language\">JavaScript as a first-class language</a>.</p>",
                "radarId": 77,
                "id": "en_2016-11_971",
                "blip_selector": "grasp"
            },
            {
                "blip_id": 911,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Espresso",
                "display_name": "Espresso",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "85",
                "tag": null,
                "description": "<p>At the top of the testing pyramid for Android application development, our teams are increasingly using <strong><a href=\"https://developer.android.com/training/testing/espresso\">Espresso</a></strong> as the functional-testing tool. Its small-core API hides the messy implementation details and helps in writing concise tests, with faster and reliable test execution. With Espresso, you can run automated UI tests simulating user interactions within a single target app on both emulators and real devices across different Android versions.</p>",
                "radarId": 57,
                "id": "en_2016-11_911",
                "blip_selector": "espresso"
            },
            {
                "blip_id": 947,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "Bug bounties",
                "display_name": "Bug bounties",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "158",
                "tag": null,
                "description": "<p>The use of <strong>bug bounties</strong> continues to grow in popularity for many organizations, including enterprises and notable government bodies. A bug-bounty program encourages participants to identify potentially damaging vulnerabilities in return for reward or recognition. Companies like <a href=\"https://hackerone.com/\">HackerOne</a> and <a href=\"https://bugcrowd.com/\">Bugcrowd</a> offer services to help organizations manage this process more easily, and we're seeing these services gather adoption.</p>",
                "radarId": 5,
                "id": "en_2016-11_947",
                "blip_selector": "bug-bounties"
            },
            {
                "blip_id": 1018,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "fastlane",
                "display_name": "fastlane",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "79",
                "tag": null,
                "description": "<p><strong><a href=\"https://fastlane.tools/\">fastlane</a></strong> is our go-to tool for automating most of the boring activities involved in getting iOS and Android mobile apps built, tested, documented and provisioned. Simple configuration, a range of tooling and multiple pipelines make this a key ingredient in doing <a href=\"/radar/techniques/continuous-delivery-cd\">continuous delivery</a> for mobile.</p>",
                "radarId": 58,
                "id": "en_2016-11_1018",
                "blip_selector": "fastlane"
            },
            {
                "blip_id": 775,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "95",
                "name": "Spring Boot",
                "display_name": "Spring Boot",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "342",
                "tag": null,
                "description": "<p>A lot of work has gone into <a href=\"http://projects.spring.io/spring-boot\"><strong>Spring Boot</strong></a> to reduce complexity and dependencies, which largely alleviates our previous reservations. If you live in a Spring ecosystem and are moving to microservices, Spring Boot is now the obvious choice. For those not in Springland, <a href=\"/radar/languages-and-frameworks/dropwizard\">Dropwizard</a> is also worthy of serious consideration.</p>",
                "radarId": 87,
                "id": "en_2016-11_775",
                "blip_selector": "spring-boot"
            },
            {
                "blip_id": 986,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "GraphQL",
                "display_name": "GraphQL",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "297",
                "tag": null,
                "description": "<p>When we look at REST implementations in the wild, we frequently see REST misused to naively retrieve object graphs through chatty interactions between client and server. Facebook's <a href=\"https://github.com/facebook/graphql\"><strong>GraphQL</strong></a> is an interesting alternative to REST that might be a better approach for this very common use case. As a protocol for remotely retrieving object graphs, GraphQL has received enormous attention recently. One of GraphQL's most interesting features is its consumer-oriented nature: The structure of a response is driven entirely by the client, not the server. This decouples the consumer and forces the server to obey Postel's law. Client implementations are now available in many programming languages, but we have seen a flurry of interest of Facebook's <a href=\"https://facebook.github.io/relay/\">Relay</a>, a JavaScript framework that was designed to support the <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> stateless component model.</p>",
                "radarId": 101,
                "id": "en_2016-11_986",
                "blip_selector": "graphql"
            },
            {
                "blip_id": 1065,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "tmate",
                "display_name": "tmate",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "17",
                "tag": null,
                "description": "<p>Pair programming is an essential technique for us, and—given that we’re seeing more and more teams whose members are distributed across multiple locations—we have experimented with a number of tools to support remote pairing. We certainly liked <a href=\"https://screenhero.com/\">ScreenHero</a> but are concerned about its future. For teams that don’t rely on a graphical IDE, using <strong><a href=\"https://tmate.io/\">tmate</a></strong> for pairing has turned out to be a great solution. tmate is a fork of the popular tmux tool, and compared to <a href=\"http://hamvocke.com/blog/remote-pair-programming-with-tmux/\">tmux for remote pairing</a>, the setup is much easier. Compared to graphical screen-sharing solutions, the bandwidth and resource requirements are modest, and it obviously never suffers from blurry screens. Teams can also set up their own server, thus retaining full control of the privacy and integrity of the solution.</p>",
                "radarId": 69,
                "id": "en_2016-11_1065",
                "blip_selector": "tmate"
            },
            {
                "blip_id": 1001,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Hosting PII data in the EU",
                "display_name": "Hosting PII data in the EU",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "135",
                "tag": null,
                "description": "<p>In a number of countries, we see government agencies seeking broad access to private, personally identifiable information (PII). The increased use of public cloud solutions makes it more difficult for organizations to protect the data entrusted to them by their users while also respecting all relevant laws. The European Union has some of the most progressive privacy laws, and all the major cloud providers—Amazon, Google and Microsoft—offer multiple data centers and regions within the European Union. Therefore, we recommend that companies, especially those with a global user base, assess the feasibility of a safe haven for their users' data by <strong>hosting PII data in the EU</strong>. Since we wrote about this technique in the last Radar, we have rolled out a new internal system that handles sensitive information relating to all our employees, and we have chosen to host it in a data center located in the European Union.</p>",
                "radarId": 7,
                "id": "en_2016-11_1001",
                "blip_selector": "hosting-pii-data-in-the-eu"
            },
            {
                "blip_id": 963,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "OWASP Dependency-Check",
                "display_name": "OWASP Dependency-Check",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "45",
                "tag": null,
                "description": "<p>In a world full of libraries and tools that simplify the life of many software developers, deficiencies in their security have become visible and have increased the vulnerability surface in the applications that use them. <a href=\"https://www.owasp.org/index.php/OWASP_Dependency_Check\"><strong>OWASP Dependency-Check</strong></a> automatically identifies potential security problems in the code, checking if there are any known publicly disclosed vulnerabilities, then using methods to constantly update the database of public vulnerabilities. Dependency-Check has some interfaces and plugins to automate this verification in Java and .NET (which we have used successfully) as well as Ruby, Node.js and Python.</p>",
                "radarId": 64,
                "id": "en_2016-11_963",
                "blip_selector": "owasp-dependency-check"
            },
            {
                "blip_id": 1024,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "120",
                "name": "Babel",
                "display_name": "Babel",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "72",
                "tag": null,
                "description": "<p><a href=\"http://babeljs.io/\"><strong>Babel.js</strong></a> has become the default compiler for writing next-generation JavaScript. Its ecosystem is really taking off, thanks to its restructured <a href=\"http://babeljs.io/docs/plugins/#presets\">plugin system</a>. It allows developers to write <a href=\"/radar/languages-and-frameworks/es6\">ES6</a> (and even ES7) code that runs in the browser or in the server without sacrificing backward compatibility for older browsers, and with very little configuration. It has first-class support for different build-and-test systems, which makes integration with any current workflow simple. It is a great piece of software that has become the main driver of ES6 (and ES7) adoption and innovation.</p>",
                "radarId": 53,
                "id": "en_2016-11_1024",
                "blip_selector": "babel"
            },
            {
                "blip_id": 959,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "385",
                "name": "JSPatch",
                "display_name": "JSPatch",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "330",
                "tag": null,
                "description": "<p>Many iOS developers are using <strong><a href=\"https://github.com/bang590/JSPatch\">JSPatch</a></strong> to dynamically patch their apps. When a JSPatch-enabled app runs, it loads a chunk of JavaScript (potentially via an insecure HTTP connection) and then bridges to the main Objective-C application code to change behavior, fix bugs, and so on. While convenient, we think monkey-patching live apps is a bad idea and should be avoided. When doing any amount of incremental patching, it's very important that your testing process matches what end users will experience, in order to properly validate functionality. An alternative approach is to use <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> for the app and <a href=\"https://www.apphub.vip/\">AppHub</a> and <a href=\"https://microsoft.github.io/code-push/\">CodePush</a> to push small updates and new features.</p>",
                "radarId": 111,
                "id": "en_2016-11_959",
                "blip_selector": "jspatch"
            },
            {
                "blip_id": 958,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Aurelia",
                "display_name": "Aurelia",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "276",
                "tag": null,
                "description": "<p><a href=\"http://aurelia.io/\"><strong>Aurelia</strong></a> is considered the next-generation JavaScript client framework and was written using a modern version of JavaScript: ECMAScript 2016. Aurelia was created by Rob Eisenberg, the creator of <a href=\"http://durandaljs.com/\">Durandal</a>. He left the <a href=\"https://angular.io/\">Angular 2.0</a> core team to dedicate his time to this project. The great thing about Aurelia is that it's highly modular, contains simple small libraries and is designed to be customized easily. Aurelia follows the pattern of convention over configuration, which enables easier production and consumption of modules, but there are no strong conventions that you have to adhere to. Aurelia has a large community, and in the project website you can learn more by using the tutorials.</p>",
                "radarId": 98,
                "id": "en_2016-11_958",
                "blip_selector": "aurelia"
            },
            {
                "blip_id": 960,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "230",
                "name": "Dagger",
                "display_name": "Dagger",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "286",
                "tag": null,
                "description": "<p>With the increased need for Android-based applications, <strong><a href=\"http://google.github.io/dagger/\">Dagger</a></strong> offers a fully static, compile-time dependency-injection framework. Dagger's strictly generated implementation and nonreliance on reflection-based solutions addresses many of the performance and development issues, thereby making it suitable for Android development. With Dagger, there is full traceability with easy debugging because the entire call stack for provision and creation is made available.</p>",
                "radarId": 89,
                "id": "en_2016-11_960",
                "blip_selector": "dagger"
            },
            {
                "blip_id": 732,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "55",
                "name": "Consul",
                "display_name": "Consul",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "54",
                "tag": null,
                "description": "<p>We have moved <strong><a href=\"http://consul.io\">Consul</a></strong>, the service-discovery tool supporting both DNS- and HTTP-based discovery mechanisms, into Adopt. It goes beyond other discovery tools by providing customizable health checks for registered services, ensuring that unhealthy instances are marked accordingly. More tools have emerged to work with Consul to make it even more powerful. <a href=\"https://github.com/hashicorp/consul-template\">Consul Template</a> enables configuration files to be populated with information from Consul, making things like client-side load balancing using mod_proxy much easier. In the world of Docker, <a href=\"https://github.com/gliderlabs/registrator\">registrator</a> can automatically register Docker containers as they appear with Consul with extremely little effort, making it much easier to manage container-based setups. You should still think long and hard about whether you need a tool like this or whether something simpler will do, but if you decide you need service discovery, you won't go far wrong with Consul.</p>",
                "radarId": 54,
                "id": "en_2016-11_732",
                "blip_selector": "consul"
            },
            {
                "blip_id": 1036,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "APIs as a product",
                "display_name": "APIs as a product",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "169",
                "tag": null,
                "description": "<p>Businesses have wholeheartedly embraced APIs as a way to expose business capabilities to both external and internal developers. APIs promise the ability to experiment quickly with new business ideas by recombining core capabilities. But what differentiates an API from an ordinary enterprise integration service? One difference lies in treating <strong>APIs as a product</strong> , even when the consumer is an internal system. Teams that build APIs should understand the needs of their customers and make the product compelling to them. Products are also improved, maintained and supported over the long term. They should have an owner who advocates for the customer and strives for continual improvement. Products are actively maintained and supported, easy to find and easy to use. In our experience, a product orientation is the missing ingredient that makes the difference between ordinary enterprise integration and an agile business built on a platform of APIs.</p>",
                "radarId": 4,
                "id": "en_2016-11_1036",
                "blip_selector": "apis-as-a-product"
            },
            {
                "blip_id": 879,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Ember.js",
                "display_name": "Ember.js",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "288",
                "tag": null,
                "description": "<p>If you are faced with building a single-page application (SPA) and trying to choose a framework to build with, <strong><a href=\"http://emberjs.com/\">Ember.js</a></strong> has emerged as a leading choice. Our teams praise Ember for its highly productive developer experience, with far fewer surprises than other frameworks such as <a href=\"/radar/languages-and-frameworks/angularjs\">AngularJS</a>. The Ember CLI build tooling is a haven in the storm of JavaScript build tools, and the Ember core team and community are highly active and responsive.</p>",
                "radarId": 84,
                "id": "en_2016-11_879",
                "blip_selector": "ember-js"
            },
            {
                "blip_id": 1029,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "FBSnapshotTestcase",
                "display_name": "FBSnapshotTestcase",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "53",
                "tag": null,
                "description": "<p>Testing the visual portion of iOS applications can be painful, slow and flakey, which is why we’re happy to include <strong><a href=\"https://github.com/facebook/ios-snapshot-test-case\">FBSnapshotTestcase</a></strong> in our toolkit. It automates taking, storing and diff-ing snapshots of UI components so you can keep your interfaces pixel-perfect. Since it runs as a unit test (in the simulator), it is faster and more reliable than functional-testing approaches.</p>",
                "radarId": 76,
                "id": "en_2016-11_1029",
                "blip_selector": "fbsnapshottestcase"
            },
            {
                "blip_id": 1019,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Grafana",
                "display_name": "Grafana",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "36",
                "tag": null,
                "description": "<p>When combining modern techniques and architecture styles, such as <a href=\"/radar/techniques/microservices\">microservices</a>, <a href=\"/radar/techniques/devops\">DevOps</a> and <a href=\"/radar/techniques/qa-in-production\">QA in production</a>, development teams need increasingly sophisticated monitoring. Simply looking a graphs of disk usage and CPU utilization is not sufficient anymore, and many teams collect application and business-specific metrics using tools such a Graphite and Kibana. <strong><a href=\"http://grafana.org/\">Grafana</a></strong> makes it easy to create useful and elegant dashboards for data from a number of sources. A particularly useful feature allows timescales of different graphs to be synchronized, which helps with spotting correlations in the underlying data. The templating system that is being added shows a lot promise and will likely make managing sets of similar services even easier. Based on its strengths, Grafana has become our default choice in this category.</p>",
                "radarId": 55,
                "id": "en_2016-11_1019",
                "blip_selector": "grafana"
            },
            {
                "blip_id": 871,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "70",
                "name": "Threat modeling",
                "display_name": "Threat modeling",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "113",
                "tag": null,
                "description": "<p>With the number of high-profile security breaches in the past months, software development teams no longer need convincing that they must place an emphasis on writing secure software and dealing with their users' data in a responsible way. The teams face a steep learning curve, though, and the vast number of potential threats—ranging from organized crime and government spying to teenagers who attack systems \"for the lulz\"—can be overwhelming. <a href=\"https://www.owasp.org/index.php/Category:Threat_Modeling\"><strong>Threat modeling</strong></a> provides a set of techniques that help you identify and classify potential threats early in the development process. It is important to understand that it is only part of a strategy to stay ahead of threats. When used in conjunction with techniques such as establishing cross-functional security requirements to address common risks in the technologies a project uses and using automated security scanners, threat modeling can be a powerful asset.</p>",
                "radarId": 3,
                "id": "en_2016-11_871",
                "blip_selector": "threat-modeling"
            },
            {
                "blip_id": 1012,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Electron",
                "display_name": "Electron",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "213",
                "tag": null,
                "description": "<p><strong><a href=\"http://electron.atom.io/\">Electron</a></strong> is a solid framework for building native desktop clients using web technologies such as HTML, CSS and JavaScript. Teams can leverage their web know-how to deliver polished cross-platform desktop clients without spending time learning another set of technologies.</p>",
                "radarId": 40,
                "id": "en_2016-11_1012",
                "blip_selector": "electron"
            },
            {
                "blip_id": 931,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Overambitious API gateways",
                "display_name": "Overambitious API gateways",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "225",
                "tag": null,
                "description": "<p>One of our regular complaints is about business smarts implemented in middleware, resulting in transport software with ambitions to run critical application logic. Vendors in the highly competitive API gateway market continue to add features that differentiate their products. This results in <strong>overambitious API gateway</strong> products whose functionality—on top of what is essentially a reverse proxy—encourages designs that are difficult to test and deploy. API gateways can provide utility in dealing with some generic concerns—for example, authentication and rate-limiting—but any domain smarts such as data transformation or rule processing should live in applications or services where they can be controlled by product teams working closely with the domains they support.</p>",
                "radarId": 51,
                "id": "en_2016-11_931",
                "blip_selector": "overambitious-api-gateways"
            },
            {
                "blip_id": 1045,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Anemic REST",
                "display_name": "Anemic REST",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "144",
                "tag": null,
                "description": "<p>With the increasing popularity of the <a href=\"/radar/techniques/bff-backend-for-frontends\">BFF - Backend for frontends</a> pattern and use of one-way data-binding frameworks like <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a>, we’ve noticed a backlash against REST-style architectures. Critics accuse REST of causing chatty, inefficient interactions among systems and failing to adapt as client needs evolve. They offer frameworks such as <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> or <a href=\"https://netflix.github.io/falcor/\">Falcor</a> as alternative data-fetch mechanisms that let the client specify the format of the data returned. But in our experience, it isn’t REST that causes these problems. Rather, they stem from a failure to properly model the domain as a set of resources. Naively developing services that simply expose static, hierarchical data models via templated URLs result in an <strong>anemic REST</strong> implementation. In a richly modeled domain, REST should enable more than simple repetitive data fetching. In a fully evolved RESTful architecture, business events and abstract concepts are also modeled as resources, and the implementation should make effective use of hypertext, link relations and media types to maximize decoupling between services. This antipattern is closely related to the <a href=\"http://www.martinfowler.com/bliki/AnemicDomainModel.html\">Anemic Domain Model</a> pattern and results in services that rank low in <a href=\"http://martinfowler.com/articles/richardsonMaturityModel.html\">Richardson Maturity Model</a>. We have more advice for designing effective REST APIs in our <a href=\"https://www.thoughtworks.com/insights/blog/rest-api-design-resource-modeling\">Insights article</a>.</p>",
                "radarId": 20,
                "id": "en_2016-11_1045",
                "blip_selector": "anemic-rest"
            },
            {
                "blip_id": 1041,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Container security scanning",
                "display_name": "Container security scanning",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "160",
                "tag": null,
                "description": "<p>The container revolution instigated by <a href=\"/radar/platforms/docker\">Docker</a> has massively reduced the friction in moving applications between environments but at the same time has blown a rather large hole in the traditional controls over what can go to production. The technique of <strong>container security scanning</strong> is a necessary response to this threat vector. Docker now provides its own <a href=\"https://blog.docker.com/2016/05/docker-security-scanning/\">security scanning tools</a>, as does <a href=\"https://coreos.com/blog/vulnerability-analysis-for-containers/\">CoreOS</a>, and we’ve also had success with the <a href=\"https://benchmarks.cisecurity.org/\">CIS Security Benchmarks</a>. Whichever approach you take, we believe the topic of automated container security validation is of high value and a necessary part of PaaS thinking.</p>",
                "radarId": 12,
                "id": "en_2016-11_1041",
                "blip_selector": "container-security-scanning"
            },
            {
                "blip_id": 954,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "240",
                "name": "Robolectric",
                "display_name": "Robolectric",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "351",
                "tag": null,
                "description": "<p>In the Android application-development world, <strong><a href=\"http://robolectric.org/\">Robolectric</a></strong> is a unit-testing framework that has been used by multiple teams within our technical community. It offers the best option among those available for writing real unit tests that extend or interact directly with Android components and support JUnit tests. We caution, though, that because it is an implementation of the Android SDK, there might be device-specific issues for some tests that pass in Robolectric. To manually mock all the Android dependencies, ensuring only test of the system-in-test will require a lot of complex code, and this framework addresses this effectively.</p>",
                "radarId": 97,
                "id": "en_2016-11_954",
                "blip_selector": "robolectric"
            },
            {
                "blip_id": 714,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "125",
                "name": "Docker",
                "display_name": "Docker",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "202",
                "tag": null,
                "description": "<p>We remain excited about <a href=\"https://www.docker.com/\"><strong>Docker</strong></a> as it evolves from a tool to a complex platform of technologies. Development teams love Docker, as the Docker image format makes it easier to achieve parity between development and production, making for reliable deployments. It is a natural fit in a microservices-style application as a packaging mechanism for self-contained services. On the operational front, Docker support in monitoring tools (<a href=\"/radar/tools/sensu\">Sensu</a>, <a href=\"/radar/tools/prometheus\">Prometheus</a>, <a href=\"https://github.com/google/cadvisor\">cAdvisor</a>, etc.), orchestration tools (<a href=\"/radar/platforms/kubernetes\">Kubernetes</a>, <a href=\"https://mesosphere.github.io/marathon/\">Marathon</a>, etc.) and deployment-automation tools reflect the growing maturity of the platform and its readiness for production use. A word of caution, though: There is a prevalent view of Docker and Linux containers in general as being \"lightweight virtualization,\" but we would not recommend using Docker as a secure process-isolation mechanism, though we are paying attention to the introduction of user namespaces and seccomp profiles in version 1.10 in this regard.</p>",
                "radarId": 23,
                "id": "en_2016-11_714",
                "blip_selector": "docker"
            },
            {
                "blip_id": 815,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "Terraform",
                "display_name": "Terraform",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "23",
                "tag": null,
                "description": "<p>With <strong><a href=\"https://www.terraform.io/\">Terraform</a></strong>, you can manage cloud infrastructure by writing declarative definitions. The configuration of the servers instantiated by Terraform is usually left to tools like Puppet, Chef or Ansible. We like Terraform because the syntax of its files is quite readable and because it supports a number of cloud providers while making no attempt to provide an artificial abstraction across those providers. Following our first, more cautious, mention of Terraform almost two years ago, it has seen continued development and has evolved into a stable product that has proven its value in our projects. The issue with state file management can now be sidestepped by using what Terraform calls a \"remote state backend.\" We’ve successfully used <a href=\"/radar/tools/consul\">Consul</a> for that purpose.</p>",
                "radarId": 68,
                "id": "en_2016-11_815",
                "blip_selector": "terraform"
            },
            {
                "blip_id": 736,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Elm",
                "display_name": "Elm",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "290",
                "tag": null,
                "description": "<p>We have been prompted to reconsider <a href=\"http://elm-lang.org/\"><strong>Elm</strong></a> because of the rapid adoption of <a href=\"/radar/languages-and-frameworks/redux\">Redux</a> framework. Elm—the original inspiration for Redux—offers the view componentization and reactiveness of <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> along with the predictable state of Redux in a compiled, strongly typed functional language. Elm is written in Haskell and has a Haskell-like syntax but compiles down to HTML, CSS and JavaScript for the browser. JavaScript programmers rushing to embrace React.js and Redux might want to also consider Elm as a type-safe alternative for some applications.</p>",
                "radarId": 100,
                "id": "en_2016-11_736",
                "blip_selector": "elm"
            },
            {
                "blip_id": 970,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Pitest",
                "display_name": "Pitest",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "23",
                "tag": null,
                "description": "<p><a href=\"http://pitest.org\"><strong>Pitest</strong></a> is a test coverage analysis tool for Java that uses a mutation-testing technique. Traditional test coverage analysis tends to measure the number of lines that are executed by your tests. It is therefore only able to identify code that is definitely not tested. Mutation testing, on the other hand, tries to test the quality of those lines that are executed by your test code and yet might contain general errors. Several problems can be spotted this way, helping the team to measure and grow a healthy test suite. Most of such tools tend to be slow and difficult to use, but Pitest has proven to have better performance, is easy to set up, and is actively supported.</p>",
                "radarId": 80,
                "id": "en_2016-11_970",
                "blip_selector": "pitest"
            },
            {
                "blip_id": 1051,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Rapidoid",
                "display_name": "Rapidoid",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "318",
                "tag": null,
                "description": "<p><strong><a href=\"http://www.rapidoid.org/\">Rapidoid</a></strong> is a collection of web framework modules, including a fast low-level HTTP server implemented from scratch on top of Java NIO. Clever usage of off-heap input/output buffers, object pools and thread-local data structures provide Rapidoid an edge over other NIO-based servers like <a href=\"http://netty.io/\">Netty</a>. Being a fairly new project, Rapidoid has yet to implement a few features like built-in cache and SSL support; we suggest you check the <a href=\"https://github.com/rapidoid/rapidoid\">roadmap</a> for updates.</p>",
                "radarId": 104,
                "id": "en_2016-11_1051",
                "blip_selector": "rapidoid"
            },
            {
                "blip_id": 983,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Nomad",
                "display_name": "Nomad",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "236",
                "tag": null,
                "description": "<p>HashiCorp continues to turn out interesting software. The latest to catch our attention is <a href=\"https://www.nomadproject.io/\"><strong>Nomad</strong></a>, which is competing in the ever-more-populated scheduler arena. Major selling points include not just being limited to containerized workloads, and operating in multi–data center / multiregion deployments.</p>",
                "radarId": 44,
                "id": "en_2016-11_983",
                "blip_selector": "nomad"
            },
            {
                "blip_id": 1054,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Physical Web",
                "display_name": "Physical Web",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "311",
                "tag": null,
                "description": "<p>We have been intrigued by the <strong><a href=\"https://google.github.io/physical-web/\">Physical Web</a></strong> standard created by Google. The idea of Physical Web is simple—beacons broadcast a URL—but the possibilities are broad. Basically, this is a way to annotate the physical world, tying objects and locations into the digital realm. The current transport mechanism is <a href=\"https://github.com/google/eddystone/tree/master/eddystone-url\">Eddystone URLs</a> over Bluetooth LE, and sample clients are available. Although there are obvious security concerns with following randomly discovered links, we are most interested in use cases with customized clients where you can filter or proxy the URLs as required.</p>",
                "radarId": 103,
                "id": "en_2016-11_1054",
                "blip_selector": "physical-web"
            },
            {
                "blip_id": 760,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "35",
                "name": "Packer",
                "display_name": "Packer",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "18",
                "tag": null,
                "description": "<p>Machine images have become a staple of modern deployment pipelines, and there are a number of tools and techniques to create the images. Because of its comprehensive feature set and the positive experiences we've had with it, we recommend <a href=\"http://packer.io\"><strong>Packer</strong></a> over the alternatives. We also recommend against trying to write custom scripts to do what Packer does out of the box.</p>",
                "radarId": 56,
                "id": "en_2016-11_760",
                "blip_selector": "packer"
            },
            {
                "blip_id": 885,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "120",
                "name": "HSTS",
                "display_name": "HSTS",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "225",
                "tag": null,
                "description": "<p><a href=\"https://www.owasp.org/index.php/HTTP_Strict_Transport_Security\">HTTP Strict Transport Security</a> ( <strong>HSTS</strong> ) is a now widely supported policy that allows websites to protect themselves from downgrade attacks. A downgrade attack in the context of HTTPS is one that can cause users of your site to fall back to HTTP rather than HTTPS, allowing for further attacks such as man-in-the-middle attacks. With HSTS, the server sends a header that informs the browser that it should only use HTTPS to access the website. Browser support is now widespread enough that this easy-to-implement feature should be added to any site using HTTPS. Mozilla’s <a href=\"https://observatory.mozilla.org/\">Observatory</a> can help identify this and other useful headers and configuration options that improve security and privacy. When implementing HSTS, it is critical to verify that all resources load properly over HTTPS, because once HSTS is turned on, there is (almost) no turning back until the expiry time. The directive to include subdomains should be added but, again, a thorough verification that all subdomains support secure transport is required.</p>",
                "radarId": 24,
                "id": "en_2016-11_885",
                "blip_selector": "hsts"
            },
            {
                "blip_id": 833,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Consumer-driven contract testing",
                "display_name": "Consumer-driven contract testing",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "158",
                "tag": null,
                "description": "<p>We’ve decided to bring <strong>consumer-driven contract testing</strong> back from the archive for this edition even though we had allowed it to fade in the past. The concept isn’t new, but with the mainstream acceptance of microservices, we need to remind people that <a href=\"http://www.martinfowler.com/articles/consumerDrivenContracts.html\">consumer-driven contracts</a> are an essential part of a mature <a href=\"http://martinfowler.com/articles/microservice-testing/\">microservice testing</a> portfolio, enabling independent service deployments. But in addition, we want to point out that consumer-driven contract testing is a technique and an attitude that requires no special tool to implement. We love frameworks like <a href=\"https://github.com/realestate-com-au/pact\">Pact</a> because they make proper contract tests easier to implement in certain contexts. But we have noticed a tendency for teams to focus on the framework rather than on the general practice. Writing Pact tests is not a guarantee that you are creating consumer-driven contracts; likewise, in many situations you should be creating good consumer-driven contracts even where no pre-built testing tool exists.</p>",
                "radarId": 1,
                "id": "en_2016-11_833",
                "blip_selector": "consumer-driven-contract-testing"
            },
            {
                "blip_id": 1056,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "ReSwift",
                "display_name": "ReSwift",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "332",
                "tag": null,
                "description": "<p>We are excited that the <a href=\"/radar/languages-and-frameworks/redux\">Redux</a> paradigm has made its way to Swift-land in the form of <a href=\"http://reswift.github.io/ReSwift\"><strong>ReSwift</strong></a>. We’ve found real benefits in the simplicity and readability of codebases once state and state changes are managed in a central place and common idiom. This also helps with building \"offline first\" applications.</p>",
                "radarId": 106,
                "id": "en_2016-11_1056",
                "blip_selector": "reswift"
            },
            {
                "blip_id": 1047,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Enzyme",
                "display_name": "Enzyme",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "310",
                "tag": null,
                "description": "<p>We’ve been enjoying the rapid component-level UI testing that <a href=\"http://airbnb.io/enzyme/\"><strong>Enzyme</strong></a> provides for <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> applications. Unlike many other snapshot-based testing frameworks, Enzyme allows you to test without doing on-device rendering, which results in faster and more granular testing. This is a contributing factor in our ability to massively reduce the amount of functional testing we find we have to do in React applications.</p>",
                "radarId": 92,
                "id": "en_2016-11_1047",
                "blip_selector": "enzyme"
            },
            {
                "blip_id": 1034,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Lightweight Architecture Decision Records",
                "display_name": "Lightweight Architecture Decision Records",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "124",
                "tag": null,
                "description": "<p>Although much documentation can be replaced with highly readable code and tests, in a world of <a href=\"/radar/techniques/evolutionary-architecture\">evolutionary architecture</a> it's important to record certain design decisions for the benefit of future team members and for external oversight. <strong>Lightweight Architecture Decision Records</strong> is <a href=\"http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions\">a technique</a> for capturing important architectural decisions along with their context and consequences. Although these items are often stored in a wiki or collaboration tool, we generally prefer <a href=\"https://github.com/npryce/adr-tools\">storing them in source control</a> with simple markup.</p>",
                "radarId": 8,
                "id": "en_2016-11_1034",
                "blip_selector": "lightweight-architecture-decision-records"
            },
            {
                "blip_id": 796,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Apache Mesos",
                "display_name": "Apache Mesos",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "198",
                "tag": null,
                "description": "<p>We've continued to have positive experiences deploying the <strong><a href=\"http://mesos.apache.org/\">Apache Mesos</a></strong> platform to manage cluster resources for highly distributed systems. Mesos abstracts out underlying computing resources such as CPU and storage, aiming to provide efficient utilization while maintaining isolation. Mesos includes <a href=\"https://mesos.github.io/chronos/\">Chronos</a> for distributed and fault-tolerant execution of scheduled jobs, and <a href=\"https://mesosphere.github.io/marathon/\">Marathon</a> for orchestrating long-running processes in containers.</p>",
                "radarId": 27,
                "id": "en_2016-11_796",
                "blip_selector": "apache-mesos"
            },
            {
                "blip_id": 946,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "175",
                "name": "Let's Encrypt",
                "display_name": "Let's Encrypt",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "57",
                "tag": null,
                "description": "<p><a href=\"https://letsencrypt.org/\"><strong>Let's Encrypt</strong></a> first appeared on the Radar last edition, and since December 2015 this project has moved its beta status from private to public, meaning users will no longer be required to have an invitation in order to try it. Let's Encrypt grants access to a simpler mechanism to obtain and manage certificates for a larger set of users who are seeking a way to secure their websites. It also promotes a big step forward in terms of security and privacy. This trend has already begun within ThoughtWorks, and many of our projects now have certificates verified by Let's Encrypt.</p>",
                "radarId": 62,
                "id": "en_2016-11_946",
                "blip_selector": "let-s-encrypt"
            },
            {
                "blip_id": 466,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Zipkin",
                "display_name": "Zipkin",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "6",
                "tag": null,
                "description": "<p>Development on <a href=\"https://github.com/openzipkin/zipkin\"><strong>Zipkin</strong></a> has continued apace, and since the middle of 2015 it has moved to the <em>openzipkin/zipkin</em> organization at GitHub. There are now bindings for Python, Go, Java, Ruby, Scala and C#; and there are Docker images available for those wanting to get started quickly. We still like this tool. There is an active and growing community around usage of it, and implementation is getting easier. If you need a way of measuring the end-to-end latency of many logical requests, Zipkin continues to be a strong choice.</p>",
                "radarId": 71,
                "id": "en_2016-11_466",
                "blip_selector": "zipkin"
            },
            {
                "blip_id": 1006,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Auth0",
                "display_name": "Auth0",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "207",
                "tag": null,
                "description": "<p>We have a growing belief that for most scenarios it is rarely worth rolling your own authentication code. Outsourced identity management speeds up delivery, reduces mistakes and tends to enable a faster response to newly discovered vulnerabilities. <strong><a href=\"https://auth0.com/\">Auth0</a></strong> has particularly impressed us in this field for its ease of integration, range of protocols and connectors supported, and rich management API.</p>",
                "radarId": 28,
                "id": "en_2016-11_1006",
                "blip_selector": "auth0"
            },
            {
                "blip_id": 952,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "230",
                "name": "Dapper",
                "display_name": "Dapper",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "294",
                "tag": null,
                "description": "<p><a href=\"https://github.com/StackExchange/dapper-dot-net\"><strong>Dapper</strong></a> is a minimal, lightweight ORM of sorts for .NET. Rather than trying to write the SQL queries for you, Dapper maps SQL queries to dynamic objects. Though it's not brand new, Dapper has steadily gained acceptance from ThoughtWorks teams working in .NET. For the C# programmer, it removes some of the drudgery of mapping relational queries to objects while still allowing complete control over the SQL or stored procedures.</p>",
                "radarId": 90,
                "id": "en_2016-11_952",
                "blip_selector": "dapper"
            },
            {
                "blip_id": 1011,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "Cassandra carefully",
                "display_name": "Cassandra carefully",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "208",
                "tag": null,
                "description": "<p>Apache’s <a href=\"http://cassandra.apache.org/\">Cassandra</a> database is a powerful, scalable Big Data solution for storing and processing large amounts of data, often using hundreds of nodes split over multiple worldwide locations. It’s a great tool and we like it, but too often we see teams run into trouble using it. We recommend using <strong>Cassandra carefully</strong>. Teams often misunderstand the use case for Cassandra, attempting to use it as a general-purpose data store when in fact it is optimized for fast reads on large data sets based on predefined keys or indexes. Its dependence on the storage schema can also make it difficult to evolve over time. Cassandra also has significant operational complexity and some rough edges, so unless you absolutely need the scaling it provides, a simpler solution is usually better. If you don’t need Cassandra’s specific use-case and scaling characteristics, you might just be choosing it out of <a href=\"/radar/techniques/big-data-envy\">Big Data envy</a>. Careful use of Cassandra will include extensive automated testing, and we’re happy to recommend <a href=\"https://github.com/jsevellec/cassandra-unit\">CassandraUnit</a> as part of your testing strategy.</p>",
                "radarId": 39,
                "id": "en_2016-11_1011",
                "blip_selector": "cassandra-carefully"
            },
            {
                "blip_id": 999,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Serverless architecture",
                "display_name": "Serverless architecture",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "102",
                "tag": null,
                "description": "<p><a href=\"http://www.martinfowler.com/articles/serverless.html\"><strong>Serverless architecture</strong></a> is an approach that replaces long-running virtual machines with ephemeral compute power that comes into existence on request and disappears immediately after use. Since the last Radar, we have had several teams put applications into production using a \"serverless\" style. Our teams like the approach, it’s working well for them and we consider it a valid architectural choice. Note that serverless doesn’t have to be an all-or-nothing approach: some of our teams have deployed a new chunk of their systems using serverless while sticking to a traditional architectural approach for other pieces.</p>",
                "radarId": 10,
                "id": "en_2016-11_999",
                "blip_selector": "serverless-architecture"
            },
            {
                "blip_id": 972,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Apache Flink",
                "display_name": "Apache Flink",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "196",
                "tag": null,
                "description": "<p>Interest continues to build for <strong><a href=\"https://flink.apache.org/\">Apache Flink</a></strong>, a new-generation platform for scalable distributed batch and stream processing. At the core of Apache Flink is a streaming data-flow engine, with support for tabular (SQL-like), graph-processing and machine learning operations. Apache Flink stands out with feature rich capabilities for stream processing: event time, rich streaming window operations, fault tolerance and exactly-once semantics. The project shows significant ongoing activity, with the latest release (1.1) introducing new datasource/sink integrations as well as improved streaming features.</p>",
                "radarId": 37,
                "id": "en_2016-11_972",
                "blip_selector": "apache-flink"
            },
            {
                "blip_id": 956,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Immutable.js",
                "display_name": "Immutable.js",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "319",
                "tag": null,
                "description": "<p>Immutability is often emphasized in the functional programming paradigm, and most languages have the ability to create immutable objects—objects that can't be changed once created. <strong><a href=\"https://facebook.github.io/immutable-js/\">Immutable.js</a></strong> is a library for JavaScript that provides many persistent immutable data structures, which are highly efficient on modern JavaScript virtual machines. Immutable.js objects are, however, not normal JavaScript objects, so references to JavaScript objects from immutable objects should be avoided. More teams are using this library for tracking mutation and maintaining state in production. We recommend that developers investigate this library, especially when it's combined with the rest of the Facebook stack.</p>",
                "radarId": 93,
                "id": "en_2016-11_956",
                "blip_selector": "immutable-js"
            },
            {
                "blip_id": 951,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "120",
                "name": "Redux",
                "display_name": "Redux",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "324",
                "tag": null,
                "description": "<p>With the increasing complexity of single-page JavaScript applications, we have seen a more pressing need to make client-side state management predictable. <a href=\"http://redux.js.org/\"><strong>Redux</strong></a>, with its <a href=\"http://redux.js.org/docs/introduction/ThreePrinciples.html\">three principles</a> of restrictions for updating state, has proven to be invaluable in a number of projects we have implemented. <a href=\"https://egghead.io/courses/getting-started-with-redux\">Getting Started with Redux</a> and <a href=\"https://egghead.io/courses/building-react-applications-with-idiomatic-redux\">idiomatic Redux</a> tutorials are a good starting point for new and experienced users. Its minimal library design has spawned a rich set of tools, and we encourage you to check out the <a href=\"https://github.com/markerikson/redux-ecosystem-links\">redux-ecosystem-links</a> project for examples, middleware and utility libraries. We also particularly like the testability story: Dispatching actions, state transitions and rendering can be unit-tested separately from one another and with minimal amounts of mocking.</p>",
                "radarId": 86,
                "id": "en_2016-11_951",
                "blip_selector": "redux"
            },
            {
                "blip_id": 1005,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "AWS Application Load Balancer",
                "display_name": "AWS Application Load Balancer",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "202",
                "tag": null,
                "description": "<p>Amazon recently launched the <a href=\"https://aws.amazon.com/blogs/aws/new-aws-application-load-balancer/\"><strong>AWS Application Load Balancer</strong></a> (ALB), a direct replacement for Elastic Load Balancers introduced back in 2009. ALB supports Layer 7 traffic inspection and is built to support modern cloud architecture. If you’re building a microservices-based system using <a href=\"/radar/platforms/aws-ecs\">ECS</a>, the new load balancers will directly understand container hosting and scaling, with multiple containers and ports per EC2 instance. Content-based routing allows segmentation of requests onto groups of target servers, along with independent scaling of those groups. Health checks performed by the load balancers are much improved, with the ability to capture detailed metrics about application performance. We like everything that we see here, and teams have begun to report successful usage of ALB.</p>",
                "radarId": 38,
                "id": "en_2016-11_1005",
                "blip_selector": "aws-application-load-balancer"
            },
            {
                "blip_id": 937,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "React Native",
                "display_name": "React Native",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "343",
                "tag": null,
                "description": "<p>We are seeing continued success with <a href=\"https://facebook.github.io/react-native/\"><strong>React Native</strong></a> for rapid cross-platform mobile development. Despite some churn as it undergoes continuing development, the advantages of trivial integration between native and nonnative code and views, the rapid development cycle (instant reload, chrome debugging, Flexbox layout) and general growth of the React style is winning us over. As with many frameworks, care needs to be taken to keep your code well structured, but diligent use of a tool like <a href=\"/radar/languages-and-frameworks/redux\">Redux</a> really helps here.</p>",
                "radarId": 96,
                "id": "en_2016-11_937",
                "blip_selector": "react-native"
            },
            {
                "blip_id": 905,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "230",
                "name": "Load Impact",
                "display_name": "Load Impact",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "51",
                "tag": null,
                "description": "<p><strong><a href=\"https://loadimpact.com/\">Load Impact</a></strong> is a SaaS load-testing tool that can generate highly realistic loads of up to 1.2 million concurrent users. Record and playback web interactions using a Chrome plugin simulate network connections for mobile or desktop users and generate load from up to 10 different locations around the world. While not the only on-demand load-testing tool we've used—we also like <a href=\"https://blazemeter.com/\">BlazeMeter</a>—our teams were very enthusiastic about Load Impact.</p>",
                "radarId": 63,
                "id": "en_2016-11_905",
                "blip_selector": "load-impact"
            },
            {
                "blip_id": 980,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Repsheet",
                "display_name": "Repsheet",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "15",
                "tag": null,
                "description": "<p>Attacks on web properties using bots are becoming more sophisticated. Identifying these bad actors and their behaviors is the goal of the <a href=\"http://getrepsheet.com/\"><strong>Repsheet</strong></a> project. It's a plugin for either Apache or NGINX that records user activity, fingerprints actors using predefined and user-defined rules, and then allows action to be taken, including the ability to block offensive actors. It includes a utility that visualizes current actors; this puts the ability to manage bot-based threats in the hands of team members, increasing security awareness for teams. We like this since it's a good example of a simple tool solving a very real but often invisible problem—bot-based attacks.</p>",
                "radarId": 81,
                "id": "en_2016-11_980",
                "blip_selector": "repsheet"
            },
            {
                "blip_id": 1031,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Clojure.spec",
                "display_name": "Clojure.spec",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "60",
                "tag": null,
                "description": "<p>One of those perpetual developer debates involves language typing: How much is just right? <a href=\"/radar/languages-and-frameworks/clojure\">Clojure</a>, the dynamically typed functional Lisp on the JVM, added a new entry into this discussion that blurs the lines. <strong><a href=\"https://clojure.org/about/spec\">Clojure.spec</a></strong> is a new facility built into Clojure that allows developers to wrap type and other verification criteria around data structures, such as allowable value ranges. Once they are established, Clojure uses these specifications to provide a slew of benefits: generated tests, validation, destructuring of data structures and others. Clojure.spec is a promising way to have the benefits of types and ranges where developers need them but not everywhere.</p>",
                "radarId": 75,
                "id": "en_2016-11_1031",
                "blip_selector": "clojure-spec"
            },
            {
                "blip_id": 1060,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Three.js",
                "display_name": "Three.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "339",
                "tag": null,
                "description": "<p>Despite the fervor surrounding the spate of new headsets, we believe there are many VR and AR scenarios that make sense in the browser, particularly on mobile. Given this trend, we have seen an uptick in usage of <a href=\"https://threejs.org/\"><strong>Three.js</strong></a>, a powerful JavaScript visualization and 3D rendering framework. The growth in support for WebGL, which it is based on, has helped adoption, as has the vibrant community supporting this open source project.</p>",
                "radarId": 107,
                "id": "en_2016-11_1060",
                "blip_selector": "three-js"
            },
            {
                "blip_id": 1069,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "wit.ai",
                "display_name": "wit.ai",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "264",
                "tag": null,
                "description": "<p>Hype surrounding machine intelligence has reached a crescendo, but as with Big Data, useful frameworks and tools are waiting to be discovered among all the hot air. One such tool is <a href=\"https://wit.ai/\"><strong>wit.ai</strong></a>, a SaaS platform that allows developers to create conversational interfaces using natural language processing (NLP). Wit works with either text or speech inputs, helps developers manage conversational intent and allows custom business logic to be implemented using JavaScript. The system is free for commercial and noncommercial use and encourages the creation of open applications. Be aware that you must agree to let Wit use your data in order to improve the service and for its own analysis, so read the <a href=\"https://wit.ai/terms\">terms and conditions</a> carefully. Another contender in this space is the <a href=\"https://dev.botframework.com/\">Microsoft Bot Framework</a>, but it’s available only in limited preview form as of this writing. As with most things Microsoft, we expect the Bot Framework to evolve quickly, so it’s worth keeping an eye on.</p>",
                "radarId": 49,
                "id": "en_2016-11_1069",
                "blip_selector": "wit-ai"
            },
            {
                "blip_id": 1003,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "360",
                "name": "Big Data envy",
                "display_name": "Big Data envy",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "126",
                "tag": null,
                "description": "<p>We continue to see organizations chasing \"cool\" technologies, taking on unnecessary complexity and risk when a simpler choice would be better. One particular theme is using distributed, Big Data systems for relatively small data sets. This behavior prompts us to put <strong>Big Data envy</strong> on hold once more, with some additional data points from our recent experience. The <a href=\"http://cassandra.apache.org/\">Apache Cassandra</a> database promises massive scalability on commodity hardware, but we have seen teams overwhelmed by its architectural and operational complexity. Unless you have data volumes that require a 100+ node cluster, we recommend against using Cassandra. The operational team you’ll need to keep the thing running just isn’t worth it. While creating this edition of the Radar, we discussed several new database technologies, many offering \"10x\" performance improvements over existing systems. We’re always skeptical until new technology—especially something as critical as a database—has been properly proven. <a href=\"/radar/tools/jepsen\">Jepsen</a> provides <a href=\"http://jepsen.io/analyses.html\">analysis</a> of database performance under difficult conditions and has found <a href=\"https://aphyr.com/posts/283-call-me-maybe-redis\">numerous</a> <a href=\"https://aphyr.com/posts/284-call-me-maybe-mongodb\">bugs</a> in various NoSQL databases. We recommend maintaining a healthy dose of skepticism and keeping an eye on sites such as Jepsen when you evaluate database tech.</p>",
                "radarId": 21,
                "id": "en_2016-11_1003",
                "blip_selector": "big-data-envy"
            },
            {
                "blip_id": 1000,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "VR beyond gaming",
                "display_name": "VR beyond gaming",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "100",
                "tag": null,
                "description": "<p>The idea of virtual reality has been around for more than 50 years, and with successive improvements of computing technology many ideas have been hyped and explored. We believe that we're reaching a tipping point now. Modern graphics cards provide sufficient compute power to render detailed, realistic scenes in high resolutions, and at the same time at least two consumer-oriented VR headsets (the <a href=\"http://www.htcvive.com/uk/\">HTC Vive</a> and Facebook's <a href=\"https://www.oculus.com/en-us/\">Oculus Rift</a>) are coming to market. These headsets are affordable, they have high-resolution displays, and they eliminate perceivable motion-tracking lag, which was causing issues such as headaches and nausea before. The headsets are mainly targeted at enthusiast video gaming, but we are convinced that they will open many possibilities for <strong>VR beyond gaming</strong> , particularly as the low-fi approaches, such as <a href=\"https://www.google.co.uk/get/cardboard/get-cardboard/\">Google Cardboard</a>, are driving greater awareness.</p>",
                "radarId": 18,
                "id": "en_2016-11_1000",
                "blip_selector": "vr-beyond-gaming"
            },
            {
                "blip_id": 964,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Webpack",
                "display_name": "Webpack",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "12",
                "tag": null,
                "description": "<p><a href=\"http://webpack.github.io/\"><strong>Webpack</strong></a> has solidified itself as our go-to JavaScript module bundler. With its ever-growing <a href=\"https://github.com/webpack/docs/wiki/list-of-loaders\">list of loaders</a>, it provides a single dependency tree for all your static assets, allowing flexible manipulation of JavaScript, CSS, etc. and minimizing what needs to be sent to the browser and when. Of particular relevance is the smooth integration among AMD, CommonJS and <a href=\"/radar/languages-and-frameworks/es6\">ES6</a> modules and how it has enabled teams to work in ES6 and seamlessly transpile (using <a href=\"http://babeljs.io/\">Babel</a>) to earlier versions for browser compatibility. Many of our teams also value <a href=\"http://browserify.org/\">Browserify</a>, which covers a similar space but is more focused on making Node.js modules available for client-side use.</p>",
                "radarId": 70,
                "id": "en_2016-11_964",
                "blip_selector": "webpack"
            },
            {
                "blip_id": 932,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "385",
                "name": "Superficial private cloud",
                "display_name": "Superficial private cloud",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "247",
                "tag": null,
                "description": "<p>We've seen the indisputable productivity gains that come from deployment of applications and services into mature cloud providers. Much of that gain comes from the ability of teams to deploy and operate their own services with a high degree of autonomy and responsibility. We are now regularly coming across <strong>Superficial Private Cloud</strong> offerings within organizations, where basic virtualization platforms are being given the “cloud” label. Often teams can self-provision a restricted set of fixed service types with limited access and little ability to customize the centrally governed “enterprise blueprints,” leading to kludge solutions. Deployment pace regularly remains constrained by manually provisioned infrastructure such as network, firewall and storage. We encourage organizations to more fully consider the costs of mandating the use of an inadequate private cloud offering.</p>",
                "radarId": 52,
                "id": "en_2016-11_932",
                "blip_selector": "superficial-private-cloud"
            },
            {
                "blip_id": 1033,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "Scikit-learn",
                "display_name": "Scikit-learn",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "8",
                "tag": null,
                "description": "<p><a href=\"http://scikit-learn.org/stable/\"><strong>Scikit-learn</strong></a> is an increasingly popular machine-learning library written in Python. It provides a robust set of machine-learning models such as clustering, classification, regression and dimensionality reduction, and a rich set of functionality for companion tasks like model selection, model evaluation and data preparation. Since it is designed to be simple, reusable in various contexts and well documented, we see this tool accessible even to nonexperts to explore the machine-learning space.</p>",
                "radarId": 82,
                "id": "en_2016-11_1033",
                "blip_selector": "scikit-learn"
            },
            {
                "blip_id": 927,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "250",
                "name": "Rancher",
                "display_name": "Rancher",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "243",
                "tag": null,
                "description": "<p>The emerging Containers as a Service (CaaS) space is seeing a lot of movement and provides a useful option between basic IaaS (Infrastructure as a Service) and more opinionated PaaS (Platform as a Service). While <a href=\"http://rancher.com/\"><strong>Rancher</strong></a> creates less noise than some other players, we have enjoyed the simplicity that it brings to running <a href=\"/radar/platforms/docker\">Docker</a> containers in production. It can run stand-alone as a full solution or in conjunction with tools like <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>.</p>",
                "radarId": 32,
                "id": "en_2016-11_927",
                "blip_selector": "rancher"
            },
            {
                "blip_id": 1061,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Unity beyond gaming",
                "display_name": "Unity beyond gaming",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "261",
                "tag": null,
                "description": "<p>After experiencing years of growth as a platform for game development, <strong><a href=\"https://unity3d.com/\">Unity</a></strong> has recently become the platform of choice for VR and AR application development. Whether you’re creating a fully immersive world for the Oculus or HTC Vive headsets, a holographic layer for your newly spatial enterprise application or an AR feature set for your mobile app, Unity likely provides what you need to both prototype it and get it ready for prime time. Many of us at ThoughtWorks believe that VR and AR represent the next significant shift in the computing platform, and for now, Unity is the single most important tool in the toolbox we use to develop for this change. We’ve used Unity to develop all our VR prototypes, as well as AR functionality for headsets and phone/tablet applications.</p>",
                "radarId": 34,
                "id": "en_2016-11_1061",
                "blip_selector": "unity-beyond-gaming"
            },
            {
                "blip_id": 962,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Serverspec",
                "display_name": "Serverspec",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "34",
                "tag": null,
                "description": "<p>In the past we have included automated <a href=\"/radar/techniques/provisioning-testing\">Provisioning Testing</a> as a recommended technique, and in this issue we highlight <a href=\"http://serverspec.org/\"><strong>Serverspec</strong></a> as a popular tool for implementing those tests. Although this tool is not new, we are seeing its use become more common as more cross-functional delivery teams take on responsibility for infrastructure provisioning. Serverspec is built on the Ruby library RSpec and comes with a comprehensive set of helpers for asserting that server configuration is correct.</p>",
                "radarId": 66,
                "id": "en_2016-11_962",
                "blip_selector": "serverspec"
            },
            {
                "blip_id": 1050,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Phoenix",
                "display_name": "Phoenix",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "327",
                "tag": null,
                "description": "<p>Some of our ThoughtWorks teams have had very positive experiences with <strong>Phoenix</strong> , a server-side web MVC framework written in <a href=\"/radar/languages-and-frameworks/elixir\">Elixir</a>. In addition to being streamlined and easy to use, Phoenix takes advantage of Elixir to be extremely fast. For some developers, Phoenix evokes the joy they experienced when first discovering Ruby and Rails. Although the ecosystem of libraries for Phoenix is not as extensive as for some more mature frameworks, it should benefit from the continuing success and growth of support for Elixir.</p>",
                "radarId": 94,
                "id": "en_2016-11_1050",
                "blip_selector": "phoenix"
            },
            {
                "blip_id": 1014,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "338",
                "name": "Ethereum",
                "display_name": "Ethereum",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "219",
                "tag": null,
                "description": "<p>The hype seems to have peaked for blockchain and cryptocurrencies, as evidenced by the previous firehose-scale announcements in this area slowing to a trickle, and we expect some of the more speculative efforts to die out over time. One of the blockchains, <a href=\"https://www.ethereum.org/\"><strong>Ethereum</strong></a>, is making good progress and is worth watching. Ethereum is a public blockchain with a built-in programming language that allows \"smart contracts\" to be built into it. These are algorithmic movements of \"ether\" (the Ethereum cryptocurrency) in response to activity happening on the blockchain. R3Cev, the consortium building blockchain tech for banks, built its first proofs of concept on Ethereum. Ethereum has been used to build a Distributed Autonomous Organization (DAO)—one of the first \"algorithmic corporations\"—although a recent heist of <a href=\"http://www.coindesk.com/dao-attacked-code-issue-leads-60-million-ether-theft/\">$150m worth of Ether</a> demonstrates that the blockchain and cryptocurrencies are still the Wild West of the technology world.</p>",
                "radarId": 41,
                "id": "en_2016-11_1014",
                "blip_selector": "ethereum"
            },
            {
                "blip_id": 1068,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Galen",
                "display_name": "Galen",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "74",
                "tag": null,
                "description": "<p>Testing that layout and styling of responsive websites is working as expected across various form factors can be a slow and often manual process. <strong><a href=\"http://galenframework.com/\">Galen</a></strong> helps ease this problem by providing a simple language, running on top of <a href=\"http://www.seleniumhq.org/\">Selenium</a>, that allows you to specify expectations for the appearance of your website in various screen sizes. Although Galen suffers from the typical brittleness and speed issues of any end-to-end testing approach, we have found benefit in the early feedback on design issues.</p>",
                "radarId": 59,
                "id": "en_2016-11_1068",
                "blip_selector": "galen"
            },
            {
                "blip_id": 1017,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "338",
                "name": "Nuance Mix",
                "display_name": "Nuance Mix",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "241",
                "tag": null,
                "description": "<p><strong><a href=\"https://developer.nuance.com/public/index.php?task=mix\">Nuance Mix</a></strong> is a framework for natural language processing from the company that created the speech-to-text technology behind Dragon Speaking and the first roll-out of Siri. This framework supports the creation of grammars that allow for free-form user interaction via voice. The developer defines a domain-specific grammar that the framework can train itself to understand. The outcomes are responses to user input that identify the user's intents and interaction concepts. At first, it is limited to phrases close to the ones used to train it, but over time it can start to identify meaning from more divergent phrasing. Though it is still in beta, the accuracy from early exploration has been compelling, and the eventual product is one to watch for application forms that could benefit from hands-free user interaction—including mobile, IoT, AR, VR and interactive spaces.</p>",
                "radarId": 45,
                "id": "en_2016-11_1017",
                "blip_selector": "nuance-mix"
            },
            {
                "blip_id": 1067,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "axios",
                "display_name": "axios",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "75",
                "tag": null,
                "description": "<p>Our teams have had success with <a href=\"https://github.com/mzabriskie/axios\"><strong>axios</strong></a>, a promises-based HTTP client in JavaScript that they describe as \"better than <a href=\"/radar/languages-and-frameworks/fetch\">Fetch</a>.\" The project has lots of endorsements and activity on GitHub, and it gets a thumbs-up from us.</p>",
                "radarId": 73,
                "id": "en_2016-11_1067",
                "blip_selector": "axios"
            },
            {
                "blip_id": 866,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": ".NET Core",
                "display_name": ".NET Core",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "185",
                "tag": null,
                "description": "<p><strong><a href=\"https://www.microsoft.com/net/core\">.NET Core</a></strong> is an open source modular product for creating applications that can be easily deployed in Windows, macOS and Linux. .NET Core makes it possible to build cross-platform web applications using <a href=\"http://www.asp.net/core\">ASP.NET Core</a> with a set of tools, libraries and frameworks—another choice for microservices architecture. The community around .NET Core and other related projects has been growing. New tools have appeared and evolved quickly, such as <a href=\"/radar/tools/visual-studio-code\">Visual Studio Code</a>. There are <a href=\"/radar/platforms/docker\">Docker</a> <a href=\"https://www.microsoft.com/net/core#docker\">images</a> based on both Linux and Windows (<a href=\"/radar/platforms/microsoft-nano-server\">Nano Server</a>) with .NET Core that simplify applying a microservice architecture. CoreCLR and CoreFX appeared in the Radar in the past. However, a few months ago Microsoft <a href=\"https://blogs.msdn.microsoft.com/dotnet/2016/06/27/announcing-net-core-1-0\">announced</a> the release of .NET Core 1.0, the first stable version. We see good new opportunities, changes and a vibrant community as reasons to keep assessing this product.</p>",
                "radarId": 35,
                "id": "en_2016-11_866",
                "blip_selector": "net-core"
            },
            {
                "blip_id": 967,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Pinpoint",
                "display_name": "Pinpoint",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "30",
                "tag": null,
                "description": "<p>Teams using the Phoenix Server or <a href=\"/radar/techniques/phoenix-environments\">Phoenix Environment</a> techniques have found little in the way of support from Application Performance Management (APM) tools. Their licensing models, based on long-running, limited amounts of tin, and their difficulty in dealing with ephemeral hardware, have meant that they are often more trouble than they are worth. However, distributed systems need monitoring, and at some point many teams recognize the need for an APM tool. We think <strong><a href=\"https://github.com/naver/pinpoint\">Pinpoint</a></strong>, an open source tool in this space, is worth investigating as an alternative to AppDynamics and Dynatrace. Pinpoint is written in Java, with plugins available for many servers, databases and frameworks. While we think you can go a long way using a combination of other lightweight open source tools—<a href=\"/radar/tools/zipkin\">Zipkin</a>, for example—if you are in the market for an APM, Pinpoint is worth considering.</p>",
                "radarId": 79,
                "id": "en_2016-11_967",
                "blip_selector": "pinpoint"
            },
            {
                "blip_id": 1052,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "JuMP",
                "display_name": "JuMP",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "304",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/JuliaOpt/JuMP.jl\">JuMP</a></strong> is a domain-specific language for <a href=\"https://en.wikipedia.org/wiki/Mathematical_optimization\">mathematical optimizations</a> in <a href=\"http://julialang.org/\">Julia</a>. JuMP defines a common API called <a href=\"https://github.com/JuliaOpt/MathProgBase.jl\">MathProgBase</a> and enables users to write solver-agnostic code in Julia. Currently supported solvers include <a href=\"http://artelys.com/en/optimization-tools/knitro\">Artelys Knitro</a>, <a href=\"https://projects.coin-or.org/Bonmin\">Bonmin</a>, <a href=\"https://projects.coin-or.org/Cbc\">Cbc</a>, <a href=\"https://projects.coin-or.org/Clp\">Clp</a>, <a href=\"https://projects.coin-or.org/Couenne\">Couenne</a>, <a href=\"http://www-01.ibm.com/software/commerce/optimization/cplex-optimizer/\">CPLEX</a>, <a href=\"https://github.com/ifa-ethz/ecos\">ECOS</a>, <a href=\"http://www.fico.com/en/products/fico-xpress-optimization-suite\">FICO Xpress</a>, <a href=\"http://www.gnu.org/software/glpk/\">GLPK</a>, <a href=\"http://www.gurobi.com\">Gurobi</a>, <a href=\"https://projects.coin-or.org/Ipopt\">Ipopt</a>, <a href=\"http://www.mosek.com/\">MOSEK</a>, <a href=\"http://ab-initio.mit.edu/wiki/index.php/NLopt\">NLopt</a> and <a href=\"https://github.com/cvxgrp/scs\">SCS</a>. One other benefit is the implementation of automatic differentiation technique in reverse mode to compute derivatives so users are not limited to the standard operators like sin, cos, log and sqrt but can also implement their own custom objective functions in Julia.</p>",
                "radarId": 102,
                "id": "en_2016-11_1052",
                "blip_selector": "jump"
            },
            {
                "blip_id": 968,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "LambdaCD",
                "display_name": "LambdaCD",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "38",
                "tag": null,
                "description": "<p><a href=\"http://www.lambda.cd\"><strong>LambdaCD</strong></a> provides teams with a way to define Continuous Delivery pipelines in Clojure. This brings the benefits of <a href=\"/radar/tools/infrastructure-as-code\">Infrastructure as code</a> to the configuration of CD servers: source-control management, unit testing, refactoring and code reuse. In the \"pipelines as code\" space, LambdaCD stands out for being lightweight, self-contained and fully programmable, allowing teams to work with their pipelines in the same way that they do with their code.</p>",
                "radarId": 78,
                "id": "en_2016-11_968",
                "blip_selector": "lambdacd"
            },
            {
                "blip_id": 1055,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Vue.js",
                "display_name": "Vue.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "346",
                "tag": null,
                "description": "<p>In the ever-changing world of front-end JavaScript frameworks, <a href=\"https://vuejs.org/\"><strong>Vue.js</strong></a> has gained a lot of ground as a lightweight alternative to <a href=\"/radar/languages-and-frameworks/angularjs\">AngularJS</a>. It is designed to be a very flexible—and a less opinionated—library that offers a set of tools for building interactive web interfaces around concepts like modularity, components and reactive data flow. It has a low learning barrier, which makes it interesting for junior developers and beginners. Vue.js itself is not a full-blown framework; it is focused on the view layer only and therefore is easy to integrate with other libraries or existing projects.</p>",
                "radarId": 108,
                "id": "en_2016-11_1055",
                "blip_selector": "vue-js"
            },
            {
                "blip_id": 1037,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Pipelines as code",
                "display_name": "Pipelines as code",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "135",
                "tag": null,
                "description": "<p>Teams are pushing for automation across their environments, including their development infrastructure. <strong>Pipelines as code</strong> is defining the deployment pipeline through code instead of configuring a running CI/CD tool. <a href=\"/radar/tools/lambdacd\">LambdaCD</a>, <a href=\"http://readme.drone.io/usage/overview/\">Drone</a>, <a href=\"/radar/tools/gocd\">GoCD</a> and <a href=\"/radar/tools/concourse-ci\">Concourse</a> are examples that allow usage of this technique. Also, configuration automation tools for CI/CD systems like <a href=\"https://github.com/SpringerSBM/gomatic\">GoMatic</a> can be used to treat the deployment pipeline as code—versioned and tested.</p>",
                "radarId": 2,
                "id": "en_2016-11_1037",
                "blip_selector": "pipelines-as-code"
            },
            {
                "blip_id": 979,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Realm",
                "display_name": "Realm",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "252",
                "tag": null,
                "description": "<p><strong><a href=\"https://realm.io/\">Realm</a></strong> is a database designed for use on mobile devices, with its own persistence engine to achieve high performance. Realm is marketed as a replacement for SQLite and Core Data. Note that migrations are not quite as straightforward as the Realm documentation would have you believe. However, more and more teams are choosing Realm as the persistence mechanism in production environments for mobile applications.</p>",
                "radarId": 33,
                "id": "en_2016-11_979",
                "blip_selector": "realm"
            },
            {
                "blip_id": 1035,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Micro frontends",
                "display_name": "Micro frontends",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "130",
                "tag": null,
                "description": "<p>We've seen significant benefit from introducing <a href=\"/radar/techniques/microservices\">microservice architectures</a>, which have allowed teams to scale delivery of independently deployed and maintained services. However, teams have often struggled to avoid the creation of front-end monoliths—large and sprawling browser applications that are as difficult to maintain and evolve as the monolithic server-side applications we've abandoned. We're seeing an approach emerge that our teams call <strong>micro frontends</strong>. In this approach, a web application is broken up by its pages and features, with each feature being owned end-to-end by a single team. Multiple techniques exist to bring the application features—some old and some new—together as a cohesive user experience, but the goal remains to allow each feature to be developed, tested and deployed independently from others. The <a href=\"/radar/techniques/bff-backend-for-frontends\">BFF - backend for frontends</a> approach works well here, with each team developing a BFF to support its set of application features.</p>",
                "radarId": 15,
                "id": "en_2016-11_1035",
                "blip_selector": "micro-frontends"
            },
            {
                "blip_id": 1032,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Bottled Water",
                "display_name": "Bottled Water",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "68",
                "tag": null,
                "description": "<p>With the growth of interest in streaming data architectures and the downstream data lakes they feed, we have seen an increased reliance on \"change data capture\" tooling to connect transactional data stores to stream-processing systems. <strong><a href=\"https://github.com/confluentinc/bottledwater-pg\">Bottled Water</a></strong> is a welcome addition to this field, converting changes in <a href=\"/radar/platforms/postgresql-for-nosql\">PostgreSQL</a>’s write-ahead log into <a href=\"/radar/tools/apache-kafka\">Kafka</a> events. One downside of this approach, however, is that you are tied to low-level database events rather than the higher-level <a href=\"/radar/techniques/capture-domain-events-explicitly\">business events</a> we recommend as the foundation for an event-oriented architecture.</p>",
                "radarId": 74,
                "id": "en_2016-11_1032",
                "blip_selector": "bottled-water"
            },
            {
                "blip_id": 702,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Cloud lift and shift",
                "display_name": "Cloud lift and shift",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "108",
                "tag": null,
                "description": "<p>As more organizations are choosing to deploy applications in the cloud, we're regularly finding IT groups that are wastefully trying to replicate their existing data center management and security approaches in the cloud. This often comes in the form of firewalls, load balancers, network proxies, access control, security appliances and services that are extended into the cloud with minimal rethinking. We've seen organizations build their own orchestration APIs in front of the cloud providers to constrain the services that can be utilized by teams. In most cases these layers serve only to cripple the capability, taking away most of the intended benefits of moving to the cloud. In this edition of the Radar, we've chosen to rehighlight <strong>cloud lift and shift</strong> as a technique to avoid. Organizations should instead look more deeply at the intent of their existing security and operational controls, and look for alternative controls that work in the cloud without creating unnecessary constraints. Many of those controls will already exist for mature cloud providers, and teams that adopt the cloud can use native APIs for self-serve provisioning and operations.</p>",
                "radarId": 22,
                "id": "en_2016-11_702",
                "blip_selector": "cloud-lift-and-shift"
            },
            {
                "blip_id": 982,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "325",
                "name": "TensorFlow",
                "display_name": "TensorFlow",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2016-11",
                "theta": "258",
                "tag": null,
                "description": "<p>Google's <strong><a href=\"https://www.tensorflow.org/\">TensorFlow</a></strong> is an open source machine-learning platform that can be used for everything from research through to production and will run on hardware from a mobile CPU all the way to a large GPU compute cluster. It's an important platform because it makes implementing deep-learning algorithms much more accessible and convenient. Despite the hype, though, TensorFlow isn't really anything new algorithmically: All of these techniques have been available in the public domain via academia for some time. It's also important to realize that most businesses are not yet doing even basic predictive analytics and that jumping to deep learning likely won't help make sense of most data sets. For those who do have the right problem and data set, however, TensorFlow is a useful toolkit.</p>",
                "radarId": 48,
                "id": "en_2016-11_982",
                "blip_selector": "tensorflow"
            }
        ]
    },
    {
        "date": "2017-03",
        "blips": [
            {
                "blip_id": 1116,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Molecule",
                "display_name": "Molecule",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "42",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/metacloud/molecule\">Molecule</a></strong> is designed to aid in the development and testing of <a href=\"/radar/tools/ansible\">Ansible</a> roles. By building the scaffolding for running Ansible role tests on a virtual machine or container of choice, we don't have to setup our testing environment manually. Molecule leverages <a href=\"/radar/tools/vagrant\">Vagrant</a>, <a href=\"/radar/platforms/docker\">Docker</a>, and <a href=\"/radar/platforms/openstack\">OpenStack</a> to manage virtual machines or containers, and supports <a href=\"/radar/tools/serverspec\">Serverspec</a>, <a href=\"/radar/tools/testinfra\">Testinfra</a>, or <a href=\"https://github.com/aelsabbahy/goss\">Goss</a> to run the tests. The default steps in the sequence facility model include: virtual machine management, Ansible linting, idempotence testing and convergence testing. Although it is a fairly young project, we see a great potential for its usage.</p>",
                "radarId": 72,
                "id": "en_2017-03_1116",
                "blip_selector": "molecule"
            },
            {
                "blip_id": 1114,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Amazon Rekognition",
                "display_name": "Amazon Rekognition",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "84",
                "tag": null,
                "description": "<p><strong><a href=\"https://aws.amazon.com/rekognition/\">Amazon Rekognition</a></strong> is one of the cloud-based image comprehension tools we've mentioned elsewhere in this Radar. What we like about it is that Amazon has taken a somewhat novel approach to making faces anonymous (using GUIDs) from AWS to accommodate some of the privacy concerns that come with facial recognition.</p>",
                "radarId": 66,
                "id": "en_2017-03_1114",
                "blip_selector": "amazon-rekognition"
            },
            {
                "blip_id": 931,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Overambitious API gateways",
                "display_name": "Overambitious API gateways",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "240",
                "tag": null,
                "description": "<p>One of our regular complaints is about business smarts implemented in middleware, resulting in transport software with ambitions to run critical application logic. Vendors in the highly competitive API gateway market continue to add features that differentiate their products. This results in <strong>overambitious API gateway</strong> products whose functionality—on top of what is essentially a reverse proxy—encourages designs that are difficult to test and deploy. API gateways can provide utility in dealing with some generic concerns—for example, authentication and rate-limiting—but any domain smarts such as data transformation or rule processing should live in applications or services where they can be controlled by product teams working closely with the domains they support.</p>",
                "radarId": 54,
                "id": "en_2017-03_931",
                "blip_selector": "overambitious-api-gateways"
            },
            {
                "blip_id": 1083,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Spring Cloud",
                "display_name": "Spring Cloud",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "342",
                "tag": null,
                "description": "<p>Teams building systems composed of microservices need to think about coordination techniques such as service discovery, load balancing, circuit breaking and health checking. Many of these techniques require teams to set up tooling, which is not always trivial. The <strong><a href=\"http://projects.spring.io/spring-cloud/\">Spring Cloud</a></strong> project provides tools for developers so they can use these coordination techniques in the familiar Spring environment. These tools support <a href=\"/radar/tools/consul\">Consul</a>, <a href=\"https://zookeeper.apache.org/\">ZooKeeper</a> and the <a href=\"/radar/platforms/netflix-oss-full-stack\">Netflix OSS full stack</a>, all tools that we like. Simply put, it makes it easy to do the right thing with these tool sets. Although our usual concerns with Spring still stand, namely that it hides too much of the complexity, you should consider Spring Cloud if you are in the ecosystem and need to solve these problems.</p>",
                "radarId": 101,
                "id": "en_2017-03_1083",
                "blip_selector": "spring-cloud"
            },
            {
                "blip_id": 1036,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "APIs as a product",
                "display_name": "APIs as a product",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "170",
                "tag": null,
                "description": "<p>Companies have wholeheartedly embraced APIs as a way to expose business capabilities to both external and internal developers. APIs promise the ability to experiment quickly with new business ideas by recombining core capabilities. But what differentiates an API from an ordinary enterprise integration service? One difference lies in treating <strong>APIs as a product</strong> , even when the consumer is an internal system or fellow developer. Teams that build APIs should understand the needs of their customers and make the product compelling to them. Usability testing and UX research can lead to a better design and understanding of the API usage patterns and help bring a product mindset to APIs. APIs, like products, should be actively maintained and supported, and, easy to use. They should have an owner who advocates for the customer and strives for continual improvement. In our experience, product orientation is the missing ingredient that makes the difference between ordinary enterprise integration and an agile business built on a platform of APIs.</p>",
                "radarId": 2,
                "id": "en_2017-03_1036",
                "blip_selector": "apis-as-a-product"
            },
            {
                "blip_id": 696,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "385",
                "name": "CMS as a platform",
                "display_name": "CMS as a platform",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "210",
                "tag": null,
                "description": "<p>We are seeing too many organizations run into trouble as they attempt to use their <strong>CMS as a platform</strong> for delivering large and complex digital applications. This is often driven by the vendor-fueled hope of bypassing unresponsive IT organizations and enabling the business to drag and drop changes directly to production. While we are very supportive of providing content producers with the right tools and workflows, for applications with complex business logic we tend to recommend treating your CMS as a component of your platform (often in a hybrid or headless mode) cooperating cleanly with other services, rather than attempting to implement all of your functionality in the CMS itself.</p>",
                "radarId": 53,
                "id": "en_2017-03_696",
                "blip_selector": "cms-as-a-platform"
            },
            {
                "blip_id": 951,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "120",
                "name": "Redux",
                "display_name": "Redux",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "342",
                "tag": null,
                "description": "<p>With the increasing complexity of single-page JavaScript applications, we have seen a more pressing need to make client-side state management predictable. <a href=\"http://redux.js.org/\"><strong>Redux</strong></a>, with its <a href=\"http://redux.js.org/docs/introduction/ThreePrinciples.html\">three principles</a> of restrictions for updating state, has proven to be invaluable in a number of projects we have implemented. <a href=\"https://egghead.io/courses/getting-started-with-redux\">Getting Started with Redux</a> and <a href=\"https://egghead.io/courses/building-react-applications-with-idiomatic-redux\">idiomatic Redux</a> tutorials are a good starting point for new and experienced users. Its minimal library design has spawned a rich set of tools, and we encourage you to check out the <a href=\"https://github.com/markerikson/redux-ecosystem-links\">redux-ecosystem-links</a> project for examples, middleware and utility libraries. We also particularly like the testability story: Dispatching actions, state transitions and rendering can be unit-tested separately from one another and with minimal amounts of mocking.</p>",
                "radarId": 81,
                "id": "en_2017-03_951",
                "blip_selector": "redux"
            },
            {
                "blip_id": 1104,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Enterprise-wide integration test environments",
                "display_name": "Enterprise-wide integration test environments",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "116",
                "tag": null,
                "description": "<p>When the enterprise-wide quarterly or monthly releases were considered best practice, it was necessary to maintain a complete environment for performing testing cycles prior to deployment to production. These <strong>enterprise-wide integration test environments</strong> (often referred to as SIT or Staging) are a common bottleneck for continuous delivery today. The environments themselves are fragile and expensive to maintain, often with components that need manual configuration by a separate environment management team. Testing in the staging environment provides unreliable and slow feedback, and testing effort is duplicated with what can be performed on components in isolation. We recommend that organizations incrementally create an independent path to production for key components. Important techniques include <a href=\"/radar/techniques/consumer-driven-contract-testing\">contract testing</a>, <a href=\"/radar/techniques/decoupling-deployment-from-release\">decoupling deployment from release</a>, <a href=\"/radar/techniques/focus-on-mean-time-to-recovery\">focus on mean time to recovery</a> and <a href=\"/radar/techniques/qa-in-production\">testing in production</a>.</p>",
                "radarId": 22,
                "id": "en_2017-03_1104",
                "blip_selector": "enterprise-wide-integration-test-environments"
            },
            {
                "blip_id": 1010,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "338",
                "name": "IndiaStack",
                "display_name": "IndiaStack",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "220",
                "tag": null,
                "description": "<p><strong><a href=\"http://www.indiastack.org\">IndiaStack</a></strong> is a set of Open APIs designed with the goal of transforming India from a data-poor to a data-rich country. The stack emphasizes layered innovation by specifying a minimal set of APIs and encourages the rest of the ecosystem to build custom applications on top of these APIs. <a href=\"http://www.indiastack.org/Resource#Aadhaar\">Aadhaar</a> serves as one of the foundation layers, providing authentication services for more than a billion Indian citizens. In addition, there are services to provide paperless transactions through digital signatures (eSign), unified online payment (UPI) and an electronic consent layer ((e-KYC)[https://uidai.gov.in/ecosystem/authentication-devices-documents/about-aadhaar-paperless-offline-e-kyc.html]) to securely provide Aadhaar details to service providers. We believe in the Open API–driven initiative to bring digital innovation, and the design principles behind IndiaStack could be used as a change agent for other regions/countries.</p>",
                "radarId": 41,
                "id": "en_2017-03_1010",
                "blip_selector": "indiastack"
            },
            {
                "blip_id": 1074,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "DeepLearning.scala",
                "display_name": "DeepLearning.scala",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "288",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/ThoughtWorksInc/DeepLearning.scala\">DeepLearning.scala</a></strong> is an open source deep-learning toolkit in Scala created by our colleagues at ThoughtWorks. We're excited about this project because it uses differentiable functional programming to create and compose neural networks; a developer simply writes code in Scala with static typing. DeepLearning.scala currently supports basic types such as float, double, GPU-accelerated N-dimensional arrays as well as algebraic data types. We're looking forward to future releases of the toolkit which are said to support higher order functions and distributed training on <a href=\"/radar/platforms/apache-spark\">Spark</a>.</p>",
                "radarId": 92,
                "id": "en_2017-03_1074",
                "blip_selector": "deeplearning-scala"
            },
            {
                "blip_id": 1041,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Container security scanning",
                "display_name": "Container security scanning",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "160",
                "tag": null,
                "description": "<p>The container revolution instigated by <a href=\"/radar/platforms/docker\">Docker</a> has massively reduced the friction in moving applications between environments but at the same time has blown a rather large hole in the traditional controls over what can go to production. The technique of <strong>container security scanning</strong> is a necessary response to this threat vector. Docker now provides its own <a href=\"https://blog.docker.com/2016/05/docker-security-scanning/\">security scanning tools</a>, as does <a href=\"https://coreos.com/blog/vulnerability-analysis-for-containers/\">CoreOS</a>, and we've also had success with the <a href=\"https://benchmarks.cisecurity.org/\">CIS Security Benchmarks</a>. Whichever approach you take, we believe the topic of automated container security validation is of high value and a necessary part of PaaS thinking.</p>",
                "radarId": 11,
                "id": "en_2017-03_1041",
                "blip_selector": "container-security-scanning"
            },
            {
                "blip_id": 1025,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "190",
                "name": "Pa11y",
                "display_name": "Pa11y",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "45",
                "tag": null,
                "description": "<p><a href=\"http://pa11y.org/\"><strong>Pa11y</strong></a> is an automatic accessibility tester that can run from the command line and be embedded into a build pipeline. Our teams have had success using Pa11y on a highly dynamic site by first creating a static HTML version, then running the accessibility tests against that. For many systems—especially government websites—accessibility testing is a requirement, and Pa11y makes it all a lot easier.</p>",
                "radarId": 61,
                "id": "en_2017-03_1025",
                "blip_selector": "pa11y"
            },
            {
                "blip_id": 1058,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Kafka Streams",
                "display_name": "Kafka Streams",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "225",
                "tag": null,
                "description": "<p><strong>Kafka Streams</strong> is a lightweight library for building streaming applications. It's been designed with the goal of simplifying stream processing enough to make it easily accessible as a mainstream application programming model for asynchronous services. It can be a good alternative in scenarios where you want to apply a stream processing model to your problem without embracing the complexity of running a cluster (usually introduced by full-fledged stream processing frameworks).</p>",
                "radarId": 42,
                "id": "en_2017-03_1058",
                "blip_selector": "kafka-streams"
            },
            {
                "blip_id": 1100,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Social code analysis",
                "display_name": "Social code analysis",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "110",
                "tag": null,
                "description": "<p><strong>Social code analysis</strong> enriches our understanding of the code quality by overlaying a developer's behavior with the structural analysis of the code. It uses data from version control systems, such as frequency and time of the change as well as the person making the change. You can choose to write your own scripts to analyze such data or use tools such as <a href=\"http://www.empear.com/\">CodeScene</a>. CodeScene can help you gain a better understanding of your software systems by identifying hotspots and complex, hard-to-maintain subsystems, coupling between distributed subsystems through temporal coupling, as well as the view of Conway's law in your organization. We believe that with technology trends such as distributed systems, microservices and distributed teams the social dimension of our code is vital in our holistic understanding of our systems' health.</p>",
                "radarId": 16,
                "id": "en_2017-03_1100",
                "blip_selector": "social-code-analysis"
            },
            {
                "blip_id": 1110,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Spinnaker",
                "display_name": "Spinnaker",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "21",
                "tag": null,
                "description": "<p><a href=\"http://techblog.netflix.com/2015/11/global-continuous-delivery-with.html\">Netflix</a> has open sourced <a href=\"http://www.spinnaker.io/\"><strong>Spinnaker</strong></a>, its microservices continuous delivery (CD) platform. Compared to other CI/CD platforms, Spinnaker implements cluster management and deployment of baked images to the cloud as first-class features. It supports out-of-the-box deployment and cluster management for multiple cloud providers such as Google Cloud Platform, AWS and <a href=\"/radar/platforms/pivotal-cloud-foundry\">Pivotal Cloud Foundry</a>. You can integrate Spinnaker with Jenkins to run a Jenkins job build. We like Spinnaker's opinionated approach for deploying microservices to the cloud—with the exception that Spinnaker's pipelines are created via a user interface (UI) and cannot be configured as code.</p>",
                "radarId": 75,
                "id": "en_2017-03_1110",
                "blip_selector": "spinnaker"
            },
            {
                "blip_id": 1030,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Android-x86",
                "display_name": "Android-x86",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "77",
                "tag": null,
                "description": "<p><strong><a href=\"http://www.android-x86.org/\">Android-x86</a></strong> is a port of the <a href=\"http://source.android.com/\">Android open source</a> project to x86 platforms. The project started by hosting various patches from the community for x86 support but then later created its own codebase to provide support for different x86 platforms. We have seen significant time savings by utilizing Android-x86 in our CI servers instead of emulators for hermetic UI testing. However, for UI-specific tests targeting a particular device resolution—simulating low memory, bandwidth and battery—it is better to stick with emulators.</p>",
                "radarId": 67,
                "id": "en_2017-03_1030",
                "blip_selector": "android-x86"
            },
            {
                "blip_id": 1053,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "OpenVR",
                "display_name": "OpenVR",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "245",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/ValveSoftware/openvr\">OpenVR</a></strong> is the underlying SDK in making many of the VR head-mounted displays (HMDs) work with Unity and will likely keep growing in importance. Much of the VR work at ThoughtWorks was built on top of OpenVR, because it will run on any HMD, unlike the other SDKs. Though it is not open source, it is free via the license. The Oculus SDK is more restrictive in its licensing and only works on Oculus devices. <a href=\"https://osvr.github.io/\">OSVR</a>, while truly open source, doesn't seem to have as much adoption yet. If you're going to develop a VR application and target as many devices as possible—and not use Unity or Unreal to develop them—OpenVR is the most concrete and pragmatic solution right now.</p>",
                "radarId": 47,
                "id": "en_2017-03_1053",
                "blip_selector": "openvr"
            },
            {
                "blip_id": 1035,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Micro frontends",
                "display_name": "Micro frontends",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "130",
                "tag": null,
                "description": "<p>We've seen significant benefit from introducing <a href=\"/radar/techniques/microservices\">microservice architectures</a>, which have allowed teams to scale delivery of independently deployed and maintained services. However, teams have often struggled to avoid the creation of front-end monoliths—large and sprawling browser applications that are as difficult to maintain and evolve as the monolithic server-side applications we've abandoned. We're seeing an approach emerge that our teams call <strong>micro frontends</strong>. In this approach, a web application is broken up by its pages and features, with each feature being owned end-to-end by a single team. Multiple techniques exist to bring the application features—some old and some new—together as a cohesive user experience, but the goal remains to allow each feature to be developed, tested and deployed independently from others. The <a href=\"/radar/techniques/bff-backend-for-frontends\">BFF - backend for frontends</a> approach works well here, with each team developing a BFF to support its set of application features.</p>",
                "radarId": 14,
                "id": "en_2017-03_1035",
                "blip_selector": "micro-frontends"
            },
            {
                "blip_id": 676,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Elixir",
                "display_name": "Elixir",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "290",
                "tag": null,
                "description": "<p>Interest in the <a href=\"http://elixir-lang.org/\"><strong>Elixir</strong></a> programming language continues to build. Increasingly, we see it used in serious projects and hear feedback from developers who find its Actor model to be robust and very fast. Elixir, which is built on top of the Erlang virtual machine, is showing promise for creating highly concurrent and fault-tolerant systems. Elixir has distinctive features such as the Pipe operator, which allows developers to build a pipeline of functions as you would in the UNIX command shell. The shared byte code allows Elixir to interoperate with Erlang and leverage existing libraries while supporting tools such as the Mix build tool, the IEx interactive shell and the <a href=\"http://elixir-lang.org/docs/stable/ex_unit/ExUnit.html\">ExUnit</a> unit-testing framework.</p>",
                "radarId": 83,
                "id": "en_2017-03_676",
                "blip_selector": "elixir"
            },
            {
                "blip_id": 1032,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Bottled Water",
                "display_name": "Bottled Water",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "70",
                "tag": null,
                "description": "<p>With the growth of interest in streaming data architectures and the downstream data lakes they feed, we have seen an increased reliance on \"change data capture\" tooling to connect transactional data stores to stream-processing systems. <strong><a href=\"https://github.com/confluentinc/bottledwater-pg\">Bottled Water</a></strong> is a welcome addition to this field, converting changes in <a href=\"/radar/platforms/postgresql-for-nosql\">PostgreSQL</a>'s write-ahead log into <a href=\"/radar/tools/apache-kafka\">Kafka</a> events. One downside of this approach, however, is that you are tied to low-level database events rather than the higher-level <a href=\"/radar/techniques/capture-domain-events-explicitly\">business events</a> we recommend as the foundation for an event-oriented architecture.</p>",
                "radarId": 68,
                "id": "en_2017-03_1032",
                "blip_selector": "bottled-water"
            },
            {
                "blip_id": 1095,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "OpenTracing",
                "display_name": "OpenTracing",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "244",
                "tag": null,
                "description": "<p>As monolithic applications are being replaced with more complex <a href=\"/radar/techniques/microservices\">(micro)service</a> ecosystems, tracing requests across multiple services is becoming the norm. With majority contribution from LightStep and Uber <a href=\"http://opentracing.io/\"><strong>OpenTracing</strong></a> is rapidly becoming the de facto standard for distributed tracing. There is a growing number of <a href=\"http://opentracing.io/documentation/pages/supported-tracers\">tracers</a> supporting OpenTracing standard, including <a href=\"/radar/tools/zipkin\">Zipkin</a>, <a href=\"/radar/languages-and-frameworks/instana\">Instana</a>, and <a href=\"https://uber.github.io/jaeger/\">Jaeger</a>. OpenTracing currently provides vendor-neutral implementation in multiple languages including: Go, JavaScript, Java, Python, Objective-C, C#, C++, Ruby and PHP.</p>",
                "radarId": 30,
                "id": "en_2017-03_1095",
                "blip_selector": "opentracing"
            },
            {
                "blip_id": 1081,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "235",
                "name": "Nightwatch",
                "display_name": "Nightwatch",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "320",
                "tag": null,
                "description": "<p><a href=\"http://nightwatchjs.org/\"><strong>Nightwatch</strong></a> is a framework that allows automated acceptance tests for browser-based apps to be created in JavaScript and run in <a href=\"/radar/platforms/node-js\">Node.js</a>. Nightwatch allows tests to be defined using a fluent API which can then be executed against a Selenium/WebDriver server. In the case of single page apps or other JavaScript-heavy pages, this allows the automated tests to be created and run within the same language and environment as the bulk of the code.</p>",
                "radarId": 86,
                "id": "en_2017-03_1081",
                "blip_selector": "nightwatch"
            },
            {
                "blip_id": 1112,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Yarn",
                "display_name": "Yarn",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "7",
                "tag": null,
                "description": "<p><strong><a href=\"https://yarnpkg.com/en/\">Yarn</a></strong> is a new package manager that replaces the existing workflow for the npm client while remaining compatible with the npm registry. With the npm client, we may end up with a different tree structure under node_modules based on the order that dependencies are installed. This nondeterministic nature can cause \"works on my machine\" problems. By breaking the installation steps into resolution, fetching and linking, Yarn avoids these issues using deterministic algorithms and lockfiles and thus guarantees repeatable installations. We've also seen significantly faster builds in our continuous integration (CI) environment because of Yarn caching all the packages it downloads.</p>",
                "radarId": 77,
                "id": "en_2017-03_1112",
                "blip_selector": "yarn"
            },
            {
                "blip_id": 919,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "215",
                "name": "AWS Lambda",
                "display_name": "AWS Lambda",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "231",
                "tag": null,
                "description": "<p>Our teams continue to enjoy using <strong><a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a></strong> and are beginning to use it to experiment with <a href=\"/radar/techniques/serverless-architecture\">serverless architectures</a>, combining Lambda with the <a href=\"/radar/platforms/amazon-api-gateway\">API Gateway</a>. We do recommend that Lambda functions contain only a moderate amount of code. Ensuring the quality of a solution based on a tangle of many large Lambda functions is difficult, and such a solution may not be cost-effective. For more complex needs, deployments based on containers or VMs are still preferable. In addition, we have run into significant problems using Java for Lambda functions, with erratic latencies up to several seconds as the Lambda container is started. Of course, you can sidestep this issue by using JavaScript or Python, and if Lambda functions do not contain a lot of code, the choice of programming language should not matter too much.</p>",
                "radarId": 29,
                "id": "en_2017-03_919",
                "blip_selector": "aws-lambda"
            },
            {
                "blip_id": 1119,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Spacemacs",
                "display_name": "Spacemacs",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "35",
                "tag": null,
                "description": "<p>As any Emacs fan will tell you, Emacs is more than a text editor; it is a platform for character-mapped applications. Over the past few years, there has been an explosion of new developments on this platform, but we think <strong><a href=\"https://www.spacemacs.org/\">Spacemacs</a></strong> deserves particular attention. Spacemacs provides an introduction to the Emacs platform, with a new keyboard user-interface, simplified customization layers, and a curated distribution of Emacs packages. One of the project's aims is to be the best of worlds by combining the Vim UI with the <a href=\"https://martinfowler.com/bliki/InternalReprogrammability.html\">internal reprogrammability</a> of Emacs. We consider developer productivity tools to be a vital part of effective software development, and if you haven't considered Emacs for a while, we suggest you take a look at how Spacemacs rethinks this classic development platform.</p>",
                "radarId": 73,
                "id": "en_2017-03_1119",
                "blip_selector": "spacemacs"
            },
            {
                "blip_id": 1088,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Tango",
                "display_name": "Tango",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "253",
                "tag": null,
                "description": "<p>Alongside virtual reality (VR), which has a relatively high bar to entry due to hardware requirements and the effort to create virtual worlds, alternate reality (AR) and mixed reality (MR) also entered into the mainstream last year. Pokémon Go provided evidence that regular smartphones are sufficient to create compelling AR/MR experiences. <strong><a href=\"https://en.wikipedia.org/wiki/Tango_(platform)\">Tango</a></strong> is a new hardware sensor technology for mobile phones that further enhances the possibilities for AR/MR on phones. It allows apps to acquire detailed 3-D measurements of the user's surroundings so that virtual objects can be placed and rendered more convincingly on the camera feed. The first phones with Tango technology are now available.</p>",
                "radarId": 49,
                "id": "en_2017-03_1088",
                "blip_selector": "tango"
            },
            {
                "blip_id": 1037,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Pipelines as code",
                "display_name": "Pipelines as code",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "135",
                "tag": null,
                "description": "<p>Teams are pushing for automation across their environments(testing), including their development infrastructure. <strong>Pipelines as code</strong> is defining the deployment pipeline through code instead of configuring a running CI/CD tool. <a href=\"/radar/tools/lambdacd\">LambdaCD</a>, <a href=\"http://readme.drone.io/usage/overview/\">Drone</a>, <a href=\"/radar/tools/gocd\">GoCD</a> and <a href=\"/radar/tools/concourse-ci\">Concourse</a> are examples that allow usage of this technique. Also, configuration automation tools for CI/CD systems like <a href=\"https://github.com/SpringerSBM/gomatic\">GoMatic</a> can be used to treat the deployment pipeline as code—versioned and tested.</p>",
                "radarId": 1,
                "id": "en_2017-03_1037",
                "blip_selector": "pipelines-as-code"
            },
            {
                "blip_id": 1004,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "380",
                "name": "A single CI instance for all teams",
                "display_name": "A single CI instance for all teams",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "168",
                "tag": null,
                "description": "<p>We're compelled to caution, again, against creating <strong>a single CI instance for all teams</strong>. While it's a nice idea in theory to consolidate and centralize Continuous Integration (CI) infrastructure, in reality we do not see enough maturity in the tools and products in this space to achieve the desired outcome. Software delivery teams which must use the centralized CI offering regularly have long delays depending on a central team to perform minor configuration tasks, or to troubleshoot problems in the shared infrastructure and tooling. At this stage, we continue to recommend that organizations limit their centralized investment to establishing patterns, guidelines and support for delivery teams to operate their own CI infrastructure.</p>",
                "radarId": 18,
                "id": "en_2017-03_1004",
                "blip_selector": "a-single-ci-instance-for-all-teams"
            },
            {
                "blip_id": 1050,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "Phoenix",
                "display_name": "Phoenix",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "330",
                "tag": null,
                "description": "<p>Some of our ThoughtWorks teams have had very positive experiences with <strong>Phoenix</strong> , a server-side web MVC framework written in <a href=\"/radar/languages-and-frameworks/elixir\">Elixir</a>. In addition to being streamlined and easy to use, Phoenix takes advantage of Elixir to be extremely fast. For some developers, Phoenix evokes the joy they experienced when first discovering Ruby and Rails. Although the ecosystem of libraries for Phoenix is not as extensive as for some more mature frameworks, it should benefit from the continuing success and growth of support for Elixir.</p>",
                "radarId": 87,
                "id": "en_2017-03_1050",
                "blip_selector": "phoenix"
            },
            {
                "blip_id": 1101,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Platform engineering product teams",
                "display_name": "Platform engineering product teams",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "120",
                "tag": null,
                "description": "<p>The adoption of cloud and DevOps, while increasing the productivity of teams who can now move more quickly with reduced dependency on centralized operations teams and infrastructure, also has constrained teams who lack the skills to self-manage a full application and operations stack. Some organizations have tackled this challenge by creating <strong>platform engineering product teams</strong>. These teams operate an internal platform which enables delivery teams to self-service deploy and operate systems with reduced lead time and stack complexity. The emphasis here is on API-driven self-service and supporting tools, with delivery teams still responsible for supporting what they deploy onto the platform. Organizations that consider establishing such a platform team should be very cautious not to accidentally create a <a href=\"/radar/techniques/separate-devops-team\">separate DevOps team</a>, nor should they simply relabel their <a href=\"/radar/platforms/superficial-private-cloud\">existing hosting and operations structure</a> as a platform.</p>",
                "radarId": 15,
                "id": "en_2017-03_1101",
                "blip_selector": "platform-engineering-product-teams"
            },
            {
                "blip_id": 1111,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "287",
                "name": "spaCy",
                "display_name": "spaCy",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "28",
                "tag": null,
                "description": "<p><a href=\"https://spacy.io/\"><strong>spaCy</strong></a> is a Natural Language Processing (NLP) library written in Python. It is a high-performance library, intended for use by developers in production, and applies NLP models suited for processing text that often mixes in emoticons and inconsistent punctuation marks. Unlike other NLP frameworks, spaCy is a pluggable library and not a platform; it is aimed at production applications rather than model training for research. It plays well with <a href=\"/radar/platforms/tensorflow\">TensorFlow</a> and the rest of the Python AI ecosystem. We've used spaCy in the enterprise context to build a search engine that takes human language queries and helps users make business decisions.</p>",
                "radarId": 74,
                "id": "en_2017-03_1111",
                "blip_selector": "spacy"
            },
            {
                "blip_id": 796,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "Apache Mesos",
                "display_name": "Apache Mesos",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "192",
                "tag": null,
                "description": "<p>We've continued to have positive experiences deploying the <strong><a href=\"http://mesos.apache.org/\">Apache Mesos</a></strong> platform to manage cluster resources for highly distributed systems. Mesos abstracts out underlying computing resources such as CPU and storage, aiming to provide efficient utilization while maintaining isolation. Mesos includes <a href=\"https://mesos.github.io/chronos/\">Chronos</a> for distributed and fault-tolerant execution of scheduled jobs, and <a href=\"https://mesosphere.github.io/marathon/\">Marathon</a> for orchestrating long-running processes in containers.</p>",
                "radarId": 26,
                "id": "en_2017-03_796",
                "blip_selector": "apache-mesos"
            },
            {
                "blip_id": 879,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Ember.js",
                "display_name": "Ember.js",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "288",
                "tag": null,
                "description": "<p>If you are faced with building a single-page application (SPA) and trying to choose a framework to build with, <strong><a href=\"http://emberjs.com/\">Ember.js</a></strong> has emerged as a leading choice. Our teams praise Ember for its highly productive developer experience, with far fewer surprises than other frameworks such as <a href=\"/radar/languages-and-frameworks/angularjs\">AngularJS</a>. The Ember CLI build tooling is a haven in the storm of JavaScript build tools, and the Ember core team and community are highly active and responsive.</p>",
                "radarId": 78,
                "id": "en_2017-03_879",
                "blip_selector": "ember-js"
            },
            {
                "blip_id": 1123,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Cake and Fake",
                "display_name": "Cake and Fake",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "72",
                "tag": null,
                "description": "<p>MSBuild has been the primary build system in the .NET ecosystem since its introduction in 2005; however, it suffers from many of the same weaknesses we've previously called out in <a href=\"/radar/tools/maven\">Maven</a>. The .NET community has started to develop alternatives to MSBuild which are easier to maintain and more flexible, and evolve more fluidly as a project grows. Two of these alternatives are <strong><a href=\"http://cakebuild.net/\">Cake</a> and <a href=\"https://fake.build/\">Fake</a></strong>. Cake uses a DSL built in C#, while Fake uses F#. Each has seen significant growth over the last year and has proven to be a viable alternative to MSBuild for orchestrating common build tasks in .NET projects.</p>",
                "radarId": 58,
                "id": "en_2017-03_1123",
                "blip_selector": "cake-and-fake"
            },
            {
                "blip_id": 1089,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "PlatformIO",
                "display_name": "PlatformIO",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "249",
                "tag": null,
                "description": "<p><strong><a href=\"http://platformio.org/\">PlatformIO</a></strong> provides a rich ecosystem for IoT development by providing cross-platform builds, library management and good integration with existing IDEs. The intelligent code completion and Smart Code Linter with built-in terminal and serial port monitor greatly enhances the developer experience. It also organizes and maintains <a href=\"http://platformio.org/lib\">thousands of libraries</a> and provides a clean dependency manager with semantic versioning to ease IoT development. We've started using PlatformIO in a few IoT projects and we really like it for its simplicity and wide support of <a href=\"http://platformio.org/platforms\">platforms</a> and <a href=\"http://platformio.org/boards\">boards</a>.</p>",
                "radarId": 48,
                "id": "en_2017-03_1089",
                "blip_selector": "platformio"
            },
            {
                "blip_id": 1011,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "285",
                "name": "Cassandra carefully",
                "display_name": "Cassandra carefully",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "196",
                "tag": null,
                "description": "<p>Apache's <a href=\"http://cassandra.apache.org/\">Cassandra</a> database is a powerful, scalable Big Data solution for storing and processing large amounts of data, often using hundreds of nodes split over multiple worldwide locations. It's a great tool and we like it, but too often we see teams run into trouble using it. We recommend using <strong>Cassandra carefully</strong>. Teams often misunderstand the use case for Cassandra, attempting to use it as a general-purpose data store when in fact it is optimized for fast reads on large data sets based on predefined keys or indexes. Its dependence on the storage schema can also make it difficult to evolve over time. Cassandra also has significant operational complexity and some rough edges, so unless you absolutely need the scaling it provides, a simpler solution is usually better. If you don't need Cassandra's specific use-case and scaling characteristics, you might just be choosing it out of <a href=\"/radar/techniques/big-data-envy\">Big Data envy</a>. Careful use of Cassandra will include extensive automated testing, and we're happy to recommend <a href=\"https://github.com/jsevellec/cassandra-unit\">CassandraUnit</a> as part of your testing strategy.</p>",
                "radarId": 35,
                "id": "en_2017-03_1011",
                "blip_selector": "cassandra-carefully"
            },
            {
                "blip_id": 1070,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Angular 2",
                "display_name": "Angular 2",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "276",
                "tag": null,
                "description": "<p>In the previous Radar, we moved <a href=\"/radar/languages-and-frameworks/angularjs\">AngularJS</a> into the Hold ring (where it remains in this edition). When it comes to <strong>Angular 2</strong> , we're seeing mixed messages. Over the past year some teams at ThoughtWorks have used Angular 2 successfully and consider it a solid choice. However, Angular 2 is a rewrite, not an evolution, of AngularJS, and switching from AngularJS to Angular 2 is not much different than switching from AngularJS to another framework. Given the, in our experience, superior contenders such as <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a>, <a href=\"/radar/languages-and-frameworks/ember-js\">Ember.js</a> and <a href=\"/radar/languages-and-frameworks/vue-js\">Vue.js</a>, we're still hesitant to give Angular 2 a strong recommendation. We do want to highlight, though, that it is not a bad choice, especially if you bought into TypeScript.</p>",
                "radarId": 90,
                "id": "en_2017-03_1070",
                "blip_selector": "angular-2"
            },
            {
                "blip_id": 1127,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Spec-based codegen",
                "display_name": "Spec-based codegen",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "103",
                "tag": null,
                "description": "<p>Back in the days when SOAP held sway in the enterprise software industry, the practice of generating client code from WSDL specs was an accepted—even encouraged—practice. Unfortunately, the resulting code was often complex, untestable, difficult to modify and frequently didn't work across implementation platforms. With the advent of REST, we found it better to evolve API clients that use the <a href=\"https://martinfowler.com/bliki/TolerantReader.html\">tolerant reader pattern</a> for extracting and processing only the fields needed. Recently we have observed a disturbing return to old habits with developers generating code from API specifications written in <a href=\"/radar/tools/swagger\">Swagger</a> or <a href=\"/radar/tools/raml\">RAML</a>—a practice that we refer to as <strong>spec-based codegen</strong>. Although such tools are very useful for driving the design of APIs and for extracting documentation, we caution against the tempting shortcut of simply generating client code directly from these specifications. The chances are that such code will be difficult to test and maintain.</p>",
                "radarId": 23,
                "id": "en_2017-03_1127",
                "blip_selector": "spec-based-codegen"
            },
            {
                "blip_id": 679,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "Python 3",
                "display_name": "Python 3",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "306",
                "tag": null,
                "description": "<p><strong>Python 3</strong> introduced many useful features that are not backward compatible with Python 2.x. It also removed numerous Python 2.x features that were maintained for backward compatibility, making Python 3 easier to learn and use and more consistent with the rest of the language. Our experience using Python 3 in domains such as machine learning and web application development shows that both the language and most of its <a href=\"http://py3readiness.org/\">supporting libraries</a> have matured for adoption. We were able to fork and patch minor issues of existing libraries or avoided using incompatible Python 2.x libraries that had been abandoned. If you are developing in Python we strongly encourage you to use Python 3.</p>",
                "radarId": 79,
                "id": "en_2017-03_679",
                "blip_selector": "python-3"
            },
            {
                "blip_id": 1052,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "JuMP",
                "display_name": "JuMP",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "306",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/JuliaOpt/JuMP.jl\">JuMP</a></strong> is a domain-specific language for <a href=\"https://en.wikipedia.org/wiki/Mathematical_optimization\">mathematical optimizations</a> in <a href=\"http://julialang.org/\">Julia</a>. JuMP defines a common API called <a href=\"https://github.com/JuliaOpt/MathProgBase.jl\">MathProgBase</a> and enables users to write solver-agnostic code in Julia. Currently supported solvers include <a href=\"http://artelys.com/en/optimization-tools/knitro\">Artelys Knitro</a>, <a href=\"https://projects.coin-or.org/Bonmin\">Bonmin</a>, <a href=\"https://projects.coin-or.org/Cbc\">Cbc</a>, <a href=\"https://projects.coin-or.org/Clp\">Clp</a>, <a href=\"https://projects.coin-or.org/Couenne\">Couenne</a>, <a href=\"http://www-01.ibm.com/software/commerce/optimization/cplex-optimizer/\">CPLEX</a>, <a href=\"https://github.com/ifa-ethz/ecos\">ECOS</a>, <a href=\"http://www.fico.com/en/products/fico-xpress-optimization-suite\">FICO Xpress</a>, <a href=\"http://www.gnu.org/software/glpk/\">GLPK</a>, <a href=\"http://www.gurobi.com\">Gurobi</a>, <a href=\"https://projects.coin-or.org/Ipopt\">Ipopt</a>, <a href=\"http://www.mosek.com/\">MOSEK</a>, <a href=\"http://ab-initio.mit.edu/wiki/index.php/NLopt\">NLopt</a> and <a href=\"https://github.com/cvxgrp/scs\">SCS</a>. One other benefit is the implementation of automatic differentiation technique in reverse mode to compute derivatives so users are not limited to the standard operators like sin, cos, log and sqrt but can also implement their own custom objective functions in Julia.</p>",
                "radarId": 95,
                "id": "en_2017-03_1052",
                "blip_selector": "jump"
            },
            {
                "blip_id": 1012,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Electron",
                "display_name": "Electron",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "208",
                "tag": null,
                "description": "<p><strong><a href=\"http://electron.atom.io/\">Electron</a></strong> is a solid framework for building native desktop clients using web technologies such as HTML, CSS and JavaScript. Teams can leverage their web know-how to deliver polished cross-platform desktop clients without spending time learning another set of technologies.</p>",
                "radarId": 38,
                "id": "en_2017-03_1012",
                "blip_selector": "electron"
            },
            {
                "blip_id": 1003,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "360",
                "name": "Big Data envy",
                "display_name": "Big Data envy",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "142",
                "tag": null,
                "description": "<p>We continue to see organizations chasing \"cool\" technologies, taking on unnecessary complexity and risk when a simpler choice would be better. One particular theme is using distributed, Big Data systems for relatively small data sets. This behavior prompts us to put <strong>Big Data envy</strong> on hold once more, with some additional data points from our recent experience. The <a href=\"http://cassandra.apache.org/\">Apache Cassandra</a> database promises massive scalability on commodity hardware, but we have seen teams overwhelmed by its architectural and operational complexity. Unless you have data volumes that require a 100+ node cluster, we recommend against using Cassandra. The operational team you'll need to keep the thing running just isn't worth it. While creating this edition of the Radar, we discussed several new database technologies, many offering \"10x\" performance improvements over existing systems. We're always skeptical until new technology—especially something as critical as a database—has been properly proven. <a href=\"/radar/tools/jepsen\">Jepsen</a> provides <a href=\"http://jepsen.io/analyses.html\">analysis</a> of database performance under difficult conditions and has found <a href=\"https://aphyr.com/posts/283-call-me-maybe-redis\">numerous</a> <a href=\"https://aphyr.com/posts/284-call-me-maybe-mongodb\">bugs</a> in various NoSQL databases. We recommend maintaining a healthy dose of skepticism and keeping an eye on sites such as Jepsen when you evaluate database tech.</p>",
                "radarId": 20,
                "id": "en_2017-03_1003",
                "blip_selector": "big-data-envy"
            },
            {
                "blip_id": 1078,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Instana",
                "display_name": "Instana",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "300",
                "tag": null,
                "description": "<p><strong><a href=\"http://www.instana.com/\">Instana</a></strong> is yet another entrant into the crowded application performance management space. The fact that it's built from the ground up for cloud native architectures differentiates Instana from many of its competitors. Features include dynamic discovery, distributed tracing and service health plus the ability to \"time shift\" your view of your infrastructure to the moment an incident occurred. It remains to be seen whether this product can gain traction over the combination of open source projects—such as <a href=\"/radar/tools/consul\">Consul</a>, <a href=\"/radar/tools/prometheus\">Prometheus</a> and the implementations of <a href=\"/radar/platforms/opentracing\">OpenTracing</a>—that do the same thing; however it's worth taking a look if you need an out-of-the-box solution.</p>",
                "radarId": 94,
                "id": "en_2017-03_1078",
                "blip_selector": "instana"
            },
            {
                "blip_id": 1045,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Anemic REST",
                "display_name": "Anemic REST",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "155",
                "tag": null,
                "description": "<p>With the increasing popularity of the <a href=\"/radar/techniques/bff-backend-for-frontends\">BFF - Backend for frontends</a> pattern and use of one-way data-binding frameworks like <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a>, we've noticed a backlash against REST-style architectures. Critics accuse REST of causing chatty, inefficient interactions among systems and failing to adapt as client needs evolve. They offer frameworks such as <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> or <a href=\"https://netflix.github.io/falcor/\">Falcor</a> as alternative data-fetch mechanisms that let the client specify the format of the data returned. But in our experience, it isn't REST that causes these problems. Rather, they stem from a failure to properly model the domain as a set of resources. Naively developing services that simply expose static, hierarchical data models via templated URLs result in an <strong>anemic REST</strong> implementation. In a richly modeled domain, REST should enable more than simple repetitive data fetching. In a fully evolved RESTful architecture, business events and abstract concepts are also modeled as resources, and the implementation should make effective use of hypertext, link relations and media types to maximize decoupling between services. This antipattern is closely related to the <a href=\"http://www.martinfowler.com/bliki/AnemicDomainModel.html\">Anemic Domain Model</a> pattern and results in services that rank low in <a href=\"http://martinfowler.com/articles/richardsonMaturityModel.html\">Richardson Maturity Model</a>. We have more advice for designing effective REST APIs in our <a href=\"https://www.thoughtworks.com/insights/blog/rest-api-design-resource-modeling\">Insights article</a></p>\n\n<p>.</p>",
                "radarId": 19,
                "id": "en_2017-03_1045",
                "blip_selector": "anemic-rest"
            },
            {
                "blip_id": 727,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "AngularJS",
                "display_name": "AngularJS",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "315",
                "tag": null,
                "description": "<p><a href=\"https://angularjs.org/\"><strong>AngularJS</strong></a> helped revolutionize the world of single-page JavaScript applications, and we have delivered many projects successfully with it over the years. However, we are no longer recommending it (v1) for teams starting fresh projects. We prefer the ramp-up speed and more maintainable codebases we are seeing with <a href=\"/radar/languages-and-frameworks/ember-js\">Ember</a> and <a href=\"/radar/languages-and-frameworks/react-js\">React</a>, particularly in conjunction with <a href=\"/radar/languages-and-frameworks/redux\">Redux</a>.</p>",
                "radarId": 104,
                "id": "en_2017-03_727",
                "blip_selector": "angularjs"
            },
            {
                "blip_id": 1054,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "295",
                "name": "Physical Web",
                "display_name": "Physical Web",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "330",
                "tag": null,
                "description": "<p>We have been intrigued by the <strong><a href=\"https://google.github.io/physical-web/\">Physical Web</a></strong> standard created by Google. The idea of Physical Web is simple—beacons broadcast a URL—but the possibilities are broad. Basically, this is a way to annotate the physical world, tying objects and locations into the digital realm. The current transport mechanism is <a href=\"https://github.com/google/eddystone/tree/master/eddystone-url\">Eddystone URLs</a> over Bluetooth LE, and sample clients are available. Although there are obvious security concerns with following randomly discovered links, we are most interested in use cases with customized clients where you can filter or proxy the URLs as required.</p>",
                "radarId": 99,
                "id": "en_2017-03_1054",
                "blip_selector": "physical-web"
            },
            {
                "blip_id": 1031,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "305",
                "name": "Clojure.spec",
                "display_name": "Clojure.spec",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "56",
                "tag": null,
                "description": "<p>One of those perpetual developer debates involves language typing: How much is just right? <a href=\"/radar/languages-and-frameworks/clojure\">Clojure</a>, the dynamically typed functional Lisp on the JVM, added a new entry into this discussion that blurs the lines. <strong><a href=\"https://clojure.org/about/spec\">Clojure.spec</a></strong> is a new facility built into Clojure that allows developers to wrap type and other verification criteria around data structures, such as allowable value ranges. Once they are established, Clojure uses these specifications to provide a slew of benefits: generated tests, validation, destructuring of data structures and others. Clojure.spec is a promising way to have the benefits of types and ranges where developers need them but not everywhere.</p>",
                "radarId": 70,
                "id": "en_2017-03_1031",
                "blip_selector": "clojure-spec"
            },
            {
                "blip_id": 1085,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "api.ai",
                "display_name": "api.ai",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "192",
                "tag": null,
                "description": "<p>In parallel with the recent surge of chatbots and <a href=\"/radar/platforms/voice-platforms\">voice platforms</a>, we've seen a proliferation of tools and platforms such as <strong><a href=\"https://api.ai/\">api.ai</a></strong> that provide a service to extract intent from text and management of conversational flow that you can hook into. Recently acquired by Google, this \"natural-language-understanding as a service\" offering competes with other players in this space such as <a href=\"/radar/platforms/wit-ai\">wit.ai</a> and Amazon's <a href=\"https://aws.amazon.com/lex/\">Lex</a>.</p>",
                "radarId": 34,
                "id": "en_2017-03_1085",
                "blip_selector": "api-ai"
            },
            {
                "blip_id": 1098,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Conversationally aware APIs",
                "display_name": "Conversationally aware APIs",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "150",
                "tag": null,
                "description": "<p>Technologies such as <a href=\"https://developer.amazon.com/alexa\">Amazon Alexa</a>, <a href=\"https://voice.google.com\">Google Voice</a> and Siri have dramatically lowered the bar for voice-based interaction with software. However, a more conversational style of input (voice or text) can be hard to build on top of many existing APIs, especially when it comes to a more stateful style of interaction where a follow-up interaction needs to be aware of the overall conversational context. In this style of interaction, for example, we'd like to inquire about trains from Manchester to Glasgow and then being able to ask \"What time is the first departure?\" without having to give the context of the conversation again. Normally this context would be present in the initial response we send back to a browser, but in the case of voice interfaces we need to handle this context elsewhere. <strong>Conversationally aware APIs</strong> can be an example of the <a href=\"/radar/techniques/bff-backend-for-frontends\">backend for front-end pattern</a> where the front-end is a voice or chat platform. This type of API can handle the specifics of this style of interaction by managing conversation states while calling underlying services on behalf of the voice front-end.</p>",
                "radarId": 12,
                "id": "en_2017-03_1098",
                "blip_selector": "conversationally-aware-apis"
            },
            {
                "blip_id": 1034,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Lightweight Architecture Decision Records",
                "display_name": "Lightweight Architecture Decision Records",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "130",
                "tag": null,
                "description": "<p>Although much documentation can be replaced with highly readable code and tests, in a world of <a href=\"/radar/techniques/evolutionary-architecture\">evolutionary architecture</a> it's important to record certain design decisions for the benefit of future team members and for external oversight. <strong>Lightweight Architecture Decision Records</strong> is <a href=\"http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions\">a technique</a> for capturing important architectural decisions along with their context and consequences. Although these items are often stored in a wiki or collaboration tool, we generally prefer <a href=\"https://github.com/npryce/adr-tools\">storing them in source control</a> with simple markup.</p>",
                "radarId": 6,
                "id": "en_2017-03_1034",
                "blip_selector": "lightweight-architecture-decision-records"
            },
            {
                "blip_id": 1086,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Keycloak",
                "display_name": "Keycloak",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "229",
                "tag": null,
                "description": "<p>In a <a href=\"/radar/techniques/microservices\">microservices</a> or any other distributed architecture, one of the most common needs is to secure the services or APIs through authentication and authorization features. This is where <strong><a href=\"http://www.keycloak.org/\">Keycloak</a></strong> comes in. Keycloak is an open source identity and access management solution that makes it easy to secure applications or microservices with little to no code. Out of the box, it supports single sign-on, social login, and standard protocols such as OpenID Connect, OAuth2 and SAML.</p>",
                "radarId": 43,
                "id": "en_2017-03_1086",
                "blip_selector": "keycloak"
            },
            {
                "blip_id": 1014,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "338",
                "name": "Ethereum",
                "display_name": "Ethereum",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "212",
                "tag": null,
                "description": "<p>The hype seems to have peaked for blockchains and cryptocurrencies, as evidenced by the slowdown of previous firehose-scale announcements in this area, and we expect some of the more speculative efforts to die out over time. One of the blockchains, <a href=\"https://www.ethereum.org/\"><strong>Ethereum</strong></a>, while not universally popular among diehard blockchain aficionados, appears in increasing numbers in new initiatives. Ethereum is a public blockchain with a built-in programming language allowing developers to build \"smart contracts\", which are algorithmic movements of ether (the Ethereum cryptocurrency) in response to activity happening on the blockchain. R3CEV, the consortium building blockchain tech for banks, built its first proofs of concept on Ethereum. Ethereum has been used to build a distributed autonomous organization (DAO)—one of the first \"algorithmic corporations\"—although a recent heist of <a href=\"http://www.coindesk.com/dao-attacked-code-issue-leads-60-million-ether-theft/\">$150 million in the ether</a> demonstrates that the blockchains and cryptocurrencies are still the Wild West of the technology world.</p>",
                "radarId": 39,
                "id": "en_2017-03_1014",
                "blip_selector": "ethereum"
            },
            {
                "blip_id": 1077,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Kotlin",
                "display_name": "Kotlin",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "324",
                "tag": null,
                "description": "<p>The <strong><a href=\"https://kotlinlang.org/\">Kotlin</a></strong> programming language is on many of our developers' bucket lists to assess this year, and some have already used it successfully in production. It is an open source JVM language from JetBrains. Our Swift mobile developers like it as it is syntactically closer to <a href=\"/radar/languages-and-frameworks/swift\">Swift</a> and equally concise. Our Java developers have enjoyed its seamless interoperability with the Java language and tools and found it easier to learn than Scala. Kotlin supports functional programming concepts but with less features than Scala. Developers on our teams who like static typing with the compiler catching null pointer defects found themselves writing fewer boilerplate tests.</p>",
                "radarId": 98,
                "id": "en_2017-03_1077",
                "blip_selector": "kotlin"
            },
            {
                "blip_id": 1059,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Quick and Nimble",
                "display_name": "Quick and Nimble",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "340",
                "tag": null,
                "description": "<p>Most of our iOS teams are now using the <strong><a href=\"https://github.com/Quick/Quick\">Quick</a> and <a href=\"https://github.com/Quick/Nimble\">Nimble</a></strong> pairing for their unit tests. In the <a href=\"http://rspec.info/\">RSpec</a> family of behavior-driven development (BDD) testing tools, it provides very readable tests (with describe blocks) across <a href=\"/radar/languages-and-frameworks/swift\">Swift</a> and Objective-C and has good support for asynchronous testing.</p>",
                "radarId": 88,
                "id": "en_2017-03_1059",
                "blip_selector": "quick-and-nimble"
            },
            {
                "blip_id": 1019,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Grafana",
                "display_name": "Grafana",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "30",
                "tag": null,
                "description": "<p>When combining modern techniques and architecture styles, such as <a href=\"/radar/techniques/microservices\">microservices</a>, <a href=\"/radar/techniques/devops\">DevOps</a> and <a href=\"/radar/techniques/qa-in-production\">QA in production</a>, development teams need increasingly sophisticated monitoring. Simply looking a graphs of disk usage and CPU utilization is not sufficient anymore, and many teams collect application and business-specific metrics using tools such a Graphite and Kibana. <strong><a href=\"http://grafana.org/\">Grafana</a></strong> makes it easy to create useful and elegant dashboards for data from a number of sources. A particularly useful feature allows timescales of different graphs to be synchronized, which helps with spotting correlations in the underlying data. The templating system that is being added shows a lot promise and will likely make managing sets of similar services even easier. Based on its strengths, Grafana has become our default choice in this category.</p>",
                "radarId": 56,
                "id": "en_2017-03_1019",
                "blip_selector": "grafana"
            },
            {
                "blip_id": 1069,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "335",
                "name": "wit.ai",
                "display_name": "wit.ai",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "265",
                "tag": null,
                "description": "<p>Hype surrounding machine intelligence has reached a crescendo, but as with Big Data, useful frameworks and tools are waiting to be discovered among all the hot air. One such tool is <a href=\"https://wit.ai/\"><strong>wit.ai</strong></a>, a SaaS platform that allows developers to create conversational interfaces using natural language processing (NLP). Wit works with either text or speech inputs, helps developers manage conversational intent and allows custom business logic to be implemented using JavaScript. The system is free for commercial and noncommercial use and encourages the creation of open applications. Be aware that you must agree to let Wit use your data in order to improve the service and for its own analysis, so read the <a href=\"https://wit.ai/terms\">terms and conditions</a> carefully. Another contender in this space is the <a href=\"https://dev.botframework.com/\">Microsoft Bot Framework</a>, but it's available only in limited preview form as of this writing. As with most things Microsoft, we expect the Bot Framework to evolve quickly, so it's worth keeping an eye on.</p>",
                "radarId": 52,
                "id": "en_2017-03_1069",
                "blip_selector": "wit-ai"
            },
            {
                "blip_id": 1000,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "VR beyond gaming",
                "display_name": "VR beyond gaming",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "100",
                "tag": null,
                "description": "<p>The idea of virtual reality has been around for more than 50 years, and with successive advancements in computing technology many ideas have been hyped and explored. We believe that we've reached a tipping point. Reasonably affordable consumer-oriented VR headsets were shipped to the market last year, and modern graphics cards provide sufficient power to create immersive experiences with them. The headsets are mainly targeted at video game enthusiasts, but we're convinced that they'll open the doors to many possibilities for <strong>VR beyond gaming</strong>. Teams without experience in building video games should not underestimate the effort and skill required to create good 3-D models and convincing textures.</p>",
                "radarId": 17,
                "id": "en_2017-03_1000",
                "blip_selector": "vr-beyond-gaming"
            },
            {
                "blip_id": 1125,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Airflow",
                "display_name": "Airflow",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "81",
                "tag": null,
                "description": "<p><strong><a href=\"https://airflow.incubator.apache.org/\">Airflow</a></strong> is a tool to programmatically create, schedule and monitor data pipelines. By treating Directed Acyclic Graphs (DAGs) as code, it encourages maintainable, versionable and testable data pipelines. We've leveraged this configuration in our projects to create dynamic pipelines that resulted in lean and explicit data workflows. Airflow makes it easy to define your operators and executors and to extend the library so that it fits the level of abstraction that suits your environment.</p>",
                "radarId": 57,
                "id": "en_2017-03_1125",
                "blip_selector": "airflow"
            },
            {
                "blip_id": 1061,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Unity beyond gaming",
                "display_name": "Unity beyond gaming",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "257",
                "tag": null,
                "description": "<p>After experiencing years of growth as a platform for game development, <strong><a href=\"https://unity3d.com/\">Unity</a></strong> has recently become the platform of choice for VR and AR application development. Whether you're creating a fully immersive world for the Oculus or HTC Vive headsets, a holographic layer for your newly spatial enterprise application or an AR feature set for your mobile app, Unity likely provides what you need to both prototype it and get it ready for prime time. Many of us at ThoughtWorks believe that VR and AR represent the next significant shift in the computing platform, and for now, Unity is the single most important tool in the toolbox we use to develop for this change. We've used Unity to develop all our VR prototypes, as well as AR functionality for headsets and phone/tablet applications.</p>",
                "radarId": 31,
                "id": "en_2017-03_1061",
                "blip_selector": "unity-beyond-gaming"
            },
            {
                "blip_id": 969,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "160",
                "name": "HashiCorp Vault",
                "display_name": "HashiCorp Vault",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "54",
                "tag": null,
                "description": "<p>Having a way to securely manage secrets is increasingly becoming a huge project issue. The old practice of keeping secrets in a file or in environment variables is becoming hard to manage, especially in environments with multiple applications and large numbers of <a href=\"/radar/techniques/microservices\">microservices</a>. <a href=\"https://github.com/hashicorp/vault\"><strong>HashiCorp Vault</strong></a> addresses the problem by providing mechanisms for securely accessing secrets through a unified interface. It has served us well on a number of projects, and our teams liked how easy it was to integrate Vault with their services. Storing and updating secrets is a bit cumbersome, because it relies on a command-line tool and a fair amount of discipline from the team.</p>",
                "radarId": 60,
                "id": "en_2017-03_969",
                "blip_selector": "hashicorp-vault"
            },
            {
                "blip_id": 1108,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Claudia",
                "display_name": "Claudia",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "63",
                "tag": null,
                "description": "<p>The combination of <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> with <a href=\"/radar/platforms/amazon-api-gateway\">Amazon API Gateway</a> has had a big impact on how we deploy services and APIs. However, even in this serverless configuration, the amount of configuration required to wire things together is not trivial. <strong><a href=\"https://claudiajs.com/\">Claudia</a></strong> is a tool which automates deployment of AWS Lambda functions written in JavaScript and associated API Gateway configurations. It provides reasonable defaults, and our teams have found it allows them to get started quickly with Lambda-based microservices.</p>",
                "radarId": 69,
                "id": "en_2017-03_1108",
                "blip_selector": "claudia"
            },
            {
                "blip_id": 1120,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "Serverless Framework",
                "display_name": "Serverless Framework",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "27",
                "tag": null,
                "description": "<p>The popular <strong><a href=\"https://serverless.com/\">Serverless Framework</a></strong> provides tooling for scaffolding and deployment of serverless applications, primarily using <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> and other AWS offerings. Serverless Framework provides template support for JavaScript, Python, Java and C#, and has an active community that contributes plugins that extend the framework. The framework also supports the Apache incubator project OpenWhisk as an alternative to AWS Lambda.</p>",
                "radarId": 63,
                "id": "en_2017-03_1120",
                "blip_selector": "serverless-framework"
            },
            {
                "blip_id": 889,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Mesosphere DCOS",
                "display_name": "Mesosphere DCOS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "233",
                "tag": null,
                "description": "<p><strong><a href=\"https://mesosphere.com/product/\">Mesosphere DCOS</a></strong> is a platform built on top of <a href=\"/radar/platforms/apache-mesos\">Mesos</a> that abstracts away your underlying infrastructure for containerized applications as well as for applications you don't want to run inside Docker. This may be overkill for more modest deployments, but we're beginning to see successes with both the commercial and <a href=\"https://dcos.io/\">open source versions</a>. We particularly like that it facilitates portability between different cloud providers as well as dedicated hardware, and that for containerized workloads you're not tied into one container orchestration framework. Although upgrades can be a little more complex than we would like, the overall stack is stabilizing nicely.</p>",
                "radarId": 44,
                "id": "en_2017-03_889",
                "blip_selector": "mesosphere-dcos"
            },
            {
                "blip_id": 1093,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Cloud-based image comprehension",
                "display_name": "Cloud-based image comprehension",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "200",
                "tag": null,
                "description": "<p>Image comprehension used to be a dark art and required a team of onsite data scientists. In recent years, however, we've come closer to solving problems such as image and facial classification/categorization, facial comparisons, facial landmark identification, and facial recognition. <strong>Cloud-based image comprehension</strong> provides access to machine-learning capabilities through services such as <a href=\"https://aws.amazon.com/rekognition/\">Amazon</a><a href=\"https://aws.amazon.com/rekognition/\">Rekognition</a>, <a href=\"https://www.microsoft.com/cognitive-services/en-us/computer-vision-api\">Microsoft Computer Vision API</a> and <a href=\"https://cloud.google.com/vision/\">Google Cloud Vision API</a> which can supplement AR applications and anything involving photo tagging and classification.</p>",
                "radarId": 36,
                "id": "en_2017-03_1093",
                "blip_selector": "cloud-based-image-comprehension"
            },
            {
                "blip_id": 1087,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "DataStax Enterprise Graph",
                "display_name": "DataStax Enterprise Graph",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "204",
                "tag": null,
                "description": "<p>We've had some early successes with <a href=\"http://www.datastax.com/products/datastax-enterprise-graph\"><strong>DataStax Enterprise Graph</strong></a> (DSE Graph) for handling large graph databases. Built on top of <a href=\"/radar/platforms/cassandra-carefully\">Cassandra</a>, DSE Graph targets the type of large data sets where our longtime favorite <a href=\"/radar/platforms/neo4j\">Neo4j</a> begins to show some limitations. This scale has its trade-offs; for example, you lose the ACID transactions and run-time schema-free nature of Neo4j, but access to the underlying Cassandra tables, the integration of Spark for analytical workloads, and the powerful <a href=\"http://tinkerpop.apache.org/\">TinkerPop/Gremlin</a> query language make this an option worth considering.</p>",
                "radarId": 37,
                "id": "en_2017-03_1087",
                "blip_selector": "datastax-enterprise-graph"
            },
            {
                "blip_id": 1094,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "WebVR",
                "display_name": "WebVR",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "261",
                "tag": null,
                "description": "<p><strong><a href=\"https://webvr.info/\">WebVR</a></strong> is an experimental JavaScript API that enables you to access VR devices through your browser. It has garnered support from the community and is available through nightly builds as well as in some release versions. If you are looking to build VR experiences in your browser, then this is a great place to start. This technology alongside complementary tools such <a href=\"/radar/languages-and-frameworks/three-js\">Three.js</a>, <a href=\"https://aframe.io/\">A-Frame</a>, <a href=\"https://github.com/facebookincubator/react-vr\">ReactVR</a>, <a href=\"https://github.com/argonjs/argon\">Argon.js</a> and <a href=\"https://github.com/awe-media/awe.js\">Awe.js</a> brings AR experiences to the browser. The flurry of tools in this space, alongside Internet commission standards, could help promote stronger adoption of AR and VR.</p>",
                "radarId": 51,
                "id": "en_2017-03_1094",
                "blip_selector": "webvr"
            },
            {
                "blip_id": 1068,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "250",
                "name": "Galen",
                "display_name": "Galen",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "63",
                "tag": null,
                "description": "<p>Testing that layout and styling of responsive websites is working as expected across various form factors can be a slow and often manual process. <strong><a href=\"http://galenframework.com/\">Galen</a></strong> helps ease this problem by providing a simple language, running on top of <a href=\"http://www.seleniumhq.org/\">Selenium</a>, that allows you to specify expectations for the appearance of your website in various screen sizes. Although Galen suffers from the typical brittleness and speed issues of any end-to-end testing approach, we have found benefit in the early feedback on design issues.</p>",
                "radarId": 59,
                "id": "en_2017-03_1068",
                "blip_selector": "galen"
            },
            {
                "blip_id": 1039,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Client-directed query",
                "display_name": "Client-directed query",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "170",
                "tag": null,
                "description": "<p>Although many problems that people encounter with RESTful approaches to APIs can be attributed to the <a href=\"/radar/techniques/anemic-rest\">anemic REST</a> antipattern, some use cases warrant exploration of other approaches. In particular, organizations that have to support a long tail of client applications (and thus a likely proliferation of API versions even if they employ <a href=\"/radar/techniques/consumer-driven-contract-testing\">consumer-driven contracts</a>)—and have a large portion of their APIs supporting the endless-list style of activity feeds—may hit some limits in RESTful architectures. These can sometimes be mitigated by employing the <strong>client-directed query</strong> approach to client-server interaction. We see this approach being successfully used in both <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> and <a href=\"https://github.com/Netflix/falcor\">Falcor</a>, where clients have more control over both the contents and the granularity of the data returned to them. This does put more responsibility onto the service layer and can still lead to tight coupling to the underlying data model, but the benefits may be worth exploring if well-modeled RESTful APIs aren't working for you.</p>",
                "radarId": 10,
                "id": "en_2017-03_1039",
                "blip_selector": "client-directed-query"
            },
            {
                "blip_id": 1097,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "AWS Device Farm",
                "display_name": "AWS Device Farm",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "218",
                "tag": null,
                "description": "<p>The huge number of mobile devices makes it almost impossible for companies to test their mobile apps on all of them. Enter <strong><a href=\"https://aws.amazon.com/device-farm/\">AWS Device Farm</a></strong>, an app-testing service that enables you to run and interact with your Android, iOS and web apps on a wide variety of physical devices that are hosted in the cloud simultaneously. Detailed logs, performance graphs and screenshots are generated during each run to provide general and device-specific feedback. The service offers a lot of flexibility by allowing the state and configuration of each device to be altered in order to reproduce very specific test scenarios. Our teams are using AWS Device Farm to run end-to-end tests on devices with the largest install base for their apps.</p>",
                "radarId": 28,
                "id": "en_2017-03_1097",
                "blip_selector": "aws-device-farm"
            },
            {
                "blip_id": 815,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Terraform",
                "display_name": "Terraform",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "9",
                "tag": null,
                "description": "<p>With <strong><a href=\"https://www.terraform.io/\">Terraform</a></strong>, you can manage cloud infrastructure by writing declarative definitions. The configuration of the servers instantiated by Terraform is usually left to tools like Puppet, Chef or Ansible. We like Terraform because the syntax of its files is quite readable and because it supports a number of cloud providers while making no attempt to provide an artificial abstraction across those providers. Following our first, more cautious, mention of Terraform almost two years ago, it has seen continued development and has evolved into a stable product that has proven its value in our projects. The issue with state file management can now be sidestepped by using what Terraform calls a \"remote state backend.\" We've successfully used <a href=\"/radar/tools/consul\">Consul</a> for that purpose.</p>",
                "radarId": 65,
                "id": "en_2017-03_815",
                "blip_selector": "terraform"
            },
            {
                "blip_id": 1063,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "WebRTC",
                "display_name": "WebRTC",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "354",
                "tag": null,
                "description": "<p>Widespread adoption of AR/VR as a collaboration and communication medium requires a modern and readily available video streaming platform. <strong><a href=\"https://webrtc.org/\">WebRTC</a></strong> is an emerging standard for real-time communication between browsers that enables video streaming within commonly available web technologies. The range of browsers that support this standard is increasing, but Microsoft and Apple have been slow to adopt WebRTC in their proprietary browsers. If momentum continues to build, WebRTC could form the future foundation for AR/VR collaboration on the web.</p>",
                "radarId": 103,
                "id": "en_2017-03_1063",
                "blip_selector": "webrtc"
            },
            {
                "blip_id": 1033,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Scikit-learn",
                "display_name": "Scikit-learn",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "36",
                "tag": null,
                "description": "<p><strong><a href=\"http://scikit-learn.org/stable/\">Scikit-learn</a></strong> is not a new tool (it is approaching its tenth birthday); what is new is the rate of adoption of machine-learning tools and techniques outside of academia and major tech companies. Providing a robust set of models and a rich set of functionality, Scikit-learn plays an important role in making machine-learning concepts and capabilities more accessible to a broader (and often non-expert) audience.</p>",
                "radarId": 62,
                "id": "en_2017-03_1033",
                "blip_selector": "scikit-learn"
            },
            {
                "blip_id": 999,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "165",
                "name": "Serverless architecture",
                "display_name": "Serverless architecture",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "100",
                "tag": null,
                "description": "<p>A <strong><a href=\"http://www.martinfowler.com/articles/serverless.html\">serverless architecture</a></strong> approach replaces long-running virtual machines with ephemeral compute power that comes into existence on request and disappears immediately after use. Our teams like the serverless approach; it's working well for us and we consider it a valid architectural choice. Note that serverless doesn't have to be an all-or-nothing approach: some of our teams have deployed a new chunk of their systems using serverless while sticking to a traditional architectural approach for other pieces. Although <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> is almost synonymous with serverless, the other major cloud providers all have similar offerings, and we also recommend assessing niche players such as <a href=\"https://webtask.io/\">webtask</a>.</p>",
                "radarId": 9,
                "id": "en_2017-03_999",
                "blip_selector": "serverless-architecture"
            },
            {
                "blip_id": 1080,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Hangfire",
                "display_name": "Hangfire",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "310",
                "tag": null,
                "description": "<p>One common problem in application development is how to schedule tasks that run outside the main process periodically or when certain conditions are met. The problem gets more complicated when unexpected events, such as application shutdowns, occur. The <strong><a href=\"http://hangfire.io/\">Hangfire</a></strong> framework, as our teams discovered, can do this and much more in the .NET environment. Hangfire is both easy to use and flexible, and it embraces a functional style. Particularly interesting is its ability to save a task's state so it can resume when an application restarts after a crash or shutdown.</p>",
                "radarId": 85,
                "id": "en_2017-03_1080",
                "blip_selector": "hangfire"
            },
            {
                "blip_id": 1113,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "InSpec",
                "display_name": "InSpec",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "49",
                "tag": null,
                "description": "<p>How does a business hand autonomy to delivery teams while still making sure their deployed solutions are safe and compliant? How do you ensure that servers, once deployed, remain secure and compliant over their operational lifetime? These are the problems that <strong>InSpec</strong> tries to address. InSpec is an infrastructure testing tool inspired by <a href=\"/radar/tools/serverspec\">Serverspec</a>, but with modifications that make the tool more useful for security professionals who need to ensure compliance across thousands of servers. Individual tests can be combined into complete security profiles and run remotely from a command line. InSpec is useful for developers but extends to testing deployed production infrastructure continuously, moving toward <a href=\"/radar/techniques/qa-in-production\">QA in production</a>.</p>",
                "radarId": 71,
                "id": "en_2017-03_1113",
                "blip_selector": "inspec"
            },
            {
                "blip_id": 1022,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "160",
                "name": "Talisman",
                "display_name": "Talisman",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "18",
                "tag": null,
                "description": "<p>With the maturity of tools such as <a href=\"/radar/tools/hashicorp-vault\">Vault</a>, there is no longer an excuse for storing secrets in code repositories, particularly since this often ends up being the soft underbelly of important systems. We've previously mentioned repository-scanning tools such as <a href=\"/radar/tools/gitrob\">Gitrob</a>, but we are now pushing proactive tools such as (the ThoughtWorks-created) <strong><a href=\"https://github.com/thoughtworks/talisman\">Talisman</a></strong>, which is a prepush hook for Git that scans commits for secrets matching predefined patterns.</p>",
                "radarId": 64,
                "id": "en_2017-03_1022",
                "blip_selector": "talisman"
            },
            {
                "blip_id": 885,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "120",
                "name": "HSTS",
                "display_name": "HSTS",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "210",
                "tag": null,
                "description": "<p><a href=\"https://www.owasp.org/index.php/HTTP_Strict_Transport_Security\">HTTP Strict Transport Security</a> ( <strong>HSTS</strong> ) is a now widely supported policy that allows websites to protect themselves from downgrade attacks. A downgrade attack in the context of HTTPS is one that can cause users of your site to fall back to HTTP rather than HTTPS, allowing for further attacks such as man-in-the-middle attacks. With HSTS, the server sends a header that informs the browser that it should only use HTTPS to access the website. Browser support is now widespread enough that this easy-to-implement feature should be added to any site using HTTPS. Mozilla's <a href=\"https://observatory.mozilla.org/\">Observatory</a> can help identify this and other useful headers and configuration options that improve security and privacy. When implementing HSTS, it is critical to verify that all resources load properly over HTTPS, because once HSTS is turned on, there is (almost) no turning back until the expiry time. The directive to include subdomains should be added but, again, a thorough verification that all subdomains support secure transport is required.</p>",
                "radarId": 24,
                "id": "en_2017-03_885",
                "blip_selector": "hsts"
            },
            {
                "blip_id": 1040,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "335",
                "name": "Differential privacy",
                "display_name": "Differential privacy",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "140",
                "tag": null,
                "description": "<p>It has long been known that \"anonymized\" bulk data sets can reveal information about individuals, especially when multiple data sets are cross-referenced together. With <a href=\"https://www.washingtonpost.com/news/the-switch/wp/2016/05/13/new-government-data-shows-a-staggering-number-of-americans-have-stopped-basic-online-activities/\">increasing concern over personal privacy</a>, some companies—including <a href=\"https://www.wired.com/2016/06/apples-differential-privacy-collecting-data/\">Apple</a> and <a href=\"http://research.google.com/pubs/pub42852.html\">Google</a>—are turning to <strong>differential privacy</strong> techniques in order to improve individual privacy while retaining the ability to perform useful analytics on large numbers of users. Differential privacy is a cryptographic technique that attempts to maximize the accuracy of statistical queries from a database while minimizing the chances of identifying its records. These results can be achieved by introducing a low amount of \"noise\" to the data, but it's important to note that this is an ongoing research area. Apple has announced plans to incorporate differential privacy into its products—and we wholeheartedly applaud its commitment to customers' privacy—but the usual Apple secrecy has left some security experts <a href=\"https://blog.cryptographyengineering.com/2016/06/15/what-is-differential-privacy/\">scratching their heads</a>. We continue to recommend <a href=\"http://martinfowler.com/bliki/Datensparsamkeit.html\">Datensparsamkeit</a> as an alternative approach: simply storing the minimum data you actually need will achieve better privacy results in most cases.</p>",
                "radarId": 13,
                "id": "en_2017-03_1040",
                "blip_selector": "differential-privacy"
            },
            {
                "blip_id": 1018,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "fastlane",
                "display_name": "fastlane",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "60",
                "tag": null,
                "description": "<p>Web application developers have it easy when it comes to simplifying and automating diverse application workflows; they can choose from a variety of solutions to help automate release processes. When developing for mobile, however, we're dealing with two operating systems with two different ways of building, testing, distribution, generating screenshots, signing and distributing applications. To help ease the pain, our teams have adopted <strong><a href=\"https://fastlane.tools/\">fastlane</a></strong> as the go-to tool to automate the release process for iOS and Android applications. Using simple configurations and multiple pipelines, they can achieve <a href=\"/radar/techniques/continuous-delivery-cd\">continuous delivery</a> for mobile development.</p>",
                "radarId": 55,
                "id": "en_2017-03_1018",
                "blip_selector": "fastlane"
            },
            {
                "blip_id": 1071,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "PostCSS",
                "display_name": "PostCSS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "336",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/postcss/postcss\">PostCSS</a></strong> is a <a href=\"/radar/platforms/node-js\">Node.js</a>-based JavaScript framework for operating on an abstract syntax tree-based representation of CSS documents with a rich ecosystem of plugins. Often incorrectly thought of as a preprocessor (such as SASS or Less), we find that the real power of PostCSS comes from the number of things that can be done with the rich set of plugins which includes linting (<a href=\"https://github.com/stylelint/stylelint\">the stylelint plugin</a>), cross-compilation (<a href=\"https://github.com/postcss/sugarss\">the sugarss plugin</a>), name-mangling to avoid selector collision (<a href=\"https://github.com/css-modules/postcss-modules\">the modules plugin</a>), boilerplate CSS code generation (<a href=\"https://github.com/postcss/autoprefixer\">the autoprefixer plugin</a>), <a href=\"http://cssnano.co/\">minification</a> and many others. The different maturity levels of the plugins notwithstanding, PostCSS itself remains a simple and powerful framework for treating CSS like a full-fledged language for front-end development.</p>",
                "radarId": 100,
                "id": "en_2017-03_1071",
                "blip_selector": "postcss"
            },
            {
                "blip_id": 1091,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Voice platforms",
                "display_name": "Voice platforms",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "257",
                "tag": null,
                "description": "<p><strong>Voice platforms</strong> such as <a href=\"https://developer.amazon.com/alexa\">Amazon Alexa</a> and <a href=\"https://developers.google.com/actions/\">Google Home</a> are riding high on the hype cycle; some even herald the ubiquity of the conversational voice interface. We're already integrating conversational UIs into products and seeing the impact of this new interaction in how we design interfaces. Alexa specifically was built from the ground up without a screen and treats the conversational UI as first-class. But it's still too early to believe the hype, and we expect more big players to get in the game.</p>",
                "radarId": 50,
                "id": "en_2017-03_1091",
                "blip_selector": "voice-platforms"
            },
            {
                "blip_id": 1079,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Knet.jl",
                "display_name": "Knet.jl",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "318",
                "tag": null,
                "description": "<p><a href=\"http://knet.rtfd.org\"><strong>Knet.jl</strong></a> is the <a href=\"http://www.ku.edu.tr/en\">Koç University</a> deep-learning framework implemented in <a href=\"http://julia.rtfd.org\">Julia</a> by <a href=\"http://www.denizyuret.com\">Deniz Yuret</a> and collaborators. Unlike gradient-generating compilers such as <a href=\"https://github.com/Theano/Theano\">Theano</a> and <a href=\"/radar/platforms/tensorflow\">TensorFlow</a> which force users into a restricted mini-language, Knet allows the definition and training of machine-learning models using the full power and expressiveness of Julia. Knet uses dynamic computational graphs generated at runtime for the automatic differentiation of almost any Julia code. We really like the support of GPU operations through the KnetArray type, and in case you don't have access to a GPU machine, the team behind Knet also maintains a <a href=\"http://knet.readthedocs.io/en/latest/install.html#using-amazon-aws\">preconfigured Amazon Machine Image (AMI)</a> so you can evaluate it in the cloud.</p>",
                "radarId": 97,
                "id": "en_2017-03_1079",
                "blip_selector": "knet-jl"
            },
            {
                "blip_id": 1072,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Caffe",
                "display_name": "Caffe",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "282",
                "tag": null,
                "description": "<p><a href=\"http://caffe.berkeleyvision.org/\"><strong>Caffe</strong></a> is an open source library for deep learning created by the <a href=\"http://bair.berkeley.edu/\">Berkeley Vision and Learning Center</a>. It mostly focusses on convolutional networks for computer vision applications. Caffe is a solid and popular choice for computer vision-related tasks and you can download many successful models made by Caffe users from the Caffe Model Zoo for out-of-the-box use. Like <a href=\"/radar/languages-and-frameworks/keras\">Keras</a>, Caffe is a Python-based API. In Keras, however, models and components are objects created directly in Python code, whereas Caffe models are described by <a href=\"https://developers.google.com/protocol-buffers/\">Protobuf</a> configuration files. Either approach has its pros and cons, and converting between the two is also possible.</p>",
                "radarId": 91,
                "id": "en_2017-03_1072",
                "blip_selector": "caffe"
            },
            {
                "blip_id": 1075,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Hyperledger",
                "display_name": "Hyperledger",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "216",
                "tag": null,
                "description": "<p><strong>Hyperledger</strong> is a platform built around blockchain technologies. It consists of a blockchain implementation named Fabric and other associated tools. Disregarding the hype surrounding blockchain, our teams have found it easy to get started with these tools. The fact that it is an open source platform supported by the Linux Foundation also adds to our excitement about Hyperledger.</p>",
                "radarId": 40,
                "id": "en_2017-03_1075",
                "blip_selector": "hyperledger"
            },
            {
                "blip_id": 1073,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Keras",
                "display_name": "Keras",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "312",
                "tag": null,
                "description": "<p><a href=\"https://keras.io/\"><strong>Keras</strong></a> is a high-level interface in Python for building neural networks. Created by a Google engineer, Keras is open source and runs on top of either <a href=\"/radar/platforms/tensorflow\">TensorFlow</a> or <a href=\"http://github.com/Theano/Theano\">Theano</a>. It provides an amazingly simple interface for creating powerful deep-learning algorithms to train on CPUs or GPUs. Keras is well designed with modularity, simplicity, and extensibility in mind. Unlike a library such as <a href=\"/radar/languages-and-frameworks/caffe\">Caffe</a>, Keras supports more general network architectures such as recurrent nets, making it overall more useful for text analysis, NLP and general machine learning. If computer vision, or any other specialized branch of machine learning, is your primary concern, Caffe may be a more appropriate choice. However, if you're looking to learn a simple yet powerful framework, Keras should be your first choice.</p>",
                "radarId": 96,
                "id": "en_2017-03_1073",
                "blip_selector": "keras"
            },
            {
                "blip_id": 1006,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "250",
                "name": "Auth0",
                "display_name": "Auth0",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "205",
                "tag": null,
                "description": "<p>We have a growing belief that for most scenarios it is rarely worth rolling your own authentication code. Outsourced identity management speeds up delivery, reduces mistakes and tends to enable a faster response to newly discovered vulnerabilities. <strong><a href=\"https://auth0.com/\">Auth0</a></strong> has particularly impressed us in this field for its ease of integration, range of protocols and connectors supported, and rich management API.</p>",
                "radarId": 27,
                "id": "en_2017-03_1006",
                "blip_selector": "auth0"
            },
            {
                "blip_id": 686,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "ReactiveX",
                "display_name": "ReactiveX",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "324",
                "tag": null,
                "description": "<p>Distributed systems often utilize multithreading, event-based communication and nonblocking I/O to improve the overall system efficiency. These programming techniques impose challenges such as low-level threading, synchronization, thread safety, concurrent data structures, and non-blocking I/O. The open source <strong><a href=\"http://reactivex.io/\">ReactiveX</a></strong> library beautifully abstracts away these concerns, provides the required application plumbing, and extends the <a href=\"https://en.wikipedia.org/wiki/Observer_pattern\">observable pattern</a> on streams of asynchronous events. ReactiveX also has an active developer community and supports a growing list of languages, the most recent addition being <a href=\"https://github.com/ReactiveX/RxSwift\">RxSwift</a>. It also implements binding to mobile and desktop platforms.</p>",
                "radarId": 80,
                "id": "en_2017-03_686",
                "blip_selector": "reactivex"
            },
            {
                "blip_id": 1107,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "Progressive Web Applications",
                "display_name": "Progressive Web Applications",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "120",
                "tag": null,
                "description": "<p>The increase in <strong>Progressive Web Applications</strong> (PWAs) is the latest attempt to bring back the mobile web in response to users' \"app fatigue\". Originally proposed by Google in 2015, PWAs are web applications that take advantage of the latest technologies to combine the best of web and native mobile applications. Using a set of open standard technologies such as, <a href=\"https://w3c.github.io/ServiceWorker/\">service workers</a>, the <a href=\"https://www.w3.org/TR/appmanifest/\">app manifest</a>, and cache and push APIs, we can create applications that are platform independent and deliver app-like user experiences. This brings parity to web and native applications and helps mobile developers reach users beyond the walled garden of the app stores. Think of PWAs as websites that act and feel like native apps.</p>",
                "radarId": 7,
                "id": "en_2017-03_1107",
                "blip_selector": "progressive-web-applications"
            },
            {
                "blip_id": 795,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "Linux Security Modules",
                "display_name": "Linux Security Modules",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "240",
                "tag": null,
                "description": "<p>The Principle of Least Privilege encourages us to restrict software components to access only the resources that they need. By default, however, a Linux process can do anything its running user can do—from binding to arbitrary ports to spawning new shells. The <strong><a href=\"https://www.kernel.org/doc/Documentation/security/LSM.txt\">Linux Security Modules</a></strong> (LSM) framework, which allows for security extensions to be plugged into the kernel, has been used to implement MAC on Linux. SELinux and AppArmor are the predominant and best-known LSM-compatible implementations that ship with the kernel. We recommend that teams learn to use one of these security frameworks (which is why we placed it in the Adopt ring). They help teams assess questions about who has access to what resources on shared hosts, including contained services. This conservative approach to access management will help teams build security into their SDLC processes.</p>",
                "radarId": 25,
                "id": "en_2017-03_795",
                "blip_selector": "linux-security-modules"
            },
            {
                "blip_id": 1117,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Testinfra",
                "display_name": "Testinfra",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "14",
                "tag": null,
                "description": "<p>Given the wide use of infrastructure tools today, it should come as no surprise that infrastructure as code has increased in current projects. With this tendency comes the need for testing this code. With <strong>Testinfra</strong> you can test the actual state of your servers configured manually or by tools such as <a href=\"/radar/tools/ansible\">Ansible</a>, <a href=\"/radar/tools/puppet\">Puppet</a> and <a href=\"/radar/platforms/docker\">Docker</a>. Testinfra aims to be a <a href=\"/radar/tools/serverspec\">Serverspec</a> equivalent in Python and is written as a plugin to the Pytest test engine.</p>",
                "radarId": 76,
                "id": "en_2017-03_1117",
                "blip_selector": "testinfra"
            },
            {
                "blip_id": 866,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": ".NET Core",
                "display_name": ".NET Core",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "184",
                "tag": null,
                "description": "<p><strong><a href=\"https://www.microsoft.com/net/core\">.NET Core</a></strong> is an open source modular product for creating applications that can be easily deployed in Windows, macOS and Linux. .NET Core makes it possible to build cross-platform web applications using <a href=\"http://www.asp.net/core\">ASP.NET Core</a> with a set of tools, libraries and frameworks—another choice for microservices architecture. The community around .NET Core and other related projects has been growing. New tools have appeared and evolved quickly, such as <a href=\"/radar/tools/visual-studio-code\">Visual Studio Code</a>. There are <a href=\"/radar/platforms/docker\">Docker</a> <a href=\"https://www.microsoft.com/net/core#docker\">images</a> based on both Linux and Windows (<a href=\"/radar/platforms/microsoft-nano-server\">Nano Server</a>) with .NET Core that simplify applying a microservice architecture. CoreCLR and CoreFX appeared in the Radar in the past. However, a few months ago Microsoft <a href=\"https://blogs.msdn.microsoft.com/dotnet/2016/06/27/announcing-net-core-1-0\">announced</a> the release of .NET Core 1.0, the first stable version. We see good new opportunities, changes and a vibrant community as reasons to keep assessing this product.</p>",
                "radarId": 32,
                "id": "en_2017-03_866",
                "blip_selector": "net-core"
            },
            {
                "blip_id": 1105,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Decoupling secret management from source code",
                "display_name": "Decoupling secret management from source code",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "160",
                "tag": null,
                "description": "<p>In previous Radars issues we mentioned tools such as <a href=\"https://www.agwa.name/projects/git-crypt/\">git-crypt</a> and <a href=\"/radar/tools/blackbox\">Blackbox</a> that allow us to keep secrets safe inside the source code. <strong>Decoupling secret management from source code</strong> is our way to remind technologists that there are other options for storing secrets. For example, <a href=\"/radar/tools/hashicorp-vault\">HashiCorp vault</a>, CI servers and configuration management tools provide mechanisms for storing secrets that are not linked to the source code of an application. Both approaches are viable and we recommend you use at least one of them in your projects.</p>",
                "radarId": 3,
                "id": "en_2017-03_1105",
                "blip_selector": "decoupling-secret-management-from-source-code"
            },
            {
                "blip_id": 1082,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Avro",
                "display_name": "Avro",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "280",
                "tag": null,
                "description": "<p><strong><a href=\"https://avro.apache.org/\">Avro</a></strong> is a framework for data serialization. By storing schema along with the message content, it encourages schema evolution. Producers can edit field names, add new fields or delete existing fields and Avro guarantees that the clients continue to consume the messages. Having a schema allows data to be written without overhead which results in compact data encoding and faster data processing. Although the exchange of structure-less messages between producer and consumer is flexible, we've seen teams facing issues with incompatible unprocessed messages in the queue during deployments. We've used Avro in a number of projects and would recommend using it over just sending unstructured messages.</p>",
                "radarId": 82,
                "id": "en_2017-03_1082",
                "blip_selector": "avro"
            },
            {
                "blip_id": 1090,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Mosquitto",
                "display_name": "Mosquitto",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "237",
                "tag": null,
                "description": "<p>In our experience—for Internet of Things (IoT) solutions where a lot of devices communicate with each other and/or a central data hub—the MQTT connectivity protocol has proven itself. We've also come to like the <strong><a href=\"http://mosquitto.org/\">Mosquitto</a></strong> MQTT broker. It might not satisfy all demands, particularly with regard to scalability, but its compact nature and easy setup makes it ideal for development and testing purposes.</p>",
                "radarId": 45,
                "id": "en_2017-03_1090",
                "blip_selector": "mosquitto"
            },
            {
                "blip_id": 1066,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "ECMAScript 2017",
                "display_name": "ECMAScript 2017",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "294",
                "tag": null,
                "description": "<p><strong>ECMAScript 2017</strong> —not to be confused with ES7 (a.k.a. ECMAScript 2016)—brings several noteworthy improvements to the language. Browsers are expected to implement this standard fully in the summer of 2017, but the <a href=\"/radar/tools/babel\">Babel</a> JavaScript compiler already supports a number of the features today. If you make extensive use of JavaScript and your codebase is under active development, we recommend that you add Babel to your build pipeline and begin using the <a href=\"https://www.npmjs.com/package/babel-preset-es2017\">supported features</a>.</p>",
                "radarId": 93,
                "id": "en_2017-03_1066",
                "blip_selector": "ecmascript-2017"
            },
            {
                "blip_id": 1106,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Legacy in a box",
                "display_name": "Legacy in a box",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "140",
                "tag": null,
                "description": "<p>Working with legacy code, especially large monoliths, is one of the most unsatisfying, high-friction <a href=\"https://thoughtworks.wistia.com/medias/ogq5b8d80y\">experiences for developers</a>. Although we caution against extending and actively maintaining legacy monoliths, they continue to be dependencies in our environments, and developers often underestimate the cost and time required to develop against these dependencies. To help reduce the friction, developers have used virtualized <a href=\"/radar/techniques/machine-image-as-a-build-artifact\">machine images</a> or container images with <a href=\"/radar/platforms/docker\">Docker</a> containers to create immutable images of legacy systems and their configurations. The intent is to contain the <strong>legacy in a box</strong> for developers to run locally and remove the need for rebuilding, reconfiguring or sharing environments. In an ideal scenario, teams that own legacy systems generate the corresponding boxed legacy images through their build pipelines, and developers can then run and orchestrate these images in their allocated sandbox more reliably. Although this approach has reduced the overall time spent by each developer, it has had limited success when the teams owning the downstream dependencies have been reluctant to create container images for others to use.</p>",
                "radarId": 5,
                "id": "en_2017-03_1106",
                "blip_selector": "legacy-in-a-box"
            },
            {
                "blip_id": 1055,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Vue.js",
                "display_name": "Vue.js",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "350",
                "tag": null,
                "description": "<p>In the ever-changing world of front-end JavaScript frameworks, one of the emerging favorites appears to be <strong><a href=\"https://vuejs.org/\">Vue.js</a>.</strong> Vue.js is a lightweight alternative to <a href=\"/radar/languages-and-frameworks/angularjs\">AngularJS</a>. It is designed to be a very flexible—and a less opinionated—library that offers a set of tools for building interactive web interfaces around concepts such as modularity, components and reactive data flow. It has a low learning curve, which makes it interesting for less experienced developers and beginners. Note, though, that Vue.js is not a full-blown framework; it is focused on the view layer only and therefore is easy to integrate with other libraries or existing projects.</p>",
                "radarId": 89,
                "id": "en_2017-03_1055",
                "blip_selector": "vue-js"
            },
            {
                "blip_id": 989,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Amazon API Gateway",
                "display_name": "Amazon API Gateway",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "188",
                "tag": null,
                "description": "<p><a href=\"https://aws.amazon.com/api-gateway/\"><strong>Amazon API Gateway</strong></a> enables developers to expose API services to Internet clients. It offers the usual API gateway features including traffic management, monitoring, authentication and authorization. Our teams have had positive experiences using this service to front <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> as part of <a href=\"/radar/techniques/serverless-architecture\">serverless architectures</a>. On the other hand, we have had more challenges using it as a more general purpose gateway to front HTTP/HTTPS endpoints running on EC2—where we have been stymied by a lack of interoperability with VPCs and difficulty in establishing client cert authentication with the gateway. Due to this mixed experience, we would like to advise teams to trial using AWS API Gateway with Lambda but assess suitability when using it in a more general setting.</p>",
                "radarId": 33,
                "id": "en_2017-03_989",
                "blip_selector": "amazon-api-gateway"
            },
            {
                "blip_id": 1060,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Three.js",
                "display_name": "Three.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "348",
                "tag": null,
                "description": "<p>Despite the fervor surrounding the spate of new headsets, we believe there are many VR and AR scenarios that make sense in the browser, particularly on mobile. Given this trend, we have seen an uptick in usage of <a href=\"https://threejs.org/\"><strong>Three.js</strong></a>, a powerful JavaScript visualization and 3D rendering framework. The growth in support for WebGL, which it is based on, has helped adoption, as has the vibrant community supporting this open source project.</p>",
                "radarId": 102,
                "id": "en_2017-03_1060",
                "blip_selector": "three-js"
            },
            {
                "blip_id": 1047,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "250",
                "name": "Enzyme",
                "display_name": "Enzyme",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "300",
                "tag": null,
                "description": "<p>We've been enjoying the rapid component-level UI testing that <a href=\"http://airbnb.io/enzyme/\"><strong>Enzyme</strong></a> provides for <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> applications. Unlike many other snapshot-based testing frameworks, Enzyme allows you to test without doing on-device rendering, which results in faster and more granular testing. This is a contributing factor in our ability to massively reduce the amount of functional testing we find we have to do in React applications.</p>",
                "radarId": 84,
                "id": "en_2017-03_1047",
                "blip_selector": "enzyme"
            },
            {
                "blip_id": 1102,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "CI theatre",
                "display_name": "CI theatre",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "129",
                "tag": null,
                "description": "<p>We've long been advocates of <a href=\"https://martinfowler.com/articles/continuousIntegration.html\">continuous integration</a> (CI), and we were <a href=\"https://en.wikipedia.org/wiki/CruiseControl\">pioneers</a> in building CI server programs to automatically build projects on check-ins. Used well, these programs run as a daemon process on a <a href=\"http://www.martinfowler.com/articles/continuousIntegration.html#EveryoneCommitsToTheMainlineEveryDay\">shared project mainline that developers commit to daily</a>. The CI server <a href=\"http://www.martinfowler.com/articles/continuousIntegration.html#EveryCommitShouldBuildTheMainlineOnAnIntegrationMachine\">builds the project</a> and runs <a href=\"http://www.martinfowler.com/articles/continuousIntegration.html#MakeYourBuildSelf-testing\">comprehensive tests</a> to ensure the whole software system is integrated and is in an always-releasable state, thus satisfying the principles of <a href=\"https://continuousdelivery.com/\">continuous delivery</a>. Sadly, many developers simply set up a CI server and falsely assume they are \"doing CI\" when in reality they miss out on all the benefits. Common failure modes include: running CI against a shared mainline but with infrequent commits, so integration isn't really continuous; running a build with poor test coverage; allowing the build to stay red for long periods; or running CI against feature branches which results in <a href=\"http://paulhammant.com/2017/02/14/fake-news-via-continuous-isolation/\">continuous isolation</a>. The ensuing \" <strong>CI theatre</strong>\" might make people feel good, but would fail any credible <a href=\"https://martinfowler.com/bliki/ContinuousIntegrationCertification.html\">CI certification test</a>.</p>",
                "radarId": 21,
                "id": "en_2017-03_1102",
                "blip_selector": "ci-theatre"
            },
            {
                "blip_id": 1121,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Prototyping with InVision and Sketch",
                "display_name": "Prototyping with InVision and Sketch",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "110",
                "tag": null,
                "description": "<p>The combined use of InVision and Sketch has changed the way some people approach web application development. Although these are tools, it is really the technique of <strong>prototyping with InVision and Sketch</strong> that makes this blip significant. Creating rich, clickable prototypes as the starting point for implementing front-end and back-end behavior helps speed up the development and eliminates churn in the implementation details. This combined use of these tools strikes the right balance between premature elaboration of visual detail and capturing early user feedback on the interactive experience.</p>",
                "radarId": 8,
                "id": "en_2017-03_1121",
                "blip_selector": "prototyping-with-invision-and-sketch"
            },
            {
                "blip_id": 1017,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "338",
                "name": "Nuance Mix",
                "display_name": "Nuance Mix",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "241",
                "tag": null,
                "description": "<p><strong><a href=\"https://developer.nuance.com/public/index.php?task=mix\">Nuance Mix</a></strong> is a framework for natural language processing from the company that created the speech-to-text technology behind Dragon Speaking and the first roll-out of Siri. This framework supports the creation of grammars that allow for free-form user interaction via voice. The developer defines a domain-specific grammar that the framework can train itself to understand. The outcomes are responses to user input that identify the user's intents and interaction concepts. At first, it is limited to phrases close to the ones used to train it, but over time it can start to identify meaning from more divergent phrasing. Though it is still in beta, the accuracy from early exploration has been compelling, and the eventual product is one to watch for application forms that could benefit from hands-free user interaction—including mobile, IoT, AR, VR and interactive spaces.</p>",
                "radarId": 46,
                "id": "en_2017-03_1017",
                "blip_selector": "nuance-mix"
            },
            {
                "blip_id": 1001,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Hosting PII data in the EU",
                "display_name": "Hosting PII data in the EU",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-03",
                "theta": "150",
                "tag": null,
                "description": "<p>In a number of countries, we see government agencies seeking broad access to private, personally identifiable information (PII). The increased use of public cloud solutions makes it more difficult for organizations to protect the data entrusted to them by their users while also respecting all relevant laws. The European Union has some of the most progressive privacy laws, and all the major cloud providers—Amazon, Google and Microsoft—offer multiple data centers and regions within the European Union. Therefore, we recommend that companies, especially those with a global user base, assess the feasibility of a safe haven for their users' data by <strong>hosting PII data in the EU</strong>. Since we wrote about this technique in the last Radar, we have rolled out a new internal system that handles sensitive information relating to all our employees, and we have chosen to host it in a data center located in the European Union.</p>",
                "radarId": 4,
                "id": "en_2017-03_1001",
                "blip_selector": "hosting-pii-data-in-the-eu"
            }
        ]
    },
    {
        "date": "2017-11",
        "blips": [
            {
                "blip_id": 1174,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "single-spa",
                "display_name": "single-spa",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "338",
                "tag": null,
                "description": "<p><a href=\"http://github.com/CanopyTax/single-spa\"><strong>single-spa</strong></a> is a JavaScript metaframework that allows us to build <a href=\"/radar/techniques/micro-frontends\">micro frontends</a> using different frameworks that can coexist in a single application. In general, we don't recommend using more than one framework for an application, but there are times when we can't avoid doing so. For instance, single-spa can be quite useful when you're working with a legacy application and you want to experiment by developing a new feature, with either a new version of the existing framework or a completely different one. Given the short life span of many JavaScript frameworks, we see a need for a solution that would allow for future framework changes and localized experimentation, without affecting the entire application. single-spa seems to be a good start in that direction.</p>",
                "radarId": 101,
                "id": "en_2017-11_1174",
                "blip_selector": "single-spa"
            },
            {
                "blip_id": 1173,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "LeakCanary",
                "display_name": "LeakCanary",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "325",
                "tag": null,
                "description": "<p>Our mobile teams have been excited about <a href=\"http://github.com/square/leakcanary\"><strong>LeakCanary</strong></a>, a tool for detecting annoying memory leaks in Android and Java. It's simple to hook up and provides notifications with a clear trace-back to the cause of the leak. Adding this to your toolkit can save tedious hours troubleshooting out-of-memory errors on multiple devices.</p>",
                "radarId": 98,
                "id": "en_2017-11_1173",
                "blip_selector": "leakcanary"
            },
            {
                "blip_id": 1071,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "PostCSS",
                "display_name": "PostCSS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "330",
                "tag": null,
                "description": "<p><strong><a href=\"https://github.com/postcss/postcss\">PostCSS</a></strong> is a <a href=\"/radar/platforms/node-js\">Node.js</a>-based JavaScript framework for operating on an abstract syntax tree-based representation of CSS documents with a rich ecosystem of plugins. Often incorrectly thought of as a preprocessor (such as SASS or Less), we find that the real power of PostCSS comes from the number of things that can be done with the rich set of plugins which includes linting (<a href=\"https://github.com/stylelint/stylelint\">the stylelint plugin</a>), cross-compilation (<a href=\"https://github.com/postcss/sugarss\">the sugarss plugin</a>), name-mangling to avoid selector collision (<a href=\"https://github.com/css-modules/postcss-modules\">the modules plugin</a>), boilerplate CSS code generation (<a href=\"https://github.com/postcss/autoprefixer\">the autoprefixer plugin</a>), <a href=\"http://cssnano.co/\">minification</a> and many others. The different maturity levels of the plugins notwithstanding, PostCSS itself remains a simple and powerful framework for treating CSS like a full-fledged language for front-end development.</p>",
                "radarId": 99,
                "id": "en_2017-11_1071",
                "blip_selector": "postcss"
            },
            {
                "blip_id": 1198,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "TensorFlow Serving",
                "display_name": "TensorFlow Serving",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "255",
                "tag": null,
                "description": "<p>Machine-learning models are starting to creep into everyday business applications. When enough training data is available, these algorithms can address problems that might have previously required complex statistical models or heuristics. As we move from experimental use to production, we need a reliable way to host and deploy the models that can be accessed remotely and scale with the number of consumers. <a href=\"http://www.tensorflow.org/serving/\"><strong>TensorFlow Serving</strong></a> addresses part of that problem by exposing a remote gRPC interface to an exported model; this allows a trained model to be deployed in a variety of ways. TensorFlow Serving also accepts a stream of models to incorporate continuous training updates, and its authors maintain a Dockerfile to ease the deployment process. Presumably, the choice of gRPC is to be consistent with the TensorFlow execution model; however, we’re generally wary of protocols that require code generation and native bindings.</p>",
                "radarId": 49,
                "id": "en_2017-11_1198",
                "blip_selector": "tensorflow-serving"
            },
            {
                "blip_id": 849,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Prometheus",
                "display_name": "Prometheus",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "30",
                "tag": null,
                "description": "<p>We've seen both continuing improvements in and an uptick in adoption of <a href=\"http://prometheus.io/\"><strong>Prometheus</strong></a>, the monitoring and time series database tool originally developed by Soundcloud. Prometheus primarily supports a pull-based HTTP model but it also supports alerts, making it an active part of your operational toolset. As of this writing, Prometheus 2.0 is in prerelease, and continues to evolve. Prometheus developers have focused their efforts on core time series databases and the variety of metrics available. <a href=\"/radar/tools/grafana\">Grafana</a> has become the dashboard visualization tool of choice for Prometheus users and support for Grafana ships with the tool. Our teams also find that Prometheus monitoring nicely complements the indexing and search capabilities of an Elastic Stack.</p>",
                "radarId": 59,
                "id": "en_2017-11_849",
                "blip_selector": "prometheus"
            },
            {
                "blip_id": 1128,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Autonomous bubble pattern",
                "display_name": "Autonomous bubble pattern",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "158",
                "tag": null,
                "description": "<p>Many organizations we work with are trying hard to use modern engineering approaches to build new capabilities and features, while also having to coexist with a long tail of legacy systems. An old strategy that, based on our experience, has turned out to be increasingly helpful in these scenarios is <a href=\"http://dddcommunity.org/strategic-design/\">Eric Evans's</a> <strong>Autonomous bubble pattern</strong>. This approach involves creating a fresh context for new application development that is shielded from the entanglements of the legacy world. This is a step beyond just using an <a href=\"http://wiki.c2.com/?AnticorruptionLayer\">anticorruption layer</a>. It gives the new bubble context full control over its backing data, which is then asynchronously kept up-to-date with the legacy systems. It requires some work to protect the boundaries of the bubble and keep both worlds consistent, but the resulting autonomy and reduction in development friction is a first bold step toward a modernized future architecture.</p>",
                "radarId": 4,
                "id": "en_2017-11_1128",
                "blip_selector": "autonomous-bubble-pattern"
            },
            {
                "blip_id": 1033,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Scikit-learn",
                "display_name": "Scikit-learn",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "20",
                "tag": null,
                "description": "<p><strong><a href=\"http://scikit-learn.org/stable/\">Scikit-learn</a></strong> is not a new tool (it is approaching its tenth birthday); what is new is the rate of adoption of machine-learning tools and techniques outside of academia and major tech companies. Providing a robust set of models and a rich set of functionality, Scikit-learn plays an important role in making machine-learning concepts and capabilities more accessible to a broader (and often non-expert) audience.</p>",
                "radarId": 60,
                "id": "en_2017-11_1033",
                "blip_selector": "scikit-learn"
            },
            {
                "blip_id": 1086,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Keycloak",
                "display_name": "Keycloak",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "230",
                "tag": null,
                "description": "<p>In a <a href=\"/radar/techniques/microservices\">microservice</a>, or any other distributed architecture, one of the most common needs is to secure the services or APIs through authentication and authorization features. This is where <a href=\"http://www.keycloak.org/\"><strong>Keycloak</strong></a> comes in. Keycloak is an open source identity and access management solution that makes it easy to secure applications or microservices with little to no code. It supports single sign-on, social login and standard protocols such as <a href=\"http://openid.net/connect/\">OpenID Connect</a>, <a href=\"http://oauth.net/2/\">OAuth 2.0</a> and <a href=\"http://en.wikipedia.org/wiki/Security_Assertion_Markup_Language\">SAML</a> out of the box. Our teams have been using this tool and plan to keep using it for the foreseeable future. But it requires a little work to set up. Because configuration happens both at initialization and at runtime through APIs, it's necessary to write scripts to ensure deployments are repeatable.</p>",
                "radarId": 31,
                "id": "en_2017-11_1086",
                "blip_selector": "keycloak"
            },
            {
                "blip_id": 1061,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Unity beyond gaming",
                "display_name": "Unity beyond gaming",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "250",
                "tag": null,
                "description": "<p>In previous Radars, we mentioned that <a href=\"http://unity3d.com/\">Unity</a> has become the platform of choice for VR and AR application development because it provides the abstractions and tooling of a mature platform, while being more accessible than its main alternative, the Unreal Engine. With the recent introductions of ARKit for iOS and ARCore for Android, the two main mobile platforms now have powerful native SDKs for building augmented reality applications. Yet, we feel that many teams, especially those without deep experience in building games, will benefit from using an abstraction such as Unity, which is why we're calling out <strong>Unity beyond gaming</strong>. This allows developers unfamiliar with the technology to focus on one SDK. It also offers a solution for the huge number of devices, especially on the Android side, that are not supported by the native SDKs.</p>",
                "radarId": 33,
                "id": "en_2017-11_1061",
                "blip_selector": "unity-beyond-gaming"
            },
            {
                "blip_id": 1102,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "CI theatre",
                "display_name": "CI theatre",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "150",
                "tag": null,
                "description": "<p>We've long been advocates of <a href=\"https://martinfowler.com/articles/continuousIntegration.html\">continuous integration</a> (CI), and we were <a href=\"https://en.wikipedia.org/wiki/CruiseControl\">pioneers</a> in building CI server programs to automatically build projects on check-ins. Used well, these programs run as a daemon process on a <a href=\"http://www.martinfowler.com/articles/continuousIntegration.html#EveryoneCommitsToTheMainlineEveryDay\">shared project mainline that developers commit to daily</a>. The CI server <a href=\"http://www.martinfowler.com/articles/continuousIntegration.html#EveryCommitShouldBuildTheMainlineOnAnIntegrationMachine\">builds the project</a> and runs <a href=\"http://www.martinfowler.com/articles/continuousIntegration.html#MakeYourBuildSelf-testing\">comprehensive tests</a> to ensure the whole software system is integrated and is in an always-releasable state, thus satisfying the principles of <a href=\"https://continuousdelivery.com/\">continuous delivery</a>. Sadly, many developers simply set up a CI server and falsely assume they are \"doing CI\" when in reality they miss out on all the benefits. Common failure modes include: running CI against a shared mainline but with infrequent commits, so integration isn't really continuous; running a build with poor test coverage; allowing the build to stay red for long periods; or running CI against feature branches which results in <a href=\"http://paulhammant.com/2017/02/14/fake-news-via-continuous-isolation/\">continuous isolation</a>. The ensuing \" <strong>CI theatre</strong>\" might make people feel good, but would fail any credible <a href=\"https://martinfowler.com/bliki/ContinuousIntegrationCertification.html\">CI certification test</a>.</p>",
                "radarId": 22,
                "id": "en_2017-11_1102",
                "blip_selector": "ci-theatre"
            },
            {
                "blip_id": 1181,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Truffle",
                "display_name": "Truffle",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "351",
                "tag": null,
                "description": "<p><a href=\"http://truffleframework.com/\"><strong>Truffle</strong></a> is a development framework that brings a modern web development experience to the <a href=\"/radar/platforms/ethereum\">Ethereum</a> platform. It takes over the job of smart contract compiling, library linking and deployment, as well as dealing with artifacts in different blockchain networks. One of the reasons we love Truffle is that it encourages people to write tests for their smart contracts. You need to take tests really seriously as smart contract programming is often related to money. With its built-in testing framework and integration with <a href=\"http://github.com/ethereumjs/testrpc\">TestRPC</a>, Truffle makes it possible to write the contract in a TDD way. We expect to see more technologies similar to Truffle to promote continuous integration in the blockchain area.</p>",
                "radarId": 104,
                "id": "en_2017-11_1181",
                "blip_selector": "truffle"
            },
            {
                "blip_id": 1185,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Android Architecture Components",
                "display_name": "Android Architecture Components",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "274",
                "tag": null,
                "description": "<p>Historically, Google's Android documentation examples lacked architecture and structure. This changes with the release of <strong>Android Architecture Components</strong> , a set of opinionated libraries that help developers create Android applications with better architecture. They address longstanding pain points of Android development: handling lifecycles; pagination; SQLite databases; and data persistence over configuration changes. The libraries don't need to be used together — you can pick the ones you need most and integrate them into your existing project.</p>",
                "radarId": 86,
                "id": "en_2017-11_1185",
                "blip_selector": "android-architecture-components"
            },
            {
                "blip_id": 1196,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Cloud Spanner",
                "display_name": "Cloud Spanner",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "190",
                "tag": null,
                "description": "<p><a href=\"http://cloud.google.com/spanner/\"><strong>Cloud Spanner</strong></a> is a fully managed relational database service offering high availability and strong consistency without compromising latency. Google has been working on a globally distributed database called Spanner for quite some time. It has recently released the service to the outside world as Cloud Spanner. You can scale your database instance from one to thousands of nodes across the globe without worrying about data consistency. By levering <a href=\"http://cloud.google.com/spanner/docs/true-time-external-consistency\">TrueTime</a>, a highly available and distributed clock, Cloud Spanner provides strong consistency for reads and snapshots. You can use standard SQL to read data from Cloud Spanner, but for write operations you have to use their RPC API. Although not all services would require a global-scale distributed database, the general availability of Cloud Spanner is a big shift in the way we think about databases. And its design is influencing open source products such as <a href=\"http://github.com/cockroachdb/cockroach\">CockroachDB</a>.</p>",
                "radarId": 36,
                "id": "en_2017-11_1196",
                "blip_selector": "cloud-spanner"
            },
            {
                "blip_id": 1070,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Angular",
                "display_name": "Angular",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "280",
                "tag": null,
                "description": "<p>In previous Radar editions, we've been hesitant to give <strong>Angular</strong> a strong recommendation because it was essentially a new, and on the whole unexciting, framework, sharing only its name with AngularJS, an older framework we loved in days past. In the meantime, Angular, now in version 5, has improved steadily while providing backward compatibility along the way. Several of our teams have Angular applications in production and reportedly, they like what they see. For this reason, we're moving Angular into the Trial ring in this Radar, to signify that some of our teams now consider it a solid choice. Most of our teams, however, still prefer <a href=\"/radar/languages-and-frameworks/react-js\">React</a>, <a href=\"/radar/languages-and-frameworks/vue-js\">Vue</a> or <a href=\"/radar/languages-and-frameworks/ember-js\">Ember</a> over Angular.</p>",
                "radarId": 78,
                "id": "en_2017-11_1070",
                "blip_selector": "angular"
            },
            {
                "blip_id": 1105,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "Decoupling secret management from source code",
                "display_name": "Decoupling secret management from source code",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "143",
                "tag": null,
                "description": "<p>In previous Radars issues we mentioned tools such as <a href=\"https://www.agwa.name/projects/git-crypt/\">git-crypt</a> and <a href=\"/radar/tools/blackbox\">Blackbox</a> that allow us to keep secrets safe inside the source code. <strong>Decoupling secret management from source code</strong> is our way to remind technologists that there are other options for storing secrets. For example, <a href=\"/radar/tools/hashicorp-vault\">HashiCorp vault</a>, CI servers and configuration management tools provide mechanisms for storing secrets that are not linked to the source code of an application. Both approaches are viable and we recommend you use at least one of them in your projects.</p>",
                "radarId": 6,
                "id": "en_2017-11_1105",
                "blip_selector": "decoupling-secret-management-from-source-code"
            },
            {
                "blip_id": 1111,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "287",
                "name": "spaCy",
                "display_name": "spaCy",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "23",
                "tag": null,
                "description": "<p><a href=\"https://spacy.io/\"><strong>spaCy</strong></a> is a Natural Language Processing (NLP) library written in Python. It is a high-performance library, intended for use by developers in production, and applies NLP models suited for processing text that often mixes in emoticons and inconsistent punctuation marks. Unlike other NLP frameworks, spaCy is a pluggable library and not a platform; it is aimed at production applications rather than model training for research. It plays well with <a href=\"/radar/platforms/tensorflow\">TensorFlow</a> and the rest of the Python AI ecosystem. We've used spaCy in the enterprise context to build a search engine that takes human language queries and helps users make business decisions.</p>",
                "radarId": 73,
                "id": "en_2017-11_1111",
                "blip_selector": "spacy"
            },
            {
                "blip_id": 1163,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Flow",
                "display_name": "Flow",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "68",
                "tag": null,
                "description": "<p><a href=\"http://flow.org/\"><strong>Flow</strong></a> is a static type checker for JavaScript that allows you to add type checking across the codebase incrementally. Unlike Typescript, which is a different language, Flow can be added incrementally to an existing JavaScript codebase supporting the 5th, 6th and 7th editions of ECMAScript. We suggest adding Flow to your continuous integration pipeline, starting with the code that concerns you most. Flow adds to the clarity of the code, increases the reliability of refactoring and catches type-related bugs early during the build.</p>",
                "radarId": 65,
                "id": "en_2017-11_1163",
                "blip_selector": "flow"
            },
            {
                "blip_id": 1004,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "380",
                "name": "A single CI instance for all teams",
                "display_name": "A single CI instance for all teams",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "165",
                "tag": null,
                "description": "<p>We're compelled to caution, again, against creating <strong>a single CI instance for all teams</strong>. While it's a nice idea in theory to consolidate and centralize Continuous Integration (CI) infrastructure, in reality we do not see enough maturity in the tools and products in this space to achieve the desired outcome. Software delivery teams which must use the centralized CI offering regularly have long delays depending on a central team to perform minor configuration tasks, or to troubleshoot problems in the shared infrastructure and tooling. At this stage, we continue to recommend that organizations limit their centralized investment to establishing patterns, guidelines and support for delivery teams to operate their own CI infrastructure.</p>",
                "radarId": 21,
                "id": "en_2017-11_1004",
                "blip_selector": "a-single-ci-instance-for-all-teams"
            },
            {
                "blip_id": 1130,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "DesignOps",
                "display_name": "DesignOps",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "135",
                "tag": null,
                "description": "<p>Inspired by the DevOps movement, <a href=\"http://airbnb.design/designops-airbnb/\"><strong>DesignOps</strong></a> is a cultural shift and a set of practices that allows people across an organization to continuously redesign products without compromising quality, service coherency or team autonomy. DesignOps advocates for the creation and evolution of a design infrastructure that minimizes the effort necessary to create new UI concepts and variations, and to establish a rapid and reliable feedback loop with end users. With tools such as <a href=\"http://github.com/storybooks/storybook\">Storybook</a> promoting close collaboration, the need for upfront analysis and specification handoffs is reduced to the absolute minimum. With DesignOps, design is shifting from being a specific practice to being a part of everyone's job.</p>",
                "radarId": 7,
                "id": "en_2017-11_1130",
                "blip_selector": "designops"
            },
            {
                "blip_id": 866,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": ".NET Core",
                "display_name": ".NET Core",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "190",
                "tag": null,
                "description": "<p>We're seeing increased adoption of <a href=\"http://www.microsoft.com/net/core\"><strong>.NET Core</strong></a>, the open source cross-platform software framework. .NET Core enables the development and deployment of .NET applications on Windows, macOS and Linux. With the release of <a href=\"https://docs.microsoft.com/en-us/dotnet/standard/net-standard?tabs=net-standard-2-0\">.NET Standard 2.0</a> increasing the number of standard APIs across .NET platforms, the migration path to .NET Core has become clearer. Issues related to library support on .NET Core are becoming less problematic, and first-class <a href=\"http://www.jetbrains.com/rider/\">cross-platform tooling</a> is now available, allowing for productive development on non-Windows platforms. Blessed Docker images are provided to make it easy to integrate .NET Core services into a containerized environment. Positive directions in the community and feedback from our projects indicate that .NET Core is ready for widespread use.</p>",
                "radarId": 27,
                "id": "en_2017-11_866",
                "blip_selector": "net-core"
            },
            {
                "blip_id": 1104,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Enterprise-wide integration test environments",
                "display_name": "Enterprise-wide integration test environments",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "135",
                "tag": null,
                "description": "<p>When the enterprise-wide quarterly or monthly releases were considered best practice, it was necessary to maintain a complete environment for performing testing cycles prior to deployment to production. These <strong>enterprise-wide integration test environments</strong> (often referred to as SIT or Staging) are a common bottleneck for continuous delivery today. The environments themselves are fragile and expensive to maintain, often with components that need manual configuration by a separate environment management team. Testing in the staging environment provides unreliable and slow feedback, and testing effort is duplicated with what can be performed on components in isolation. We recommend that organizations incrementally create an independent path to production for key components. Important techniques include <a href=\"/radar/techniques/consumer-driven-contract-testing\">contract testing</a>, <a href=\"/radar/techniques/decoupling-deployment-from-release\">decoupling deployment from release</a>, <a href=\"/radar/techniques/focus-on-mean-time-to-recovery\">focus on mean time to recovery</a> and <a href=\"/radar/techniques/qa-in-production\">testing in production</a>.</p>",
                "radarId": 23,
                "id": "en_2017-11_1104",
                "blip_selector": "enterprise-wide-integration-test-environments"
            },
            {
                "blip_id": 1206,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Chaos Engineering",
                "display_name": "Chaos Engineering",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "150",
                "tag": null,
                "description": "<p>In previous editions of the Radar, we've talked about using <a href=\"/radar/tools/chaos-monkey\">Chaos Monkey</a> from Netflix to test how a running system is able to cope with outages in production by randomly disabling instances and measuring the results. <strong>Chaos Engineering</strong> is the nascent term for the wider application of this technique. By running experiments on distributed systems in production, we're able to build confidence that those systems work as expected under turbulent conditions. A good place to start understanding this technique is the <a href=\"http://principlesofchaos.org/\">Principles of Chaos Engineering</a> website.</p>",
                "radarId": 5,
                "id": "en_2017-11_1206",
                "blip_selector": "chaos-engineering"
            },
            {
                "blip_id": 1133,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Applying product management to internal platforms",
                "display_name": "Applying product management to internal platforms",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "173",
                "tag": null,
                "description": "<p>We've seen a steep increase in interest in the topic of digital platforms over the past 12 months. Companies looking to roll out new digital solutions quickly and efficiently are building internal platforms, which offer teams self-service access to the business APIs, tools, knowledge and support necessary to build and operate their own solutions. We find that these platforms are most effective when they're given the same respect as an external product offering. <strong>Applying product management to internal platforms</strong> means establishing empathy with internal consumers (read: developers) and collaborating with them on the design. Platform product managers establish roadmaps and ensure the platform delivers value to the business and enhances the developer experience. Some owners even create a brand identity for the internal platform and use that to market the benefits to their colleagues. Platform product managers look after the quality of the platform, gather usage metrics, and continuously improve it over time. Treating the platform as a product helps to create a thriving ecosystem and avoids the pitfall of building yet another stagnant, underutilized service-oriented architecture.</p>",
                "radarId": 2,
                "id": "en_2017-11_1133",
                "blip_selector": "applying-product-management-to-internal-platforms"
            },
            {
                "blip_id": 1190,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "255",
                "name": "Flood IO",
                "display_name": "Flood IO",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "210",
                "tag": null,
                "description": "<p>Load testing became easier with the maturity of tools such as <a href=\"/radar/tools/gatling\">Gatling</a> and <a href=\"/radar/tools/locust\">Locust</a>. At the same time, elastic cloud infrastructures make it possible to simulate a large number of client instances. We're delighted to see Flood and other cloud platforms go further by leveraging these technologies. <a href=\"http://flood.io/\"><strong>Flood IO</strong></a> is an SaaS load-testing service that helps to distribute and execute testing scripts across hundreds of servers in the cloud. Our teams find it simple to migrate performance testing to Flood by reusing existing Gatling scripts.</p>",
                "radarId": 29,
                "id": "en_2017-11_1190",
                "blip_selector": "flood-io"
            },
            {
                "blip_id": 999,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Serverless architecture",
                "display_name": "Serverless architecture",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "105",
                "tag": null,
                "description": "<p>The use of <a href=\"http://www.martinfowler.com/articles/serverless.html\"><strong>serverless architecture</strong></a> has very quickly become an accepted approach for organizations deploying cloud applications, with a plethora of choices available for deployment. Even traditionally conservative organizations are making partial use of some serverless technologies. Most of the discussion goes to Functions as a Service (e.g., <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a>, <a href=\"http://cloud.google.com/functions/\">Google Cloud Functions</a>, <a href=\"http://azure.microsoft.com/en-us/services/functions/\">Azure Functions</a>) while the appropriate patterns for use are still emerging. Deploying serverless functions undeniably removes the nontrivial effort that traditionally goes into server and OS configuration and orchestration. Serverless functions, however, are not a fit for every requirement. At this stage, you must be prepared to fall back to deploying containers or even server instances for specific requirements. Meanwhile, the other components of a serverless architecture, such as Backend as a Service, have become almost a default choice.</p>",
                "radarId": 11,
                "id": "en_2017-11_999",
                "blip_selector": "serverless-architecture"
            },
            {
                "blip_id": 931,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "382",
                "name": "Overambitious API gateways",
                "display_name": "Overambitious API gateways",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "225",
                "tag": null,
                "description": "<p>We remain concerned about business logic and process orchestration implemented in middleware, especially where it requires expert skills and tooling while creating single points of scaling and control. Vendors in the highly competitive API gateway market are continuing this trend by adding features through which they attempt to differentiate their products. This results in <strong>overambitious API gateway</strong> products whose functionality — on top of what is essentially a reverse proxy — encourages designs that continue to be difficult to test and deploy. API gateways do provide utility in dealing with some specific concerns — such as authentication and rate limiting — but any domain smarts should live in applications or services.</p>",
                "radarId": 52,
                "id": "en_2017-11_931",
                "blip_selector": "overambitious-api-gateways"
            },
            {
                "blip_id": 1187,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "CSS Modules",
                "display_name": "CSS Modules",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "320",
                "tag": null,
                "description": "<p>Most large CSS codebases require complex naming schemes to help avoid naming conflicts in the global namespace. <a href=\"http://github.com/css-modules/css-modules\"><strong>CSS Modules</strong></a> address these problems by creating a local scope for all class names in a single CSS file. This file is imported to a JavaScript module, where CSS classes are referenced as strings. Then, in the build pipeline (Webpack, Browserify, etc.), the class names are replaced with generated unique strings. This is a significant change in responsibilities. Previously, a human had to manage the global namespace, to avoid class naming conflicts; now that responsibility rests with the build tooling. A small downside we've encountered with CSS Modules: functional tests are usually out of the local scope and can therefore not reference classes by the name defined in the CSS file. We recommend using IDs or data attributes instead.</p>",
                "radarId": 82,
                "id": "en_2017-11_1187",
                "blip_selector": "css-modules"
            },
            {
                "blip_id": 1183,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Solidity",
                "display_name": "Solidity",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "342",
                "tag": null,
                "description": "<p>Programming for smart contracts requires a more expressive language than a <a href=\"http://en.bitcoin.it/wiki/Script\">scripting system for transactions</a>. <a href=\"http://github.com/ethereum/solidity\"><strong>Solidity</strong></a> is the most popular among the new programming languages designed for smart contracts. Solidity is a contract-oriented, statically typed language whose syntax is similar to JavaScript. It provides abstractions for writing self-enforcing business logic in smart contracts. The toolchain around Solidity is growing fast. Nowadays, Solidity is the primary choice on the <a href=\"/radar/platforms/ethereum\">Ethereum</a> platform. Given the immutable nature of deployed smart contracts, it should go without saying that rigorous testing and audit of dependencies is vital.</p>",
                "radarId": 102,
                "id": "en_2017-11_1183",
                "blip_selector": "solidity"
            },
            {
                "blip_id": 1141,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "The three Rs of security",
                "display_name": "The three Rs of security",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "100",
                "tag": null,
                "description": "<p>Traditional approaches to enterprise security often emphasize locking things down and slowing the pace of change. However, we know that the more time an attacker has to compromise a system, the greater the potential damage. <a href=\"http://builttoadapt.io/the-three-r-s-of-enterprise-security-rotate-repave-and-repair-f64f6d6ba29d\">The three Rs of enterprise security</a> — rotate, repair and repave — take advantage of infrastructure automation and continuous delivery to eliminate opportunities for attack. Rotating credentials, applying patches as soon as they're available and rebuilding systems from a known, secure state — all within a matter of minutes or hours — makes it harder for attackers to succeed. <strong>The three Rs of security</strong> technique is made feasible with the advent of modern cloud-native architectures. When applications are deployed as containers, and built and tested via a completely automated pipeline, a security patch is just another small release that can be sent through the pipeline with one click. Of course, in keeping with best distributed systems practices, developers need to design their applications to be resilient to unexpected server outages. This is similar to the impact of implementing <a href=\"/radar/tools/chaos-monkey\">Chaos Monkey</a> within your environment.</p>",
                "radarId": 20,
                "id": "en_2017-11_1141",
                "blip_selector": "the-three-rs-of-security"
            },
            {
                "blip_id": 1106,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "230",
                "name": "Legacy in a box",
                "display_name": "Legacy in a box",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "128",
                "tag": null,
                "description": "<p>Working with legacy code, especially large monoliths, is one of the most unsatisfying, high-friction <a href=\"https://thoughtworks.wistia.com/medias/ogq5b8d80y\">experiences for developers</a>. Although we caution against extending and actively maintaining legacy monoliths, they continue to be dependencies in our environments, and developers often underestimate the cost and time required to develop against these dependencies. To help reduce the friction, developers have used virtualized <a href=\"/radar/techniques/machine-image-as-a-build-artifact\">machine images</a> or container images with <a href=\"/radar/platforms/docker\">Docker</a> containers to create immutable images of legacy systems and their configurations. The intent is to contain the <strong>legacy in a box</strong> for developers to run locally and remove the need for rebuilding, reconfiguring or sharing environments. In an ideal scenario, teams that own legacy systems generate the corresponding boxed legacy images through their build pipelines, and developers can then run and orchestrate these images in their allocated sandbox more reliably. Although this approach has reduced the overall time spent by each developer, it has had limited success when the teams owning the downstream dependencies have been reluctant to create container images for others to use.</p>",
                "radarId": 8,
                "id": "en_2017-11_1106",
                "blip_selector": "legacy-in-a-box"
            },
            {
                "blip_id": 1145,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "gopass",
                "display_name": "gopass",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "60",
                "tag": null,
                "description": "<p><a href=\"http://www.justwatch.com/gopass/\"><strong>gopass</strong></a> is a password management solution for teams, built on GPG and <a href=\"/radar/tools/git\">Git</a>. It's a descendant of <a href=\"http://www.passwordstore.org\">pass</a> and adds features such as: support for recipient management and multiple password stores in a single tree; an interactive search functionality; time-based one-time password (TOTP) support; and storage of binary data. Migration of your pass store is fairly straightforward, because gopass is largely compatible with the format pass uses. This also means integration into provisioning workflows can be achieved with a single call to a stored secret.</p>",
                "radarId": 56,
                "id": "en_2017-11_1145",
                "blip_selector": "gopass"
            },
            {
                "blip_id": 1168,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Gobot",
                "display_name": "Gobot",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "312",
                "tag": null,
                "description": "<p>The ability to compile the <a href=\"/radar/languages-and-frameworks/go-language\">Go programming language</a> to bare metal targets has raised interest among developers in using the language for embedded systems. <a href=\"http://gobot.io/\"><strong>Gobot</strong></a> is a framework for robotics, physical computing, and the Internet of Things, written in the Go programming language and supporting a variety of platforms. We've used the framework for experimental robotic projects where real-time response hasn't been a requirement, and we’ve created open source <a href=\"http://github.com/HendrikLouw/robocar\">software drivers</a> with Gobot. Gobot HTTP APIs enable simple hardware integration with mobile devices to create richer applications.</p>",
                "radarId": 95,
                "id": "en_2017-11_1168",
                "blip_selector": "gobot"
            },
            {
                "blip_id": 1162,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Sonobuoy",
                "display_name": "Sonobuoy",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "29",
                "tag": null,
                "description": "<p><a href=\"http://heptio.com/opensource/#heptio-sonobuoy\"><strong>Sonobuoy</strong></a> is a diagnostic tool for running end-to-end conformance tests on any <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> cluster in a nondestructive way. The team at <a href=\"http://heptio.com/\">Heptio</a>, which was founded by two creators of the Kubernetes projects, built this tool to ensure that the wide array of Kubernetes distributions and configurations conform to the best practices, while following the open source standardization for interoperability of clusters. We're experimenting with Sonobuoy to run as part of our <a href=\"/radar/tools/infrastructure-as-code\">infrastructure as code</a> build pipeline, as well as continuous monitoring of our Kubernetes installations, to validate the behavior and health of the whole cluster.</p>",
                "radarId": 72,
                "id": "en_2017-11_1162",
                "blip_selector": "sonobuoy"
            },
            {
                "blip_id": 1158,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Lighthouse",
                "display_name": "Lighthouse",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "40",
                "tag": null,
                "description": "<p><strong>Lighthouse</strong> is a tool written by Google to assess web applications for adherence to <a href=\"/radar/techniques/progressive-web-applications\">Progressive Web App</a> standards. This year's Lighthouse 2.0 release adds performance metrics and accessibility checks to the basic toolset. This added functionality has now been incorporated into the standard Chrome developer tools under the audit tab. Lighthouse 2.0 is yet another beneficiary of Chrome's headless mode. This provides an alternative to <a href=\"/radar/tools/pa11y\">Pa11y</a> and similar tools for running accessibility checks in a continuous integration pipeline, since the tool can be run from the command line or standalone as a Node.js application.</p>",
                "radarId": 70,
                "id": "en_2017-11_1158",
                "blip_selector": "lighthouse"
            },
            {
                "blip_id": 1072,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Caffe",
                "display_name": "Caffe",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "287",
                "tag": null,
                "description": "<p><a href=\"http://caffe.berkeleyvision.org/\"><strong>Caffe</strong></a> is an open source library for deep learning created by the <a href=\"http://bair.berkeley.edu/\">Berkeley Vision and Learning Center</a>. It mostly focusses on convolutional networks for computer vision applications. Caffe is a solid and popular choice for computer vision-related tasks and you can download many successful models made by Caffe users from the Caffe Model Zoo for out-of-the-box use. Like <a href=\"/radar/languages-and-frameworks/keras\">Keras</a>, Caffe is a Python-based API. In Keras, however, models and components are objects created directly in Python code, whereas Caffe models are described by <a href=\"https://developers.google.com/protocol-buffers/\">Protobuf</a> configuration files. Either approach has its pros and cons, and converting between the two is also possible.</p>",
                "radarId": 89,
                "id": "en_2017-11_1072",
                "blip_selector": "caffe"
            },
            {
                "blip_id": 1195,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Language Server Protocol",
                "display_name": "Language Server Protocol",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "225",
                "tag": null,
                "description": "<p>Much of the power of sophisticated IDEs comes from their ability to parse a program into an abstract syntax tree (AST) and then use that AST for program analysis and manipulation. This supports features such as autocomplete, finding callers and refactoring. Language servers pull this capability into a process that allows any text editor to access an API to work with the AST. Microsoft has led the creation of the <a href=\"http://github.com/Microsoft/language-server-protocol\"><strong>Language Server Protocol</strong></a> (LSP), harvested from their OmniSharp and TypeScript Server projects.<a href=\"http://langserver.org#implementations-client\">Any editor</a> that uses this protocol can work with any language that has an <a href=\"http://langserver.org#implementations-server\">LSP-compliant server</a>. This means we can keep using our favorite editors without forgoing the rich text editing modes of many languages — much to the delight of our Emacs addicts.</p>",
                "radarId": 43,
                "id": "en_2017-11_1195",
                "blip_selector": "language-server-protocol"
            },
            {
                "blip_id": 1192,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "255",
                "name": "Google Cloud Platform",
                "display_name": "Google Cloud Platform",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "220",
                "tag": null,
                "description": "<p>As <a href=\"http://cloud.google.com/free/ce1/\"><strong>Google Cloud Platform</strong></a> (GCP) has expanded in terms of available geographic regions and maturity of services, customers globally can now seriously consider it for their cloud strategy. In some areas, GCP has reached feature parity with its main competitor, Amazon Web Services, while in other areas it has differentiated itself — notably with accessible machine learning platforms, data engineering tools, and a workable Kubernetes as a service solution (<a href=\"/radar/platforms/gke\">GKE</a>). In practice, our teams have nothing but praise for the developer experience working with the GCP tools and APIs.</p>",
                "radarId": 30,
                "id": "en_2017-11_1192",
                "blip_selector": "google-cloud-platform"
            },
            {
                "blip_id": 1112,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Yarn",
                "display_name": "Yarn",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "6",
                "tag": null,
                "description": "<p><strong><a href=\"https://yarnpkg.com/en/\">Yarn</a></strong> is a new package manager that replaces the existing workflow for the npm client while remaining compatible with the npm registry. With the npm client, we may end up with a different tree structure under node_modules based on the order that dependencies are installed. This nondeterministic nature can cause \"works on my machine\" problems. By breaking the installation steps into resolution, fetching and linking, Yarn avoids these issues using deterministic algorithms and lockfiles and thus guarantees repeatable installations. We've also seen significantly faster builds in our continuous integration (CI) environment because of Yarn caching all the packages it downloads.</p>",
                "radarId": 76,
                "id": "en_2017-11_1112",
                "blip_selector": "yarn"
            },
            {
                "blip_id": 1077,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Kotlin",
                "display_name": "Kotlin",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "340",
                "tag": null,
                "description": "<p>The announcement of first-class Android support has given an extra boost to the rapidly progressing <strong>Kotlin</strong> language, and we're closely following the progress of <a href=\"http://blog.jetbrains.com/kotlin/2017/04/kotlinnative-tech-preview-kotlin-without-a-vm/\">Kotlin/Native</a> — the LLVM-backed ability to compile to native executables. Null safety, data classes and the ease of creating DSLs are some of the benefits we've enjoyed, along with the <a href=\"http://github.com/Kotlin/anko\">Anko</a> library for Android development. Despite the downsides of slow initial compilation and reliance on IntelliJ for first-class IDE support, we recommend giving this fresh and concise modern language a try.</p>",
                "radarId": 84,
                "id": "en_2017-11_1077",
                "blip_selector": "kotlin"
            },
            {
                "blip_id": 1193,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "GKE",
                "display_name": "GKE",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "210",
                "tag": null,
                "description": "<p>While the software development ecosystem is converging on <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> as the orchestration platform for containers, running Kubernetes clusters remains operationally complex. <strong>GKE</strong> (Google Kubernetes Engine) is a managed Kubernetes solution for deploying containerized applications that alleviates the operational overhead of running and maintaining Kubernetes clusters. Our teams have had a good experience using GKE, with the platform doing the heavy lifting of applying security patches, monitoring and auto-repairing the nodes, and managing multicluster and multiregion networking. In our experience, Google's API-first approach in exposing platform capabilities, as well as using industry standards such as OAuth for service authorization, improve the developer experience. It's important to consider that GKE is under rapid development which, despite the developers' best efforts to abstract consumers from underlying changes, has impacted us temporarily in the past. We're expecting continuous improvement around maturity of <a href=\"/radar/tools/infrastructure-as-code\">Infrastructure as code</a> with <a href=\"http://www.terraform.io/docs/providers/google/r/container_cluster.html\">Terraform on GKE</a> and similar tools.</p>",
                "radarId": 40,
                "id": "en_2017-11_1193",
                "blip_selector": "gke"
            },
            {
                "blip_id": 1089,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "PlatformIO",
                "display_name": "PlatformIO",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "250",
                "tag": null,
                "description": "<p><strong><a href=\"http://platformio.org/\">PlatformIO</a></strong> provides a rich ecosystem for IoT development by providing cross-platform builds, library management and good integration with existing IDEs. The intelligent code completion and Smart Code Linter with built-in terminal and serial port monitor greatly enhances the developer experience. It also organizes and maintains <a href=\"http://platformio.org/lib\">thousands of libraries</a> and provides a clean dependency manager with semantic versioning to ease IoT development. We've started using PlatformIO in a few IoT projects and we really like it for its simplicity and wide support of <a href=\"http://platformio.org/platforms\">platforms</a> and <a href=\"http://platformio.org/boards\">boards</a>.</p>",
                "radarId": 48,
                "id": "en_2017-11_1089",
                "blip_selector": "platformio"
            },
            {
                "blip_id": 1156,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Rendertron",
                "display_name": "Rendertron",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "34",
                "tag": null,
                "description": "<p>A perennial problem for JavaScript-heavy web applications is how to make the dynamic portion of those pages available to search engines. Historically, developers have resorted to a variety of tricks, including server-side rendering with <a href=\"/radar/languages-and-frameworks/react-js\">React</a>, external services or prerendering content. Now Google Chrome's new headless mode adds a new ‘trick’ to the toolbox — <a href=\"http://github.com/GoogleChrome/rendertron\"><strong>Rendertron</strong></a>, a headless Chrome rendering solution. Rendertron wraps an instance of headless Chrome in a Docker container, ready to deploy as a standalone HTTP server. Bots that don't render JavaScript can be routed to this server to do the rendering for them. Although developers can always deploy their own headless Chrome proxy and associated routing machinery, Rendertron simplifies the configuration and deployment process, and provides example middleware code for detecting and routing bots.</p>",
                "radarId": 71,
                "id": "en_2017-11_1156",
                "blip_selector": "rendertron"
            },
            {
                "blip_id": 1083,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Spring Cloud",
                "display_name": "Spring Cloud",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "350",
                "tag": null,
                "description": "<p><a href=\"http://projects.spring.io/spring-cloud/\"><strong>Spring Cloud</strong></a> continues to evolve and add interesting new features. Support for binding to <a href=\"/radar/platforms/kafka-streams\">Kafka Streams</a>, for example, in the spring-cloud-streams project makes it relatively easy to build message driven applications with connectors for Kafka and RabbitMQ. The teams we have using it appreciate the simplicity it brings to using sometimes complex infrastructure, such as <a href=\"http://zookeeper.apache.org/\">ZooKeeper</a>, and support for common problems that we need to address when building distributed systems, tracing with the <a href=\"http://cloud.spring.io/spring-cloud-sleuth/\">spring-cloud-sleuth</a> for example. The usual caveats apply but we're successfully using it on multiple projects.</p>",
                "radarId": 85,
                "id": "en_2017-11_1083",
                "blip_selector": "spring-cloud"
            },
            {
                "blip_id": 1058,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Kafka Streams",
                "display_name": "Kafka Streams",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "220",
                "tag": null,
                "description": "<p><strong>Kafka Streams</strong> is a lightweight library for building streaming applications. It's been designed with the goal of simplifying stream processing enough to make it easily accessible as a mainstream application programming model for asynchronous services. It can be a good alternative in scenarios where you want to apply a stream processing model to your problem, without embracing the complexity of running a cluster (usually introduced by full-fledged stream processing frameworks). New developments include ‘exactly once’ stream processing in a Kafka cluster. This was achieved by introducing idempotency in Kafka producers and allowing atomic writes across multiple partitions using the new Transactions API.</p>",
                "radarId": 42,
                "id": "en_2017-11_1058",
                "blip_selector": "kafka-streams"
            },
            {
                "blip_id": 1171,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Weex",
                "display_name": "Weex",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "355",
                "tag": null,
                "description": "<p><a href=\"http://github.com/alibaba/weex\"><strong>Weex</strong></a> is a framework for building cross-platform mobile apps by using the <a href=\"/radar/languages-and-frameworks/vue-js\">Vue.js</a> component syntax. For those who prefer the simplicity of Vue.js, Weex is a viable option for native mobile apps, but it also works very well for more complicated apps. We see many successes for fairly complicated mobile apps built on this framework, including <a href=\"http://www.tmall.com/\">TMall</a> and <a href=\"http://world.taobao.com/\">Taobao</a>, two of the most popular mobile apps in China. Weex was developed by Alibaba, and is now an <a href=\"http://github.com/apache/incubator-weex\">Apache incubator project</a>.</p>",
                "radarId": 105,
                "id": "en_2017-11_1171",
                "blip_selector": "weex"
            },
            {
                "blip_id": 1204,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "MapD",
                "display_name": "MapD",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "235",
                "tag": null,
                "description": "<p><a href=\"http://www.mapd.com/\"><strong>MapD</strong></a> is an in-memory columnar analytic database with SQL support that's built to run on GPU. We debated whether the database workload is actually I/O or computationally bound but there are instances where the parallelism of the GPU, combined with the large bandwidth of VRAM, can be quite useful. MapD transparently manages the most frequently used data in VRAM (such as columns involved in group-by, filters, calculations and join conditions) and stores the rest of the data in the main memory. With this memory management setup, MapD achieves significant query performance without the need of indexes. Although there are other GPU database vendors, MapD is leading this segment with the recent open source release of its core database and through the <a href=\"https://github.com/gpuopenanalytics\">GPU Open Analytics Initiative</a>. If your analytical workload is computationally heavy, can exploit GPU parallelism and can fit in the main memory, we recommend assessing MapD.</p>",
                "radarId": 45,
                "id": "en_2017-11_1204",
                "blip_selector": "mapd"
            },
            {
                "blip_id": 1138,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Service mesh",
                "display_name": "Service mesh",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "120",
                "tag": null,
                "description": "<p>As large organizations transition to more autonomous teams owning and operating their own microservices, how can they ensure the necessary consistency and compatibility between those services without relying on a centralized hosting infrastructure? To work together efficiently, even autonomous microservices need to align with some organizational standards. A <strong>service mesh</strong> offers consistent discovery, security, tracing, monitoring and failure handling without the need for a shared asset such as an API gateway or ESB. A typical implementation involves lightweight reverse-proxy processes deployed alongside each service process, perhaps in a separate container. These proxies communicate with service registries, identity providers, log aggregators, and so on. Service interoperability and observability are gained through a shared implementation of this proxy but not a shared runtime instance. We've advocated for a decentralized approach to microservice management for some time and are happy to see this consistent pattern emerge. Open source projects such as <a href=\"http://linkerd.io/\">linkerd</a> and <a href=\"http://istio.io/\">Istio</a> will continue to mature and make service meshes even easier to implement.</p>",
                "radarId": 18,
                "id": "en_2017-11_1138",
                "blip_selector": "service-mesh"
            },
            {
                "blip_id": 1090,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Mosquitto",
                "display_name": "Mosquitto",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "240",
                "tag": null,
                "description": "<p>In our experience—for Internet of Things (IoT) solutions where a lot of devices communicate with each other and/or a central data hub—the MQTT connectivity protocol has proven itself. We've also come to like the <strong><a href=\"http://mosquitto.org/\">Mosquitto</a></strong> MQTT broker. It might not satisfy all demands, particularly with regard to scalability, but its compact nature and easy setup makes it ideal for development and testing purposes.</p>",
                "radarId": 46,
                "id": "en_2017-11_1090",
                "blip_selector": "mosquitto"
            },
            {
                "blip_id": 1165,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "AssertJ",
                "display_name": "AssertJ",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "290",
                "tag": null,
                "description": "<p><a href=\"http://joel-costigliola.github.io/assertj/index.html\"><strong>AssertJ</strong></a> is a Java library that provides a <a href=\"http://martinfowler.com/bliki/FluentInterface.html\">fluent interface</a> for assertions, which makes it easy to convey intent within test code. AssertJ gives readable error messages, soft assertions, and improved collections and exception support. We're seeing some teams default to its use instead of JUnit combined with Hamcrest.</p>",
                "radarId": 79,
                "id": "en_2017-11_1165",
                "blip_selector": "assertj"
            },
            {
                "blip_id": 1186,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "CSS-in-JS",
                "display_name": "CSS-in-JS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "295",
                "tag": null,
                "description": "<p><strong>CSS in JS</strong> is a technique of writing CSS styling in the JavaScript programming language. This encourages a common pattern of writing the styling with the JavaScript component it applies to, co-locating presentational and logical concerns. The new players — including <a href=\"http://github.com/cssinjs/jss\">JSS</a>, <a href=\"http://github.com/emotion-js/emotion\">emotion</a> and <a href=\"http://github.com/styled-components/styled-components\">styled-components</a> — rely on the tooling to translate the CSS-in-JS code to separate CSS stylesheets, to make them suitable for browser consumption. This is the second-generation approach to writing CSS in JavaScript and unlike the previous approaches doesn’t rely on in-line styles. That means it provides the benefit of supporting all CSS features, sharing of CSS using the <a href=\"/radar/techniques/npm-for-all-the-things\">npm</a> ecosystem and utilization of components across multiple platforms. Our teams have found <a href=\"http://github.com/styled-components/styled-components\">styled-components</a> working well with component-based frameworks, such as <a href=\"/radar/languages-and-frameworks/react-js\">React</a>, and unit testing of CSS with <a href=\"http://github.com/styled-components/jest-styled-components\">jest-styled-components</a>. This space is new and rapidly changing; the approach requires some effort for manual debugging of the generated class names in the browser, and it may not apply to some projects where the front-end architecture does not support reusing components and requires global styling.</p>",
                "radarId": 91,
                "id": "en_2017-11_1186",
                "blip_selector": "css-in-js"
            },
            {
                "blip_id": 1110,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Spinnaker",
                "display_name": "Spinnaker",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "17",
                "tag": null,
                "description": "<p><a href=\"http://techblog.netflix.com/2015/11/global-continuous-delivery-with.html\">Netflix</a> has open sourced <a href=\"http://www.spinnaker.io/\"><strong>Spinnaker</strong></a>, its microservices continuous delivery (CD) platform. Compared to other CI/CD platforms, Spinnaker implements cluster management and deployment of baked images to the cloud as first-class features. It supports out-of-the-box deployment and cluster management for multiple cloud providers such as Google Cloud Platform, AWS and <a href=\"/radar/platforms/pivotal-cloud-foundry\">Pivotal Cloud Foundry</a>. You can integrate Spinnaker with Jenkins to run a Jenkins job build. We like Spinnaker's opinionated approach for deploying microservices to the cloud—with the exception that Spinnaker's pipelines are created via a user interface (UI) and cannot be configured as code.</p>",
                "radarId": 74,
                "id": "en_2017-11_1110",
                "blip_selector": "spinnaker"
            },
            {
                "blip_id": 1097,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "AWS Device Farm",
                "display_name": "AWS Device Farm",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "200",
                "tag": null,
                "description": "<p>The huge number of mobile devices makes it almost impossible for companies to test their mobile apps on all of them. Enter <strong><a href=\"https://aws.amazon.com/device-farm/\">AWS Device Farm</a></strong>, an app-testing service that enables you to run and interact with your Android, iOS and web apps on a wide variety of physical devices that are hosted in the cloud simultaneously. Detailed logs, performance graphs and screenshots are generated during each run to provide general and device-specific feedback. The service offers a lot of flexibility by allowing the state and configuration of each device to be altered in order to reproduce very specific test scenarios. Our teams are using AWS Device Farm to run end-to-end tests on devices with the largest install base for their apps.</p>",
                "radarId": 28,
                "id": "en_2017-11_1097",
                "blip_selector": "aws-device-farm"
            },
            {
                "blip_id": 1095,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "OpenTracing",
                "display_name": "OpenTracing",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "240",
                "tag": null,
                "description": "<p>As monolithic applications are being replaced with more complex <a href=\"/radar/techniques/microservices\">(micro)service</a> ecosystems, tracing requests across multiple services is becoming the norm. With majority contribution from LightStep and Uber <a href=\"http://opentracing.io/\"><strong>OpenTracing</strong></a> is rapidly becoming the de facto standard for distributed tracing. There is a growing number of <a href=\"http://opentracing.io/documentation/pages/supported-tracers\">tracers</a> supporting OpenTracing standard, including <a href=\"/radar/tools/zipkin\">Zipkin</a>, <a href=\"/radar/languages-and-frameworks/instana\">Instana</a>, and <a href=\"https://uber.github.io/jaeger/\">Jaeger</a>. OpenTracing currently provides vendor-neutral implementation in multiple languages including: Go, JavaScript, Java, Python, Objective-C, C#, C++, Ruby and PHP.</p>",
                "radarId": 32,
                "id": "en_2017-11_1095",
                "blip_selector": "opentracing"
            },
            {
                "blip_id": 1179,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Atlas and BeeHive",
                "display_name": "Atlas and BeeHive",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "282",
                "tag": null,
                "description": "<p>A multi-app strategy is really controversial, particularly at a time when fewer and fewer users are downloading new apps. Instead of introducing a new app and struggling with the download numbers, multiteams have to deliver functionality via a single app that is already widely installed, which creates an architectural challenge. <strong><a href=\"http://github.com/alibaba/atlas\">Atlas</a> and <a href=\"http://github.com/alibaba/BeeHive\">BeeHive</a></strong> are modularization solutions for Android and iOS apps, respectively. Atlas and BeeHive enable multiteams working on physically isolated modules to reassemble or dynamically load these modules from a facade app. Both are Alibaba open source projects, since Alibaba encountered the same problem of dwindling downloads and single-app architectural challenges.</p>",
                "radarId": 88,
                "id": "en_2017-11_1179",
                "blip_selector": "atlas-and-beehive"
            },
            {
                "blip_id": 1146,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Buildkite",
                "display_name": "Buildkite",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "80",
                "tag": null,
                "description": "<p>Our teams very much like the hosted CI/CD tool <a href=\"http://buildkite.com/\"><strong>Buildkite</strong></a> for its simplicity and quick setup. With Buildkite, you provide your own machines to execute builds — on premise or in the cloud — and install a lightweight agent application to connect the build agent to the hosted service. In many cases, having this level of control over the configuration of your build agents is a plus when compared to using hosted agents.</p>",
                "radarId": 54,
                "id": "en_2017-11_1146",
                "blip_selector": "buildkite"
            },
            {
                "blip_id": 1155,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Spring Cloud Contract",
                "display_name": "Spring Cloud Contract",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "12",
                "tag": null,
                "description": "<p>If you're implementing Java services using the <a href=\"http://spring.io/\">Spring</a> framework, you may want to consider <a href=\"http://cloud.spring.io/spring-cloud-contract/\"><strong>Spring Cloud Contract</strong></a> for <a href=\"/radar/techniques/consumer-driven-contract-testing\">consumer-driven contract testing</a>. The current ecosystem of this tool supports verification of the client calls and the server implementation against the contract. In comparison to <a href=\"/radar/tools/pact-pacto\">Pact</a>, an open source consumer-driven contract testing tool set, it lacks the brokering of the contracts and the support for other programming languages. However, it integrates well with the Spring ecosystem, for instance message routing with <a href=\"http://projects.spring.io/spring-integration/\">Spring Integration</a>.</p>",
                "radarId": 75,
                "id": "en_2017-11_1155",
                "blip_selector": "spring-cloud-contract"
            },
            {
                "blip_id": 1166,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "CSS Grid Layout",
                "display_name": "CSS Grid Layout",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "310",
                "tag": null,
                "description": "<p>CSS is the preferred choice for laying out web pages, even when it did not provide much explicit support for creating layouts. Flexbox helped with simpler, one-dimensional layouts, but developers usually reached for libraries and toolkits for more complex layouts. <a href=\"http://www.w3.org/TR/css-grid-1\"><strong>CSS Grid Layout</strong></a> is a two-dimensional grid-based layout system that provides a mechanism to divide available space for layout into columns and rows using a set of predictable sizing behaviors. Grid does not require any libraries and plays well with Flexbox and other CSS display elements. However, since IE11 is only <a href=\"http://caniuse.com/#search=css%20grid%20layout\">partially supported</a>, it ignores users who still depend on a Microsoft browser on Windows 7.</p>",
                "radarId": 81,
                "id": "en_2017-11_1166",
                "blip_selector": "css-grid-layout"
            },
            {
                "blip_id": 1172,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "PyTorch",
                "display_name": "PyTorch",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "334",
                "tag": null,
                "description": "<p><a href=\"http://pytorch.org/\"><strong>PyTorch</strong></a> is a complete rewrite of the <a href=\"http://torch.ch/\">Torch</a> machine learning framework from Lua to Python. Although quite new and immature compared to <a href=\"/radar/platforms/tensorflow\">Tensorflow</a>, programmers find PyTorch much easier to work with. Because of its object-orientation and native Python implementation, models can be expressed more clearly and succinctly and debugged during execution. Although many of these frameworks have emerged recently, PyTorch has the backing of Facebook and broad range of partner organisations, including NVIDIA, which should ensure continuing support for CUDA architectures. ThoughtWorks teams find PyTorch useful for experimenting and developing models but still rely on TensorFlow’s performance for production-scale training and classification.</p>",
                "radarId": 100,
                "id": "en_2017-11_1172",
                "blip_selector": "pytorch"
            },
            {
                "blip_id": 1157,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "assertj-swagger",
                "display_name": "assertj-swagger",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "79",
                "tag": null,
                "description": "<p>An <a href=\"/radar/languages-and-frameworks/assertj\">AssertJ</a> library, <a href=\"http://github.com/RobWin/assertj-swagger\"><strong>assertj-swagger</strong></a> enables you to validate an API implementation's compliance with its contract specification. Our teams use assertj-swagger to catch problems when the API endpoint implementation changes without updating its <a href=\"/radar/tools/swagger\">Swagger</a> specification, or fails to publish the updated documentation.</p>",
                "radarId": 63,
                "id": "en_2017-11_1157",
                "blip_selector": "assertj-swagger"
            },
            {
                "blip_id": 1188,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Ethereum for decentralized applications",
                "display_name": "Ethereum for decentralized applications",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "160",
                "tag": null,
                "description": "<p>Blockchains have been widely hyped as the panacea for all things fintech, from banking to digital currency to supply chain transparency. We’ve previously featured <a href=\"/radar/platforms/ethereum\">Ethereum</a> because of its feature set, which includes smart contracts. Now, we're seeing more development using <strong>Ethereum for decentralized applications</strong> in <a href=\"http://www.stateofthedapps.com/\">other areas</a>. Although this is still a very young technology, we're encouraged to see it being used to build decentralized applications beyond cryptocurrency and banking.</p>",
                "radarId": 14,
                "id": "en_2017-11_1188",
                "blip_selector": "ethereum-for-decentralized-applications"
            },
            {
                "blip_id": 1139,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Event streaming as the source of truth",
                "display_name": "Event streaming as the source of truth",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "150",
                "tag": null,
                "description": "<p>As event streaming platforms, such as <a href=\"/radar/tools/apache-kafka\">Apache Kafka</a>, rise in popularity, many consider them as an advanced form of message queuing, used solely to transmit events. Even when used in this way, event streaming has its benefits over traditional message queuing. However, we're more interested in how people use <strong>event streaming as the source of truth</strong> with platforms (Kafka in particular) as the primary store for data as immutable events. A service with an <a href=\"http://martinfowler.com/eaaDev/EventSourcing.html\">Event Sourcing</a> design, for example, can use Kafka as its event store; those events are then available for other services to consume. This technique has the potential to reduce duplicating efforts between local persistence and integration.</p>",
                "radarId": 15,
                "id": "en_2017-11_1139",
                "blip_selector": "event-streaming-as-the-source-of-truth"
            },
            {
                "blip_id": 1191,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "331",
                "name": "Cosmos DB",
                "display_name": "Cosmos DB",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "200",
                "tag": null,
                "description": "<p><a href=\"http://docs.microsoft.com/en-us/azure/cosmos-db/introduction\"><strong>Cosmos DB</strong></a> is Microsoft's globally distributed, multimodel database service, which became generally available earlier this year. While most modern NoSQL databases offer tunable consistency, Cosmos DB makes it a first-class citizen and offers five different consistency models. It's worth highlighting that it also supports multiple models — key value, document, column family and graph — all of which map to its internal data model, called atom-record-sequence (ARS). One interesting aspect of Cosmos DB is that it offers service level agreements (SLAs) on its latency, throughput, consistency and availability. With its wide range of applicability, it has set a high standard for other cloud vendors to match.</p>",
                "radarId": 38,
                "id": "en_2017-11_1191",
                "blip_selector": "cosmos-db"
            },
            {
                "blip_id": 1091,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Voice platforms",
                "display_name": "Voice platforms",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "260",
                "tag": null,
                "description": "<p><strong>Voice platforms</strong> such as <a href=\"https://developer.amazon.com/alexa\">Amazon Alexa</a> and <a href=\"https://developers.google.com/actions/\">Google Home</a> are riding high on the hype cycle; some even herald the ubiquity of the conversational voice interface. We're already integrating conversational UIs into products and seeing the impact of this new interaction in how we design interfaces. Alexa specifically was built from the ground up without a screen and treats the conversational UI as first-class. But it's still too early to believe the hype, and we expect more big players to get in the game.</p>",
                "radarId": 50,
                "id": "en_2017-11_1091",
                "blip_selector": "voice-platforms"
            },
            {
                "blip_id": 1150,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Apex",
                "display_name": "Apex",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "85",
                "tag": null,
                "description": "<p><a href=\"http://github.com/apex/apex\"><strong>Apex</strong></a> is a tool to build, deploy and manage AWS Lambda functions with ease. With Apex, you can write functions in languages that are not yet natively supported in AWS, including Golang, Rust and others. This is made possible by a Node.js shim, which creates a child process and processes events through stdin and stdout. Apex has a lot of nice <a href=\"http://github.com/apex/apex#features\">features</a> that improve the developer experience, and we particularly like the ability to test functions locally and perform a dry run of the changes before they're applied to AWS resources.</p>",
                "radarId": 62,
                "id": "en_2017-11_1150",
                "blip_selector": "apex"
            },
            {
                "blip_id": 1189,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "WeChat",
                "display_name": "WeChat",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "260",
                "tag": null,
                "description": "<p><strong>WeChat</strong> , often seen as a WhatsApp equivalent, is becoming the de facto business platform in China. Many people may not know but WeChat is also one of the most popular online payment platforms. With the app's built-in CMS and membership management, small businesses are now conducting their commerce entirely on WeChat. Through the Service Account feature, large organizations can interface their internal system to their employees. Given that more than 70 percent of Chinese people are using WeChat, it's an important consideration for businesses that want to expand into the China market.</p>",
                "radarId": 34,
                "id": "en_2017-11_1189",
                "blip_selector": "wechat"
            },
            {
                "blip_id": 1075,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Hyperledger",
                "display_name": "Hyperledger",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "215",
                "tag": null,
                "description": "<p><strong>Hyperledger</strong> is a platform built around blockchain technologies. It consists of a blockchain implementation named Fabric and other associated tools. Disregarding the hype surrounding blockchain, our teams have found it easy to get started with these tools. The fact that it is an open source platform supported by the Linux Foundation also adds to our excitement about Hyperledger.</p>",
                "radarId": 41,
                "id": "en_2017-11_1075",
                "blip_selector": "hyperledger"
            },
            {
                "blip_id": 1113,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "InSpec",
                "display_name": "InSpec",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "62",
                "tag": null,
                "description": "<p>How does a business hand autonomy to delivery teams while still making sure their deployed solutions are safe and compliant? How do you ensure that servers, once deployed, remain secure and compliant over their operational lifetime? These are the problems that <strong>InSpec</strong> tries to address. InSpec is an infrastructure testing tool inspired by <a href=\"/radar/tools/serverspec\">Serverspec</a>, but with modifications that make the tool more useful for security professionals who need to ensure compliance across thousands of servers. Individual tests can be combined into complete security profiles and run remotely from a command line. InSpec is useful for developers but extends to testing deployed production infrastructure continuously, moving toward <a href=\"/radar/techniques/qa-in-production\">QA in production</a>.</p>",
                "radarId": 66,
                "id": "en_2017-11_1113",
                "blip_selector": "inspec"
            },
            {
                "blip_id": 1147,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "CircleCI",
                "display_name": "CircleCI",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "70",
                "tag": null,
                "description": "<p><a href=\"http://circleci.com/\"><strong>CircleCI</strong></a> is a continuous integration engine offered as SaaS and on premise. CircleCI has been the go-to SaaS CI tool for many of our development teams, who needed a low-friction and easy-to-setup build and deployment pipeline. CircleCI version 2.0 supports workflows of build jobs, with fan-in and fan-out flows and manual gates, as well as mobile development. It allows developers to run the pipelines locally and easily integrates with Slack and other notification and alerting systems. We recommend you take a closer look at the <a href=\"http://circleci.com/security/\">security practices of CircleCI</a>, just as you would with any other SaaS product that hosts your company’s assets.</p>",
                "radarId": 55,
                "id": "en_2017-11_1147",
                "blip_selector": "circleci"
            },
            {
                "blip_id": 1144,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "jsoniter",
                "display_name": "jsoniter",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "40",
                "tag": null,
                "description": "<p>If you're looking for a JSON encoder/decoder with high performance in Go and Java, check out the open source <a href=\"http://jsoniter.com/\"><strong>jsoniter</strong></a> library. The library is compatible with the <a href=\"http://golang.org/pkg/encoding/json/\">standard JSON encoding package in Go</a>.</p>",
                "radarId": 58,
                "id": "en_2017-11_1144",
                "blip_selector": "jsoniter"
            },
            {
                "blip_id": 679,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "90",
                "name": "Python 3",
                "display_name": "Python 3",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "315",
                "tag": null,
                "description": "<p><strong>Python 3</strong> introduced many useful features that are not backward compatible with Python 2.x. It also removed numerous Python 2.x features that were maintained for backward compatibility, making Python 3 easier to learn and use and more consistent with the rest of the language. Our experience using Python 3 in domains such as machine learning and web application development shows that both the language and most of its <a href=\"http://py3readiness.org/\">supporting libraries</a> have matured for adoption. We were able to fork and patch minor issues of existing libraries or avoided using incompatible Python 2.x libraries that had been abandoned. If you are developing in Python we strongly encourage you to use Python 3.</p>",
                "radarId": 77,
                "id": "en_2017-11_679",
                "blip_selector": "python-3"
            },
            {
                "blip_id": 1203,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "331",
                "name": "Azure Service Fabric",
                "display_name": "Azure Service Fabric",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "185",
                "tag": null,
                "description": "<p><strong>Azure Service Fabric</strong> is a distributed systems platform built for microservices and containers. It’s comparable to container orchestrators such as <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>, but also works with plain old services. It can be used in a bewildering array of ways, starting from simple services in your language of choice to Docker containers or services built using an SDK. Since its release a couple of years ago, it has steadily added more features, including Linux container support. Kubernetes has been the poster child of container orchestration tools, but Service Fabric is the default choice for .NET applications. We're using it in a few projects at ThoughtWorks and we like what we’ve seen so far.</p>",
                "radarId": 35,
                "id": "en_2017-11_1203",
                "blip_selector": "azure-service-fabric"
            },
            {
                "blip_id": 925,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Kubernetes",
                "display_name": "Kubernetes",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "225",
                "tag": null,
                "description": "<p>Since we last mentioned <strong>Kubernetes</strong> in the Radar, it has become the default solution for most of our clients when deploying containers into a cluster of machines. The alternatives didn’t capture as much mindshare, and in some cases our clients are even changing their ‘engine’ to Kubernetes. Kubernetes has become the container orchestration platform of choice for major public cloud platforms, including Microsoft's Azure Container Service and Google Cloud (see the <a href=\"/radar/platforms/gke\">GKE</a> blip). And there are many useful products enriching the fast-growing Kubernetes ecosystem. Platforms that try to hide Kubernetes under an abstraction layer, however, have yet to prove themselves.</p>",
                "radarId": 26,
                "id": "en_2017-11_925",
                "blip_selector": "kubernetes"
            },
            {
                "blip_id": 1018,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "fastlane",
                "display_name": "fastlane",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "45",
                "tag": null,
                "description": "<p>Web application developers have it easy when it comes to simplifying and automating diverse application workflows; they can choose from a variety of solutions to help automate release processes. When developing for mobile, however, we're dealing with two operating systems with two different ways of building, testing, distribution, generating screenshots, signing and distributing applications. To help ease the pain, our teams have adopted <strong><a href=\"https://fastlane.tools/\">fastlane</a></strong> as the go-to tool to automate the release process for iOS and Android applications. Using simple configurations and multiple pipelines, they can achieve <a href=\"/radar/techniques/continuous-delivery-cd\">continuous delivery</a> for mobile development.</p>",
                "radarId": 53,
                "id": "en_2017-11_1018",
                "blip_selector": "fastlane"
            },
            {
                "blip_id": 1101,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Platform engineering product teams",
                "display_name": "Platform engineering product teams",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "140",
                "tag": null,
                "description": "<p>The adoption of cloud and DevOps, while increasing the productivity of teams who can now move more quickly with reduced dependency on centralized operations teams and infrastructure, also has constrained teams who lack the skills to self-manage a full application and operations stack. Some organizations have tackled this challenge by creating <strong>platform engineering product teams</strong>. These teams operate an internal platform which enables delivery teams to self-service deploy and operate systems with reduced lead time and stack complexity. The emphasis here is on API-driven self-service and supporting tools, with delivery teams still responsible for supporting what they deploy onto the platform. Organizations that consider establishing such a platform team should be very cautious not to accidentally create a <a href=\"/radar/techniques/separate-devops-team\">separate DevOps team</a>, nor should they simply relabel their <a href=\"/radar/platforms/superficial-private-cloud\">existing hosting and operations structure</a> as a platform.</p>",
                "radarId": 16,
                "id": "en_2017-11_1101",
                "blip_selector": "platform-engineering-product-teams"
            },
            {
                "blip_id": 1159,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Kong API Gateway",
                "display_name": "Kong API Gateway",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "51",
                "tag": null,
                "description": "<p><a href=\"http://getkong.org/\">Kong</a> is an <a href=\"http://github.com/Kong/kong\">open source API gateway</a> built and sponsored by Mashape, who also provide an enterprise offering integrating Kong with their proprietary API analytics and developer portal tools. They can be deployed in a variety of configurations, as an edge API gateway or an internal API proxy. <a href=\"http://openresty.org/en/\">OpenResty</a>, through its Nginx modules, provides a strong and performant foundation, with Lua plugins for extensions. Kong can either use PostgreSQL for single region deployments or Cassandra for multiregion configurations. Our developers have enjoyed Kong's high performance, its API-first approach (which enables automation of its configuration) and its ease of deployment as a container. <strong>Kong API Gateway</strong> , unlike <a href=\"/radar/platforms/overambitious-api-gateways\">overambitious API gateways</a>, has a smaller set of features but it implements the essential set of API gateway capabilities such as traffic control, security, logging, monitoring and authentication. We're excited to assess Kong in a sidecar configuration in the near future.</p>",
                "radarId": 68,
                "id": "en_2017-11_1159",
                "blip_selector": "kong-api-gateway"
            },
            {
                "blip_id": 1164,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "165",
                "name": "Jest",
                "display_name": "Jest",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "330",
                "tag": null,
                "description": "<p>Our teams are delighted with the results of using <a href=\"http://facebook.github.io/jest/\"><strong>Jest</strong></a> for front-end testing. It provides a ‘zero-configuration’ experience and has out-of-the-box features such as mocking and code coverage. You can apply this testing framework not only to <a href=\"/radar/languages-and-frameworks/react-js\">React</a> applications, but also to other JavaScript frameworks. One of Jest's often hyped features is UI snapshot testing. Snapshot testing would be a good addition to the upper layer of the <a href=\"http://martinfowler.com/bliki/TestPyramid.html\">test pyramid</a>, but remember, unit testing is still the solid foundation.</p>",
                "radarId": 83,
                "id": "en_2017-11_1164",
                "blip_selector": "jest"
            },
            {
                "blip_id": 1197,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "333",
                "name": "LoRaWAN",
                "display_name": "LoRaWAN",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "230",
                "tag": null,
                "description": "<p><strong>LoRaWAN</strong> is a low-power wide-area network, designed for low-power consumption and communication over long distances using low bitrates. It provides for communication between devices and gateways, which can then forward the data to, for example, applications or servers. A typical usage is for a distributed set of sensors, or for Internet of Things (IoT) devices, for which long battery life and long-range communication is a must. LoRaWAN addresses two of the key problems with attempting to use normal Wi-Fi for such applications: range and power consumption. There are several implementations, a notable one being <a href=\"http://www.thethingsnetwork.org/\">The Things Network</a>, a free, open source implementation.</p>",
                "radarId": 44,
                "id": "en_2017-11_1197",
                "blip_selector": "lorawan"
            },
            {
                "blip_id": 1152,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "kops",
                "display_name": "kops",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "45",
                "tag": null,
                "description": "<p><a href=\"http://github.com/kubernetes/kops\"><strong>kops</strong></a> is a command line tool for creating and managing high-availability production <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> clusters. Initially targeting AWS, it now has experimental support for other providers. It can get you up and running fast, and even though a few features (such as rolling upgrades) have yet to be fully developed, we've been impressed by the community.</p>",
                "radarId": 69,
                "id": "en_2017-11_1152",
                "blip_selector": "kops"
            },
            {
                "blip_id": 1142,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "380",
                "name": "Recreating ESB antipatterns with Kafka",
                "display_name": "Recreating ESB antipatterns with Kafka",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "120",
                "tag": null,
                "description": "<p>Kafka is becoming very popular as a messaging solution, and along with it, <a href=\"/radar/platforms/kafka-streams\">Kafka Streams</a> is at the forefront of the wave of interest in streaming architectures. Unfortunately, as they start to embed Kafka at the heart of their data and application platforms, we're seeing some organizations <strong>recreating ESB antipatterns with Kafka</strong> by centralizing the Kafka ecosystem components — such as connectors and stream processors — instead of allowing these components to live with product or service teams. This reminds us of seriously problematic ESB antipatterns, where more and more logic, orchestration and transformation were thrust into a centrally managed ESB, creating a significant dependency on a centralized team. We're calling this out to dissuade further implementations of this flawed pattern.</p>",
                "radarId": 24,
                "id": "en_2017-11_1142",
                "blip_selector": "recreating-esb-antipatterns-with-kafka"
            },
            {
                "blip_id": 1148,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Headless Chrome for front-end test",
                "display_name": "Headless Chrome for front-end test",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "50",
                "tag": null,
                "description": "<p>Since mid-2017, Chrome users have had the option of running the browser in headless mode. This feature is ideally suited to running front-end browser tests without the overhead of displaying actions on a screen. Previously, this was largely the province of PhantomJS but <a href=\"http://developers.google.com/web/updates/2017/06/headless-karma-mocha-chai\">Headless Chrome</a> is rapidly replacing the JavaScript-driven WebKit approach. Tests in Headless Chrome should run much faster, and behave more like a real browser, but our teams have found that it does use more memory than PhantomJS. With all these advantages, <strong>Headless Chrome for front-end test</strong> is likely to become the de facto standard.</p>",
                "radarId": 57,
                "id": "en_2017-11_1148",
                "blip_selector": "headless-chrome-for-front-end-test"
            },
            {
                "blip_id": 1202,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "338",
                "name": "Corda",
                "display_name": "Corda",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "195",
                "tag": null,
                "description": "<p>After thorough exploration, R3, an important player in the blockchain space, realized that blockchain doesn't fit their purpose well, so they created <strong><a href=\"http://www.corda.net\">Corda</a></strong>. Corda is a distributed ledger technology (DLT) platform focused on the financial field. R3 have a very clear value proposition and know that their problem requires a pragmatic technology approach. This matches our own experience; current blockchain solutions may not be the reasonable choice for some business cases, due to mining costs and operational inefficiency. Although the development experience we have on Corda thus far has not been the smoothest, <a href=\"http://docs.corda.net/releases/release-V1.0/api-index.html#internal-apis-and-stability-guarantees\">APIs are still unstable after v1.0 release</a>, we expect to see the DLT space mature further.</p>",
                "radarId": 37,
                "id": "en_2017-11_1202",
                "blip_selector": "corda"
            },
            {
                "blip_id": 1167,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "TensorFlow Mobile",
                "display_name": "TensorFlow Mobile",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "347",
                "tag": null,
                "description": "<p><strong>TensorFlow Mobile</strong> makes it possible for developers to incorporate a wide range of comprehension and classification techniques into their iOS or Android applications. This is particularly useful given the range of sensor data available on mobile phones. Pretrained TensorFlow models can be loaded into a mobile application and applied to inputs such as live video frames, text or speech. Mobile phones present a surprisingly opportune platform for implementing these computational models. TensorFlow models are exported and loaded as protobuf files, which can present some problems for implementers. Protobuf's binary format can make it hard to examine models and requires that you link the correct protobuf library version to your mobile app. But local model execution offers an attractive alternative to <a href=\"/radar/platforms/tensorflow-serving\">TensorFlow Serving</a> without the communication overhead of remote execution.</p>",
                "radarId": 103,
                "id": "en_2017-11_1167",
                "blip_selector": "tensorflow-mobile"
            },
            {
                "blip_id": 1180,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "Clara rules",
                "display_name": "Clara rules",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "291",
                "tag": null,
                "description": "<p>Our first rule of thumb in selecting a rules engine is normally: you don't need a rules engine. We've seen too many people tying themselves to a hard-to-test black-box rules engine for spurious reasons, when custom code would have been a better solution. That said, we've had success using <a href=\"http://www.clara-rules.org/\"><strong>Clara rules</strong></a> for scenarios where a rules engine does make sense. We like that it uses simple Clojure code to express and evaluate the rules, which means they are amenable to refactoring, testing and source control. Rather than chasing the illusion that business people should directly manipulate the rules, it drives collaboration between the business experts and developers.</p>",
                "radarId": 90,
                "id": "en_2017-11_1180",
                "blip_selector": "clara-rules"
            },
            {
                "blip_id": 1073,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Keras",
                "display_name": "Keras",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "321",
                "tag": null,
                "description": "<p><a href=\"https://keras.io/\"><strong>Keras</strong></a> is a high-level interface in Python for building neural networks. Created by a Google engineer, Keras is open source and runs on top of either <a href=\"/radar/platforms/tensorflow\">TensorFlow</a> or <a href=\"http://github.com/Theano/Theano\">Theano</a>. It provides an amazingly simple interface for creating powerful deep-learning algorithms to train on CPUs or GPUs. Keras is well designed with modularity, simplicity, and extensibility in mind. Unlike a library such as <a href=\"/radar/languages-and-frameworks/caffe\">Caffe</a>, Keras supports more general network architectures such as recurrent nets, making it overall more useful for text analysis, NLP and general machine learning. If computer vision, or any other specialized branch of machine learning, is your primary concern, Caffe may be a more appropriate choice. However, if you’re looking to learn a simple yet powerful framework, Keras should be your first choice.</p>",
                "radarId": 97,
                "id": "en_2017-11_1073",
                "blip_selector": "keras"
            },
            {
                "blip_id": 1078,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Instana",
                "display_name": "Instana",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "317",
                "tag": null,
                "description": "<p><strong><a href=\"http://www.instana.com/\">Instana</a></strong> is yet another entrant into the crowded application performance management space. The fact that it's built from the ground up for cloud native architectures differentiates Instana from many of its competitors. Features include dynamic discovery, distributed tracing and service health plus the ability to \"time shift\" your view of your infrastructure to the moment an incident occurred. It remains to be seen whether this product can gain traction over the combination of open source projects—such as <a href=\"/radar/tools/consul\">Consul</a>, <a href=\"/radar/tools/prometheus\">Prometheus</a> and the implementations of <a href=\"/radar/platforms/opentracing\">OpenTracing</a>—that do the same thing; however it's worth taking a look if you need an out-of-the-box solution.</p>",
                "radarId": 96,
                "id": "en_2017-11_1078",
                "blip_selector": "instana"
            },
            {
                "blip_id": 1132,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "165",
                "name": "Architectural fitness function",
                "display_name": "Architectural fitness function",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "165",
                "tag": null,
                "description": "<p>Borrowed from evolutionary computing, a fitness function is used to summarize how close a given design solution is to achieving the set aims. When defining an evolutionary algorithm, the designer seeks a ‘better’ algorithm; the fitness function defines what ‘better’ means in this context. An <strong>architectural fitness function</strong> , as defined in <a href=\"http://www.thoughtworks.com/books/building-evolutionary-architectures\">Building Evolutionary Architectures</a>, provides an objective integrity assessment of some architectural characteristics, which may encompass existing verification criteria, such as unit testing, metrics, monitors, and so on. We believe architects can communicate, validate and preserve architectural characteristics in an automated, continual manner, which is the key to building evolutionary architectures.</p>",
                "radarId": 3,
                "id": "en_2017-11_1132",
                "blip_selector": "architectural-fitness-function"
            },
            {
                "blip_id": 1134,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "TDD'ing containers",
                "display_name": "TDD'ing containers",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "98",
                "tag": null,
                "description": "<p>Many development teams have adopted test-driven development practices for writing application code because of their benefits. Others have turned to containers to package and deploy their software, and it's accepted practice to use automated scripts to build the containers. What we’ve seen few teams do so far is combine the two trends and drive the writing of the container scripts using tests. With frameworks such as <a href=\"http://serverspec.org/\">Serverspec</a> and <a href=\"http://github.com/aelsabbahy/goss\">Goss</a>, you can express the intended functionality for either isolated or orchestrated containers, with short feedback loops. This means that it’s possible to use the same principles we’ve championed for code by <strong>TDD'ing containers</strong>. Our initial experience doing so has been very positive.</p>",
                "radarId": 12,
                "id": "en_2017-11_1134",
                "blip_selector": "tdd-ing-containers"
            },
            {
                "blip_id": 1034,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "80",
                "name": "Lightweight Architecture Decision Records",
                "display_name": "Lightweight Architecture Decision Records",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "135",
                "tag": null,
                "description": "<p>Much documentation can be replaced with highly readable code and tests. In a world of <a href=\"/radar/techniques/evolutionary-architecture\">evolutionary architecture</a>, however, it's important to record certain design decisions for the benefit of future team members as well as for external oversight. <strong>Lightweight Architecture Decision Records</strong> is a <a href=\"http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions\">technique</a> for capturing important architectural decisions along with their context and consequences. We recommend <a href=\"http://github.com/npryce/adr-tools\">storing these details in source control</a>, instead of a wiki or website, as then they can provide a record that remains in sync with the code itself. For most projects, we see no reason why you wouldn't want to use this technique.</p>",
                "radarId": 1,
                "id": "en_2017-11_1034",
                "blip_selector": "lightweight-architecture-decision-records"
            },
            {
                "blip_id": 1169,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "Druid",
                "display_name": "Druid",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "304",
                "tag": null,
                "description": "<p><a href=\"http://github.com/jilen/druid\"><strong>Druid</strong></a> is a JDBC connection pool with rich monitoring features. It has a built-in SQL parser, which provides semantic monitoring of the SQL statements executing in the database. Injections or suspicious SQL statements will be blocked and logged directly from the JDBC layer. What’s more, queries can be merged based on their semantics. This is an Alibaba open source project, and reflects the lessons Alibaba learnt from operating their own database systems.</p>",
                "radarId": 93,
                "id": "en_2017-11_1169",
                "blip_selector": "druid"
            },
            {
                "blip_id": 1035,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Micro frontends",
                "display_name": "Micro frontends",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "120",
                "tag": null,
                "description": "<p>We've seen significant benefits from introducing <a href=\"/radar/techniques/microservices\">microservices</a> architectures, which have allowed teams to scale the delivery of independently deployed and maintained services. Unfortunately, we've also seen many teams create front-end monoliths — a single, large and sprawling browser application — on top of their back-end services. Our preferred (and proven) approach is to split the browser-based code into <strong>micro frontends</strong>. In this approach, the web application is broken down into its features, and each feature is owned, frontend to backend, by a different team. This ensures that every feature is developed, tested and deployed independently from other features. Multiple techniques exist to recombine the features — sometimes as pages, sometimes as components — into a cohesive user experience.</p>",
                "radarId": 9,
                "id": "en_2017-11_1035",
                "blip_selector": "micro-frontends"
            },
            {
                "blip_id": 1201,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Netlify",
                "display_name": "Netlify",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "245",
                "tag": null,
                "description": "<p>We like simple tools that solve one problem really well, and <a href=\"http://www.netlify.com/\"><strong>Netlify</strong></a> fits this description nicely. You can create static website content, check it into GitHub and then quickly and easily get your site live and available. There is a CLI available to control the process; content delivery networks (CDNs) are supported; it can work alongside tools such as <a href=\"http://gruntjs.com/\">Grunt</a>; and, most importantly, Netlify supports HTTPS.</p>",
                "radarId": 47,
                "id": "en_2017-11_1201",
                "blip_selector": "netlify"
            },
            {
                "blip_id": 1154,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Jupyter",
                "display_name": "Jupyter",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "57",
                "tag": null,
                "description": "<p>Over the last couple of years, we've noticed a steady rise in the popularity of analytics notebooks. These are Mathematica-inspired applications that combine text, visualization and code in a living, computational document. In a previous edition, we mentioned <a href=\"/radar/tools/gorilla-repl\">GorillaREPL</a>, a Clojure variant of these. But increased interest in machine learning — along with the emergence of Python as the programming language of choice for practitioners in this field — has focused particular attention on Python notebooks, of which <a href=\"http://jupyter.org/\"><strong>Jupyter</strong></a> seems to be gaining the most traction among ThoughtWorks teams.</p>",
                "radarId": 67,
                "id": "en_2017-11_1154",
                "blip_selector": "jupyter"
            },
            {
                "blip_id": 1170,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "ECharts",
                "display_name": "ECharts",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "308",
                "tag": null,
                "description": "<p><a href=\"http://github.com/ecomfe/echarts\"><strong>ECharts</strong></a> is a lightweight charting library with rich support for different types of charts and interactions. Since ECharts is entirely based on the <a href=\"http://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\">Canvas API</a>, it has incredible performance even when dealing with over 100k data points, and it's also been optimized for mobile usage. Together with its sibling project, <a href=\"http://echarts.baidu.com/echarts2/x/doc/index.html\">ECharts-X</a>, it can support 3D plotting. ECharts is a Baidu open source project.</p>",
                "radarId": 94,
                "id": "en_2017-11_1170",
                "blip_selector": "echarts"
            },
            {
                "blip_id": 1085,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "322",
                "name": "DialogFlow",
                "display_name": "DialogFlow",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "205",
                "tag": null,
                "description": "<p>In parallel with the recent surge of chatbots and <a href=\"/radar/platforms/voice-platforms\">voice platforms</a>, we've seen a proliferation of tools and platforms that provide a service to extract intent from text and management of conversational flows that you can hook into. <a href=\"http://github.com/dialogflow\"><strong>DialogFlow</strong></a> (formerly API.ai), which was acquired by Google, is one such ‘natural-language-understanding as a service’ offering that competes with <a href=\"/radar/platforms/wit-ai\">wit.ai</a> and <a href=\"http://aws.amazon.com/lex/\">Amazon Lex</a> among other players in this space.</p>",
                "radarId": 39,
                "id": "en_2017-11_1085",
                "blip_selector": "dialogflow"
            },
            {
                "blip_id": 1200,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Windows Containers",
                "display_name": "Windows Containers",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "265",
                "tag": null,
                "description": "<p>Microsoft is catching up in the container space with <a href=\"http://docs.microsoft.com/en-us/virtualization/windowscontainers/about/\"><strong>Windows Containers</strong></a>. At the time of writing, Microsoft provides two Windows OS images as Docker containers, <a href=\"http://hub.docker.com/r/microsoft/windowsservercore/\">Windows Server 2016 Server Core</a> and <a href=\"http://hub.docker.com/r/microsoft/nanoserver/\">Windows Server 2016 Nano Server</a>. Although there is room for improvement for Windows Containers, for instance, decreasing the large image sizes, and enriching ecosystem support and documentation, our teams have started using them in scenarios where other containers have been working successfully, such as <a href=\"/radar/techniques/docker-for-builds\">build agents</a>.</p>",
                "radarId": 51,
                "id": "en_2017-11_1200",
                "blip_selector": "windows-containers"
            },
            {
                "blip_id": 1136,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Sidecars for endpoint security",
                "display_name": "Sidecars for endpoint security",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "110",
                "tag": null,
                "description": "<p>Microservices architecture, with a large number of services exposing their assets and capabilities through APIs and an increased attack surface, demand a zero trust security architecture — ‘never trust, always verify’. However, enforcing security controls for communication between services is often neglected, due to increased service code complexity and lack of libraries and language support in a polyglot environment. To get around this complexity, some teams delegate security to an out-of-process sidecar — a process or a container that is deployed and scheduled with each service sharing the same execution context, host and identity. Sidecars implement security capabilities, such as transparent encryption of the communication and TLS (Transport Layer Security) termination, as well as authentication and authorization of the calling service or the end user. We recommend you look into using <a href=\"http://istio.io/\">Istio</a>, <a href=\"http://linkerd.io/\">linkerd</a> or <a href=\"http://github.com/envoyproxy/envoy\">Envoy</a> before implementing your own <strong>sidecars for endpoint security</strong>.</p>",
                "radarId": 19,
                "id": "en_2017-11_1136",
                "blip_selector": "sidecars-for-endpoint-security"
            },
            {
                "blip_id": 1131,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Pipelines for infrastructure as code",
                "display_name": "Pipelines for infrastructure as code",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "113",
                "tag": null,
                "description": "<p>The use of continuous delivery pipelines to orchestrate the release process for software has become a mainstream concept. However, automatically testing changes to infrastructure code isn’t as widely understood. Continuous integration (CI) and continuous delivery (CD) tools can be used to test server configuration (e.g., Chef cookbooks, Puppet modules, Ansible playbooks), server image building (e.g., Packer), environment provisioning (e.g., Terraform, CloudFormation) and integration of environments. The use of <strong>pipelines for infrastructure as code</strong> enables errors to be found before changes are applied to operational environments — including environments used for development and testing. They also offer a way to ensure that infrastructure tooling is run consistently, from CI/CD agents, as opposed to being run from individual workstations. Some challenges remain, however, such as the longer feedback loops associated with standing up containers and virtual machines. Still, we've found this to be a valuable technique.</p>",
                "radarId": 10,
                "id": "en_2017-11_1131",
                "blip_selector": "pipelines-for-infrastructure-as-code"
            },
            {
                "blip_id": 1140,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Algorithmic IT operations",
                "display_name": "Algorithmic IT operations",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "170",
                "tag": null,
                "description": "<p>The amount of data collected by IT operations has been increasing for years. For example, the trend toward microservices means that more applications are generating their own operational data, and tools such as Splunk, <a href=\"/radar/tools/prometheus\">Prometheus</a>, or the ELK stack make it easier to store and process data later on, to gain operational insights. When combined with increasingly democratized machine learning tools, it’s inevitable that operators will start to incorporate statistical models and trained classification algorithms into their toolsets. Although these algorithms have been available for years, and various attempts have been made to automate service management, we're only just starting to understand how machines and humans can collaborate to identify outages earlier or pinpoint the source of failures. Although there is a risk of overhyping <strong>Algorithmic IT operations</strong> , steady improvement in machine learning algorithms will inevitably change the role of humans in operating tomorrow's data centers.</p>",
                "radarId": 13,
                "id": "en_2017-11_1140",
                "blip_selector": "algorithmic-it-operations"
            },
            {
                "blip_id": 1082,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Avro",
                "display_name": "Avro",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "300",
                "tag": null,
                "description": "<p><strong><a href=\"https://avro.apache.org/\">Avro</a></strong> is a framework for data serialization. By storing schema along with the message content, it encourages schema evolution. Producers can edit field names, add new fields or delete existing fields and Avro guarantees that the clients continue to consume the messages. Having a schema allows data to be written without overhead which results in compact data encoding and faster data processing. Although the exchange of structure-less messages between producer and consumer is flexible, we've seen teams facing issues with incompatible unprocessed messages in the queue during deployments. We've used Avro in a number of projects and would recommend using it over just sending unstructured messages.</p>",
                "radarId": 80,
                "id": "en_2017-11_1082",
                "blip_selector": "avro"
            },
            {
                "blip_id": 1127,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Spec-based codegen",
                "display_name": "Spec-based codegen",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "105",
                "tag": null,
                "description": "<p>Back in the days when SOAP held sway in the enterprise software industry, the practice of generating client code from WSDL specs was an accepted—even encouraged—practice. Unfortunately, the resulting code was often complex, untestable, difficult to modify and frequently didn't work across implementation platforms. With the advent of REST, we found it better to evolve API clients that use the <a href=\"https://martinfowler.com/bliki/TolerantReader.html\">tolerant reader pattern</a> for extracting and processing only the fields needed. Recently we have observed a disturbing return to old habits with developers generating code from API specifications written in <a href=\"/radar/tools/swagger\">Swagger</a> or <a href=\"/radar/tools/raml\">RAML</a>—a practice that we refer to as <strong>spec-based codegen</strong>. Although such tools are very useful for driving the design of APIs and for extracting documentation, we caution against the tempting shortcut of simply generating client code directly from these specifications. The chances are that such code will be difficult to test and maintain.</p>",
                "radarId": 25,
                "id": "en_2017-11_1127",
                "blip_selector": "spec-based-codegen"
            },
            {
                "blip_id": 1149,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Cypress",
                "display_name": "Cypress",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "74",
                "tag": null,
                "description": "<p>Fixing end-to-end test failures in CI can be a painful experience, especially in headless mode. <a href=\"http://www.cypress.io/\"><strong>Cypress</strong></a> is a useful tool that helps developers build end-to-end tests easily and records all test steps as a video in an MP4 file. Instead of reproducing the issue in headless mode, developers can watch the testing video in order to fix it. Cypress is a powerful platform, not only a testing framework. Currently, we've integrated its CLI with headless CI in our projects.</p>",
                "radarId": 64,
                "id": "en_2017-11_1149",
                "blip_selector": "cypress"
            },
            {
                "blip_id": 1176,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Digdag",
                "display_name": "Digdag",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "300",
                "tag": null,
                "description": "<p><a href=\"http://www.digdag.io/\"><strong>Digdag</strong></a> is a tool for building, running, scheduling and monitoring complex data pipelines in the cloud. You can define these pipelines in YAML, using either the rich set of out-of-the-box operators or building your own through the API. Digdag has most of the common features in a data pipeline solution such as dependency management, modular workflow to promote reuse, secured secret management and multilingual support. The feature we're most excited about is polycloud support, which lets you move and join data across AWS RedShift, S3, and Google <a href=\"/radar/platforms/bigquery\">BigQuery</a>. As more and more cloud providers offer competing data-processing solutions, we think Digdag (and similar tools) will be useful in leveraging the best option for the task.</p>",
                "radarId": 92,
                "id": "en_2017-11_1176",
                "blip_selector": "digdag"
            },
            {
                "blip_id": 1207,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Polycloud",
                "display_name": "Polycloud",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "130",
                "tag": null,
                "description": "<p>The major cloud providers (Amazon, Microsoft and Google) are locked in an aggressive race to maintain parity on core capabilities while their products are differentiated only marginally. This is causing a few organizations to adopt a <strong>Polycloud</strong> strategy — rather than going ‘all-in’ with one provider, they are passing different types of workloads to different providers in a best-of-breed approach. This may involve, for example, putting standard services on AWS, but using Google for machine learning, Azure for .NET applications that use SQLServer, or potentially using the Ethereum Consortium Blockchain solution. This is different than a cloud-agnostic strategy of aiming for portability across providers, which is costly and forces lowest-common-denominator thinking. Polycloud instead focuses on using the best that each cloud offers.</p>",
                "radarId": 17,
                "id": "en_2017-11_1207",
                "blip_selector": "polycloud"
            },
            {
                "blip_id": 1120,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "175",
                "name": "Serverless Framework",
                "display_name": "Serverless Framework",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "10",
                "tag": null,
                "description": "<p>The popular <strong><a href=\"https://serverless.com/\">Serverless Framework</a></strong> provides tooling for scaffolding and deployment of serverless applications, primarily using <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> and other AWS offerings. Serverless Framework provides template support for JavaScript, Python, Java and C#, and has an active community that contributes plugins that extend the framework. The framework also supports the Apache incubator project OpenWhisk as an alternative to AWS Lambda.</p>",
                "radarId": 61,
                "id": "en_2017-11_1120",
                "blip_selector": "serverless-framework"
            },
            {
                "blip_id": 1182,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "ARKit/ARCore",
                "display_name": "ARKit/ARCore",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2017-11",
                "theta": "278",
                "tag": null,
                "description": "<p>We've seen a flurry of activity in mobile augmented reality much of it fueled by <strong>ARKit and ARCore</strong> , the native AR libraries used by <a href=\"http://developer.apple.com/arkit/\">Apple</a> and <a href=\"http://developers.google.com/ar/\">Google</a>, respectively. These libraries are bringing mobile AR technologies to the mainstream. However, the challenge will be for companies to find use cases that go beyond gimmicky and provide genuine solutions that actually enhance the user experience.</p>",
                "radarId": 87,
                "id": "en_2017-11_1182",
                "blip_selector": "arkit-arcore"
            }
        ]
    },
    {
        "date": "2018-05",
        "blips": [
            {
                "blip_id": 1047,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Enzyme",
                "display_name": "Enzyme",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "315",
                "tag": null,
                "description": "<p><a href=\"http://airbnb.io/enzyme/\"><strong>Enzyme</strong></a> has become the defacto standard for unit testing <a href=\"/radar/languages-and-frameworks/react-js\">React</a> UI components. Unlike many other snapshot-based testing utilities, Enzyme enables you to test without doing on-device rendering, which results in faster and more granular testing. This is a contributing factor in our ability to massively reduce the amount of functional testing we find we have to do in React applications. In many of our projects it’s used within a unit testing framework such as <a href=\"/radar/languages-and-frameworks/jest\">Jest</a>.</p>",
                "radarId": 81,
                "id": "en_2018-05_1047",
                "blip_selector": "enzyme"
            },
            {
                "blip_id": 1141,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "The three Rs of security",
                "display_name": "The three Rs of security",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "97",
                "tag": null,
                "description": "<p>Traditional approaches to enterprise security often emphasize locking things down and slowing the pace of change. However, we know that the more time an attacker has to compromise a system, the greater the potential damage. <a href=\"http://builttoadapt.io/the-three-r-s-of-enterprise-security-rotate-repave-and-repair-f64f6d6ba29d\">The three Rs of enterprise security</a> — rotate, repair and repave — take advantage of infrastructure automation and continuous delivery to eliminate opportunities for attack. Rotating credentials, applying patches as soon as they're available and rebuilding systems from a known, secure state — all within a matter of minutes or hours — makes it harder for attackers to succeed. <strong>The three Rs of security</strong> technique is made feasible with the advent of modern cloud-native architectures. When applications are deployed as containers, and built and tested via a completely automated pipeline, a security patch is just another small release that can be sent through the pipeline with one click. Of course, in keeping with best distributed systems practices, developers need to design their applications to be resilient to unexpected server outages. This is similar to the impact of implementing <a href=\"/radar/tools/chaos-monkey\">Chaos Monkey</a> within your environment.</p>",
                "radarId": 22,
                "id": "en_2018-05_1141",
                "blip_selector": "the-three-rs-of-security"
            },
            {
                "blip_id": 1257,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Interledger",
                "display_name": "Interledger",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "222",
                "tag": null,
                "description": "<p>Most people may know the \"Internet of money\" through <a href=\"http://bitcoin.org/en/\">Bitcoin</a>. In fact, this idea can be traced to the early stages of the Web. HTTP even reserved a <a href=\"http://httpstatusdogs.com/402-payment-required\">status code</a> for digital payment. The challenging part of this idea is to transfer value between different ledgers in different entities. <a href=\"http://en.wikipedia.org/wiki/Blockchain\">Blockchain</a> technology promotes this idea through building a distributed shared ledger. The current challenge is how to achieve interoperability between different blockchain ledgers and interoperability with traditional centralized ledgers. <a href=\"http://interledger.org/\"><strong>Interledger</strong></a> is a protocol to connect different ledgers. This protocol uses connectors and a cryptographic mechanism such as <a href=\"http://en.bitcoin.it/wiki/Hashed_Timelock_Contracts\">HTLC</a> to route secure payments across ledgers. It’s not hard to join the payment network through its suites. Interledger was first initiated by Ripple and is now steadily developed by a W3C community group.</p>",
                "radarId": 43,
                "id": "en_2018-05_1257",
                "blip_selector": "interledger"
            },
            {
                "blip_id": 1225,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Conduit",
                "display_name": "Conduit",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "66",
                "tag": null,
                "description": "<p><a href=\"http://github.com/runconduit/conduit\"><strong>Conduit</strong></a> is a lightweight <a href=\"/radar/techniques/service-mesh\">service mesh</a> for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Conduit embraces the out-of-process architecture with data plane proxy written in Rust and a control plane in <a href=\"/radar/languages-and-frameworks/go-language\">Go</a>. The data plane proxy runs as a sidecar for all TCP traffic in the Kubernetes cluster and the control plane runs in a separate namespace in Kubernetes exposing REST APIs to control the behavior of the data plane proxy. By proxying all requests, Conduit provides a wealth of metrics for monitoring and observability of interactions in the service mesh for HTTP, HTTP/2 and gRPC traffic. Even though Conduit is relatively new to this space, we recommend it because it’s simple to install and operate.</p>",
                "radarId": 69,
                "id": "en_2018-05_1225",
                "blip_selector": "conduit"
            },
            {
                "blip_id": 1200,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Windows Containers",
                "display_name": "Windows Containers",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "264",
                "tag": null,
                "description": "<p>Microsoft is catching up in the container space with <a href=\"http://docs.microsoft.com/en-us/virtualization/windowscontainers/about/\"><strong>Windows Containers</strong></a> enabling running Windows applications as containers on Windows-based environments. At the time of writing, Microsoft provides two Windows OS images as Docker containers — <a href=\"http://hub.docker.com/r/microsoft/windowsservercore/\">Windows Server 2016 Server Core</a> and <a href=\"http://hub.docker.com/r/microsoft/nanoserver/\">Windows Server 2016 Nano Server</a> — that can run as a <a href=\"http://docs.microsoft.com/en-us/virtualization/windowscontainers/about/#windows-container-types\">Windows Server Container</a> with Docker. Our teams have started using Windows containers in scenarios where <a href=\"/radar/techniques/docker-for-builds\">build agents</a> and similar containers have been working successfully. Microsoft is aware that there’s room for improvements such as decreasing the large image sizes and enriching ecosystem support and documentation.</p>",
                "radarId": 51,
                "id": "en_2018-05_1200",
                "blip_selector": "windows-containers"
            },
            {
                "blip_id": 1238,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "OpenZeppelin",
                "display_name": "OpenZeppelin",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "345",
                "tag": null,
                "description": "<p>Security is the cornerstone of the blockchain economy. In the last issue of the Radar, we highlighted the importance of testing and auditing smart contracts dependencies. <a href=\"https://openzeppelin.org/\"><strong>OpenZeppelin</strong></a> is a framework to help build secure smart contracts in <a href=\"/radar/languages-and-frameworks/solidity\">Solidity</a>. The team behind OpenZeppelin summed up a series of <a href=\"https://blog.zeppelin.solutions/onward-with-ethereum-smart-contract-security-97a827e47702\">pitfalls and best practices</a> around smart contracts' security and embedded these experiences into the source code. The framework is well reviewed and validated by the open source community. We recommend the use of OpenZeppelin instead of writing your own implementation of the <a href=\"https://github.com/ethereum/EIPs/issues/20\">ERC20</a>/<a href=\"https://github.com/ethereum/EIPs/issues/721\">ERC721</a> token. OpenZeppelin is also integrated with <a href=\"/radar/languages-and-frameworks/truffle\">Truffle</a>.</p>",
                "radarId": 87,
                "id": "en_2018-05_1238",
                "blip_selector": "openzeppelin"
            },
            {
                "blip_id": 1235,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "nsp",
                "display_name": "nsp",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "36",
                "tag": null,
                "description": "<p><a href=\"http://www.npmjs.com/package/nsp\"><strong>nsp</strong></a> is a command line tool to identify known vulnerabilities in Node.js applications. By running the check command on the root of a Node.js project, nsp generates the vulnerabilities report by checking against the <a href=\"http://nodesecurity.io/advisories/\">published advisories</a>. nsp provides a way to customize the check command to hide all vulnerabilities below the given <a href=\"http://nvd.nist.gov/vuln-metrics/cvss\">CVSS</a> score or exit with an error code if at least one finding has a CVSS score above the given value. Once the advisories are saved through the gather command, nsp can also be used in offline mode.</p>",
                "radarId": 74,
                "id": "en_2018-05_1235",
                "blip_selector": "nsp"
            },
            {
                "blip_id": 1086,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "190",
                "name": "Keycloak",
                "display_name": "Keycloak",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "243",
                "tag": null,
                "description": "<p>In a <a href=\"/radar/techniques/microservices\">microservice</a>, or any other distributed architecture, one of the most common needs is to secure the services or APIs through authentication and authorization features. This is where <a href=\"http://www.keycloak.org/\"><strong>Keycloak</strong></a> comes in. Keycloak is an open source identity and access management solution that makes it easy to secure applications or microservices with little to no code. It supports single sign-on, social login and standard protocols such as <a href=\"http://openid.net/connect/\">OpenID Connect</a>, <a href=\"http://oauth.net/2/\">OAuth 2.0</a> and <a href=\"http://en.wikipedia.org/wiki/Security_Assertion_Markup_Language\">SAML</a> out of the box. Our teams have been using this tool and plan to keep using it for the foreseeable future. But it requires a little work to set up. Because configuration happens both at initialization and at runtime through APIs, it's necessary to write scripts to ensure deployments are repeatable.</p>",
                "radarId": 33,
                "id": "en_2018-05_1086",
                "blip_selector": "keycloak"
            },
            {
                "blip_id": 1183,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Solidity",
                "display_name": "Solidity",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "325",
                "tag": null,
                "description": "<p>Programming for smart contracts requires a more expressive language than a <a href=\"http://en.bitcoin.it/wiki/Script\">scripting system for transactions</a>. <a href=\"http://github.com/ethereum/solidity\"><strong>Solidity</strong></a> is the most popular among the new programming languages designed for smart contracts. Solidity is a contract-oriented, statically typed language whose syntax is similar to JavaScript. It provides abstractions for writing self-enforcing business logic in smart contracts. The toolchain around Solidity is growing fast. Nowadays, Solidity is the primary choice on the <a href=\"/radar/platforms/ethereum\">Ethereum</a> platform. Given the immutable nature of deployed smart contracts, it should go without saying that rigorous testing and audit of dependencies is vital.</p>",
                "radarId": 98,
                "id": "en_2018-05_1183",
                "blip_selector": "solidity"
            },
            {
                "blip_id": 1180,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "285",
                "name": "Clara rules",
                "display_name": "Clara rules",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "285",
                "tag": null,
                "description": "<p>Our first rule of thumb in selecting a rules engine is normally: you don't need a rules engine. We've seen too many people tying themselves to a hard-to-test black-box rules engine for spurious reasons, when custom code would have been a better solution. That said, we've had success using <a href=\"http://www.clara-rules.org/\"><strong>Clara rules</strong></a> for scenarios where a rules engine does make sense. We like that it uses simple Clojure code to express and evaluate the rules, which means they are amenable to refactoring, testing and source control. Rather than chasing the illusion that business people should directly manipulate the rules, it drives collaboration between the business experts and developers.</p>",
                "radarId": 90,
                "id": "en_2018-05_1180",
                "blip_selector": "clara-rules"
            },
            {
                "blip_id": 1148,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Headless Chrome for front-end test",
                "display_name": "Headless Chrome for front-end test",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "45",
                "tag": null,
                "description": "<p>Since mid-2017, Chrome users have had the option of running the browser in headless mode. This feature is ideally suited to running front-end browser tests without the overhead of displaying actions on a screen. Previously, this was largely the province of PhantomJS but <a href=\"http://developers.google.com/web/updates/2017/06/headless-karma-mocha-chai\">Headless Chrome</a> is rapidly replacing the JavaScript-driven WebKit approach. Tests in Headless Chrome should run much faster, and behave more like a real browser, but our teams have found that it does use more memory than PhantomJS. With all these advantages, <strong>Headless Chrome for front-end test</strong> is likely to become the de facto standard.</p>",
                "radarId": 59,
                "id": "en_2018-05_1148",
                "blip_selector": "headless-chrome-for-front-end-test"
            },
            {
                "blip_id": 1192,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "255",
                "name": "Google Cloud Platform",
                "display_name": "Google Cloud Platform",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "234",
                "tag": null,
                "description": "<p>As <a href=\"http://cloud.google.com/free/ce1/\"><strong>Google Cloud Platform</strong></a> (GCP) has expanded in terms of available geographic regions and maturity of services, customers globally can now seriously consider it for their cloud strategy. In some areas, GCP has reached feature parity with its main competitor, Amazon Web Services, while in other areas it has differentiated itself — notably with accessible machine learning platforms, data engineering tools, and a workable Kubernetes as a service solution (<a href=\"/radar/platforms/gke\">GKE</a>). In practice, our teams have nothing but praise for the developer experience working with the GCP tools and APIs.</p>",
                "radarId": 32,
                "id": "en_2018-05_1192",
                "blip_selector": "google-cloud-platform"
            },
            {
                "blip_id": 1139,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Event streaming as the source of truth",
                "display_name": "Event streaming as the source of truth",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "153",
                "tag": null,
                "description": "<p>As event streaming platforms, such as <a href=\"/radar/tools/apache-kafka\">Apache Kafka</a>, rise in popularity, many consider them as an advanced form of message queuing, used solely to transmit events. Even when used in this way, event streaming has its benefits over traditional message queuing. However, we're more interested in how people use <strong>event streaming as the source of truth</strong> with platforms (Kafka in particular) as the primary store for data as immutable events. A service with an <a href=\"http://martinfowler.com/eaaDev/EventSourcing.html\">Event Sourcing</a> design, for example, can use Kafka as its event store; those events are then available for other services to consume. This technique has the potential to reduce duplicating efforts between local persistence and integration.</p>",
                "radarId": 14,
                "id": "en_2018-05_1139",
                "blip_selector": "event-streaming-as-the-source-of-truth"
            },
            {
                "blip_id": 1212,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Embedded mobile mocks",
                "display_name": "Embedded mobile mocks",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "167",
                "tag": null,
                "description": "<p>When developing mobile applications, our teams often find themselves without an external server for testing apps. Setting up an over-the-wire mock may be a good fit for this particular problem. Developing the HTTP mocks and compiling them into the mobile binary for testing — <strong>embedded mobile mocks</strong> — enables teams to test their mobile apps when disconnected and with no external dependencies. This technique may require creating an opinionated library based on both the networking library used by the mobile app and your usage of the underlying library.</p>",
                "radarId": 12,
                "id": "en_2018-05_1212",
                "blip_selector": "embedded-mobile-mocks"
            },
            {
                "blip_id": 1147,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "CircleCI",
                "display_name": "CircleCI",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "65",
                "tag": null,
                "description": "<p><a href=\"http://circleci.com/\"><strong>CircleCI</strong></a> is a continuous integration engine offered as SaaS and on premise. CircleCI has been the go-to SaaS CI tool for many of our development teams, who needed a low-friction and easy-to-setup build and deployment pipeline. CircleCI version 2.0 supports workflows of build jobs, with fan-in and fan-out flows and manual gates, as well as mobile development. It allows developers to run the pipelines locally and easily integrates with Slack and other notification and alerting systems. We recommend you take a closer look at the <a href=\"http://circleci.com/security/\">security practices of CircleCI</a>, just as you would with any other SaaS product that hosts your company’s assets.</p>",
                "radarId": 56,
                "id": "en_2018-05_1147",
                "blip_selector": "circleci"
            },
            {
                "blip_id": 1203,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "Azure Service Fabric",
                "display_name": "Azure Service Fabric",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "190",
                "tag": null,
                "description": "<p><strong>Azure Service Fabric</strong> is a distributed systems platform built for microservices and containers. It can act as a PaaS with its reliable services, or like a container orchestrator with its ability to manage containers. What distinguishes Service Fabric though are programming models such as <a href=\"https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-reliable-actors-introduction\">Reliable Actors</a> built on top of reliable services. When it comes to IoT use cases, for example, Reliable Actors offers some compelling advantages — in addition to the reliability and platform benefits of being on Service Fabric, you also get its state management and replication capabilities. In keeping with continued focus on open source software (OSS), Microsoft will be transitioning Service Fabric to an <a href=\"https://blogs.msdn.microsoft.com/azureservicefabric/2018/03/14/service-fabric-is-going-open-source/\">open development process on Github</a>. All this makes Azure Service Fabric worth trialling — particularly for organizations who are invested in the .NET framework.</p>",
                "radarId": 37,
                "id": "en_2018-05_1203",
                "blip_selector": "azure-service-fabric"
            },
            {
                "blip_id": 1197,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "333",
                "name": "LoRaWAN",
                "display_name": "LoRaWAN",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "232",
                "tag": null,
                "description": "<p><strong>LoRaWAN</strong> is a low-power wide-area network, designed for low-power consumption and communication over long distances using low bitrates. It provides for communication between devices and gateways, which can then forward the data to, for example, applications or servers. A typical usage is for a distributed set of sensors, or for Internet of Things (IoT) devices, for which long battery life and long-range communication is a must. LoRaWAN addresses two of the key problems with attempting to use normal Wi-Fi for such applications: range and power consumption. There are several implementations, a notable one being <a href=\"http://www.thethingsnetwork.org/\">The Things Network</a>, a free, open source implementation.</p>",
                "radarId": 45,
                "id": "en_2018-05_1197",
                "blip_selector": "lorawan"
            },
            {
                "blip_id": 1261,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Godot",
                "display_name": "Godot",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "217",
                "tag": null,
                "description": "<p>As AR and VR continue to gain traction, we continue to explore tools with which we can create immersive virtual worlds. Our positive experience with <a href=\"/radar/platforms/unity-beyond-gaming\">Unity</a>, one of the two major gaming engines, led us to feature it in previous Radars. We still like Unity but are also excited about <a href=\"http://godotengine.org/\"><strong>Godot</strong></a>, a relatively new entrant to the field. Godot is open source software and although not as fully featured as the big commercial engines, it comes with a more modern software design and less clutter. Offering C# and Python further lowers the barrier to entry for developers outside the gaming industry. Godot version 3, released earlier this year, <a href=\"http://godotengine.org/article/update-on-recent-vr-developments\">adds support for VR</a> and support for AR is on the horizon.</p>",
                "radarId": 42,
                "id": "en_2018-05_1261",
                "blip_selector": "godot"
            },
            {
                "blip_id": 1185,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Android Architecture Components",
                "display_name": "Android Architecture Components",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "275",
                "tag": null,
                "description": "<p>Historically, Google's Android documentation examples lacked architecture and structure. This changes with the release of <strong>Android Architecture Components</strong> , a set of opinionated libraries that help developers create Android applications with better architecture. They address longstanding pain points of Android development: handling lifecycles; pagination; SQLite databases; and data persistence over configuration changes. The libraries don't need to be used together — you can pick the ones you need most and integrate them into your existing project.</p>",
                "radarId": 88,
                "id": "en_2018-05_1185",
                "blip_selector": "android-architecture-components"
            },
            {
                "blip_id": 1243,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Reactor",
                "display_name": "Reactor",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "315",
                "tag": null,
                "description": "<p><a href=\"http://projectreactor.io\"><strong>Reactor</strong></a> is a library for building non-blocking applications on the JVM — version 8 and above — based on the <a href=\"http://www.reactive-streams.org/\">Reactive Streams</a> specification. Reactive programming emphasizes moving from imperative logic to asynchronous, non-blocking and functional style code, especially when dealing with external resources. Reactor implements the reactive stream specification and provides two publisher APIs — Flux (0 to N elements) and Mono (0 or 1 element) — to effectively model push-based stream processing. Reactor project is well suited for microservices architecture and offers back pressure–ready network engines for HTTP, WebSockets, TCP and UDP traffic.</p>",
                "radarId": 96,
                "id": "en_2018-05_1243",
                "blip_selector": "reactor"
            },
            {
                "blip_id": 1131,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Pipelines for infrastructure as code",
                "display_name": "Pipelines for infrastructure as code",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "108",
                "tag": null,
                "description": "<p>The use of continuous delivery pipelines to orchestrate the release process for software has become a mainstream concept. However, automatically testing changes to infrastructure code isn’t as widely understood. Continuous integration (CI) and continuous delivery (CD) tools can be used to test server configuration (e.g., Chef cookbooks, Puppet modules, Ansible playbooks), server image building (e.g., Packer), environment provisioning (e.g., Terraform, CloudFormation) and integration of environments. The use of <strong>pipelines for infrastructure as code</strong> enables errors to be found before changes are applied to operational environments — including environments used for development and testing. They also offer a way to ensure that infrastructure tooling is run consistently, from CI/CD agents, as opposed to being run from individual workstations. Some challenges remain, however, such as the longer feedback loops associated with standing up containers and virtual machines. Still, we've found this to be a valuable technique.</p>",
                "radarId": 9,
                "id": "en_2018-05_1131",
                "blip_selector": "pipelines-for-infrastructure-as-code"
            },
            {
                "blip_id": 1149,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Cypress",
                "display_name": "Cypress",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "60",
                "tag": null,
                "description": "<p>Fixing end-to-end test failures in CI can be a painful experience, especially in headless mode. <a href=\"http://www.cypress.io/\"><strong>Cypress</strong></a> is a useful tool that helps developers build end-to-end tests easily and records all test steps as a video in an MP4 file. Instead of reproducing the issue in headless mode, developers can watch the testing video in order to fix it. Cypress is a powerful platform, not only a testing framework. Currently, we've integrated its CLI with headless CI in our projects.</p>",
                "radarId": 70,
                "id": "en_2018-05_1149",
                "blip_selector": "cypress"
            },
            {
                "blip_id": 1231,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Infrastructure configuration scanner",
                "display_name": "Infrastructure configuration scanner",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "139",
                "tag": null,
                "description": "<p>For some time now we've recommended increased delivery team ownership of their entire stack, including infrastructure. This means increased responsibility in the delivery team itself for configuring infrastructure in a safe, secure, and compliant way. When adopting cloud strategies, most organizations default to a tightly locked-down and centrally managed configuration to reduce risk, but this also creates substantial productivity bottlenecks. An alternative approach is to allow teams to manage their own configuration, and use an <strong>Infrastructure configuration scanner</strong> to ensure the configuration is set in a safe and secure way. <a href=\"http://github.com/iagcl/watchmen\">Watchmen</a> is an interesting tool, built to provide rule-driven assurance of AWS account configurations that are owned and operated independently by delivery teams. <a href=\"/radar/tools/scout2\">Scout2</a> is another example of configuration scanning to support secure compliance.</p>",
                "radarId": 16,
                "id": "en_2018-05_1231",
                "blip_selector": "infrastructure-configuration-scanner"
            },
            {
                "blip_id": 1159,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Kong API Gateway",
                "display_name": "Kong API Gateway",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "252",
                "tag": null,
                "description": "<p><a href=\"http://getkong.org/\">Kong</a> is an <a href=\"http://github.com/Kong/kong\">open source API gateway</a> which also comes as an <a href=\"http://konghq.com/kong-enterprise-edition/\">enterprise product</a> integrating with proprietary API analytics and a developer portal. Kong can be deployed, in a variety of configurations, as an edge API gateway, as an internal API proxy, or even as a sidecar in a <a href=\"/radar/techniques/service-mesh\">service mesh</a> configuration. <a href=\"http://openresty.org/en/\">OpenResty</a>, through its Nginx modules, provides a strong and performant foundation, with Lua plugins for extensions. Kong can either use PostgreSQL for single-region deployments or Cassandra for multiregion configurations. Our developers have enjoyed Kong's high performance, its API-first approach (which enables automation of its configuration) and its ease of deployment as a container. <strong>Kong API Gateway</strong> , unlike <a href=\"/radar/platforms/overambitious-api-gateways\">overambitious API gateways</a>, has a smaller set of features but it implements the essential set of API gateway capabilities such as traffic control, security, logging, monitoring and authentication.</p>",
                "radarId": 34,
                "id": "en_2018-05_1159",
                "blip_selector": "kong-api-gateway"
            },
            {
                "blip_id": 866,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": ".NET Core",
                "display_name": ".NET Core",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "210",
                "tag": null,
                "description": "<p>Our teams have confirmed that <a href=\"http://www.microsoft.com/net/core\"><strong>.NET Core</strong></a> has reached a level of maturity that makes it the default for .NET server applications. The open source .NET Core framework enables the development and deployment of .NET applications on Windows, macOS and Linux with first-class cross-platform tooling. Microsoft provides blessed Docker images which make it easy to deploy .NET Core applications in a containerized environment. Positive directions in the community and feedback from our projects indicate that .NET Core is the future for .NET development.</p>",
                "radarId": 25,
                "id": "en_2018-05_866",
                "blip_selector": "net-core"
            },
            {
                "blip_id": 1132,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "165",
                "name": "Architectural fitness function",
                "display_name": "Architectural fitness function",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "162",
                "tag": null,
                "description": "<p>Borrowed from evolutionary computing, a fitness function is used to summarize how close a given design solution is to achieving the set aims. When defining an evolutionary algorithm, the designer seeks a ‘better’ algorithm; the fitness function defines what ‘better’ means in this context. An <strong>architectural fitness function</strong> , as defined in <a href=\"http://www.thoughtworks.com/books/building-evolutionary-architectures\">Building Evolutionary Architectures</a>, provides an objective integrity assessment of some architectural characteristics, which may encompass existing verification criteria, such as unit testing, metrics, monitors, and so on. We believe architects can communicate, validate and preserve architectural characteristics in an automated, continual manner, which is the key to building evolutionary architectures.</p>",
                "radarId": 3,
                "id": "en_2018-05_1132",
                "blip_selector": "architectural-fitness-function"
            },
            {
                "blip_id": 931,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "382",
                "name": "Overambitious API gateways",
                "display_name": "Overambitious API gateways",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "225",
                "tag": null,
                "description": "<p>We remain concerned about business logic and process orchestration implemented in middleware, especially where it requires expert skills and tooling while creating single points of scaling and control. Vendors in the highly competitive API gateway market are continuing this trend by adding features through which they attempt to differentiate their products. This results in <strong>overambitious API gateway</strong> products whose functionality — on top of what is essentially a reverse proxy — encourages designs that continue to be difficult to test and deploy. API gateways do provide utility in dealing with some specific concerns — such as authentication and rate limiting — but any domain smarts should live in applications or services.</p>",
                "radarId": 52,
                "id": "en_2018-05_931",
                "blip_selector": "overambitious-api-gateways"
            },
            {
                "blip_id": 1256,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Mongoose OS",
                "display_name": "Mongoose OS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "238",
                "tag": null,
                "description": "<p>With an accelerated growth of connected embedded devices and wider accessibility of hardware, <a href=\"http://mongoose-os.com/\"><strong>Mongoose OS</strong></a> fills a noticeable gap for embedded software developers: the gap between Arduino firmware suitable for prototyping and bare-metal microcontrollers' native SDKs. Mongoose OS is a microcontroller operating system that comes with a set of libraries and a development framework to support typical Internet of Things (IoT) applications with connectivity to generic <a href=\"http://mqtt.org/\">MQTT</a> servers and popular IoT cloud platforms such as <a href=\"http://cloud.google.com/iot-core\">Google Cloud IoT Core</a> and <a href=\"http://aws.amazon.com/iot/\">AWS IoT</a> by default. In fact, Google recommends a <a href=\"http://cloud.google.com/solutions/iot/kit/\">Mongoose starter kit</a> for its Cloud IoT Core. We’ve had a seamless experience using Mongoose OS in our embedded projects building connected workspaces. We especially liked its built-in security at the individual device level and OTA firmware updates, among other <a href=\"http://mongoose-os.com/features.html\">features</a>. At the time of writing, only a limited number of microcontrollers and boards are supported with more popular ARM-based microcontrollers still under development.</p>",
                "radarId": 46,
                "id": "en_2018-05_1256",
                "blip_selector": "mongoose-os"
            },
            {
                "blip_id": 1138,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Service mesh",
                "display_name": "Service mesh",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "111",
                "tag": null,
                "description": "<p>As large organizations transition to more autonomous teams owning and operating their own microservices, how can they ensure the necessary consistency and compatibility between those services without relying on a centralized hosting infrastructure? To work together efficiently, even autonomous microservices need to align with some organizational standards. A <strong>service mesh</strong> offers consistent discovery, security, tracing, monitoring and failure handling without the need for a shared asset such as an API gateway or ESB. A typical implementation involves lightweight reverse-proxy processes deployed alongside each service process, perhaps in a separate container. These proxies communicate with service registries, identity providers, log aggregators, and so on. Service interoperability and observability are gained through a shared implementation of this proxy but not a shared runtime instance. We've advocated for a decentralized approach to microservice management for some time and are happy to see this consistent pattern emerge. Open source projects such as <a href=\"http://linkerd.io/\">linkerd</a> and <a href=\"http://istio.io/\">Istio</a> will continue to mature and make service meshes even easier to implement.</p>",
                "radarId": 20,
                "id": "en_2018-05_1138",
                "blip_selector": "service-mesh"
            },
            {
                "blip_id": 1217,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Generic cloud usage",
                "display_name": "Generic cloud usage",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "150",
                "tag": null,
                "description": "<p>The major cloud providers continue to add new features to their clouds at a rapid pace, and under the banner of <a href=\"/radar/techniques/polycloud\">Polycloud</a> we've suggested using multiple clouds in parallel, to mix and match services based on the strengths of each provider’s offerings. Increasingly, we're seeing organizations prepare to use multiple clouds — not to benefit from individual provider’s strengths, though, but to avoid vendor \"lock-in\" at all costs. This, of course, leads to <strong>generic cloud usage</strong> , only using features that are present across all providers, which reminds us of the lowest common denominator scenario we saw 10 years ago when companies avoided many advanced features in relational databases in an effort to remain vendor neutral. The problem of lock-in is real. However, instead of treating it with a sledgehammer approach, we recommend looking at this problem from the perspective of exit costs and relate those to the benefits of using cloud-specific features.</p>",
                "radarId": 23,
                "id": "en_2018-05_1217",
                "blip_selector": "generic-cloud-usage"
            },
            {
                "blip_id": 1229,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "cfn_nag",
                "display_name": "cfn_nag",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "72",
                "tag": null,
                "description": "<p>The cloud and continuous delivery had a dramatic effect on infrastructure security. When following <a href=\"/radar/tools/infrastructure-as-code\">infrastructure as code</a>, the entire infrastructure — which includes networks, firewalls and accounts — is defined in scripts and configuration files, and with <a href=\"/radar/tools/immutable-servers\">Phoenix Servers</a> and <a href=\"/radar/techniques/phoenix-environments\">Environments</a>, the infrastructure is recreated in each deployment, often many times a day. In such a scenario, testing the infrastructure after it's created is neither sufficient nor feasible. A tool that helps address this problem is <strong><a href=\"http://github.com/stelligent/cfn_nag\">cfn_nag</a></strong>. It scans the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation</a> templates used with <a href=\"/radar/platforms/aws\">AWS</a> for patterns that may indicate insecure infrastructure, and it does so before the infrastructure is created. Running a tool such as cfn_nag in a build pipeline is fast and it can detect a number of problems before they even reach a cloud environment.</p>",
                "radarId": 68,
                "id": "en_2018-05_1229",
                "blip_selector": "cfn-nag"
            },
            {
                "blip_id": 1241,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "RIBs",
                "display_name": "RIBs",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "320",
                "tag": null,
                "description": "<p><a href=\"http://github.com/uber/RIBs\"><strong>RIBs</strong></a> — which is short for router, interactor and builder — is a cross-platform architecture mobile framework from Uber. The key idea of RIBs is to decouple business logic from the view tree, and thus ensure the app is driven by business logic. By applying consistent architecture patterns across native Android and iOS, RIBs provides clear statement management and good testability. We advise putting business logic in the back-end service rather than leak it into the view, so if you do have a complicated mobile application, RIBs can help manage this complexity.</p>",
                "radarId": 97,
                "id": "en_2018-05_1241",
                "blip_selector": "ribs"
            },
            {
                "blip_id": 1142,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "380",
                "name": "Recreating ESB antipatterns with Kafka",
                "display_name": "Recreating ESB antipatterns with Kafka",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "120",
                "tag": null,
                "description": "<p>Kafka is becoming very popular as a messaging solution, and along with it, <a href=\"/radar/platforms/kafka-streams\">Kafka Streams</a> is at the forefront of the wave of interest in streaming architectures. Unfortunately, as they start to embed Kafka at the heart of their data and application platforms, we're seeing some organizations <strong>recreating ESB antipatterns with Kafka</strong> by centralizing the Kafka ecosystem components — such as connectors and stream processors — instead of allowing these components to live with product or service teams. This reminds us of seriously problematic ESB antipatterns, where more and more logic, orchestration and transformation were thrust into a centrally managed ESB, creating a significant dependency on a centralized team. We're calling this out to dissuade further implementations of this flawed pattern.</p>",
                "radarId": 24,
                "id": "en_2018-05_1142",
                "blip_selector": "recreating-esb-antipatterns-with-kafka"
            },
            {
                "blip_id": 473,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "Azure",
                "display_name": "Azure",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "189",
                "tag": null,
                "description": "<p>Microsoft has steadily improved <a href=\"http://azure.microsoft.com\"><strong>Azure</strong></a> and today not much separates the core cloud experience provided by the major cloud providers – Amazon, Google and Microsoft. The cloud providers seem to agree and seek to differentiate themselves in other areas such as features, services and cost structure. Microsoft is the provider who shows real interest in the legal requirements of European companies. They’ve a nuanced and plausible strategy, including unique offerings such as <a href=\"http://azure.microsoft.com/en-us/global-infrastructure/germany/\">Azure Germany</a> and <a href=\"/radar/platforms/azure-stack\">Azure Stack</a>, which gives some certainty to European companies in anticipation of the <a href=\"http://www.thoughtworks.com/insights/blog/gdpr-it-s-time-rethink-your-approach-privacy\">GDPR</a> and possible legislative changes in the United States.</p>",
                "radarId": 27,
                "id": "en_2018-05_473",
                "blip_selector": "azure"
            },
            {
                "blip_id": 1179,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Atlas and BeeHive",
                "display_name": "Atlas and BeeHive",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "280",
                "tag": null,
                "description": "<p>A multi-app strategy is really controversial, particularly at a time when fewer and fewer users are downloading new apps. Instead of introducing a new app and struggling with the download numbers, multiteams have to deliver functionality via a single app that is already widely installed, which creates an architectural challenge. <strong><a href=\"http://github.com/alibaba/atlas\">Atlas</a> and <a href=\"http://github.com/alibaba/BeeHive\">BeeHive</a></strong> are modularization solutions for Android and iOS apps, respectively. Atlas and BeeHive enable multiteams working on physically isolated modules to reassemble or dynamically load these modules from a facade app. Both are Alibaba open source projects, since Alibaba encountered the same problem of dwindling downloads and single-app architectural challenges.</p>",
                "radarId": 89,
                "id": "en_2018-05_1179",
                "blip_selector": "atlas-and-beehive"
            },
            {
                "blip_id": 1245,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "SwiftNIO",
                "display_name": "SwiftNIO",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "330",
                "tag": null,
                "description": "<p>We’re in favor of asynchronous and <a href=\"/radar/languages-and-frameworks/reactivex\">reactive styles of programming</a> especially for network I/O-bound distributed systems. Reactive libraries often sit on top of a lower level nonblocking communication framework such as <a href=\"http://netty.io/\">Netty</a>. Recently <a href=\"http://github.com/apple/swift-nio\"><strong>SwiftNIO</strong></a>, an open source nonblocking networking framework from Apple, has grabbed our attention. SwiftNIO is similar to Netty but written in Swift. It’s currently supported on MacOS and Ubuntu and implements HTTP as a higher-level protocol. We’re excited to see the usage of this framework and integration of it into higher-level application frameworks and other protocols.</p>",
                "radarId": 99,
                "id": "en_2018-05_1245",
                "blip_selector": "swiftnio"
            },
            {
                "blip_id": 1168,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "335",
                "name": "Gobot",
                "display_name": "Gobot",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "295",
                "tag": null,
                "description": "<p>The ability to compile the <a href=\"/radar/languages-and-frameworks/go-language\">Go programming language</a> to bare metal targets has raised interest among developers in using the language for embedded systems. <a href=\"http://gobot.io/\"><strong>Gobot</strong></a> is a framework for robotics, physical computing, and the Internet of Things, written in the Go programming language and supporting a variety of platforms. We've used the framework for experimental robotic projects where real-time response hasn't been a requirement, and we’ve created open source <a href=\"http://github.com/HendrikLouw/robocar\">software drivers</a> with Gobot. Gobot HTTP APIs enable simple hardware integration with mobile devices to create richer applications.</p>",
                "radarId": 92,
                "id": "en_2018-05_1168",
                "blip_selector": "gobot"
            },
            {
                "blip_id": 1209,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Hosted identity management as a service",
                "display_name": "Hosted identity management as a service",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "126",
                "tag": null,
                "description": "<p>Identity management is a critical platform component. External users on mobile apps need to be authenticated, developers need to be given access to delivery infrastructure components, and microservices may need to identify themselves to other microservices. You should ask yourself whether identity management should be “self-hosted”. In our experience, a <strong>hosted identity management as a service</strong> (SaaS) solution is preferable. We believe that top-tier hosted providers such as <a href=\"/radar/platforms/auth0\">Auth0</a> and <a href=\"http://www.okta.com/\">Okta</a> can provide better uptime and security SLAs. That said, sometimes self-hosting the solution is a realistic decision, especially for enterprises that have the operational discipline and resources to do so safely. Large enterprise identity solutions typically offer a much more expansive range of capabilities such as centralized entitlements, governance reporting and separation of duties management among others. However, these concerns are typically more relevant for employee identities, especially in regulated enterprises with legacy systems.</p>",
                "radarId": 7,
                "id": "en_2018-05_1209",
                "blip_selector": "hosted-identity-management-as-a-service"
            },
            {
                "blip_id": 1248,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Tensorflow Eager Execution",
                "display_name": "Tensorflow Eager Execution",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "335",
                "tag": null,
                "description": "<p>In the last issue we featured <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a>, a deep-learning modeling framework that allows an imperative programming style. Now <strong><a href=\"http://www.tensorflow.org/programmers_guide/eager\">TensorFlow Eager Execution</a></strong> provides this imperative style in <a href=\"/radar/platforms/tensorflow\">TensorFlow</a> by enabling execution of modeling statements outside of the context of a session. This improvement could provide the ease of debugging and finer-grained model control of PyTorch with the widespread popularity and performance of TensorFlow models. The feature is still quite new so we’re anxious to see how it performs and how it’ll be received by the TensorFlow community.</p>",
                "radarId": 100,
                "id": "en_2018-05_1248",
                "blip_selector": "tensorflow-eager-execution"
            },
            {
                "blip_id": 1193,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "GKE",
                "display_name": "GKE",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "225",
                "tag": null,
                "description": "<p>While the software development ecosystem is converging on <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> as the orchestration platform for containers, running Kubernetes clusters remains operationally complex. Google Kubernetes Engine ( <strong>GKE</strong> ) is a managed Kubernetes solution for deploying containerized applications that alleviates the operational overhead of running and maintaining Kubernetes clusters. Our teams have had a good experience using GKE, with the platform doing the heavy lifting of applying security patches, monitoring and auto-repairing the nodes, and managing multicluster and multiregion networking. In our experience, Google's API-first approach in exposing platform capabilities, as well as using industry standards such as <a href=\"/radar/platforms/oauth\">OAuth</a> for service authorisation, improve the developer experience. It's important to consider that GKE is under rapid development with many of its APIs in beta release which, despite the developers' best efforts to abstract consumers from underlying changes, can impact you. We're expecting continuous improvement around maturity of <a href=\"/radar/tools/infrastructure-as-code\">infrastructure as code</a> with <a href=\"http://www.terraform.io/docs/providers/google/r/container_cluster.html\">Terraform on GKE</a> and similar tools.</p>",
                "radarId": 31,
                "id": "en_2018-05_1193",
                "blip_selector": "gke"
            },
            {
                "blip_id": 1146,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Buildkite",
                "display_name": "Buildkite",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "71",
                "tag": null,
                "description": "<p>Our teams very much like the hosted CI/CD tool <a href=\"http://buildkite.com/\"><strong>Buildkite</strong></a> for its simplicity and quick setup. With Buildkite, you provide your own machines to execute builds — on premise or in the cloud — and install a lightweight agent application to connect the build agent to the hosted service. In many cases, having this level of control over the configuration of your build agents is a plus when compared to using hosted agents.</p>",
                "radarId": 55,
                "id": "en_2018-05_1146",
                "blip_selector": "buildkite"
            },
            {
                "blip_id": 1136,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Sidecars for endpoint security",
                "display_name": "Sidecars for endpoint security",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "104",
                "tag": null,
                "description": "<p>Microservices architecture, with a large number of services exposing their assets and capabilities through APIs and an increased attack surface, demand a zero trust security architecture — ‘never trust, always verify’. However, enforcing security controls for communication between services is often neglected, due to increased service code complexity and lack of libraries and language support in a polyglot environment. To get around this complexity, some teams delegate security to an out-of-process sidecar — a process or a container that is deployed and scheduled with each service sharing the same execution context, host and identity. Sidecars implement security capabilities, such as transparent encryption of the communication and TLS (Transport Layer Security) termination, as well as authentication and authorization of the calling service or the end user. We recommend you look into using <a href=\"http://istio.io/\">Istio</a>, <a href=\"http://linkerd.io/\">linkerd</a> or <a href=\"http://github.com/envoyproxy/envoy\">Envoy</a> before implementing your own <strong>sidecars for endpoint security</strong>.</p>",
                "radarId": 21,
                "id": "en_2018-05_1136",
                "blip_selector": "sidecars-for-endpoint-security"
            },
            {
                "blip_id": 1077,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Kotlin",
                "display_name": "Kotlin",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "337",
                "tag": null,
                "description": "<p><strong>Kotlin</strong> has experienced an <a href=\"http://sogrady-media.redmonk.com/sogrady/files/2018/03/lang.rank_.118.png\">accelerated rate of adoption</a> and rapid growth of tooling support. Some of the reasons behind its popularity are its concise syntax, null safety, ease of transition from Java and interoperability with other JVM-based languages in general, and that it doubles as a great introductory language to functional programming. With JetBrains adding the ability to compile Kotlin to <a href=\"http://kotlinlang.org/docs/reference/native-overview.html\">native binaries</a> on multiple platforms, as well as <a href=\"http://kotlinlang.org/docs/reference/js-overview.html\">transpile to JavaScript</a>, we believe it has the potential of much wider use by the larger community of mobile and native application developers. Although at the time of writing, some of the tooling such as static and coverage code analysis have yet to mature, given our experience of using Kotlin in many production applications, we believe Kotlin is ready for general adoption.</p>",
                "radarId": 82,
                "id": "en_2018-05_1077",
                "blip_selector": "kotlin"
            },
            {
                "blip_id": 1154,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Jupyter",
                "display_name": "Jupyter",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "33",
                "tag": null,
                "description": "<p>Over the last couple of years, we've noticed a steady rise in the popularity of analytics notebooks. These are Mathematica-inspired applications that combine text, visualization and code in a living, computational document. Increased interest in machine learning — along with the emergence of Python as the programming language of choice for practitioners in this field — has focused particular attention on Python notebooks, of which <a href=\"http://jupyter.org/\"><strong>Jupyter</strong></a> seems to be gaining the most traction among ThoughtWorks teams. People seem to keep finding creative uses for Jupyter beyond a simple analytics tool. For example, see <a href=\"/radar/techniques/jupyter-for-automated-testing\">Jupyter for automated testing</a>.</p>",
                "radarId": 61,
                "id": "en_2018-05_1154",
                "blip_selector": "jupyter"
            },
            {
                "blip_id": 1206,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Chaos Engineering",
                "display_name": "Chaos Engineering",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "144",
                "tag": null,
                "description": "<p>In previous editions of the Radar, we've talked about using <a href=\"/radar/tools/chaos-monkey\">Chaos Monkey</a> from Netflix to test how a running system is able to cope with outages in production by randomly disabling instances and measuring the results. <strong>Chaos Engineering</strong> is the nascent term for the wider application of this technique. By running experiments on distributed systems in production, we're able to build confidence that those systems work as expected under turbulent conditions. A good place to start understanding this technique is the <a href=\"http://principlesofchaos.org/\">Principles of Chaos Engineering</a> website.</p>",
                "radarId": 5,
                "id": "en_2018-05_1206",
                "blip_selector": "chaos-engineering"
            },
            {
                "blip_id": 1035,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "190",
                "name": "Micro frontends",
                "display_name": "Micro frontends",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "117",
                "tag": null,
                "description": "<p>We've seen significant benefits from introducing <a href=\"/radar/techniques/microservices\">microservices</a> architectures, which have allowed teams to scale the delivery of independently deployed and maintained services. Unfortunately, we've also seen many teams create front-end monoliths — a single, large and sprawling browser application — on top of their back-end services. Our preferred (and proven) approach is to split the browser-based code into <strong>micro frontends</strong>. In this approach, the web application is broken down into its features, and each feature is owned, frontend to backend, by a different team. This ensures that every feature is developed, tested and deployed independently from other features. Multiple techniques exist to recombine the features — sometimes as pages, sometimes as components — into a cohesive user experience.</p>",
                "radarId": 8,
                "id": "en_2018-05_1035",
                "blip_selector": "micro-frontends"
            },
            {
                "blip_id": 1239,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "235",
                "name": "Apollo",
                "display_name": "Apollo",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "285",
                "tag": null,
                "description": "<p>Since it was first introduced in the Radar, we’ve seen a steady adoption of <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a>, particularly as a remote interface for a <a href=\"/radar/techniques/bff-backend-for-frontends\">Backend for Frontend (BFF)</a>. As they gain more experience, our teams have reached consensus on Apollo, a GraphQL client, as the preferred way to access GraphQL data from a <a href=\"/radar/languages-and-frameworks/react-js\">React</a> application. Although the <a href=\"http://www.apollographql.com/client\"><strong>Apollo</strong></a> project also provides a server framework and a GraphQL gateway, the Apollo client simplifies the problem of binding UI components to data served by any GraphQL backend. Notably, Apollo is used by Amazon AWS in their recent launch of the new <a href=\"http://aws.amazon.com/appsync/\">AWS AppSync service</a>.</p>",
                "radarId": 83,
                "id": "en_2018-05_1239",
                "blip_selector": "apollo"
            },
            {
                "blip_id": 1262,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Hyperapp",
                "display_name": "Hyperapp",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "300",
                "tag": null,
                "description": "<p>Given the number of JavaScript application frameworks we’ve featured in the Radar over the years we asked ourselves, do we really need to call out another one? We decided that <a href=\"http://hyperapp.js.org/\"><strong>Hyperapp</strong></a> is worth a look because of its minimalist approach. It has a very small footprint, less than 1KB, and yet covers all the essential functionality for writing a web application. This is only possible with an elegant design that reduces everything to the absolute minimum, which in turn makes it easier to understand and use the framework. Despite being relatively new, it has attracted a good-size community and we recommend to at least consider it when picking a framework for a new application.</p>",
                "radarId": 93,
                "id": "en_2018-05_1262",
                "blip_selector": "hyperapp"
            },
            {
                "blip_id": 1191,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "331",
                "name": "Cosmos DB",
                "display_name": "Cosmos DB",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "211",
                "tag": null,
                "description": "<p><a href=\"http://docs.microsoft.com/en-us/azure/cosmos-db/introduction\"><strong>Cosmos DB</strong></a> is Microsoft's globally distributed, multimodel database service, which became generally available earlier this year. While most modern NoSQL databases offer tunable consistency, Cosmos DB makes it a first-class citizen and offers five different consistency models. It's worth highlighting that it also supports multiple models — key value, document, column family and graph — all of which map to its internal data model, called atom-record-sequence (ARS). One interesting aspect of Cosmos DB is that it offers service level agreements (SLAs) on its latency, throughput, consistency and availability. With its wide range of applicability, it has set a high standard for other cloud vendors to match.</p>",
                "radarId": 41,
                "id": "en_2018-05_1191",
                "blip_selector": "cosmos-db"
            },
            {
                "blip_id": 1254,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Contentful",
                "display_name": "Contentful",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "198",
                "tag": null,
                "description": "<p>Headless Content Management Systems (CMSes) are becoming a common component of digital platforms. <a href=\"http://www.contentful.com/\"><strong>Contentful</strong></a> is a modern headless CMS that our teams have successfully integrated into their development workflows. We particularly like its API-first approach and implementing <a href=\"http://www.contentful.com/r/knowledgebase/cms-as-code/\">CMS as Code</a>. It supports powerful content modelling primitives as code and content model evolution scripts, which allow treating it as other data store schemas and applying <a href=\"http://martinfowler.com/articles/evodb.html\">evolutionary database design</a> practices to CMS development. Other notable features that we’ve liked include inclusion of two CDNs by default to deliver media assets and JSON documents, good support for localization, and the ability — albeit with some effort — to integrate with <a href=\"/radar/platforms/auth0\">Auth0</a>.</p>",
                "radarId": 28,
                "id": "en_2018-05_1254",
                "blip_selector": "contentful"
            },
            {
                "blip_id": 1181,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "335",
                "name": "Truffle",
                "display_name": "Truffle",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "350",
                "tag": null,
                "description": "<p><a href=\"http://truffleframework.com/\"><strong>Truffle</strong></a> is a development framework that brings a modern web development experience to the <a href=\"/radar/platforms/ethereum\">Ethereum</a> platform. It takes over the job of smart contract compiling, library linking and deployment, as well as dealing with artifacts in different blockchain networks. One of the reasons we love Truffle is that it encourages people to write tests for their smart contracts. You need to take tests really seriously as smart contract programming is often related to money. With its built-in testing framework and integration with <a href=\"http://github.com/ethereumjs/testrpc\">TestRPC</a>, Truffle makes it possible to write the contract in a TDD way. We expect to see more technologies similar to Truffle to promote continuous integration in the blockchain area.</p>",
                "radarId": 103,
                "id": "en_2018-05_1181",
                "blip_selector": "truffle"
            },
            {
                "blip_id": 1201,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Netlify",
                "display_name": "Netlify",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "243",
                "tag": null,
                "description": "<p>We like simple tools that solve one problem really well, and <a href=\"http://www.netlify.com/\"><strong>Netlify</strong></a> fits this description nicely. You can create static website content, check it into GitHub and then quickly and easily get your site live and available. There is a CLI available to control the process; content delivery networks (CDNs) are supported; it can work alongside tools such as <a href=\"http://gruntjs.com/\">Grunt</a>; and, most importantly, Netlify supports HTTPS.</p>",
                "radarId": 47,
                "id": "en_2018-05_1201",
                "blip_selector": "netlify"
            },
            {
                "blip_id": 1133,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Applying product management to internal platforms",
                "display_name": "Applying product management to internal platforms",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "171",
                "tag": null,
                "description": "<p>We've seen a steep increase in interest in the topic of digital platforms over the past 12 months. Companies looking to roll out new digital solutions quickly and efficiently are building internal platforms, which offer teams self-service access to the business APIs, tools, knowledge and support necessary to build and operate their own solutions. We find that these platforms are most effective when they're given the same respect as an external product offering. <strong>Applying product management to internal platforms</strong> means establishing empathy with internal consumers (read: developers) and collaborating with them on the design. Platform product managers establish roadmaps and ensure the platform delivers value to the business and enhances the developer experience. Some owners even create a brand identity for the internal platform and use that to market the benefits to their colleagues. Platform product managers look after the quality of the platform, gather usage metrics, and continuously improve it over time. Treating the platform as a product helps to create a thriving ecosystem and avoids the pitfall of building yet another stagnant, underutilized service-oriented architecture.</p>",
                "radarId": 2,
                "id": "en_2018-05_1133",
                "blip_selector": "applying-product-management-to-internal-platforms"
            },
            {
                "blip_id": 1250,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "WebAssembly",
                "display_name": "WebAssembly",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "355",
                "tag": null,
                "description": "<p><a href=\"http://webassembly.org/\"><strong>WebAssembly</strong></a> is a big step forward in the capabilities of the browser as a code execution environment. Supported by all major browsers and backward compatible, it's a binary compilation format designed to run in the browser at near native speeds. It opens up the range of languages you can use to write front-end functionality, with early focus on C, C++ and Rust, and it's also an LLVM compilation target. When run in the sandbox, it can interact with JavaScript and shares the same permissions and security model. When used with <a href=\"http://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/\">Firefox’s new streaming compiler</a>, it also results in faster page initialization. Although it's still early days, this W3C standard is definitely one to start exploring.</p>",
                "radarId": 104,
                "id": "en_2018-05_1250",
                "blip_selector": "webassembly"
            },
            {
                "blip_id": 1034,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "80",
                "name": "Lightweight Architecture Decision Records",
                "display_name": "Lightweight Architecture Decision Records",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "135",
                "tag": null,
                "description": "<p>Much documentation can be replaced with highly readable code and tests. In a world of <a href=\"/radar/techniques/evolutionary-architecture\">evolutionary architecture</a>, however, it's important to record certain design decisions for the benefit of future team members as well as for external oversight. <strong>Lightweight Architecture Decision Records</strong> is a <a href=\"http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions\">technique</a> for capturing important architectural decisions along with their context and consequences. We recommend <a href=\"http://github.com/npryce/adr-tools\">storing these details in source control</a>, instead of a wiki or website, as then they can provide a record that remains in sync with the code itself. For most projects, we see no reason why you wouldn't want to use this technique.</p>",
                "radarId": 1,
                "id": "en_2018-05_1034",
                "blip_selector": "lightweight-architecture-decision-records"
            },
            {
                "blip_id": 1218,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Patroni",
                "display_name": "Patroni",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "20",
                "tag": null,
                "description": "<p><a href=\"http://github.com/zalando/patroni\"><strong>Patroni</strong></a> is a template for <a href=\"http://www.postgresql.org/docs/9.5/static/high-availability.html\">PostgreSQL high availability</a>. Born out of the need to provide automatic failure for PostgreSQL, Patroni is a Python-based PostgreSQL controller that leverages a distributed configuration store (such as <a href=\"http://coreos.com/etcd/\">etcd</a>, <a href=\"http://zookeeper.apache.org/\">ZooKeeper</a>, or <a href=\"/radar/tools/consul\">Consul</a>) to manage the state of the PostgreSQL cluster. Patroni supports both streaming and synchronous replication models and provides a rich set of REST APIs for dynamic configuration of the PostgreSQL cluster. If you want to achieve high availability in a distributed PostgreSQL setup, you have to consider many edge cases, and we like the fact that Patroni provides a template to achieve most of the common use cases.</p>",
                "radarId": 63,
                "id": "en_2018-05_1218",
                "blip_selector": "patroni"
            },
            {
                "blip_id": 1187,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "230",
                "name": "CSS Modules",
                "display_name": "CSS Modules",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "315",
                "tag": null,
                "description": "<p>Most large CSS codebases require complex naming schemes to help avoid naming conflicts in the global namespace. <a href=\"http://github.com/css-modules/css-modules\"><strong>CSS Modules</strong></a> address these problems by creating a local scope for all class names in a single CSS file. This file is imported to a JavaScript module, where CSS classes are referenced as strings. Then, in the build pipeline (Webpack, Browserify, etc.), the class names are replaced with generated unique strings. This is a significant change in responsibilities. Previously, a human had to manage the global namespace, to avoid class naming conflicts; now that responsibility rests with the build tooling. A small downside we've encountered with CSS Modules: functional tests are usually out of the local scope and can therefore not reference classes by the name defined in the CSS file. We recommend using IDs or data attributes instead.</p>",
                "radarId": 85,
                "id": "en_2018-05_1187",
                "blip_selector": "css-modules"
            },
            {
                "blip_id": 1222,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Helm",
                "display_name": "Helm",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "39",
                "tag": null,
                "description": "<p><a href=\"http://helm.sh\"><strong>Helm</strong></a> is a package manager for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. The set of Kubernetes resources that together define an application is packaged as charts. These charts can describe a single resource, such as a Redis pod, or a full stack of a web application: HTTP servers, databases and caches. Helm, by default, comes with a repository of curated Kubernetes applications that are maintained in the official <a href=\"http://github.com/kubernetes/charts\">charts repository</a>. It’s also easy to set up a private chart repository for internal usage. Helm has two components: a command line utility called Helm and a cluster component called Tiller. Securing a Kubernetes cluster is a wide and nuanced topic, but we highly recommend setting up Tiller in a role-based access control (RBAC) environment. We’ve used Helm in a number of client projects and it’s dependency management, templating and hook mechanism has greatly simplified the application lifecycle management in Kubernetes.</p>",
                "radarId": 60,
                "id": "en_2018-05_1222",
                "blip_selector": "helm"
            },
            {
                "blip_id": 1210,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Log level per request",
                "display_name": "Log level per request",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "125",
                "tag": null,
                "description": "<p>One problem with observability in a highly distributed microservices architecture is the choice between logging everything — and taking up huge amounts of storage space — or randomly sampling logs and potentially missing important events. Recently, we’ve noticed a technique that offers a compromise between these two solutions. Set the <strong>log level per request</strong> via a parameter passed in through the tracing header. Using a tracing framework, possibly based on the <a href=\"/radar/platforms/opentracing\">OpenTracing</a> standard, you can pass a correlation id from service to service in a single transaction. You can even inject other data, such as the desired log level, at the initiating transaction and pass it along with the tracing information. This ensures that the additional data collected corresponds to a single user transaction as it flows through the system. This is also a useful technique for debugging, since services might be paused or otherwise modified on a transaction-by-transaction basis.</p>",
                "radarId": 18,
                "id": "en_2018-05_1210",
                "blip_selector": "log-level-per-request"
            },
            {
                "blip_id": 1189,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "WeChat",
                "display_name": "WeChat",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "261",
                "tag": null,
                "description": "<p><strong>WeChat</strong> , often seen as a WhatsApp equivalent, is becoming the de facto business platform in China. Many people may not know but WeChat is also one of the most popular online payment platforms. With the app's built-in CMS and membership management, small businesses are now conducting their commerce entirely on WeChat. Through the Service Account feature, large organizations can interface their internal system to their employees. Given that more than 70 percent of Chinese people are using WeChat, it's an important consideration for businesses that want to expand into the China market.</p>",
                "radarId": 35,
                "id": "en_2018-05_1189",
                "blip_selector": "wechat"
            },
            {
                "blip_id": 1190,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "255",
                "name": "Flood IO",
                "display_name": "Flood IO",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "216",
                "tag": null,
                "description": "<p>Load testing became easier with the maturity of tools such as <a href=\"/radar/tools/gatling\">Gatling</a> and <a href=\"/radar/tools/locust\">Locust</a>. At the same time, elastic cloud infrastructures make it possible to simulate a large number of client instances. We're delighted to see Flood and other cloud platforms go further by leveraging these technologies. <a href=\"http://flood.io/\"><strong>Flood IO</strong></a> is an SaaS load-testing service that helps to distribute and execute testing scripts across hundreds of servers in the cloud. Our teams find it simple to migrate performance testing to Flood by reusing existing Gatling scripts.</p>",
                "radarId": 30,
                "id": "en_2018-05_1190",
                "blip_selector": "flood-io"
            },
            {
                "blip_id": 1246,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Flutter",
                "display_name": "Flutter",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "290",
                "tag": null,
                "description": "<p><a href=\"http://flutter.io/\"><strong>Flutter</strong></a> is a cross-platform framework that enables you to write native mobile apps in <a href=\"/radar/languages-and-frameworks/google-dart\">Dart</a>. It benefits from Dart and can be compiled into native code and communicates with the target platform without bridge and context switching — something that can cause performance bottlenecks in frameworks such as <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> or <a href=\"/radar/languages-and-frameworks/weex\">Weex</a>. Flutter’s hot-reload feature is impressive and provides superfast visual feedback when editing code. Currently Flutter is still in beta, but we’ll continue keeping an eye on it to see how its ecosystem matures.</p>",
                "radarId": 91,
                "id": "en_2018-05_1246",
                "blip_selector": "flutter"
            },
            {
                "blip_id": 1255,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "AWS Fargate",
                "display_name": "AWS Fargate",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "185",
                "tag": null,
                "description": "<p><a href=\"http://aws.amazon.com/fargate/\"><strong>AWS Fargate</strong></a> is a recent entry into the docker-as-a-service space, currently limited to the US-East-1 region. For teams using <a href=\"/radar/platforms/aws-ecs\">AWS Elastic Container Service</a> (ECS), AWS Fargate is a good alternative without having to manage, provision and configure any underlying EC2 instances or clusters. Fargate allows defining (ECS or <a href=\"http://aws.amazon.com/eks/\">EKS – ECS for Kubernetes</a>) tasks as a Fargate type, and they will run on the AWS Fargate infrastructure. If you like the focus on business functionality that <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> gives you, Fargate is the closest you can get when applications can't be deployed as single functions.</p>",
                "radarId": 36,
                "id": "en_2018-05_1255",
                "blip_selector": "aws-fargate"
            },
            {
                "blip_id": 1220,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "WireMock",
                "display_name": "WireMock",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "13",
                "tag": null,
                "description": "<p>A key driver for architectures based on <a href=\"http://martinfowler.com/microservices/\">microservices</a> is independent evolvability of services. For example, when two services depend on each other, the testing process for one usually involves stubs and mocks for the other one. These can be written by hand, but as with mocking in unit tests, a framework helps developers focus on the actual test scenario. We have known of <a href=\"http://wiremock.org/\"><strong>WireMock</strong></a> for a while but we’ve preferred running tests with <a href=\"/radar/tools/mountebank\">mountebank</a>. Over the past year, though, WireMock has really caught up and we now recommend it as a good alternative.</p>",
                "radarId": 64,
                "id": "en_2018-05_1220",
                "blip_selector": "wiremock"
            },
            {
                "blip_id": 1224,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Dependabot",
                "display_name": "Dependabot",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "54",
                "tag": null,
                "description": "<p>Keeping dependencies up to date is a chore, but it's important to manage upgrades frequently and incrementally. We want the process to be as painless and automated as possible. Our teams have often hand-rolled scripts to automate parts of the process; now, however, we integrate commercial offerings to do that work. <a href=\"http://dependabot.com/\"><strong>Dependabot</strong></a> is a service that integrates with your GitHub repositories and automatically checks your project dependencies for new versions. When required, Dependabot will open a pull request with upgraded dependencies. Using features of your CI server, you can automatically test upgrades for compatibility and automatically merge compatible upgrades to master. There are alternatives to Dependabot, including <a href=\"http://renovateapp.com\">Renovate</a> for JavaScript projects and <a href=\"http://depfu.com/\">Depfu</a> for JavaScript and Ruby projects. Our teams, however, recommend Dependabot because of its multilanguage support and ease of use.</p>",
                "radarId": 71,
                "id": "en_2018-05_1224",
                "blip_selector": "dependabot"
            },
            {
                "blip_id": 1260,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "TICK Stack",
                "display_name": "TICK Stack",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "254",
                "tag": null,
                "description": "<p><a href=\"http://www.influxdata.com/time-series-platform/\"><strong>TICK Stack</strong></a> is a platform composed of open source components which makes collection, storage, graphing and alerting on-time series data such as metrics and events easy. The components of the TICK Stack are: Telegraf, a server agent for collecting and reporting metrics; InfluxDB, a high-performance time series database; Chronograf, a user interface for the platform; and Kapacitor, a data-processing engine that can process, stream and batch data from InfluxDB. Unlike <a href=\"/radar/tools/prometheus\">Prometheus</a>, which is based on the Pull model, the TICK Stack is based on the Push model of collecting data. The heart of the system is the InfluxDB component which is one of the best time series databases. This stack is backed by InfluxData and needs the enterprise version for features such as DB clustering, but it’s still a fairly good choice for monitoring. We’re using it in a few places in production and have had good experiences with it.</p>",
                "radarId": 49,
                "id": "en_2018-05_1260",
                "blip_selector": "tick-stack"
            },
            {
                "blip_id": 1236,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Swashbuckle for .NET Core",
                "display_name": "Swashbuckle for .NET Core",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "6",
                "tag": null,
                "description": "<p>In the current state of technology services, exposing RESTFul APIs is increasingly adopted and API documentation is very important for consumers. In this space, <a href=\"/radar/tools/swagger\">Swagger</a> has been largely used across teams and we would like to highlight <strong><a href=\"http://github.com/domaindrivendev/Swashbuckle.AspNetCore\">Swashbuckle for .NET Core</a></strong>. Swashbuckle for .NET Core is a tool that generates living API documentation in Swagger, based on the code for <a href=\"/radar/platforms/net-core\">.NET Core</a> projects. When using it, you can also explore and test operations of APIs through its UI.</p>",
                "radarId": 79,
                "id": "en_2018-05_1236",
                "blip_selector": "swashbuckle-for-net-core"
            },
            {
                "blip_id": 1228,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "ArchUnit",
                "display_name": "ArchUnit",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "78",
                "tag": null,
                "description": "<p><a href=\"http://www.archunit.org/\"><strong>ArchUnit</strong></a> is a Java testing library for checking architecture characteristics such as package and class dependencies, annotation verification and even layer consistency. The fact that it runs as unit tests, within your existing test setup, pleases us, even though it's available for Java architectures only. The ArchUnit test suite can be incorporated into a CI environment or a deployment pipeline, making it easier to implement <a href=\"/radar/techniques/architectural-fitness-function\">fitness functions</a> in an <a href=\"http://evolutionaryarchitecture.com/\">evolutionary architecture</a> way.</p>",
                "radarId": 67,
                "id": "en_2018-05_1228",
                "blip_selector": "archunit"
            },
            {
                "blip_id": 1253,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "EMQ",
                "display_name": "EMQ",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "207",
                "tag": null,
                "description": "<p><a href=\"http://emqtt.io\"><strong>EMQ</strong></a> is a scalable open source multiplatform MQTT broker. It’s written in <a href=\"http://github.com/erlang/otp\">Erlang/OTP</a> for higher performance, handling millions of concurrent connections. It supports multiple protocols including <a href=\"http://mqtt.org/\">MQTT</a>, <a href=\"http://mqtt.org/2013/12/mqtt-for-sensor-networks-mqtt-sn\">MQTT Sensor Networks</a>, <a href=\"http://coap.technology/\">CoAP</a> as well as <a href=\"http://tools.ietf.org/html/rfc6455\">WebSockets</a>, making it suitable for both IoT and mobile devices. We’ve started using EMQ in our projects and have enjoyed its ease of installation and use, its ability to route messages to different destinations including <a href=\"/radar/tools/apache-kafka\">Kafka</a> and PostgreSQL, as well as its API-driven approach for its monitoring and configuration.</p>",
                "radarId": 29,
                "id": "en_2018-05_1253",
                "blip_selector": "emq"
            },
            {
                "blip_id": 1214,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Jupyter for automated testing",
                "display_name": "Jupyter for automated testing",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "132",
                "tag": null,
                "description": "<p>We're seeing some interesting reports of using <strong>Jupyter for automated testing</strong>. The ability to mix code, comments and output in the same document reminds us of FIT, <a href=\"http://fitnesse.org/\">FitNesse</a> and <a href=\"http://concordion.org/\">Concordion</a>. This flexible approach is particularly useful if your tests are data heavy or rely on some statistical analysis such as performance testing. Python provides all the power you need, but as tests grow in complexity, a way to manage suites of notebooks would be helpful.</p>",
                "radarId": 17,
                "id": "en_2018-05_1214",
                "blip_selector": "jupyter-for-automated-testing"
            },
            {
                "blip_id": 1150,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Apex",
                "display_name": "Apex",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "84",
                "tag": null,
                "description": "<p><a href=\"http://github.com/apex/apex\"><strong>Apex</strong></a> is a tool to build, deploy and manage AWS Lambda functions with ease. With Apex, you can write functions in languages that are not yet natively supported in AWS, including Golang, Rust and others. This is made possible by a Node.js shim, which creates a child process and processes events through stdin and stdout. Apex has a lot of nice <a href=\"http://github.com/apex/apex#features\">features</a> that improve the developer experience, and we particularly like the ability to test functions locally and perform a dry run of the changes before they're applied to AWS resources.</p>",
                "radarId": 66,
                "id": "en_2018-05_1150",
                "blip_selector": "apex"
            },
            {
                "blip_id": 1152,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "kops",
                "display_name": "kops",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "26",
                "tag": null,
                "description": "<p><a href=\"http://github.com/kubernetes/kops\"><strong>kops</strong></a> is a command line tool for creating and managing high-availability production <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> clusters. kops has become our go-to tool to self-manage Kubernetes clusters on <a href=\"/radar/platforms/aws\">AWS</a>, not the least because of its rapidly growing open source community. It also supports installing, upgrading and managing Kubernetes clusters on <a href=\"/radar/platforms/google-cloud-platform\">Google Cloud</a>. Our experience with kops on Google, however, is very limited because of our preference for <a href=\"/radar/platforms/gke\">GKE</a>, the managed Kubernetes offering. We recommend using kops in reusable scripts to create <a href=\"/radar/tools/infrastructure-as-code\">infrastructure as code</a>. We're interested to see how kops continues to evolve to support managed Kubernetes clusters such as <a href=\"http://aws.amazon.com/eks/\">EKS</a>, Amazon's own managed Kubernetes service.</p>",
                "radarId": 62,
                "id": "en_2018-05_1152",
                "blip_selector": "kops"
            },
            {
                "blip_id": 1244,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "TensorFlow Lite",
                "display_name": "TensorFlow Lite",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "340",
                "tag": null,
                "description": "<p><a href=\"http://www.tensorflow.org/mobile/tflite/\"><strong>TensorFlow Lite</strong></a> is the designated successor of <a href=\"/radar/languages-and-frameworks/tensorflow-mobile\">TensorFlow Mobile</a>, which we mentioned in our previous Radar. Like Mobile it is a lightweight solution tuned and optimized for mobile devices (Android and iOS). We expect the standard use case to be the deployment of pretrained models into mobile apps but TensorFlow Lite also supports on-device learning which opens further areas of application.</p>",
                "radarId": 101,
                "id": "en_2018-05_1244",
                "blip_selector": "tensorflow-lite"
            },
            {
                "blip_id": 1223,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Scout2",
                "display_name": "Scout2",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "24",
                "tag": null,
                "description": "<p><a href=\"http://nccgroup.github.io/Scout2/\"><strong>Scout2</strong></a> is a security auditing tool for <a href=\"/radar/platforms/aws\">AWS</a> environments. Instead of manually navigating through web pages, you can rely on Scout2 to fetch all the configuration data of an AWS environment for you; it even generates an attack surface report. Scout2 ships with preconfigured rules and can be easily extended to support more services and test cases. Since Scout2 only performs AWS API calls to fetch configuration data and identify security gaps, it is not necessary to complete and submit the AWS Vulnerability / Penetration Testing Request Form.</p>",
                "radarId": 76,
                "id": "en_2018-05_1223",
                "blip_selector": "scout2"
            },
            {
                "blip_id": 1211,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "BeyondCorp",
                "display_name": "BeyondCorp",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "174",
                "tag": null,
                "description": "<p>Previously in the Radar, we’ve discussed the rise of the <a href=\"/radar/techniques/perimeterless-enterprise\">perimeterless enterprise</a>. Now, some organizations are doing away with implicitly trusted intranets altogether and treating all communication as if it was being transmitted through the public internet. A set of practices, collectively labeled <a href=\"http://cloud.google.com/beyondcorp/\"><strong>BeyondCorp</strong></a>, have been described by Google engineers in a set of publications. Collectively, these practices — including managed devices, 802.1x networking and standard access proxies protecting individual services — make this a viable approach to network security in large enterprises.</p>",
                "radarId": 11,
                "id": "en_2018-05_1211",
                "blip_selector": "beyondcorp"
            },
            {
                "blip_id": 1163,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Flow",
                "display_name": "Flow",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "48",
                "tag": null,
                "description": "<p><a href=\"http://flow.org/\"><strong>Flow</strong></a> is a static type checker for JavaScript that allows you to add type checking across the codebase incrementally. Unlike Typescript, which is a different language, Flow can be added incrementally to an existing JavaScript codebase supporting the 5th, 6th and 7th editions of ECMAScript. We suggest adding Flow to your continuous integration pipeline, starting with the code that concerns you most. Flow adds to the clarity of the code, increases the reliability of refactoring and catches type-related bugs early during the build.</p>",
                "radarId": 72,
                "id": "en_2018-05_1163",
                "blip_selector": "flow"
            },
            {
                "blip_id": 1232,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Sentry",
                "display_name": "Sentry",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "18",
                "tag": null,
                "description": "<p><a href=\"https://sentry.io/welcome/\"><strong>Sentry</strong></a> is an error-tracking tool that helps monitor and fix errors in real time. Error tracking and management tools such as Sentry distinguish themselves from traditional logging solutions such as the <a href=\"https://www.elastic.co/elk-stack\">ELK Stack</a> in their focus on discovering, investigating and fixing errors. Sentry has been around for some time and is quite popular — error-tracking tools are increasingly useful with the current focus on \"mean time to recovery\". Sentry — with its integration options with Github, Hipchat, Heroku, Slack, among other platforms — enables us to keep a close eye on our apps. It can provide error notifications following a release, enable us to track whether new commits actually fix the issue and alert us if an issue comes back due to a regression.</p>",
                "radarId": 77,
                "id": "en_2018-05_1232",
                "blip_selector": "sentry"
            },
            {
                "blip_id": 1198,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "TensorFlow Serving",
                "display_name": "TensorFlow Serving",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "248",
                "tag": null,
                "description": "<p>Machine-learning models are starting to creep into everyday business applications. When enough training data is available, these algorithms can address problems that might have previously required complex statistical models or heuristics. As we move from experimental use to production, we need a reliable way to host and deploy the models that can be accessed remotely and scale with the number of consumers. <a href=\"http://www.tensorflow.org/serving/\"><strong>TensorFlow Serving</strong></a> addresses part of that problem by exposing a remote gRPC interface to an exported model; this allows a trained model to be deployed in a variety of ways. TensorFlow Serving also accepts a stream of models to incorporate continuous training updates, and its authors maintain a Dockerfile to ease the deployment process. Presumably, the choice of gRPC is to be consistent with the TensorFlow execution model; however, we’re generally wary of protocols that require code generation and native bindings.</p>",
                "radarId": 48,
                "id": "en_2018-05_1198",
                "blip_selector": "tensorflow-serving"
            },
            {
                "blip_id": 925,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Kubernetes",
                "display_name": "Kubernetes",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "240",
                "tag": null,
                "description": "<p>Since we last mentioned <strong>Kubernetes</strong> in the Radar, it has become the default solution for most of our clients when deploying containers into a cluster of machines. The alternatives didn’t capture as much mindshare, and in some cases our clients are even changing their ‘engine’ to Kubernetes. Kubernetes has become the container orchestration platform of choice for major public cloud platforms, including Microsoft's Azure Container Service and Google Cloud (see the <a href=\"/radar/platforms/gke\">GKE</a> blip). And there are many useful products enriching the fast-growing Kubernetes ecosystem. Platforms that try to hide Kubernetes under an abstraction layer, however, have yet to prove themselves.</p>",
                "radarId": 26,
                "id": "en_2018-05_925",
                "blip_selector": "kubernetes"
            },
            {
                "blip_id": 1166,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "CSS Grid Layout",
                "display_name": "CSS Grid Layout",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "300",
                "tag": null,
                "description": "<p>CSS is the preferred choice for laying out web pages, even when it did not provide much explicit support for creating layouts. Flexbox helped with simpler, one-dimensional layouts, but developers usually reached for libraries and toolkits for more complex layouts. <a href=\"http://www.w3.org/TR/css-grid-1\"><strong>CSS Grid Layout</strong></a> is a two-dimensional grid-based layout system that provides a mechanism to divide available space for layout into columns and rows using a set of predictable sizing behaviors. Grid does not require any libraries and plays well with Flexbox and other CSS display elements. However, since IE11 is only <a href=\"http://caniuse.com/#search=css%20grid%20layout\">partially supported</a>, it ignores users who still depend on a Microsoft browser on Windows 7.</p>",
                "radarId": 84,
                "id": "en_2018-05_1166",
                "blip_selector": "css-grid-layout"
            },
            {
                "blip_id": 1145,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "240",
                "name": "gopass",
                "display_name": "gopass",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "52",
                "tag": null,
                "description": "<p><a href=\"http://www.justwatch.com/gopass/\"><strong>gopass</strong></a> is a password management solution for teams, built on GPG and <a href=\"/radar/tools/git\">Git</a>. It's a descendant of <a href=\"http://www.passwordstore.org\">pass</a> and adds features such as: support for recipient management and multiple password stores in a single tree; an interactive search functionality; time-based one-time password (TOTP) support; and storage of binary data. Migration of your pass store is fairly straightforward, because gopass is largely compatible with the format pass uses. This also means integration into provisioning workflows can be achieved with a single call to a stored secret.</p>",
                "radarId": 58,
                "id": "en_2018-05_1145",
                "blip_selector": "gopass"
            },
            {
                "blip_id": 1213,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "GraphQL for server side resource aggregation",
                "display_name": "GraphQL for server side resource aggregation",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "146",
                "tag": null,
                "description": "<p>One pattern that comes up again and again when building microservice-style architectures is how to handle the aggregation of many resources server-side. In recent years, we've seen the emergence of a number of patterns such as <a href=\"/radar/techniques/bff-backend-for-frontends\">Backend for Frontend (BFF)</a> and tools such as <a href=\"http://netflix.github.io/falcor/\">Falcor</a> to address this. Our teams have started using <strong>GraphQL for server-side resource aggregation</strong> instead. This differs from the usual mode of using <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> where clients directly query a GraphQL server. When using this technique, the services continue to expose RESTful APIs but under-the-hood aggregate services use GraphQL resolvers as the implementation for stitching resources from other services. This technique simplifies the internal implementation of aggregate services or BFFs by using GraphQL.</p>",
                "radarId": 15,
                "id": "en_2018-05_1213",
                "blip_selector": "graphql-for-server-side-resource-aggregation"
            },
            {
                "blip_id": 1207,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Polycloud",
                "display_name": "Polycloud",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "99",
                "tag": null,
                "description": "<p>Organizations are becoming more comfortable with the <strong>Polycloud</strong> strategy — rather than going \"all-in\" with one provider, they are passing different types of workloads to different providers based on their own strategy. Some of them apply the best-of-breed approach, for example: putting standard services on AWS, but using Google for machine learning and data-oriented applications and Azure for Microsoft Windows applications. For some organizations this is a cultural and business decision. Retail businesses, for example, often refuse to store their data on Amazon and they distribute load to different providers based on their data. This is different to a cloud-agnostic strategy of aiming for portability across providers, which is costly and forces lowest-common-denominator thinking. Polycloud instead focuses on using the best match that each cloud provider offers.</p>",
                "radarId": 10,
                "id": "en_2018-05_1207",
                "blip_selector": "polycloud"
            },
            {
                "blip_id": 1162,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Sonobuoy",
                "display_name": "Sonobuoy",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "12",
                "tag": null,
                "description": "<p><a href=\"https://github.com/heptio/sonobuoy\"><strong>Sonobuoy</strong></a> is a diagnostic tool for running end-to-end conformance tests on any <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> cluster in a nondestructive way. The team at <a href=\"http://heptio.com/\">Heptio</a>, which was founded by two creators of the Kubernetes projects, built this tool to ensure that the wide array of Kubernetes distributions and configurations conform to the best practices, while following the open source standardization for interoperability of clusters. We're experimenting with Sonobuoy to run as part of our <a href=\"/radar/tools/infrastructure-as-code\">infrastructure as code</a> build pipeline, as well as continuous monitoring of our Kubernetes installations, to validate the behavior and health of the whole cluster.</p>",
                "radarId": 78,
                "id": "en_2018-05_1162",
                "blip_selector": "sonobuoy"
            },
            {
                "blip_id": 1196,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "Cloud Spanner",
                "display_name": "Cloud Spanner",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "201",
                "tag": null,
                "description": "<p><a href=\"http://cloud.google.com/spanner/\"><strong>Cloud Spanner</strong></a> is a fully managed relational database service offering high availability and strong consistency without compromising latency. Google has been working on a globally distributed database called Spanner for quite some time. It has recently released the service to the outside world as Cloud Spanner. You can scale your database instance from one to thousands of nodes across the globe without worrying about data consistency. By levering <a href=\"http://cloud.google.com/spanner/docs/true-time-external-consistency\">TrueTime</a>, a highly available and distributed clock, Cloud Spanner provides strong consistency for reads and snapshots. You can use standard SQL to read data from Cloud Spanner, but for write operations you have to use their RPC API. Although not all services would require a global-scale distributed database, the general availability of Cloud Spanner is a big shift in the way we think about databases. And its design is influencing open source products such as <a href=\"http://github.com/cockroachdb/cockroach\">CockroachDB</a>.</p>",
                "radarId": 39,
                "id": "en_2018-05_1196",
                "blip_selector": "cloud-spanner"
            },
            {
                "blip_id": 1128,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Autonomous bubble pattern",
                "display_name": "Autonomous bubble pattern",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "153",
                "tag": null,
                "description": "<p>Many organizations we work with are trying hard to use modern engineering approaches to build new capabilities and features, while also having to coexist with a long tail of legacy systems. An old strategy that, based on our experience, has turned out to be increasingly helpful in these scenarios is <a href=\"http://dddcommunity.org/strategic-design/\">Eric Evans's</a> <strong>Autonomous bubble pattern</strong>. This approach involves creating a fresh context for new application development that is shielded from the entanglements of the legacy world. This is a step beyond just using an <a href=\"http://wiki.c2.com/?AnticorruptionLayer\">anticorruption layer</a>. It gives the new bubble context full control over its backing data, which is then asynchronously kept up-to-date with the legacy systems. It requires some work to protect the boundaries of the bubble and keep both worlds consistent, but the resulting autonomy and reduction in development friction is a first bold step toward a modernized future architecture.</p>",
                "radarId": 4,
                "id": "en_2018-05_1128",
                "blip_selector": "autonomous-bubble-pattern"
            },
            {
                "blip_id": 1249,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Rasa",
                "display_name": "Rasa",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "310",
                "tag": null,
                "description": "<p><strong><a href=\"http://rasa.com/\">Rasa</a></strong> is a new entrant in the area of chatbots. Instead of using a simple decision tree it uses neural networks to map intent and internal state to a response. Rasa integrates with natural language processing solutions such as <a href=\"/radar/tools/spacy\">spaCy</a>; and, unlike other solutions we've featured in the Radar, Rasa is <a href=\"http://github.com/RasaHQ\">open source software</a> and can be self-hosted, which makes it a viable solution when ownership of data is of concern. Our experiences with using Rasa Stack for an internal application have been positive.</p>",
                "radarId": 95,
                "id": "en_2018-05_1249",
                "blip_selector": "rasa"
            },
            {
                "blip_id": 1215,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Security Chaos Engineering",
                "display_name": "Security Chaos Engineering",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "118",
                "tag": null,
                "description": "<p>We’ve previously talked about the technique of <a href=\"/radar/techniques/chaos-engineering\">Chaos Engineering</a> in the Radar and the Simian Army suite of tools from Netflix that we’ve used to run experiments to test the resilience of production infrastructure. <strong>Security Chaos Engineering</strong> broadens the scope of this technique to the realm of security. We deliberately introduce false positives into production networks and other infrastructure — build-time dependencies, for example — to check whether procedures in place are capable of identifying security failures under controlled conditions. Although useful, this technique should be used with care to avoid desensitizing teams to security problems.</p>",
                "radarId": 19,
                "id": "en_2018-05_1215",
                "blip_selector": "security-chaos-engineering"
            },
            {
                "blip_id": 1221,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Appium Test Distribution",
                "display_name": "Appium Test Distribution",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "83",
                "tag": null,
                "description": "<p>We've featured <a href=\"/radar/tools/appium\">Appium</a> in the Radar in the past. It's one of the most popular mobile test automation frameworks. As we scale our test suite, being able to run our tests in parallel against an array of devices is key in having short feedback loops. <a href=\"http://github.com/saikrishna321/AppiumTestDistribution\"><strong>Appium Test Distribution</strong></a> solves this problem very effectively with its ability to run tests in parallel as well as run the same tests on multiple devices. Among other things, it distinguishes itself by its ability to add and remove devices in which tests run without any manual setup required and with its ability to run tests on remote devices. We've used it in a few projects at ThoughtWorks over the last couple of years and it worked very well for us.</p>",
                "radarId": 53,
                "id": "en_2018-05_1221",
                "blip_selector": "appium-test-distribution"
            },
            {
                "blip_id": 1233,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Headless Firefox",
                "display_name": "Headless Firefox",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "42",
                "tag": null,
                "description": "<p>When developing front-end applications, we've mentioned <a href=\"/radar/tools/headless-chrome-for-front-end-test\">Headless Chrome</a> as a better alternative to PhantomJS for front-end testing in a previous edition of the Radar. Now we suggest assessing <a href=\"http://developer.mozilla.org/en-US/Firefox/Headless_mode\"><strong>Headless Firefox</strong></a> as a viable option in this area. In the same way as Headless Chrome, Firefox in a headless mode runs the browser without the visible UI components, executing the UI tests suite much faster.</p>",
                "radarId": 73,
                "id": "en_2018-05_1233",
                "blip_selector": "headless-firefox"
            },
            {
                "blip_id": 1258,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Azure Stack",
                "display_name": "Azure Stack",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "195",
                "tag": null,
                "description": "<p>Cloud computing brings significant benefits over self-hosted virtualized solutions but sometimes data simply cannot leave an organization’s premises, usually for latency or regulatory reasons. For European companies, the current political climate also raises more concerns about placing data in the hands of US-based entities. With <a href=\"http://azure.microsoft.com/en-us/overview/azure-stack/\"><strong>Azure Stack</strong></a>, Microsoft adds an interesting offering as a middle ground between full-featured public clouds and simple on-premises virtualization: a slimmed-down version of the software that runs Microsoft’s Azure Global cloud is combined with a rack of preconfigured commodity hardware from the usual suspects like HP and Lenovo, providing an organization with the core Azure experience on premises. By default, support is split between Microsoft and the hardware vendors (and they promise to cooperate), but system integrators can offer complete Azure Stack solutions, too.</p>",
                "radarId": 38,
                "id": "en_2018-05_1258",
                "blip_selector": "azure-stack"
            },
            {
                "blip_id": 1216,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "Domain-scoped events",
                "display_name": "Domain-scoped events",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "135",
                "tag": null,
                "description": "<p>It’s important to remember that encapsulation applies to events and event-driven architectures just as it applies to other areas of software. In particular, think about the scope of an event and whether we expect it to be consumed within the same application, the same domain or across an entire organization. A <strong>domain-scoped event</strong> will be consumed within the same domain as it’s published, as such we expect the consumer to have access to a certain context, resources or references in order to act on the event. If the consumption is happening more widely within an organization, the contents of the event might well need to be different, and we need to take care not to \"leak\" implementation details that other domains then come to depend upon.</p>",
                "radarId": 6,
                "id": "en_2018-05_1216",
                "blip_selector": "domain-scoped-events"
            },
            {
                "blip_id": 1259,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Web Bluetooth",
                "display_name": "Web Bluetooth",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "259",
                "tag": null,
                "description": "<p><a href=\"http://github.com/WebBluetoothCG/web-bluetooth\"><strong>Web Bluetooth</strong></a> allows us to control any Bluetooth Low Energy device directly from the browser. This allows us to target scenarios that previously could only be solved with a native app. The specification is published by the Web Bluetooth Community Group and describes an API to discover and communicate with devices over the Bluetooth 4 wireless standard. Right now, Chrome is the only major browser which currently supports this specification. With <a href=\"http://google.github.io/physical-web/\">Physical Web</a> and Web Bluetooth, we now have other avenues for getting users to interact with devices without them having to install yet another app on their phone. This is an exciting space which is worth keeping an eye on.</p>",
                "radarId": 50,
                "id": "en_2018-05_1259",
                "blip_selector": "web-bluetooth"
            },
            {
                "blip_id": 1240,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Hyperledger Composer",
                "display_name": "Hyperledger Composer",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "330",
                "tag": null,
                "description": "<p>The <a href=\"/radar/platforms/hyperledger\">Hyperledger</a> project has grown into a broader collaboration and now contains a series of subprojects. It supports Blockchain implementations for different purposes; for example, <a href=\"http://github.com/hyperledger/burrow\">Burrow</a> is dedicated to build a permissioned <a href=\"/radar/platforms/ethereum\">Ethereum</a> and <a href=\"http://github.com/hyperledger/indy-node\">Indy</a> is more focused on digital identity. Among these platforms, <a href=\"http://github.com/hyperledger/fabric\">Fabric</a> is the most mature one. Most of time when people talk about adopting Hyperledger they are actually thinking about Hyperledger Fabric. However, the programming abstraction of <a href=\"http://hyperledger-fabric.readthedocs.io/en/latest/chaincode.html\">chaincode</a> is relatively low level given it manipulates the state of the ledger directly. Moreover, it always takes a lot of time to set up infrastructure before writing the first line of blockchain code. <a href=\"http://hyperledger.github.io/composer/latest/\"><strong>Hyperledger Composer</strong></a>, which builds on top of Fabric, accelerates the process of turning ideas into software. Composer provides DSLs to model business assets, define access control and build a business network. By using Composer you could quickly validate your idea through a browser without setting up any infrastructure. Just remember that the Composer itself isn't Blockchain — you still need to deploy it on Fabric.</p>",
                "radarId": 86,
                "id": "en_2018-05_1240",
                "blip_selector": "hyperledger-composer"
            },
            {
                "blip_id": 1219,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "CVXPY",
                "display_name": "CVXPY",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "58",
                "tag": null,
                "description": "<p>It’s surprising how many problems can be expressed as <a href=\"http://en.wikipedia.org/wiki/Mathematical_optimization\">mathematical optimization problems</a> and often <a href=\"http://en.wikipedia.org/wiki/Convex_optimization\">convex problems</a> that can be efficiently solved. <a href=\"http://www.cvxpy.org\"><strong>CVXPY</strong></a> is an open source Python-embedded modeling language for convex optimization problems. It’s maintained by academics at Stanford University and offers a batteries-included install for several open source and commercial solvers. The documentation includes many examples which should inspire developers to use it. It’s particularly useful for prototyping solutions even though commercially licensed solvers, such <a href=\"http://www.gurobi.com/\">Gurobi</a> or <a href=\"http://www.ibm.com/analytics/data-science/prescriptive-analytics/cplex-optimizer\">IBM CPLEX</a>, may be required. In most cases though, it suffices by itself. However, the same group has written many extension packages such as <a href=\"http://stanford.edu/%7Eboyd/papers/dccp.html\">DCCP</a> and related software such as <a href=\"http://cvxopt.org/\">CVXOPT</a> based on recent advances in optimization.</p>",
                "radarId": 57,
                "id": "en_2018-05_1219",
                "blip_selector": "cvxpy"
            },
            {
                "blip_id": 1188,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Ethereum for decentralized applications",
                "display_name": "Ethereum for decentralized applications",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "160",
                "tag": null,
                "description": "<p>Blockchains have been widely hyped as the panacea for all things fintech, from banking to digital currency to supply chain transparency. We’ve previously featured <a href=\"/radar/platforms/ethereum\">Ethereum</a> because of its feature set, which includes smart contracts. Now, we're seeing more development using <strong>Ethereum for decentralized applications</strong> in <a href=\"http://www.stateofthedapps.com/\">other areas</a>. Although this is still a very young technology, we're encouraged to see it being used to build decentralized applications beyond cryptocurrency and banking.</p>",
                "radarId": 13,
                "id": "en_2018-05_1188",
                "blip_selector": "ethereum-for-decentralized-applications"
            },
            {
                "blip_id": 1165,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "AssertJ",
                "display_name": "AssertJ",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "292",
                "tag": null,
                "description": "<p><a href=\"http://joel-costigliola.github.io/assertj/index.html\"><strong>AssertJ</strong></a> is a Java library that provides a <a href=\"http://martinfowler.com/bliki/FluentInterface.html\">fluent interface</a> for assertions, which makes it easy to convey intent within test code. AssertJ gives readable error messages, soft assertions and improved collections and exception support. Many of our teams choose AssertJ as their default assertion library instead of JUnit combined with <a href=\"http://hamcrest.org/JavaHamcrest/\">Java Hamcrest</a>.</p>",
                "radarId": 80,
                "id": "en_2018-05_1165",
                "blip_selector": "assertj"
            },
            {
                "blip_id": 1172,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "PyTorch",
                "display_name": "PyTorch",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "305",
                "tag": null,
                "description": "<p><a href=\"http://pytorch.org/\"><strong>PyTorch</strong></a> is a complete rewrite of the <a href=\"http://torch.ch/\">Torch</a> machine learning framework from Lua to Python. Although quite new and immature compared to <a href=\"/radar/platforms/tensorflow\">Tensorflow</a>, programmers find PyTorch much easier to work with. Because of its object-orientation and native Python implementation, models can be expressed more clearly and succinctly and debugged during execution. Although many of these frameworks have emerged recently, PyTorch has the backing of Facebook and broad range of partner organisations, including NVIDIA, which should ensure continuing support for CUDA architectures. ThoughtWorks teams find PyTorch useful for experimenting and developing models but still rely on TensorFlow’s performance for production-scale training and classification.</p>",
                "radarId": 94,
                "id": "en_2018-05_1172",
                "blip_selector": "pytorch"
            },
            {
                "blip_id": 1112,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Yarn",
                "display_name": "Yarn",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "7",
                "tag": null,
                "description": "<p><a href=\"http://yarnpkg.com/en/\"><strong>Yarn</strong></a> is a fast, reliable and secured package manager for JavaScript. Using a lock file and a deterministic algorithm, Yarn is able to guarantee that an installation that worked on one system will work exactly the same way on any other system. By efficiently queuing up requests, Yarn maximizes network utilization and as a result we’ve seen faster package downloads. Yarn continues to be our tool of choice for JavaScript package management in spite of the latest improvements in npm (version 5).</p>",
                "radarId": 65,
                "id": "en_2018-05_1112",
                "blip_selector": "yarn"
            },
            {
                "blip_id": 1242,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "troposphere",
                "display_name": "troposphere",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "345",
                "tag": null,
                "description": "<p>We’re trying out <a href=\"http://github.com/cloudtools/troposphere\"><strong>troposphere</strong></a> as a way of defining the <a href=\"/radar/tools/infrastructure-as-code\">infrastructure as code</a> on AWS for our projects where <a href=\"http://aws.amazon.com/cloudformation/\">AWS</a> <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation</a> is used instead of <a href=\"/radar/tools/terraform\">Terraform</a>. troposphere is a Python library that allows us to write Python code to generate CloudFormation JSON descriptions. What we like about troposphere is that it facilitates catching JSON errors early, applying type checking, and unit testing and DRY composition of AWS resources.</p>",
                "radarId": 102,
                "id": "en_2018-05_1242",
                "blip_selector": "troposphere"
            },
            {
                "blip_id": 1195,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Language Server Protocol",
                "display_name": "Language Server Protocol",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "227",
                "tag": null,
                "description": "<p>Much of the power of sophisticated IDEs comes from their ability to parse a program into an abstract syntax tree (AST) and then use that AST for program analysis and manipulation. This supports features such as autocomplete, finding callers and refactoring. Language servers pull this capability into a process that allows any text editor to access an API to work with the AST. Microsoft has led the creation of the <a href=\"http://github.com/Microsoft/language-server-protocol\"><strong>Language Server Protocol</strong></a> (LSP), harvested from their OmniSharp and TypeScript Server projects.<a href=\"http://langserver.org#implementations-client\">Any editor</a> that uses this protocol can work with any language that has an <a href=\"http://langserver.org#implementations-server\">LSP-compliant server</a>. This means we can keep using our favorite editors without forgoing the rich text editing modes of many languages — much to the delight of our Emacs addicts.</p>",
                "radarId": 44,
                "id": "en_2018-05_1195",
                "blip_selector": "language-server-protocol"
            },
            {
                "blip_id": 1237,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "BackstopJS",
                "display_name": "BackstopJS",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "78",
                "tag": null,
                "description": "<p>We've been enjoying <strong><a href=\"http://github.com/garris/BackstopJS\">BackstopJS</a></strong> for visual regression testing of web applications. The configurable viewports and ability to adjust tolerances are particularly useful, as is the visual comparison tool, which makes it easier to spot minor variations. It has good scriptability and the option to run in <a href=\"/radar/tools/headless-chrome-for-front-end-test\">Headless Chrome</a>, PhantomJS and SlimerJS. We find it particularly helpful when running it against <a href=\"/radar/techniques/living-css-style-guides\">living component style guides</a>.</p>",
                "radarId": 54,
                "id": "en_2018-05_1237",
                "blip_selector": "backstopjs"
            },
            {
                "blip_id": 1234,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Parcel",
                "display_name": "Parcel",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "30",
                "tag": null,
                "description": "<p><a href=\"https://en.parceljs.org/\"><strong>Parcel</strong></a> is a web application bundler similar to <a href=\"/radar/tools/webpack\">Webpack</a> or <a href=\"http://browserify.org/\">Browserify</a>. We’ve featured Webpack previously in our Radar and it continues to be a great tool. Parcel distinguishes itself from its rivals through developer experience and speed. It has all the standard bundling features and provides true zero-configuration experience, making it really easy to get started with and use. It has fast bundle times and beats its competitors in many benchmarks. Parcel has gained a lot of community interest and is worth keeping an eye on.</p>",
                "radarId": 75,
                "id": "en_2018-05_1234",
                "blip_selector": "parcel"
            },
            {
                "blip_id": 1202,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "338",
                "name": "Corda",
                "display_name": "Corda",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-05",
                "theta": "206",
                "tag": null,
                "description": "<p>After thorough exploration, R3, an important player in the blockchain space, realized that blockchain doesn't fit their purpose well, so they created <strong><a href=\"http://www.corda.net\">Corda</a></strong>. Corda is a distributed ledger technology (DLT) platform focused on the financial field. R3 have a very clear value proposition and know that their problem requires a pragmatic technology approach. This matches our own experience; current blockchain solutions may not be the reasonable choice for some business cases, due to mining costs and operational inefficiency. Although the development experience we have on Corda thus far has not been the smoothest, <a href=\"http://docs.corda.net/releases/release-V1.0/api-index.html#internal-apis-and-stability-guarantees\">APIs are still unstable after v1.0 release</a>, we expect to see the DLT space mature further.</p>",
                "radarId": 40,
                "id": "en_2018-05_1202",
                "blip_selector": "corda"
            }
        ]
    },
    {
        "date": "2018-11",
        "blips": [
            {
                "blip_id": 1323,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "SAFE stack",
                "display_name": "SAFE stack",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "330",
                "tag": "new",
                "description": "<p>The <strong>SAFE stack</strong> —short for <a href=\"https://suave.io/\">Suave</a>, <a href=\"https://azure.microsoft.com\">Azure</a>, <a href=\"http://fable.io/\">Fable</a>, and <a href=\"https://github.com/elmish/elmish\">Elmish</a>—brings a number of technologies into a coherent stack for web development. It's built around the F# programming language, both on the server side and in the browser, and therefore has a focus on functional, type-safe programming with an asynchronous approach. It offers productivity features such as hot reloading and lets you substitute parts of the stack, for example, the server-side web framework or the cloud provider.</p>",
                "radarId": 89,
                "id": "en_2018-11_1323",
                "blip_selector": "safe-stack"
            },
            {
                "blip_id": 1329,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Azure DevOps",
                "display_name": "Azure DevOps",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "186",
                "tag": "new",
                "description": "<p><strong><a href=\"https://azure.microsoft.com/en-us/services/devops/\">Azure DevOps</a></strong> services include a set of managed services such as hosted Git repos, CI and CD pipelines and artifact repository. Azure DevOps services have replaced <a href=\"https://docs.microsoft.com/en-us/azure/devops/user-guide/what-happened-vsts?view=vsts\">Visual Studio Team Services</a>. We've had a good experience in starting projects quickly with Azure DevOps services—managing, building and releasing applications to <a href=\"/radar/platforms/azure\">Azure</a>. We've also run into a few challenges—such as lack of full support for CI and CD pipeline as code, slow build agent startup time, separation of build and release into different pipelines—and experienced a few downtimes. We're hoping that Azure DevOps services improve over time to provide a good developer experience when hosting applications on Azure, with a frictionless experience integrating with other Azure services.</p>",
                "radarId": 33,
                "id": "en_2018-11_1329",
                "blip_selector": "azure-devops"
            },
            {
                "blip_id": 1341,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Master data management",
                "display_name": "Master data management",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "135",
                "tag": "new",
                "description": "<p><strong>Master data management</strong> (MDM) is a classic example of the enterprise \"silver bullet\" solution: it promises to solve an apparently related class of problems in one go. Through creating a centralized single point of change, coordination, test and deployment, MDM solutions negatively impact an organization's ability to respond to business change. Implementations tend to be long and complex, as organizations try to capture and map all \"master\" data into the MDM while integrating the MDM solution into all consuming or producing systems.</p>",
                "radarId": 22,
                "id": "en_2018-11_1341",
                "blip_selector": "master-data-management"
            },
            {
                "blip_id": 1246,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "335",
                "name": "Flutter",
                "display_name": "Flutter",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "288",
                "tag": "stay",
                "description": "<p><a href=\"http://flutter.io/\"><strong>Flutter</strong></a> is a cross-platform framework that enables you to write native mobile apps in <a href=\"/radar/languages-and-frameworks/google-dart\">Dart</a>. It benefits from Dart and can be compiled into native code and communicates with the target platform without bridge and context switching—something that can cause performance bottlenecks in frameworks such as <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> or <a href=\"/radar/languages-and-frameworks/weex\">Weex</a>. Flutter's hot-reload feature is impressive and provides superfast visual feedback when editing code. Currently, Flutter is still in beta, but we'll continue keeping an eye on it to see how its ecosystem matures.</p>",
                "radarId": 82,
                "id": "en_2018-11_1246",
                "blip_selector": "flutter"
            },
            {
                "blip_id": 1284,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Wallaby.js",
                "display_name": "Wallaby.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "7",
                "tag": "new",
                "description": "<p>We all obsess about fast feedback during test-driven development and we're always looking for new ways to make this even faster. <a href=\"https://wallabyjs.com/\"><strong>Wallaby.js</strong></a> is a commercial extension for popular editors that provides continuous execution of JavaScript unit tests, highlighting the results in line next to your code. The tool identifies and runs the minimum set of tests affected by each code change and lets you run tests continuously as you type.</p>",
                "radarId": 75,
                "id": "en_2018-11_1284",
                "blip_selector": "wallaby-js"
            },
            {
                "blip_id": 1314,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Versioning data for reproducible analytics",
                "display_name": "Versioning data for reproducible analytics",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "98",
                "tag": "new",
                "description": "<p>When it comes to large-scale data analysis or machine intelligence problems, being able to reproduce different versions of analysis done on different data sets and parameters is immensely valuable. To achieve reproducible analysis, both the data and the model (including algorithm choice, parameters and hyperparameters) need to be version controlled. <strong>Versioning data for reproducible analytics</strong> is a relatively trickier problem than versioning models because of the data size. Tools such as <a href=\"https://dvc.org/\">DVC</a> help in versioning data by allowing users to commit and push data files to a remote cloud storage bucket using a git-like workflow. This makes it easy for collaborators to pull a specific version of data to reproduce an analysis.</p>",
                "radarId": 12,
                "id": "en_2018-11_1314",
                "blip_selector": "versioning-data-for-reproducible-analytics"
            },
            {
                "blip_id": 1301,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Observability as code",
                "display_name": "Observability as code",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "135",
                "tag": "new",
                "description": "<p>The observability is an integral part of operating a distributed and <a href=\"https://martinfowler.com/articles/microservices.html\">microservices architecture</a>. We rely on different system outputs such as distributed tracing, aggregate logs and metrics to infer the internal state of the distributed components, diagnose where the problems are and get to the root cause. An important aspect of an observability ecosystem is monitoring—visualizing and analyzing the system's output—and alerting when unexpected conditions are detected. Traditionally, configuration of monitoring dashboards and setting up alerts is done through GUI-based point-and-click systems. This approach leads to nonrepeatable dashboard configurations, no ability to continuously test and adjust alerts to avoid alert fatigue or missing out on important alerts, and drift from organizational best practices. We highly recommend treating your observability ecosystem configurations as code, called <strong>observability as code</strong> , and adopt <a href=\"/radar/tools/infrastructure-as-code\">infrastructure as code</a> for your monitoring and alerting infrastructure. Choose observability products that support configuration through version-controlled code and execution of APIs or commands via infrastructure CD pipelines. Observability as code is an often-forgotten aspect of infrastructure as code and, we believe, crucial enough to be called out.</p>",
                "radarId": 7,
                "id": "en_2018-11_1301",
                "blip_selector": "observability-as-code"
            },
            {
                "blip_id": 950,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Jepsen",
                "display_name": "Jepsen",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "288",
                "tag": "move",
                "description": "<p>With the increased adoption of a <a href=\"https://martinfowler.com/microservices/\">microservices</a> architecture, we're building more distributed applications than before. Although there are many benefits of a decoupled architecture, the complexity and the effort involved in proving the correctness of the overall system has dramatically increased. <a href=\"https://github.com/aphyr/jepsen\"><strong>Jepsen</strong></a> provides much needed tooling to verify correctness in coordination of task schedulers, test eventual consistency, <a href=\"https://jepsen.io/consistency/models/linearizable\">linearizability</a> and <a href=\"https://jepsen.io/consistency/models/serializable\">serializability</a> characteristics of distributed databases. We've used Jepsen in a few projects and we like the fact that we can test drive configurations, inject and correct faults, and verify the state of the system after recovery.</p>",
                "radarId": 76,
                "id": "en_2018-11_950",
                "blip_selector": "jepsen"
            },
            {
                "blip_id": 1242,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "troposphere",
                "display_name": "troposphere",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "342",
                "tag": "stay",
                "description": "<p>We're trying out <a href=\"http://github.com/cloudtools/troposphere\"><strong>troposphere</strong></a> as a way of defining the <a href=\"/radar/tools/infrastructure-as-code\">infrastructure as code</a> on AWS for our projects that use <a href=\"http://aws.amazon.com/cloudformation/\">AWS</a> <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation</a> instead of <a href=\"/radar/tools/terraform\">Terraform</a>. troposphere is a Python library that allows us to write Python code to generate CloudFormation JSON descriptions. What we like about troposphere is that it facilitates catching JSON errors early, applying type checking, and unit testing and DRY composition of AWS resources.</p>",
                "radarId": 91,
                "id": "en_2018-11_1242",
                "blip_selector": "troposphere"
            },
            {
                "blip_id": 1275,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Rider",
                "display_name": "Rider",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "30",
                "tag": "new",
                "description": "<p>We've covered <a href=\"/radar/tools/visual-studio-code\">Visual Studio Code</a> in the Radar since 2015, but it isn't the only cross-platform .NET Core IDE kid on the block anymore. Recently, <a href=\"https://www.jetbrains.com/rider/\"><strong>Rider</strong></a>, which is part of the IDEA platform developed by JetBrains, has gained adoption, especially by those used to the speed and dexterity provided by <a href=\"https://www.jetbrains.com/resharper/\">ReSharper</a>, which drives the refactoring in Rider. Rider, however, does more than ReSharper to bring the full IDEA platform to .NET and increase developer productivity. Regardless of your preferred platform, it's worth exploring Rider as it currently has the productivity edge on Visual Studio Code. It's also great to see the ecosystem alive and well, as competition ensures these tools continue to improve.</p>",
                "radarId": 58,
                "id": "en_2018-11_1275",
                "blip_selector": "rider"
            },
            {
                "blip_id": 1310,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "RPA",
                "display_name": "RPA",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "102",
                "tag": "new",
                "description": "<p>Robotic process automation ( <strong>RPA</strong> ) is a key part of many digital transformation initiatives, as it promises to deliver cost savings without having to modernize the underlying architecture and systems. The problem with this approach of focusing only on automating business processes, without addressing the underlying software systems or capabilities, is that this can make it even harder to change the underlying systems by introducing additional coupling. This makes any future attempts to address the legacy IT landscape even more difficult. Very few systems can afford to ignore change and hence RPA efforts need to be coupled with appropriate legacy modernization strategies.</p>",
                "radarId": 25,
                "id": "en_2018-11_1310",
                "blip_selector": "rpa"
            },
            {
                "blip_id": 1192,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "160",
                "name": "Google Cloud Platform",
                "display_name": "Google Cloud Platform",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "236",
                "tag": "stay",
                "description": "<p>As <a href=\"http://cloud.google.com/free/ce1/\"><strong>Google Cloud Platform</strong></a> (GCP) has expanded in terms of available geographic regions and maturity of services, customers globally can now seriously consider it for their cloud strategy. In some areas, GCP has reached feature parity with its main competitor, Amazon Web Services, while in other areas it has differentiated itself—notably with accessible machine learning platforms, data engineering tools, and a workable Kubernetes as a service solution (<a href=\"/radar/platforms/gke\">GKE</a>). In practice, our teams have nothing but praise for the developer experience working with the GCP tools and APIs.</p>",
                "radarId": 30,
                "id": "en_2018-11_1192",
                "blip_selector": "google-cloud-platform"
            },
            {
                "blip_id": 1331,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "SPIFFE",
                "display_name": "SPIFFE",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "264",
                "tag": "new",
                "description": "<p>Making key elements of Google's groundbreaking, high-scale platform available as open source offerings appears to have become a trend. In the same way that HBASE drew on BigTable and <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> drew on Borg, <a href=\"https://spiffe.io/\"><strong>SPIFFE</strong></a> is now drawing upon Google's LOAS to bring to life a critical cloud-native concept called workload identity. The SPIFFE standards are backed by the OSS <a href=\"https://github.com/spiffe/spire\">SPIFFE Runtime Environment (SPIRE)</a>, which automatically delivers cryptographically provable identities to software workloads. Although SPIRE isn't quite ready for production use, we see tremendous value in a platform-agnostic way to make strong identity assertions between workloads in modern, distributed IT infrastructures. SPIRE supports many use cases, including identity translation, OAuth client authentication, mTLS \"encryption everywhere,\" and workload observability. <a href=\"/radar/platforms/istio\">Istio</a> uses SPIFFE by default.</p>",
                "radarId": 46,
                "id": "en_2018-11_1331",
                "blip_selector": "spiffe"
            },
            {
                "blip_id": 1278,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "TestCafe",
                "display_name": "TestCafe",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "20",
                "tag": "new",
                "description": "<p>Our teams are reporting good success with <strong><a href=\"https://devexpress.github.io/testcafe/\">TestCafe</a></strong>, a JavaScript-based browser test automation tool. TestCafe allows you to write tests in JavaScript or <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> and runs tests in any browser that supports JavaScript. TestCafe has several useful features including out-of-the-box parallel execution and HTTP request mocking. TestCafe uses an asynchronous execution model with no explicit wait times, which results in much more stable test suites.</p>",
                "radarId": 73,
                "id": "en_2018-11_1278",
                "blip_selector": "testcafe"
            },
            {
                "blip_id": 1326,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Spek",
                "display_name": "Spek",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "336",
                "tag": "new",
                "description": "<p>The adoption of a new language typically spawns the emergence of new tools that support mature engineering practices such as test automation. <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> is no exception. <a href=\"https://spekframework.org\"><strong>Spek</strong></a> is a testing framework—inspired by well-known tools such as <a href=\"https://cucumber.io/\">Cucumber</a>, <a href=\"http://rspec.info/\">RSpec</a> and <a href=\"https://jasmine.github.io/\">Jasmine</a>—that writes tests in Gherkin and Specification, allowing teams to bring mature practices such as <a href=\"https://dannorth.net/introducing-bdd\">behaviour-driven development</a> into the Kotlin space.</p>",
                "radarId": 90,
                "id": "en_2018-11_1326",
                "blip_selector": "spek"
            },
            {
                "blip_id": 1268,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Mermaid",
                "display_name": "Mermaid",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "42",
                "tag": "new",
                "description": "<p><strong><a href=\"https://mermaidjs.github.io\">Mermaid</a></strong> lets you generate diagrams from a markdown-like markup language. Born out of need to simplify documentation, Mermaid has grown into a larger ecosystem with plugins for <a href=\"https://marketplace.atlassian.com/apps/1214124/mermaid-plugin-for-confluence?hosting=server&tab=overview\">Confluence</a>, <a href=\"https://marketplace.visualstudio.com/items?itemName=vstirbu.vscode-mermaid-preview\">Visual Studio Code</a> and <a href=\"https://rubygems.org/gems/jekyll-mermaid/versions/1.0.0\">Jekyll</a> to name a few. To see how it works, you can use the <a href=\"https://mermaidjs.github.io/mermaid-live-editor/\">Live Editor</a> on GitHub. Mermaid also has a convenient command line interface that lets you generate SVG, PNG and PDF files as output from definition files. We've been using Mermaid in many projects and we like the simplicity of describing graphs and flowcharts with markdown and checking in the definition files with the code repository.</p>",
                "radarId": 56,
                "id": "en_2018-11_1268",
                "blip_selector": "mermaid"
            },
            {
                "blip_id": 1233,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Headless Firefox",
                "display_name": "Headless Firefox",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "54",
                "tag": "move",
                "description": "<p><a href=\"http://developer.mozilla.org/en-US/Firefox/Headless_mode\"><strong>Headless Firefox</strong></a> has the same maturity as that of <a href=\"/radar/tools/headless-chrome-for-front-end-test\">Headless Chrome for front-end test</a>. Similar to Headless Chrome, with Firefox in headless mode we now get to enjoy browser tests without the visible UI components, executing the UI tests suite much faster.</p>",
                "radarId": 54,
                "id": "en_2018-11_1233",
                "blip_selector": "headless-firefox"
            },
            {
                "blip_id": 791,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "365",
                "name": "Microservice envy",
                "display_name": "Microservice envy",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "124",
                "tag": "refresh_writeup",
                "description": "<p><a href=\"https://martinfowler.com/articles/microservices.html\">Microservices</a> has emerged as a leading architectural technique in modern cloud-based systems, but we still think teams should proceed carefully when making this choice. <strong>Microservice envy</strong> tempts teams to complicate their architecture by having lots of services simply because it's a fashionable architecture choice. Platforms such as <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> make it much easier to deploy complex sets of microservices, and vendors are pushing their solutions to managing microservices, potentially leading teams further down this path. It's important to remember that microservices trade development complexity for operational complexity and require a solid foundation of automated testing, continuous delivery and DevOps culture.</p>",
                "radarId": 23,
                "id": "en_2018-11_791",
                "blip_selector": "microservice-envy"
            },
            {
                "blip_id": 1303,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Secrets as a service",
                "display_name": "Secrets as a service",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "113",
                "tag": "new",
                "description": "<p>We've long cautioned people about the temptation to check secrets into their source code repositories. Previously, we've recommended <a href=\"/radar/techniques/decoupling-secret-management-from-source-code\">decoupling secret management from source code</a>. However, now we're seeing a set of good tools emerge that offer <strong>secrets as a service</strong>. With this approach, rather than hardwiring secrets or configuring them as part of the environment, applications retrieve them from a separate process. Tools such as <a href=\"/radar/tools/hashicorp-vault\">Vault</a> by HashiCorp let you manage secrets separately from the application and enforce policies such as frequent rotation externally.</p>",
                "radarId": 10,
                "id": "en_2018-11_1303",
                "blip_selector": "secrets-as-a-service"
            },
            {
                "blip_id": 1295,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Ktor",
                "display_name": "Ktor",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "294",
                "tag": "new",
                "description": "<p><a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> is no longer just a great fit for mobile app development. New tools and frameworks have emerged that demonstrate the value of the language for web application development as well. <strong><a href=\"https://ktor.io\">Ktor</a></strong> is one such framework. In contrast to other web frameworks that support Kotlin, Ktor is written in Kotlin, using language features such as <a href=\"https://kotlinlang.org/docs/reference/coroutines-overview.html\">coroutines</a> which allows for an asynchronous non-blocking implementation. The flexibility to incorporate different tools for logging, DI or a templates engine—in addition to its lightweight architecture—makes Ktor an interesting option for our teams for creating RESTful services.</p>",
                "radarId": 83,
                "id": "en_2018-11_1295",
                "blip_selector": "ktor"
            },
            {
                "blip_id": 1215,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Security Chaos Engineering",
                "display_name": "Security Chaos Engineering",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "105",
                "tag": "move",
                "description": "<p>Although we've had mostly new blips in this edition of the Radar, we think it's worth continuing to call out the usefulness of <strong>Security Chaos Engineering</strong>. We've moved it to Trial because the teams using this technique are confident that the security policies they have in place are robust enough to handle common security failure modes. Still, proceed with caution when using this technique—we don't want our teams to become desensitized to these issues.</p>",
                "radarId": 11,
                "id": "en_2018-11_1215",
                "blip_selector": "security-chaos-engineering"
            },
            {
                "blip_id": 1138,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Service mesh",
                "display_name": "Service mesh",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "103",
                "tag": "refresh_writeup",
                "description": "<p>As large organizations transition to more autonomous teams owning and operating their own microservices, how can they ensure the necessary consistency and compatibility between those services without relying on a centralized hosting infrastructure? To work together efficiently, even autonomous microservices need to align with some organizational standards. A <strong>service mesh</strong> offers consistent discovery, security, tracing, monitoring and failure handling without the need for a shared asset such as an API gateway or ESB. A typical implementation involves lightweight reverse-proxy processes deployed alongside each service process, perhaps in a separate container. These proxies communicate with service registries, identity providers, log aggregators and other services. Service interoperability and observability are gained through a shared implementation of this proxy but not a shared runtime instance. We've advocated for a decentralized approach to microservices management for some time and are happy to see this consistent pattern emerge. Open source projects such as <a href=\"http://linkerd.io/\">Linkerd</a> and <a href=\"/radar/platforms/istio\">Istio</a> will continue to mature and make service meshes even easier to implement.</p>",
                "radarId": 18,
                "id": "en_2018-11_1138",
                "blip_selector": "service-mesh"
            },
            {
                "blip_id": 1302,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "1% canary",
                "display_name": "1% canary",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "173",
                "tag": "new",
                "description": "<p>Fast feedback is one of our <a href=\"https://www.thoughtworks.com/insights/blog/what-are-our-core-values-and-practices-building-software\">core values</a> for building software. For many years, we've used the <a href=\"https://martinfowler.com/bliki/CanaryRelease.html\">canary release</a> approach to encourage early feedback on new software versions, while reducing the risk through incremental rollout to selected users. One of the questions regarding this technique is how to segment users. Canary releases to a very small segment (say 1%) of users can be a catalyst for change. While starting with a very small segment of users enables teams to get comfortable with the technique, capturing fast user feedback enables diverse teams to observe the impact of new releases and learn and adjust course as necessary—a priceless change in engineering culture. We call this, the mighty <strong>1% canary</strong>.</p>",
                "radarId": 2,
                "id": "en_2018-11_1302",
                "blip_selector": "1-canary"
            },
            {
                "blip_id": 1342,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Data-hungry packages",
                "display_name": "Data-hungry packages",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "210",
                "tag": "new",
                "description": "<p><strong>Data-hungry packages</strong> are solutions that require absorption of data into themselves in order to function. In some cases they may even require that they become the \"master\" for that data. Once the data is owned by the package, that software becomes the only way to update, change or access the data. The data-hungry package might solve a particular business problem such as ERP. However, inventory or finance \"data demands\" placed upon an organization will often require complex integration and changes to systems that lie well outside of the original scope.</p>",
                "radarId": 47,
                "id": "en_2018-11_1342",
                "blip_selector": "data-hungry-packages"
            },
            {
                "blip_id": 1283,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Pulumi",
                "display_name": "Pulumi",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "240",
                "tag": "new",
                "description": "<p>We're quite interested in <a href=\"https://pulumi.io/\"><strong>Pulumi</strong></a>, a promising entrant in cloud infrastructure automation. Pulumi distinguishes itself by allowing configurations to be written in <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>/JavaScript, <a href=\"/radar/languages-and-frameworks/python-3\">Python</a>, and Go—no YAML required. Pulumi is tightly focused on cloud-native architectures—including containers, serverless functions and data services—and provides good support for Kubernetes.</p>",
                "radarId": 42,
                "id": "en_2018-11_1283",
                "blip_selector": "pulumi"
            },
            {
                "blip_id": 1312,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Layered microservices architecture",
                "display_name": "Layered microservices architecture",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "147",
                "tag": "new",
                "description": "<p>A defining characteristic of a <a href=\"https://martinfowler.com/articles/microservices.html\">microservices architecture</a> is that system components and services are organized around business capabilities. Regardless of size, microservices encapsulate a meaningful grouping of functionality and information to allow for the independent delivery of business value. This is in contrast to earlier approaches in service architecture which organized services according to technical characteristics. We've observed a number of organizations who've adopted a <strong>layered microservices architecture</strong> , which in some ways is a contradiction in terms. These organizations have fallen back to arranging services primarily according to a technical role, for example, experience APIs, process APIs or system APIs. It's too easy for technology teams to be assigned by layer, so delivering any valuable business change requires slow and expensive coordination between multiple teams. We caution against the effects of this layering and recommend arranging services and teams primarily according to business capability.</p>",
                "radarId": 21,
                "id": "en_2018-11_1312",
                "blip_selector": "layered-microservices-architecture"
            },
            {
                "blip_id": 1338,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Run cost as architecture fitness function",
                "display_name": "Run cost as architecture fitness function",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "120",
                "tag": "new",
                "description": "<p>We still see teams who aren't tracking the cost of running their applications as closely as they should as their software architecture or usage evolves. This is particularly true when they're using <a href=\"/radar/techniques/serverless-architecture\">serverless</a>, which developers assume will provide lower costs since you're not paying for unused server cycles. However, the major cloud providers are pretty savvy at setting their pricing models, and heavily used serverless functions, although very useful for rapid iteration, can get expensive quickly when compared with dedicated cloud (or on-premise) servers. We advise teams to frame a system's <strong>run cost as architecture fitness function</strong> , which means: track the cost of running your services against the value delivered; when you see deviations from what was expected or acceptable, have a discussion about whether it's time to evolve your architecture.</p>",
                "radarId": 9,
                "id": "en_2018-11_1338",
                "blip_selector": "run-cost-as-architecture-fitness-function"
            },
            {
                "blip_id": 1340,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "CockroachDB",
                "display_name": "CockroachDB",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "192",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.cockroachlabs.com/product/cockroachdb/\">CockroachDB</a></strong> is an open source distributed database inspired by the white paper <a href=\"https://storage.googleapis.com/pub-tools-public-publication-data/pdf/39966.pdf\">Spanner: Google's distributed database</a>. In CockroachDB, data is automatically divided into ranges, usually 64MB, and distributed across nodes in the cluster. Each range has a consensus group and, because it uses the <a href=\"https://raft.github.io/\">Raft consensus algorithm</a>, the data is always kept in sync. With its unique design, CockroachDB provides distributed transactions and geo-partitioning while still supporting SQL. Unlike <a href=\"/radar/platforms/cloud-spanner\">Spanner</a>, which relies on <a href=\"https://cloud.google.com/spanner/docs/true-time-external-consistency\">TrueTime</a> with atomic clock for linearizability, CockroachDB uses <a href=\"https://en.wikipedia.org/wiki/Network_Time_Protocol\">NTP</a> for clock synchronization and provides serializability as the default isolation level. If you're working with structured data that fits in a single node, then choose a traditional relational database. However, if your data needs to scale across nodes, be consistent and survive failures, then we recommend you take a closer look at CockroachDB.</p>",
                "radarId": 34,
                "id": "en_2018-11_1340",
                "blip_selector": "cockroachdb"
            },
            {
                "blip_id": 1153,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "Traefik",
                "display_name": "Traefik",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "13",
                "tag": "new",
                "description": "<p><a href=\"https://traefik.io/\"><strong>Traefik</strong></a> is an open-source reverse proxy and load balancer. If you're looking for an edge proxy that provides simple routing without all the features of <a href=\"https://nginx.org\">NGINX</a> and <a href=\"https://haproxy.org\">HAProxy</a>, Traefik is a good choice. The router provides a reload-less reconfiguration, metrics, monitoring and circuit breakers that are essential when running microservices. It also integrates nicely with <a href=\"/radar/tools/let-s-encrypt\">Let's Encrypt</a> to provide SSL termination. When compared to Traefik, tools such as NGINX and HAProxy may require additional tooling to templatize configuration in response to scaling, adding or removing microservices and may, at times, require a restart which can be annoying in production environments.</p>",
                "radarId": 74,
                "id": "en_2018-11_1153",
                "blip_selector": "traefik"
            },
            {
                "blip_id": 681,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "TypeScript",
                "display_name": "TypeScript",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "342",
                "tag": "move",
                "description": "<p><strong><a href=\"https://www.typescriptlang.org/\">TypeScript</a></strong> is a carefully considered language and its consistently improving tools and IDE support continues to impress us. With a <a href=\"https://definitelytyped.org/\">good repository</a> of TypeScript-type definitions, we benefit from all the rich JavaScript libraries while gaining type safety. This is particularly important as our browser-based code base continues to grow. The type safety in TypeScript lets you use IDEs and other tools to provide deeper context into your code and make changes and refactor code with safety. TypeScript, being a superset of JavaScript, and documentation and the community has helped ease the learning curve.</p>",
                "radarId": 79,
                "id": "en_2018-11_681",
                "blip_selector": "typescript"
            },
            {
                "blip_id": 1231,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "285",
                "name": "Infrastructure configuration scanner",
                "display_name": "Infrastructure configuration scanner",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "129",
                "tag": "stay",
                "description": "<p>For some time now we've recommended increased delivery team ownership of their entire stack, including infrastructure. This means increased responsibility in the delivery team itself for configuring infrastructure in a safe, secure, and compliant way. When adopting cloud strategies, most organizations default to a tightly locked-down and centrally managed configuration to reduce risk, but this also creates substantial productivity bottlenecks. An alternative approach is to allow teams to manage their own configuration, and use an <strong>Infrastructure configuration scanner</strong> to ensure the configuration is set in a safe and secure way. <a href=\"http://github.com/iagcl/watchmen\">Watchmen</a> is an interesting tool, built to provide rule-driven assurance of AWS account configurations that are owned and operated independently by delivery teams. <a href=\"/radar/tools/scout2\">Scout2</a> is another example of configuration scanning to support secure compliance.</p>",
                "radarId": 16,
                "id": "en_2018-11_1231",
                "blip_selector": "infrastructure-configuration-scanner"
            },
            {
                "blip_id": 1266,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Terragrunt",
                "display_name": "Terragrunt",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "26",
                "tag": "new",
                "description": "<p>We widely use <a href=\"/radar/tools/terraform\">Terraform</a> as code to configure a cloud infrastructure. <strong><a href=\"https://github.com/gruntwork-io/terragrunt\">Terragrunt</a></strong> is a thin wrapper for Terraform that implements the practices advocated by the <a href=\"https://www.oreilly.com/library/view/terraform-up-and/9781491977071/\">Terraform: Up and Running</a> book. We've found Terragrunt helpful as it encourages versioned modules and reusability for different environments with some handy features, including recursive code execution in subdirectories. We'd like to see the tool evolve to support CD practices natively, where all code can be packaged, versioned and reused across different environments on CD pipelines. Our team achieves this today with workarounds.</p>",
                "radarId": 72,
                "id": "en_2018-11_1266",
                "blip_selector": "terragrunt"
            },
            {
                "blip_id": 1307,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Pre-commit downstream build checks",
                "display_name": "Pre-commit downstream build checks",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "116",
                "tag": "new",
                "description": "<p>In more complex architectures and deployments, it may not be immediately obvious that a build that depends on the code currently being checked in is broken. Developers trying to fix a broken build could find themselves working against a moving target, as the build is continually triggered by upstream dependencies. <strong>Pre-commit downstream build checks</strong> is a very simple technique: have a pre-commit or pre-push script check the status of these downstream builds and alert the developer beforehand that a build is broken.</p>",
                "radarId": 17,
                "id": "en_2018-11_1307",
                "blip_selector": "pre-commit-downstream-build-checks"
            },
            {
                "blip_id": 1343,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Low-code platforms",
                "display_name": "Low-code platforms",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "240",
                "tag": "new",
                "description": "<p><strong>Low-code platforms</strong> use graphical user interfaces and configuration in order to create applications. Unfortunately, low-code environments are promoted with the idea that this means you no longer need skilled development teams. Such suggestions ignore the fact that writing code is just a small part of what needs to happen to create high-quality software—practices such as source control, testing and careful design of solutions are just as important. Although these platforms have their uses, we suggest approaching them with caution, especially when they come with extravagant claims for lower cost and higher productivity.</p>",
                "radarId": 48,
                "id": "en_2018-11_1343",
                "blip_selector": "low-code-platforms"
            },
            {
                "blip_id": 1265,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Visual Studio Live Share",
                "display_name": "Visual Studio Live Share",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "6",
                "tag": "new",
                "description": "<p><strong><a href=\"https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack\">Visual Studio Live Share</a></strong> is a suite of extensions for <a href=\"/radar/tools/visual-studio-code\">Visual Studio Code</a> and Visual Studio. The real-time collaboration for editing and debugging of code, voice calls, sharing a terminal and exposing local ports have reduced some of the obstacles we'd otherwise encounter when pairing remotely. In particular, we like that Live Share allows developers to collaborate with each other, while continuing to use their preconfigured editor, which includes themes, key maps and extensions.</p>",
                "radarId": 62,
                "id": "en_2018-11_1265",
                "blip_selector": "visual-studio-live-share"
            },
            {
                "blip_id": 1328,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Shared VPC",
                "display_name": "Shared VPC",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "247",
                "tag": "new",
                "description": "<p>As we've gained more experience with the public cloud across organizations large and small, certain patterns have emerged. One of those patterns is a virtual private cloud network managed at the organizational level and divided into smaller subnets under the control of each delivery team. This is closely related to the idea of <a href=\"/radar/techniques/multi-account-cloud-setup\">multiaccount cloud setup</a> and helps to <a href=\"/radar/techniques/partition-infrastructure-along-team-bounds\">partition an infrastructure along team bounds</a>. After configuring this setup many times using VPCs, subnets, security groups and NACLs, we really like Google's notion of the <a href=\"https://cloud.google.com/vpc/docs/shared-vpc\"><strong>shared VPC</strong></a>. Shared VPC makes organizations, projects, VPCs and subnets first-class entities in network configurations. VPCs can be managed by an organization's administrators who can delegate subnet administration to projects. Projects can then be explicitly associated with subnets in the VPC. This simplifies configuration and makes security and access control more transparent.</p>",
                "radarId": 31,
                "id": "en_2018-11_1328",
                "blip_selector": "shared-vpc"
            },
            {
                "blip_id": 1288,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Debezium",
                "display_name": "Debezium",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "198",
                "tag": "new",
                "description": "<p><strong>Debezium</strong> is a <a href=\"https://en.wikipedia.org/wiki/Change_data_capture\">change data capture (CDC)</a> platform that can stream database changes onto <a href=\"/radar/tools/apache-kafka\">Kafka</a> topics. CDC is a popular technique with multiple use cases, including replicating data to other databases, feeding analytics systems, extracting microservices from monoliths and invalidating caches. We're always on the lookout for tools or platforms in this space (we talked about <a href=\"/radar/tools/bottled-water\">Bottled Water</a> in a previous Radar) and Debezium is an excellent choice. It uses a log-based CDC approach which means it works by reacting to changes in the database's log files. Debezium uses Kafka Connect which makes it highly scalable and resilient to failures and has CDC connectors for multiple databases including Postgres, Mysql and MongoDB. We're using it in a few projects and it has worked very well for us.</p>",
                "radarId": 35,
                "id": "en_2018-11_1288",
                "blip_selector": "debezium"
            },
            {
                "blip_id": 1287,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Bitrise",
                "display_name": "Bitrise",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "84",
                "tag": "new",
                "description": "<p>Building, testing and deploying mobile applications entails a number of complex steps, especially when we consider a pipeline from source code repositories to app stores. All these steps can be automated with scripts and build pipelines in generic CI/CD tools. However, for teams that focus on mobile development, and have little or no requirement to integrate with build pipelines for back-end systems, a domain-specific tool can reduce the complexity and maintenance overhead. <a href=\"https://www.bitrise.io\"><strong>Bitrise</strong></a> is easy to set up and provides a comprehensive set of prebuilt steps for most mobile development needs.</p>",
                "radarId": 63,
                "id": "en_2018-11_1287",
                "blip_selector": "bitrise"
            },
            {
                "blip_id": 1300,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Crypto shredding",
                "display_name": "Crypto shredding",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "158",
                "tag": "new",
                "description": "<p>Maintaining proper control over sensitive data is difficult, especially when—for backup and recovery purposes—data is copied outside of a master system of record. <strong>Crypto shredding</strong> is the practice of rendering sensitive data unreadable by deliberately overwriting or deleting encryption keys used to secure that data. For example, an entire table of customer personal details could be encrypted using random keys for each record, with a different table storing the keys. If a customer exercised their \"right to be forgotten,\" we can simply delete the appropriate key, effectively \"shredding\" the encrypted data. This technique can be useful where we're confident of maintaining appropriate control of a smaller set of encryption keys but less confident about control over a larger data set.</p>",
                "radarId": 4,
                "id": "en_2018-11_1300",
                "blip_selector": "crypto-shredding"
            },
            {
                "blip_id": 1290,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Ocelot",
                "display_name": "Ocelot",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "45",
                "tag": "new",
                "description": "<p><a href=\"http://threemammals.com/ocelot\"><strong>Ocelot</strong></a> is a .NET API gateway. After three years of development, Ocelot has built a relatively complete feature set and an active community. Although there is no dearth of excellent API gateways (e.g., <a href=\"/radar/tools/kong-api-gateway\">Kong</a>), the .NET community appears to prefer Ocelot when building microservices. Part of the reason is that Ocelot integrates well with the .NET ecosystem (e.g., with IdentityServer). Another reason may be that the .NET community has extended Ocelot to support communication protocols such as gRPC, Orleans and WebSocket.</p>",
                "radarId": 69,
                "id": "en_2018-11_1290",
                "blip_selector": "ocelot"
            },
            {
                "blip_id": 9022,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "AWS",
                "display_name": "AWS",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "202",
                "tag": "move",
                "description": "<p>We first placed <strong>AWS</strong> in Adopt seven years ago, and the breadth, depth and reliability of its services have improved in leaps and bounds since then. However, we're now moving AWS back into Trial, not because of any deficiencies in its offering, but because its competitors, <a href=\"/radar/platforms/google-cloud-platform\">GCP</a> and <a href=\"/radar/platforms/azure\">Azure</a>, have matured considerably and selecting a cloud provider has become increasingly complex. We reserve Adopt for when we see a clear winner in a field. For many years, AWS was the default choice, but we now feel that organizations should make a balanced selection across cloud providers that takes into account their geographic and regulatory footprint, their strategic alignment (or lack thereof) with the providers, and, of course, the fit between their most important needs and the cloud providers' differentiating products.</p>",
                "radarId": 27,
                "id": "en_2018-11_9022",
                "blip_selector": "aws"
            },
            {
                "blip_id": 1217,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Generic cloud usage",
                "display_name": "Generic cloud usage",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "158",
                "tag": "refresh_writeup",
                "description": "<p>The major cloud providers have become increasingly competitive in their pricing and the rapid pace of releasing new features. This leaves consumers in a difficult place when choosing and committing to a provider. Increasingly, we're seeing organizations prepare to use \"any cloud\" and to avoid vendor lock-in at all costs. This, of course, leads to <strong>generic cloud usage</strong>. We see organizations limiting their use of the cloud to only those features common across all cloud providers—thereby missing out on the providers' unique benefits. We see organizations making large investments in home-grown abstraction layers that are too complex to build and too costly to maintain to stay cloud agnostic. The problem of lock-in is real. We recommend approaching this problem with a multicloud strategy that evaluates the migration cost and effort of capabilities from one cloud to another, against the benefits of using cloud-specific features. We recommend increasing the portability of the workloads by shipping the applications as widely adopted <a href=\"/radar/platforms/docker\">Docker</a> containers: use open source security and identity protocols to easily migrate the identity of the workloads, a <a href=\"/radar/techniques/risk-commensurate-vendor-strategy\">risk-commensurate vendor strategy</a> to maintain cloud independence only where necessary and <a href=\"/radar/techniques/polycloud\">Polycloud</a> to mix and match services from different providers where it makes sense. In short, shift your approach from a generic cloud usage to a sensible multicloud strategy.</p>",
                "radarId": 20,
                "id": "en_2018-11_1217",
                "blip_selector": "generic-cloud-usage"
            },
            {
                "blip_id": 1272,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "UI dev environments",
                "display_name": "UI dev environments",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "18",
                "tag": "new",
                "description": "<p>As more and more teams embrace <a href=\"/radar/techniques/designops\">DesignOps</a>, practices and tooling in this space mature, too. Many of our teams now work with what could be called <strong>UI dev environments</strong> , which provide a comprehensive environment for quickly iterating on UI components, focusing on collaboration between user experience designers and developers. We now have a few options in this space: <a href=\"https://storybook.js.org/\">Storybook</a>, <a href=\"https://react-styleguidist.js.org/\">react-styleguidist</a>, <a href=\"https://github.com/c8r\">Compositor</a> and <a href=\"https://mdxjs.com/\">MDX</a>. You can use these tools standalone in component library or design system development as well as embedded in a web application project. Rather than spinning up the app, plus a <a href=\"/radar/techniques/bff-backend-for-frontends\">BFF</a>, plus services simply to add a feature to a component, you can start up the Storybook dev server instead.</p>",
                "radarId": 60,
                "id": "en_2018-11_1272",
                "blip_selector": "ui-dev-environments"
            },
            {
                "blip_id": 1297,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Quorum",
                "display_name": "Quorum",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "246",
                "tag": "new",
                "description": "<p><a href=\"/radar/platforms/ethereum\">Ethereum</a> is the leading developer ecosystem in blockchain tech. We've seen emerging solutions that aim to spread this technology into enterprise environments that usually require network permissioning and transaction privacy as well as higher throughput and lower latency. <a href=\"https://www.jpmorgan.com/global/Quorum\"><strong>Quorum</strong></a> is one of these solutions. Originally developed by J.P. Morgan, Quorum positions itself as \"an enterprise-focused version of Ethereum.\" Unlike the <a href=\"https://github.com/hyperledger/burrow\">Hyperledger Burrow</a> node, which creates a new Ethereum virtual machine (EVM), Quorum forks code from Ethereum's official client so that it can evolve alongside Ethereum. Although it keeps most features of the Ethereum ledger, Quorum changes the consensus protocol from PoW to more efficient ones and adds private transaction support. With Quorum, developers can use their Ethereum knowledge of using, for example, <a href=\"/radar/languages-and-frameworks/solidity\">Solidity</a> and <a href=\"/radar/languages-and-frameworks/truffle\">Truffle</a> contracts to build enterprise blockchain applications. However, based on our experience, Quorum is not yet enterprise ready; for example, it lacks access control for private contracts, doesn't work well with load balancers and only has partial database support, all of which will lead to significant deployment and design burden. We recommend that you're cautious in implementing Quorum while keeping an eye on its development.</p>",
                "radarId": 43,
                "id": "en_2018-11_1297",
                "blip_selector": "quorum"
            },
            {
                "blip_id": 1333,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "IPFS",
                "display_name": "IPFS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "222",
                "tag": "new",
                "description": "<p>In most cases, blockchain is not the right place to store a <a href=\"https://en.wikipedia.org/wiki/Binary_large_object\">blob</a> file (e.g., image or audio). When developing <a href=\"/radar/techniques/ethereum-for-decentralized-applications\">DApp</a>, one option is to put blob files in some off-chain centralized data storage, which usually signals lack of trust. Another option is to store them on InterPlanetary File System (<strong><a href=\"https://ipfs.io/\">IPFS</a></strong>), which is a content-addressed, versioned, peer-to-peer file system. It’s designed to distribute high volumes of data with high efficiency and removed from any centralized authority. Files are stored on peers that don’t need to trust each other. IPFS keeps every version of a file so you never lose important files. We see IPFS as a good complement to blockchain technology. Beyond its blockchain application, IPFS has an ambitious goal to decentralize the Internet infrastructure.</p>",
                "radarId": 39,
                "id": "en_2018-11_1333",
                "blip_selector": "ipfs"
            },
            {
                "blip_id": 1228,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "ArchUnit",
                "display_name": "ArchUnit",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "72",
                "tag": "move",
                "description": "<p><a href=\"http://www.archunit.org/\"><strong>ArchUnit</strong></a> is a Java testing library for checking architecture characteristics such as package and class dependencies, annotation verification and even layer consistency. We like that it runs as unit tests within your existing test setup, even though it supports only Java-based architectures. The ArchUnit test suite can be incorporated into a CI environment or a deployment pipeline, making it easier to implement <a href=\"/radar/techniques/architectural-fitness-function\">fitness functions</a> in an <a href=\"http://evolutionaryarchitecture.com/\">evolutionary architecture</a> way.</p>",
                "radarId": 51,
                "id": "en_2018-11_1228",
                "blip_selector": "archunit"
            },
            {
                "blip_id": 1345,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Risk-commensurate vendor strategy",
                "display_name": "Risk-commensurate vendor strategy",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "128",
                "tag": "new",
                "description": "<p>Often, in an effort to outsource risk to their suppliers, businesses look for \"one throat to choke\" on their most critical and risky system implementations. Unfortunately, this gives them fewer solution choices and less flexibility. Instead, businesses should look to maintain the greatest vendor independence where the business risk exposure is highest. We see a new <strong>risk-commensurate vendor strategy</strong> emerging that encourages investment to maintain vendor independence for highly critical business systems. Less critical business functions can take advantage of the streamlined delivery of a vendor-native solution because it allows them to absorb more easily the impact of losing that vendor. This trade-off has become apparent as the major cloud providers have expanded their range of service offerings. For example, using AWS Secret Management Service can speed up initial development and has the benefit of ecosystem integration, but it will also add more inertia if you ever need to migrate to a different cloud provider than it would if you had implemented, for example, <a href=\"/radar/tools/hashicorp-vault\">Vault</a>.</p>",
                "radarId": 8,
                "id": "en_2018-11_1345",
                "blip_selector": "risk-commensurate-vendor-strategy"
            },
            {
                "blip_id": 1299,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Multi-account cloud setup",
                "display_name": "Multi-account cloud setup",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "143",
                "tag": "new",
                "description": "<p>On-demand self-service is a key characteristic (and benefit) of cloud computing. When large-scale service landscapes are deployed using a single account, rules and processes around usage of that account become necessary, often involving approval steps that increase turnaround time. A better approach is a <strong>multi-account cloud setup</strong> where several accounts are used, in the extreme one account per team. This does add overhead in other places, for example, ensuring shared billing, enabling communication between VPCs and managing the relationship with the cloud provider. However, it often accelerates development and it usually improves security, because single-service accounts are easier to audit and, in the case of a breach, the impact is greatly reduced. Having multiple accounts also reduces stickiness, because an account provides a good boundary for services that can be moved en bloc to another cloud provider.</p>",
                "radarId": 6,
                "id": "en_2018-11_1299",
                "blip_selector": "multi-account-cloud-setup"
            },
            {
                "blip_id": 1285,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Jaeger",
                "display_name": "Jaeger",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "58",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/jaegertracing/jaeger\">Jaeger</a></strong> is an open source distributed tracing system. Similar to <a href=\"/radar/tools/zipkin\">Zipkin</a>, it's been inspired by the Google <a href=\"https://ai.google/research/pubs/pub36356\">Dapper</a> paper and complies with <a href=\"https://opentracing.io/\">OpenTracing</a>. Jaeger is a younger open source project than Zipkin, but it's gained popularity quickly due to a larger number of supported languages for the client libraries and easy installation on <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. We've used Jaeger successfully with <a href=\"/radar/platforms/istio\">Istio</a>, integrating application traces with <a href=\"https://www.envoyproxy.io/\">Envoy</a> on Kubernetes, and like its <a href=\"https://github.com/jaegertracing/jaeger-ui\">UI</a>. With Jaeger joining <a href=\"https://www.cncf.io/blog/2017/09/13/cncf-hosts-jaeger/\">CNCF</a>, we anticipate a larger community engagement effort and deeper integration with other CNCF projects.</p>",
                "radarId": 67,
                "id": "en_2018-11_1285",
                "blip_selector": "jaeger"
            },
            {
                "blip_id": 1335,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "gVisor",
                "display_name": "gVisor",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "216",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/google/gvisor\">gVisor</a></strong> is a user-space kernel for containers. It limits the host kernel surface accessible to the application without taking away access to all the features it expects. Unlike existing sandbox technologies, such as virtualized hardware (<a href=\"https://www.linux-kvm.org\">KVM</a> and <a href=\"https://www.xenproject.org\">Xen</a>) or rule-based execution (<a href=\"https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt\">seccomp</a>, <a href=\"https://selinuxproject.org\">SELinux</a> and <a href=\"https://wiki.ubuntu.com/AppArmor\">AppArmor</a>), gVisor takes a distinct approach to container sandboxing by intercepting application system calls and acting as the guest kernel without the need for translation through virtualized hardware. gVisor includes an <a href=\"https://www.opencontainers.org\">Open Container Initiative (OCI)</a> runtime called runsc that integrates with <a href=\"/radar/platforms/docker\">Docker</a> and provides experimental support for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. gVisor is a relatively new project and we recommend assessing it for your container security landscape.</p>",
                "radarId": 38,
                "id": "en_2018-11_1335",
                "blip_selector": "gvisor"
            },
            {
                "blip_id": 1274,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Archery",
                "display_name": "Archery",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "78",
                "tag": "new",
                "description": "<p>We're seeing significant advances in security tooling integration with modern software delivery processes. <a href=\"https://archerysec.info/\"><strong>Archery</strong></a> is an open source tool with an active community that's doing a good job of pulling together a collection of other tools, including <a href=\"/radar/tools/zap\">Zap</a>. Designed primarily for web applications, Archery makes it easy to integrate security tooling into your build and deployment systems. Its dashboards also let you track vulnerabilities as well as application and network scans.</p>",
                "radarId": 50,
                "id": "en_2018-11_1274",
                "blip_selector": "archery"
            },
            {
                "blip_id": 883,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "Event Storming",
                "display_name": "Event Storming",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "135",
                "tag": "move",
                "description": "<p>When organizations move toward <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a>, one of the main drivers is the hope for faster time to market. However, this aspiration only tends to be realized when services (and their supporting teams) are cleanly sliced along long-lived business domain boundaries. Otherwise meaningful features will naturally require tight coordination between multiple teams and services, introducing natural friction in competing roadmap prioritization. The solution to this problem is good domain modeling, and <strong>event storming</strong> has rapidly become one of our favorite methods for rapidly identifying the key concepts in a problem space and aligning a variety of stakeholders in the best way to slice potential solutions.</p>",
                "radarId": 1,
                "id": "en_2018-11_883",
                "blip_selector": "event-storming"
            },
            {
                "blip_id": 1254,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "Contentful",
                "display_name": "Contentful",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "225",
                "tag": "stay",
                "description": "<p>Headless content management systems (CMSes) are becoming a common component of digital platforms. <a href=\"http://www.contentful.com/\"><strong>Contentful</strong></a> is a modern headless CMS that our teams have successfully integrated into their development workflows. We particularly like its API-first approach and implementing <a href=\"http://www.contentful.com/r/knowledgebase/cms-as-code/\">CMS as code</a>. It supports powerful content modeling primitives as code and content model evolution scripts, which allow treating it as other data store schemas and applying <a href=\"http://martinfowler.com/articles/evodb.html\">evolutionary database design</a> practices to CMS development. Other notable features that we've liked include inclusion of two CDNs to deliver media assets and JSON documents, good support for localization and the ability—albeit with some effort—to integrate with <a href=\"/radar/platforms/auth0\">Auth0</a>.</p>",
                "radarId": 29,
                "id": "en_2018-11_1254",
                "blip_selector": "contentful"
            },
            {
                "blip_id": 1267,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Prettier",
                "display_name": "Prettier",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "36",
                "tag": "new",
                "description": "<p><strong><a href=\"https://prettier.io/\">Prettier</a></strong> is an opinionated, automated code formatter for JavaScript (with growing support for other languages). By enforcing its own opinionated formatting style it increases consistency and readability and reduces developer effort both on formatting and engaging in wasteful team debates about code style. Even though you may disagree with the stylistic choices enforced by Prettier, we find that the benefits to the team generally outweigh small style issues. Prettier can be used with a precommit hook or an IDE plugin. As with any formatter, a one-time reformatting of your codebase can confuse your version control history, but we feel that's a minor drawback. We particularly like the way Prettier flips the linter-based approach and, borrowing from <a href=\"https://golang.org/cmd/gofmt/\">gofmt</a>, instead of validating your code, it ensures that your code will always be valid.</p>",
                "radarId": 57,
                "id": "en_2018-11_1267",
                "blip_selector": "prettier"
            },
            {
                "blip_id": 1324,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Puppeteer",
                "display_name": "Puppeteer",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "318",
                "tag": "new",
                "description": "<p>In the previous Radar we mentioned <a href=\"/radar/tools/headless-chrome-for-front-end-test\">Headless Chrome for front-end test</a>. With the adoption of <a href=\"http://devtools.chrome.com\">Chrome DevTools Protocol</a> (CDP) by other browsers a new set of libraries is emerging for browser automation and testing. CDP allows for fine-grained control over the browser even in headless mode. New high-level libraries are being created using CDP for testing and automation. <strong><a href=\"https://pptr.dev\">Puppeteer</a></strong> is one of these new libraries. It can drive headless Chrome through a single-page application, obtain time-trace for performance diagnostics and more. Our teams found it faster and also more flexible than alternatives based on WebDriver.</p>",
                "radarId": 87,
                "id": "en_2018-11_1324",
                "blip_selector": "puppeteer"
            },
            {
                "blip_id": 1309,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Chaos Katas",
                "display_name": "Chaos Katas",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "168",
                "tag": "new",
                "description": "<p><strong>Chaos Katas</strong> is a technique that our teams have developed to train and upskill infrastructure and platform engineers. It combines <a href=\"/radar/techniques/chaos-engineering\">Chaos Engineering</a> techniques—that is, creating failures and outages in a controlled environment—with the systematic teaching and training approach of <a href=\"https://en.wikipedia.org/wiki/Kata\">Kata</a>. Here, Kata refers to code patterns that trigger controlled failures, allowing engineers to discover the problem, recover from the failure, run postmortem and find the root cause. Repeated execution of Katas helps engineers to internalize their new skills.</p>",
                "radarId": 13,
                "id": "en_2018-11_1309",
                "blip_selector": "chaos-katas"
            },
            {
                "blip_id": 1313,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Request-response events in user-facing workflows",
                "display_name": "Request-response events in user-facing workflows",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "113",
                "tag": "new",
                "description": "<p>On a number of occasions we have seen system designs that use <strong>request-response events in user-facing workflows</strong>. In these cases, the UI is blocked or the user has to wait for a new page to load until a corresponding response message to a request message is received. The main reasons cited for designs like this are performance or a unified approach to communication between backends for synchronous and asynchronous use cases. We feel that the increased complexity—in development, testing and operations—far outweighs the benefit of having a unified approach, and we strongly suggest to use synchronous HTTP requests when synchronous communication between backend services is needed. When implemented well, communication using HTTP rarely is a bottleneck in a distributed system.</p>",
                "radarId": 24,
                "id": "en_2018-11_1313",
                "blip_selector": "request-response-events-in-user-facing-workflows"
            },
            {
                "blip_id": 1149,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Cypress",
                "display_name": "Cypress",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "66",
                "tag": "move",
                "description": "<p>Running end-to-end tests can present challenges, such as the long duration of the running process, the flakiness of some tests and the challenges of fixing failures in CI when running tests in headless mode. Our teams have had very good experiences with <a href=\"http://www.cypress.io/\"><strong>Cypress</strong></a> by solving common issues such as lack of performance and long wait time for responses and resources to load. Cypress is a useful tool that helps developers build end-to-end tests and records all test steps as a video in an MP4 file to make it easier to identify errors.</p>",
                "radarId": 52,
                "id": "en_2018-11_1149",
                "blip_selector": "cypress"
            },
            {
                "blip_id": 1269,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "acs-engine",
                "display_name": "acs-engine",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "84",
                "tag": "new",
                "description": "<p>Azure Container Service Engine (<a href=\"https://github.com/Azure/acs-engine\"><strong>acs-engine</strong></a>) is an Azure Resource Manager (ARM) template generator. The required configurations of the cluster are defined in a JSON file; acs-engine reads these <a href=\"https://github.com/Azure/acs-engine/blob/master/docs/clusterdefinition.md\">cluster definitions</a> and generates a number of files that can be consumed by ARM. The tool also provides flexibility to choose different orchestrators—including <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>, <a href=\"https://dcos.io/\">DC/OS</a>, <a href=\"https://www.openshift.com/\">OpenShift</a>, <a href=\"https://docs.docker.com/engine/swarm/\">Swarm mode</a> and Swarm—and to configure features and agents of the cluster. We’ve been using acs-engine in a number of projects and would recommend it for managing clusters in Azure Container Service.</p>",
                "radarId": 49,
                "id": "en_2018-11_1269",
                "blip_selector": "acs-engine"
            },
            {
                "blip_id": 1282,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Optimal Workshop",
                "display_name": "Optimal Workshop",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "39",
                "tag": "new",
                "description": "<p>UX research demands data collection and analysis to make better decisions about the products we need to build. <a href=\"https://www.optimalworkshop.com\"><strong>Optimal Workshop</strong></a> is a suite of tools that helps to do this digitally. Features such as first-click or card sorting help to both validate prototypes and improve website navigation and information display. For distributed teams, in particular, benefit from Optimal Workshop as it lets them conduct remote research.</p>",
                "radarId": 70,
                "id": "en_2018-11_1282",
                "blip_selector": "optimal-workshop"
            },
            {
                "blip_id": 1298,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Four key metrics",
                "display_name": "Four key metrics",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "150",
                "tag": "new",
                "description": "<p>The <a href=\"https://devops-research.com/research.html\">State of DevOps</a> report, first published in 2014, states that high-performing teams create high-performing organizations. Recently, the team behind the report released <a href=\"https://itrevolution.com/book/accelerate/\">Accelerate</a>, which describes the scientific method they've used in the report. A key takeaway of both are the <strong>four key metrics</strong> to support software delivery performance: lead time, deployment frequency, mean time to restore (MTTR), and change fail percentage. As a consultancy that has helped many organizations transform, these metrics have come up time and time again as a way to help organizations determine whether they're improving the overall performance. Each metric creates a virtuous cycle and focuses the teams on continuous improvement: to reduce lead time, you reduce wasteful activities which, in turn, lets you deploy more frequently; deployment frequency forces your teams to improve their practices and automation; your speed to recover from failure is improved by better practices, automation and monitoring which reduces the frequency of failures.</p>",
                "radarId": 5,
                "id": "en_2018-11_1298",
                "blip_selector": "four-key-metrics"
            },
            {
                "blip_id": 1332,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Resin.io",
                "display_name": "Resin.io",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "252",
                "tag": "new",
                "description": "<p><strong><a href=\"https://resin.io/\">Resin.io</a></strong> is an Internet of Things (IoT) platform that does one thing and does it well: it deploys containers onto devices. Developers use a software as a service (SaaS) portal to manage devices and assign applications, defined by Dockerfiles, to them. The platform can build containers for various hardware types and deploys the images over the air. For the containers, Resin.io uses <a href=\"https://www.balena.io/\">balena</a>, an engine based on the Moby framework created by <a href=\"/radar/platforms/docker\">Docker</a>. The platform is still under development, has some rough edges and lacks some features (e.g., working with private registries), but the current feature set, including the option to ssh into a container on a device from the web portal, points toward a promising future.</p>",
                "radarId": 44,
                "id": "en_2018-11_1332",
                "blip_selector": "resin-io"
            },
            {
                "blip_id": 1296,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "MMKV",
                "display_name": "MMKV",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "306",
                "tag": "new",
                "description": "<p>An open source framework developed by <a href=\"/radar/platforms/wechat\">WeChat</a>, <strong><a href=\"https://github.com/Tencent/MMKV\">MMKV</a></strong> provides fast key-value storage for mobile apps. It uses iOS memory-mapping features to avoid the need to explicitly save changes and is extremely fast and performant. In the event of an unexpected crash, MMKV allows the app to restore the data quickly.</p>",
                "radarId": 77,
                "id": "en_2018-11_1296",
                "blip_selector": "mmkv"
            },
            {
                "blip_id": 1334,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Rook",
                "display_name": "Rook",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "258",
                "tag": "new",
                "description": "<p><strong><a href=\"https://rook.io/\">Rook</a></strong> is an open source cloud native storage orchestrator for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Rook integrates with <a href=\"/radar/platforms/ceph\">Ceph</a> and brings File, Block and Object storage systems into the Kubernetes cluster, running them seamlessly alongside other applications and services that are consuming the storage. By using Kubernetes operators, Rook orchestrates Ceph at the control plane and stays clear of the data path between applications and Ceph. Storage is one of the important components of cloud-native computing and we believe that Rook, though still an incubating-level project at <a href=\"https://www.cncf.io/\">CNCF</a>, takes us a step closer to self-sufficiency and portability across public cloud and on-premise deployments.</p>",
                "radarId": 45,
                "id": "en_2018-11_1334",
                "blip_selector": "rook"
            },
            {
                "blip_id": 1260,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "TICK Stack",
                "display_name": "TICK Stack",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "258",
                "tag": "move",
                "description": "<p><a href=\"http://www.influxdata.com/time-series-platform/\"><strong>TICK Stack</strong></a> is a collection of open source components that combine to deliver a platform for easily storing, visualizing and monitoring time series data such as metrics and events. The components are: <a href=\"https://www.influxdata.com/time-series-platform/telegraf/\">Telegraf</a>, a server agent for collecting and reporting metrics; <a href=\"https://www.influxdata.com/time-series-platform/influxdb/\">InfluxDB</a>, a high-performance time series database; <a href=\"https://www.influxdata.com/time-series-platform/chronograf/\">Chronograf</a>, a user interface for the platform; and <a href=\"https://www.influxdata.com/time-series-platform/kapacitor/\">Kapacitor</a>, a data-processing engine that can process, stream and batch data from InfluxDB. Unlike <a href=\"/radar/tools/prometheus\">Prometheus</a>, which is based on the pull model, TICK Stack is based on the push model of collecting data. The heart of the system is the InfluxDB component, which is one of the best time series databases. The stack is backed by InfluxData and although you need the enterprise version for features such as database clustering, it's still a fairly good choice for monitoring. We're using it in a few places in production and have had good experiences with it.</p>",
                "radarId": 32,
                "id": "en_2018-11_1260",
                "blip_selector": "tick-stack"
            },
            {
                "blip_id": 1270,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "git-secrets",
                "display_name": "git-secrets",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "60",
                "tag": "new",
                "description": "<p>Security continues to be paramount, and inadvertently checking credentials and other secrets into source control is a major attack vector. <a href=\"https://github.com/awslabs/git-secrets\"><strong>git-secrets</strong></a> is a simple tool that prevents you from committing passwords and other sensitive information to a git repository. It can also scan all historical revisions before making a repository public, if you want to ensure you've never accidentally checked in a credential. git-secrets comes with built-in support for common <a href=\"/radar/platforms/aws\">AWS</a> keys and credentials and can be set up quickly for other providers too.</p>",
                "radarId": 53,
                "id": "en_2018-11_1270",
                "blip_selector": "git-secrets"
            },
            {
                "blip_id": 1308,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Incremental delivery with COTS",
                "display_name": "Incremental delivery with COTS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "142",
                "tag": "new",
                "description": "<p>At ThoughtWorks, as early adopters and leaders in the agile space, we've been proponents of the practice of incremental delivery. We've also advised many clients to look at off-the-shelf software through a \"Can this be released incrementally?\" lens. This has often been difficult because of the big-bang approach of most vendors which usually involves migrating large amounts of data. Recently, however, we've also had success using <strong>incremental delivery with COTS</strong> (commercial off-the-shelf), launching specific business processes incrementally to smaller subsets of users. We recommend you assess whether you can apply this practice to the vendor software of your choice, to help reduce the risks involved in big-bang deliveries.</p>",
                "radarId": 15,
                "id": "en_2018-11_1308",
                "blip_selector": "incremental-delivery-with-cots"
            },
            {
                "blip_id": 473,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "160",
                "name": "Azure",
                "display_name": "Azure",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "213",
                "tag": "stay",
                "description": "<p>Microsoft has steadily improved <a href=\"http://azure.microsoft.com\"><strong>Azure</strong></a> and today not much separates the core cloud experience provided by the major cloud providers—Amazon, Google and Microsoft. The cloud providers seem to agree and seek to differentiate themselves in other areas such as features, services and cost structure. Microsoft is the provider who shows real interest in the legal requirements of European companies. They’ve a nuanced and plausible strategy, including unique offerings such as <a href=\"http://azure.microsoft.com/en-us/global-infrastructure/germany/\">Azure Germany</a> and <a href=\"/radar/platforms/azure-stack\">Azure Stack</a>, which gives some certainty to European companies in anticipation of the <a href=\"http://www.thoughtworks.com/insights/blog/gdpr-it-s-time-rethink-your-approach-privacy\">GDPR</a> and possible legislative changes in the United States.</p>",
                "radarId": 28,
                "id": "en_2018-11_473",
                "blip_selector": "azure"
            },
            {
                "blip_id": 1289,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Stanford CoreNLP",
                "display_name": "Stanford CoreNLP",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "33",
                "tag": "new",
                "description": "<p>We have more and more projects that require unstructured data processing. To extract meaningful business information from text data is a key technique. <a href=\"https://stanfordnlp.github.io/CoreNLP/\"><strong>Stanford CoreNLP</strong></a> is a Java-based set of natural language processing tools. It supports named-entity recognition, relationship extraction, sentiment analysis and text classification as well as multiple languages, including English, Chinese and Arabic. We also find tools usable to label corpus and training models for our scenario. With Stanford CoreNLP, we were able to use the latest research in the field of NLP to solve various business problems.</p>",
                "radarId": 71,
                "id": "en_2018-11_1289",
                "blip_selector": "stanford-corenlp"
            },
            {
                "blip_id": 1336,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "Google Cloud Dataflow",
                "display_name": "Google Cloud Dataflow",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "210",
                "tag": "new",
                "description": "<p><a href=\"https://cloud.google.com/dataflow/\"><strong>Google Cloud Dataflow</strong></a> is useful in traditional ETL scenarios for reading data from a source, transforming it and then storing it to a sink, with configurations and scaling being managed by dataflow. Dataflow supports Java, Python and Scala and provides wrappers for connections to various types of data sources. However, the current version won’t let you add additional libraries, which may make it unsuitable for certain data manipulations. You also can’t change the dataflow DAG dynamically. Hence, if your ETL has conditional execution flows based on parameters, you may not be able to use dataflow without workarounds.</p>",
                "radarId": 37,
                "id": "en_2018-11_1336",
                "blip_selector": "google-cloud-dataflow"
            },
            {
                "blip_id": 1317,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Bounded Buy",
                "display_name": "Bounded Buy",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "165",
                "tag": "new",
                "description": "<p>Most organizations that don't have the resources to custom-build their software will select out-of-the-box or SaaS solutions to meet their requirements. All too often, however, these solutions tend to aggressively expand their scope to entangle themselves into every part of your business. This blurs integration boundaries and makes change less predictable and slow. To mitigate this risk, we recommend that organizations develop a clear target capability model and then employ a strategy we call <strong>Bounded Buy</strong> —that is, only select vendor products that are modular and decoupled and can be contained within the <a href=\"https://martinfowler.com/bliki/BoundedContext.html\">Bounded Context</a> of a single business capability. This modularity and independent deliverability should be included in the acceptance criteria for a <a href=\"https://www.slideshare.net/tgriffo/agile-australia-2017-hypothesisdriven-cots-software-selection-tiago-griffo\">vendor selection process</a>.</p>",
                "radarId": 3,
                "id": "en_2018-11_1317",
                "blip_selector": "bounded-buy"
            },
            {
                "blip_id": 1337,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Knative",
                "display_name": "Knative",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "234",
                "tag": "new",
                "description": "<p>As application developers, we love to focus on solving core business problems and let the underlying platform handle the boring but difficult tasks of deploying, scaling and managing applications. Although <a href=\"/radar/techniques/serverless-architecture\">serverless architecture</a> is a step in that direction, most of the popular offerings are tied to a proprietary implementation, which means vendor lock-in. <a href=\"https://cloud.google.com/knative/\"><strong>Knative</strong></a> tries to address this by being an open source serverless platform that integrates well with the popular <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> ecosystem. With Knative you can model computations on request in a supported framework of your choice (including Ruby on Rails, Django and Spring among others); subscribe, deliver and manage events; integrate with familiar CI and CD tools; and build containers from source. By providing a set of middleware components for building source-centric and container-based applications that can be elastically scaled, Knative is an attractive platform that deserves to be assessed for your serverless needs.</p>",
                "radarId": 41,
                "id": "en_2018-11_1337",
                "blip_selector": "knative"
            },
            {
                "blip_id": 1263,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "225",
                "name": "Snyk",
                "display_name": "Snyk",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "24",
                "tag": "new",
                "description": "<p><strong><a href=\"https://snyk.io/\">Snyk</a></strong> helps you find, fix and monitor known vulnerabilities in npm, Ruby, Python, Scala, Golang, .NET, PHP, Java and Docker dependency trees. When added to your build pipeline, Snyk continuously monitors and tests the library dependency tree against a hosted vulnerability database and suggests the minimal direct dependency version upgrade needed for remediation.</p>",
                "radarId": 59,
                "id": "en_2018-11_1263",
                "blip_selector": "snyk"
            },
            {
                "blip_id": 1327,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Camunda",
                "display_name": "Camunda",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "282",
                "tag": "new",
                "description": "<p>We tend to be quite skeptical of business process model and notation (BPMN) tools in general as they're often associated with low-code environments and their downsides. Although the OSS BPMN framework <strong><a href=\"https://camunda.com/\">Camunda</a></strong> provides some of this whizziness, it also offers workflow and decision engines that can be directly integrated as a library in your Java code. This makes it easy to test, version and refactor workflows. Camunda also integrates with Spring and Spring Boot, among other frameworks, making it a solid choice.</p>",
                "radarId": 81,
                "id": "en_2018-11_1327",
                "blip_selector": "camunda"
            },
            {
                "blip_id": 909,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Visual Studio Code",
                "display_name": "Visual Studio Code",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "12",
                "tag": "move",
                "description": "<p><strong><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a></strong> is Microsoft's free IDE editor, available across platforms. We've had good experience using this for front-end development using React and <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>, and back-end languages such as GoLang, without having to switch between different editors. The tooling, language support and extensions for Visual Studio Code continue to soar and get better. We'd particularly like to call out <a href=\"/radar/tools/visual-studio-live-share\">Visual Studio Live Share</a> for real-time collaboration and remote pairing. While complex projects in statically typed languages, such as Java, .NET or C++, will likely find better support from the more mature IDEs from Microsoft or Jetbrains, we find that Visual Studio Code is increasingly becoming a tool of choice among infrastructure and front-end development teams.</p>",
                "radarId": 61,
                "id": "en_2018-11_909",
                "blip_selector": "visual-studio-code"
            },
            {
                "blip_id": 1271,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "LocalStack",
                "display_name": "LocalStack",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "48",
                "tag": "new",
                "description": "<p>One of the challenges of using cloud services is being able to develop and test locally using those services. <a href=\"https://github.com/localstack/localstack\"><strong>LocalStack</strong></a> solves this problem for <a href=\"/radar/platforms/aws\">AWS</a> by providing local <a href=\"https://martinfowler.com/bliki/TestDouble.html\">test double</a> implementations of a wide range of AWS services, including S3, Kinesis, DynamoDB and Lambda. It builds on top of existing best-of-breed tools such as <a href=\"https://github.com/mhart/kinesalite\">Kinesalite</a>, <a href=\"https://github.com/mhart/dynalite\">Dynalite</a> and <a href=\"https://github.com/spulec/moto\">Moto</a> and adds isolated processes and error injection functionality. LocalStack is very easy to use and ships with a simple JUnit runner and a JUnit 5 extension. We're using it in a few of our projects and have been impressed with it.</p>",
                "radarId": 55,
                "id": "en_2018-11_1271",
                "blip_selector": "localstack"
            },
            {
                "blip_id": 1316,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Apache Atlas",
                "display_name": "Apache Atlas",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "191",
                "tag": "new",
                "description": "<p>With the growing and diverse data needs of enterprises comes a growing need for metadata management. <a href=\"https://atlas.apache.org/\"><strong>Apache Atlas</strong></a> is a metadata management framework that fits the data governance needs of enterprises. Atlas provides capabilities to model types for metadata, classify data assets, track the data lineage and enable data discovery. However, when building a metadata management platform, we need to be careful not to repeat the mistakes of <a href=\"/radar/techniques/master-data-management\">master data management</a>.</p>",
                "radarId": 26,
                "id": "en_2018-11_1316",
                "blip_selector": "apache-atlas"
            },
            {
                "blip_id": 1339,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Glitch",
                "display_name": "Glitch",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "204",
                "tag": "new",
                "description": "<p>We've been intrigued by <strong><a href=\"https://glitch.com/\">Glitch</a></strong>, which is a collaborative online development environment that lets you easily copy and adapt (or \"remix\") existing web apps or create your own. Rooted in the \"tinkerer\" ethos, it's ideal for people learning to code but it has the capability to support more complex applications. The main focus is on JavaScript and <a href=\"/radar/platforms/node-js\">Node.js</a>, but it also has limited support for other languages. With integrated live editing, hosting, sharing and automatic source versioning, Glitch offers a refreshing and distinctive take on collaborative programming.</p>",
                "radarId": 36,
                "id": "en_2018-11_1339",
                "blip_selector": "glitch"
            },
            {
                "blip_id": 1320,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Apache Beam",
                "display_name": "Apache Beam",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "276",
                "tag": "new",
                "description": "<p><strong><a href=\"https://beam.apache.org/\">Apache Beam</a></strong> is an open source unified programming model for defining and executing both batch and streaming data-parallel processing pipelines. Beam provides a portable API layer for describing these pipelines independent of execution engines (or runners) such as <a href=\"https://spark.apache.org/\">Apache Spark</a>, <a href=\"https://flink.apache.org/\">Apache Flink</a> or <a href=\"/radar/platforms/google-cloud-dataflow\">Google Cloud Dataflow</a>. Different runners have different capabilities and providing a portable API is a difficult task. Beam tries to strike a delicate balance by actively pulling innovations from these runners into the Beam model and also working with the community to influence the roadmap of these runners. Beam has a rich set of <a href=\"http://beam.apache.org/documentation/io/built-in/\">built-in I/O transformations</a> that cover most of the data pipeline needs and it also provides a mechanism to implement <a href=\"http://beam.apache.org/documentation/io/authoring-overview/\">custom transformations</a> for specific use cases. The portable API and extensible IO transformations make a compelling case for assessing Apache Beam for data pipeline needs.</p>",
                "radarId": 80,
                "id": "en_2018-11_1320",
                "blip_selector": "apache-beam"
            },
            {
                "blip_id": 1319,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Polly.js",
                "display_name": "Polly.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "306",
                "tag": "new",
                "description": "<p><a href=\"https://netflix.github.io/pollyjs/\"><strong>Polly.js</strong></a> is a simple tool that helps teams test JavaScript websites and applications. Our teams particularly like that it enables them to intercept and stub HTTP interactions which allows for easier and faster testing of JavaScript code without having to spin up dependent services or components.</p>",
                "radarId": 85,
                "id": "en_2018-11_1319",
                "blip_selector": "polly-js"
            },
            {
                "blip_id": 1250,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "285",
                "name": "WebAssembly",
                "display_name": "WebAssembly",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "348",
                "tag": "stay",
                "description": "<p><a href=\"http://webassembly.org/\"><strong>WebAssembly</strong></a> is a big step forward in the capabilities of the browser as a code execution environment. Supported by all major browsers and backward compatible, it's a binary compilation format designed to run in the browser at near native speeds. It opens up the range of languages you can use to write front-end functionality, with early focus on C, C++ and Rust, and it's also an LLVM compilation target. When run in the sandbox, it can interact with JavaScript and shares the same permissions and security model. When used with <a href=\"http://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/\">Firefox's new streaming compiler</a>, it also results in faster page initialization. Although it's still early days, this W3C standard is definitely one to start exploring.</p>",
                "radarId": 92,
                "id": "en_2018-11_1250",
                "blip_selector": "webassembly"
            },
            {
                "blip_id": 1281,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Heptio Ark",
                "display_name": "Heptio Ark",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "65",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/heptio/ark\">Heptio Ark</a></strong> is a tool for managing disaster recovery for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> clusters and persistent volumes. Ark is easy to use and configure and lets you back up and restore your clusters through a series of checkpoints. With Ark you can significantly reduce recovery time in case of an infrastructure failure, easily migrate Kubernetes resources from one cluster to another and replicate the production environment for testing and troubleshooting. Ark supports key backup <a href=\"https://github.com/heptio/ark/blob/master/docs/support-matrix.md\">storage providers</a> (including AWS, Azure and Google Cloud) and, as of version 0.6.0, a plugin system that adds compatibility for additional backup and volume storage platforms. Managed Kubernetes environments, such as <a href=\"/radar/platforms/gke\">GKE</a>, provide these services out of the box. However, if you're operating Kubernetes either on premise or in the cloud, take a closer look at Heptio Ark for disaster recovery.</p>",
                "radarId": 66,
                "id": "en_2018-11_1281",
                "blip_selector": "heptio-ark"
            },
            {
                "blip_id": 1291,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Codefresh",
                "display_name": "Codefresh",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "78",
                "tag": "new",
                "description": "<p><a href=\"https://codefresh.io/\"><strong>Codefresh</strong></a> is a hosted CI server similar to <a href=\"/radar/tools/circleci\">CircleCI</a> or <a href=\"/radar/tools/buildkite\">Buildkite</a>. It's container-centric, making Dockerfiles and container-hosting clusters first-class entities. We like that the tool encourages a pipelined delivery approach and supports branching and merging. Early reports from our teams are positive, but we've yet to see how it works for larger projects and complex pipelines.</p>",
                "radarId": 64,
                "id": "en_2018-11_1291",
                "blip_selector": "codefresh"
            },
            {
                "blip_id": 1199,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Istio",
                "display_name": "Istio",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "228",
                "tag": "new",
                "description": "<p>When building and operating a <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a> ecosystem, one of the early questions to answer is how to implement cross-cutting concerns such as service discovery, service-to-service and origin-to-service security, observability (including telemetry and distributed tracing), rolling releases and resiliency. Over the last couple of years, our default answer to this question has been using a <a href=\"/radar/techniques/service-mesh\">service mesh</a> technique. A service mesh offers the implementation of these cross-cutting capabilities as an infrastructure layer that is configured as code. The policy configurations can be consistently applied to the whole ecosystem of microservices; enforced on both in and out of mesh traffic (via the mesh proxy as a gateway) as well as on the traffic at each service (via the same mesh proxy as a sidecar container). While we're keeping a close eye on the progress of different open source service mesh projects such as <a href=\"https://linkerd.io/\">Linkerd</a>, we've successfully used <strong><a href=\"https://istio.io/\">Istio</a></strong> in production with a surprisingly easy-to-configure operating model.</p>",
                "radarId": 40,
                "id": "en_2018-11_1199",
                "blip_selector": "istio"
            },
            {
                "blip_id": 1315,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "MockK",
                "display_name": "MockK",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "324",
                "tag": "new",
                "description": "<p><a href=\"https://mockk.io\"><strong>MockK</strong></a> is a library for mocking written in <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a>. Its main philosophy is to provide first-class support for Kotlin language features such as <a href=\"https://kotlinlang.org/docs/reference/coroutines-overview.html\">Coroutines</a> or lambda blocks. As a native library, it helps our teams to write clean and concise code on testing Kotlin applications instead of using incommodious wrappers of Mockito or PowerMock.</p>",
                "radarId": 78,
                "id": "en_2018-11_1315",
                "blip_selector": "mockk"
            },
            {
                "blip_id": 1322,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Q#",
                "display_name": "Q#",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "324",
                "tag": "new",
                "description": "<p>Quantum computing currently exists in a twilight zone of being available for testing without having arrived yet. While we're still waiting for the hardware to arrive, we can experiment with and learn from languages and simulators. Although IBM and others have been making good progress, we've paid particular attention to Microsoft's efforts based around the <a href=\"https://docs.microsoft.com/en-us/quantum/quantum-qr-intro?view=qsharp-preview\"><strong>Q#</strong></a> language and its simulator (32 qubits locally and 40 on Azure). If you want to start wrapping your head around the potential future of programming, check out their set of <a href=\"https://github.com/Microsoft/Quantum\">samples on GitHub</a>.</p>",
                "radarId": 88,
                "id": "en_2018-11_1322",
                "blip_selector": "q"
            },
            {
                "blip_id": 1304,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "\"Handcranking\" of Hadoop clusters using config management tools",
                "display_name": "\"Handcranking\" of Hadoop clusters using config management tools",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "169",
                "tag": "new",
                "description": "<p>When organizations choose a <a href=\"https://hadoop.apache.org/\">vanilla Hadoop</a> or <a href=\"https://spark.apache.org/\">Spark</a> distribution instead of one of the vendor distributions, they have to decide how they want to provision and manage the cluster. Occasionally, we see <strong>\"handcranking\" of Hadoop clusters using config management tools</strong> such as <a href=\"https://www.ansible.com/\">Ansible</a>, <a href=\"https://www.chef.io/\">Chef</a> and others. Although these tools are great at provisioning immutable infrastructure components, they're not very useful when you have to manage stateful systems and can often lead to significant effort trying to manage and evolve clusters using these tools. We instead recommend using tools such as <a href=\"https://ambari.apache.org/\">Ambari</a> to provision and manage your stateful Hadoop or Spark clusters.</p>",
                "radarId": 19,
                "id": "en_2018-11_1304",
                "blip_selector": "handcranking-of-hadoop-clusters-using-config-management-tools"
            },
            {
                "blip_id": 1321,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "WebFlux",
                "display_name": "WebFlux",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "354",
                "tag": "new",
                "description": "<p>Spring Framework 5, released over a year ago, embraces <a href=\"https://www.reactive-streams.org/\">reactive streams</a>, a standard for asynchronous stream processing with non-blocking backpressure. The <a href=\"https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html\"><strong>WebFlux</strong></a> module introduces a reactive alternative to the traditional Spring MVC module for writing web applications in the Spring ecosystem. After working with it on a number of applications, our teams have come away impressed and report that the reactive (functional) approach improves code readability and system throughput. They do note, though, that adopting WebFlux requires a significant shift in thinking and recommend to factor this into the decision to choose WebFlux over Spring MVC.</p>",
                "radarId": 93,
                "id": "en_2018-11_1321",
                "blip_selector": "webflux"
            },
            {
                "blip_id": 1280,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Grafeas",
                "display_name": "Grafeas",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "71",
                "tag": "new",
                "description": "<p>We're continually on the lookout for tools and techniques that allow delivery teams to work independently from the rest of a larger organization while staying within its security and risk guardrails. <strong><a href=\"https://github.com/grafeas/grafeas\">Grafeas</a></strong> is such a tool. It lets organizations publish authoritative metadata about software artifacts—Docker images, libraries, packages—that is then accessible from build scripts or other automated compliance controls. The access control mechanisms allow for a separation of responsibility between the teams that publish approvals or vulnerabilities and the teams that build and deploy software. Although several organizations, including Google and JFrog, use Grafeas in their workflows, note that the tool is still in alpha.</p>",
                "radarId": 65,
                "id": "en_2018-11_1280",
                "blip_selector": "grafeas"
            },
            {
                "blip_id": 1325,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "PredictionIO",
                "display_name": "PredictionIO",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "312",
                "tag": "new",
                "description": "<p><a href=\"http://predictionio.apache.org/\"><strong>PredictionIO</strong></a> is an open source machine-learning server. Developers and data scientists can use it to build intelligent applications for prediction. Like all intelligent applications, PredictionIO has three parts: data collection and storage, model training, and model deployment and expose service. Developers could focus on implementing data-processing logic, model algorithm and prediction logic based on the corresponding interfaces and liberate themselves from data storage and model training deployment. In our experience, PredictionIO can support both small and large volumes of data with low concurrency. We mostly use PredictionIO to build predictive services for small and medium-sized enterprises or as a proof of concept when building more complex, customized prediction engines.</p>",
                "radarId": 86,
                "id": "en_2018-11_1325",
                "blip_selector": "predictionio"
            },
            {
                "blip_id": 1305,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "kube-bench",
                "display_name": "kube-bench",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "52",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/aquasecurity/kube-bench\"><strong>kube-bench</strong></a> is an example of an <a href=\"/radar/techniques/infrastructure-configuration-scanner\">infrastructure configuration scanner</a> that automates checking your Kubernetes configuration against the <a href=\"https://www.cisecurity.org/benchmark/kubernetes/\">CIS benchmark for K8s</a>. It covers user authentication, permissions and secure data among other areas. Our teams have found kube-bench valuable in the identification of vulnerable configurations.</p>",
                "radarId": 68,
                "id": "en_2018-11_1305",
                "blip_selector": "kube-bench"
            },
            {
                "blip_id": 1330,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Distroless Docker images",
                "display_name": "Distroless Docker images",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "155",
                "tag": "new",
                "description": "<p>When building <a href=\"/radar/platforms/docker\">Docker</a> images for our applications, we're often concerned with two things: the security and the size of the image. Traditionally, we've used <a href=\"/radar/techniques/container-security-scanning\">container security scanning</a> tools to detect and patch <a href=\"https://cve.mitre.org/\">common vulnerabilities and exposures</a> and small distributions such as <a href=\"https://alpinelinux.org/\">Alpine Linux</a> to address the image size and distribution performance. In this Radar, we're excited about addressing the security and size of containers with a new technique called <strong>distroless docker images</strong> , pioneered by Google. With this technique, the footprint of the image is reduced to the application, its resources and language runtime dependencies, without operating system distribution. The advantages of this technique include reduced noise of security scanners, smaller security attack surface, reduced overhead of patching vulnerabilities and even smaller image size for higher performance. Google has published a set of <a href=\"https://github.com/GoogleContainerTools/distroless\">distroless container images</a> for different languages. You can create distroless application images using the Google build tool <a href=\"https://bazel.build/\">Bazel</a>, which has rules for creating distroless containers or simply use multistage Dockerfiles. Note that distroless containers by default don't have a shell for debugging. However, you can easily find debug versions of distroless containers online, including a <a href=\"https://busybox.net/downloads/BusyBox.html\">busybox shell</a>.</p>",
                "radarId": 14,
                "id": "en_2018-11_1330",
                "blip_selector": "distroless-docker-images"
            },
            {
                "blip_id": 1318,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Nameko",
                "display_name": "Nameko",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2018-11",
                "theta": "300",
                "tag": "new",
                "description": "<p>One insight we gained after talking with our teams is that <a href=\"/radar/languages-and-frameworks/python-3\">Python</a> is making a comeback across many technology domains. In fact, it's well on its way to become the <a href=\"https://spectrum.ieee.org/at-work/innovation/the-2018-top-programming-languages\">most-used programming language</a>. In part, this is driven by its adoption by data scientists and in machine learning, but we also see teams adopting it to build microservices. <a href=\"https://www.nameko.io/\"><strong>Nameko</strong></a> is a super-lightweight microservices framework and an alternative to <a href=\"http://flask.pocoo.org/\">Flask</a> for writing services. Unlike Flask, Nameko only has a limited set of features that includes WebSocket, HTTP and AMQP support. We also like its focus on testability. If you don't need features such as templating that Flask provides, then Nameko is worth a look.</p>",
                "radarId": 84,
                "id": "en_2018-11_1318",
                "blip_selector": "nameko"
            }
        ]
    },
    {
        "date": "2019-04",
        "blips": [
            {
                "blip_id": 201904019,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Systems",
                "display_name": "Systems",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "24",
                "tag": "new",
                "description": "<p>It's easy to think of many of the processes we work within as linear chains of cause and effect. Most of the time we are working within more complex systems where positive and negative feedback loops influence outcomes. <strong><a href=\"https://github.com/lethain/systems\">Systems</a></strong> is a set of tools for describing, executing and visualizing systems diagrams. Using a compact DSL and running either standalone or within a Jupyter Notebook, it's super easy to describe fairly complex processes and the flow of information through them. It's pretty much a niche tool; but an interesting and fun one.</p>",
                "radarId": 63,
                "id": "en_2019-04_201904019",
                "blip_selector": "systems"
            },
            {
                "blip_id": 201904027,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Karate",
                "display_name": "Karate",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "317",
                "tag": "new",
                "description": "<p>Given our experience that tests are the only API specifications that really matter, we're always on the lookout for new tools that might help. <strong><a href=\"https://github.com/karatelabs/karate\">Karate</a></strong> is an API testing framework whose unique feature is that tests are written directly in Gherkin without relying on a general-purpose programming language to implement test behavior. Karate is really a domain-specific language for describing HTTP-based API tests. Although this approach is interesting and makes for some very readable specifications for simple tests, the special-purpose language for matching and validating payloads can become quite syntax-heavy and difficult to understand. It remains to be seen if more complex tests written in this style will be readable and maintainable over the long haul.</p>",
                "radarId": 91,
                "id": "en_2019-04_201904027",
                "blip_selector": "karate"
            },
            {
                "blip_id": 201904031,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Resilience4j",
                "display_name": "Resilience4j",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "332",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/resilience4j/resilience4j\"><strong>Resilience4j</strong></a> is a lightweight fault tolerance library inspired by Netflix <a href=\"/radar/tools/hystrix\">Hystrix</a>. We like its lightweight and modular structure where we pull in specific modules for specific capabilities such as circuit-breaking, rate-limiting, retry, and bulkhead. While <a href=\"/radar/techniques/service-mesh\">service meshes</a> are taking on some of the fault tolerance capabilities, fault tolerance libraries continue to remain a key component of our systems for more nuanced domain-specific fault tolerance behavior and for non-containerized services. With Hystrix going into <a href=\"https://github.com/Netflix/Hystrix/commit/a7df971cbaddd8c5e976b3cc5f14013fe6ad00e6#diff-04c6e90faac2675aa89e2176d2eec7d8\">maintenance mode</a>, Resilience4j becomes a default choice in the Java ecosystem. It can work with synchronous APIs as well as reactive ones. It also surfaces metrics to <a href=\"https://metrics.dropwizard.io/4.0.0/\">dropwizard metrics</a>, <a href=\"/radar/tools/prometheus\">Prometheus</a> and others using additional modules.</p>",
                "radarId": 79,
                "id": "en_2019-04_201904031",
                "blip_selector": "resilience4j"
            },
            {
                "blip_id": 201904015,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Terraform provider GoCD",
                "display_name": "Terraform provider GoCD",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "12",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/beamly/terraform-provider-gocd\">Terraform provider GoCD</a></strong> lets you build pipelines using <a href=\"/radar/tools/terraform\">Terraform</a>, a mature and widely used tool in the <a href=\"/radar/tools/infrastructure-as-code\">infrastructure as code</a> space. With this provider, you can write pipelines in the <a href=\"https://github.com/hashicorp/hcl\">HashiCorp Configuration Language (HCL)</a> that use all of the functionality Terraform provides, including workspaces, modules and remote state. This approach is an excellent alternative to <a href=\"https://github.com/gocd-contrib/gomatic\">Gomatic</a>, which we highlighted in the <a href=\"/radar/techniques/pipelines-as-code\">Pipelines as code</a> blip before. The Golang SDK used in this provider has automatic regression tests for the GoCD API which should minimize issues while upgrading.</p>",
                "radarId": 65,
                "id": "en_2019-04_201904015",
                "blip_selector": "terraform-provider-gocd"
            },
            {
                "blip_id": 1199,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "225",
                "name": "Istio",
                "display_name": "Istio",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "231",
                "tag": "move",
                "description": "<p><strong><a href=\"https://istio.io/\">Istio</a></strong> is becoming the de facto infrastructure to operationalize a <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a> ecosystem. Its out-of-the-box implementation of cross-cutting concerns — such as service discovery, service-to-service and origin-to-service security, observability (including telemetry and distributed tracing), rolling releases and resiliency — has been bootstrapping our microservices implementations very quickly. It's the main implementation of the <a href=\"/radar/techniques/service-mesh\">service mesh</a> technique we've been using. We've been enjoying its monthly releases and its continuous improvements with seamless upgrades. We use Istio to bootstrap our projects, starting with observability (tracing and telemetry) and service-to-service security. We're closely watching its improvements to service-to-service authentication everywhere in and outside of the mesh. We'd also like to see Istio establish best practices for configuration files to strike a balance between giving autonomy to service developers and control to the service mesh operators.</p>",
                "radarId": 24,
                "id": "en_2019-04_1199",
                "blip_selector": "istio"
            },
            {
                "blip_id": 201904051,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Cloudflare Workers",
                "display_name": "Cloudflare Workers",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "195",
                "tag": "new",
                "description": "<p>Most modern server-side or serverless code execution platforms are centered around containers or VMs. <strong><a href=\"https://www.cloudflare.com/products/cloudflare-workers/\">Cloudflare Workers</a></strong>, however, takes a different approach to hosting a serverless computing offering. It uses <a href=\"https://v8docs.nodesource.com/node-0.8/d5/dda/classv8_1_1_isolate.html\">V8 Isolates</a>, the open source JavaScript engine developed for Chrome, to run functions as a service (FaaS) on their extensive CDN network. Code can be written in JavaScript or anything that compiles to <a href=\"/radar/languages-and-frameworks/webassembly\">WebAssembly</a> and data can be accessed from Cloudflare's cache or key-value store. The major benefit for developers is performance: by being on the edge network, close to end users, cold-starts take only five milliseconds. For the provider the benefits include both the ability to densely pack isolates because of their lower memory overhead and faster performance through reduced process context switching. This is definitely an intriguing approach to monitor and assess.</p>",
                "radarId": 28,
                "id": "en_2019-04_201904051",
                "blip_selector": "cloudflare-workers"
            },
            {
                "blip_id": 201904055,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Smart contracts",
                "display_name": "Smart contracts",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "144",
                "tag": "new",
                "description": "<p>The more experience we gain with using distributed ledger technologies (DLTs), the more we encounter the rough edges around the current state of <strong><a href=\"https://en.wikipedia.org/wiki/Smart_contract\">smart contracts</a></strong>. Committing automated, irrefutable, irreversible contracts on ledger sounds great in theory. The problems arise when you consider how to use modern software delivery techniques to developing them, as well as the differences between implementations. Immutable data is one thing, but immutable business logic is something else entirely! It's really important to think about whether to include logic in a smart contract. We've also found very different operational characteristics between different implementations. For example, even though contracts can evolve, different platforms support this evolution to a greater or lesser extent. Our advice is to think long and hard before committing business logic to a smart contract and to weigh the merits of the different platforms before you do.</p>",
                "radarId": 13,
                "id": "en_2019-04_201904055",
                "blip_selector": "smart-contracts"
            },
            {
                "blip_id": 201904020,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Taurus",
                "display_name": "Taurus",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "18",
                "tag": "new",
                "description": "<p><strong><a href=\"https://gettaurus.org/\">Taurus</a></strong> is a handy application and service performance testing tool written in Python. It wraps many performance testing executors, including <a href=\"/radar/tools/gatling\">Gatling</a> and <a href=\"/radar/tools/locust\">Locust</a>. You can run it from the command line and easily integrate it with continuous delivery pipelines to run performance tests at different stages of the pipeline. Taurus also has great reporting either as console text-based output or integrated with an interactive web UI. Our teams have found that configuring Taurus YAML files is easy because you can use multiple files to describe each test scenario and refer to underlying executer's scenario definitions.</p>",
                "radarId": 64,
                "id": "en_2019-04_201904020",
                "blip_selector": "taurus"
            },
            {
                "blip_id": 201904039,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Vapor",
                "display_name": "Vapor",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "354",
                "tag": "new",
                "description": "<p>We're strong proponents of <a href=\"/radar/techniques/polyglot-programming\">polyglot programming</a> but recognize that in some cases it can make sense to focus on a single programming language. If you're heavily invested in Swift, most likely because of iOS development, and you find yourself looking for a technology to write server-side services, have a look at <strong><a href=\"https://vapor.codes/\">Vapor</a></strong>, a modern web framework for Swift that has gained a fair amount of popularity.</p>",
                "radarId": 98,
                "id": "en_2019-04_201904039",
                "blip_selector": "vapor"
            },
            {
                "blip_id": 201904044,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "HiveRunner",
                "display_name": "HiveRunner",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "290",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/klarna/HiveRunner\">HiveRunner</a></strong> is an open-source unit test framework for Apache Hadoop <a href=\"/radar/languages-and-frameworks/hive\">Hive</a> queries based on JUnit4. When writing nontrivial analytics or data pipelines in Hive SQL, we found HiveRunner to be a good enabler for writing tests and even TDDing out some moderately complicated SQL. HiveRunner enables you to write Hive SQL as releasable tested artifacts.</p>",
                "radarId": 73,
                "id": "en_2019-04_201904044",
                "blip_selector": "hiverunner"
            },
            {
                "blip_id": 201904009,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Cilium",
                "display_name": "Cilium",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "72",
                "tag": "new",
                "description": "<p>Traditional Linux network security approaches, such as iptables, filter on IP address and TCP/UDP ports. However, these IP addresses frequently churn in dynamic microservices environments. By leveraging Linux <a href=\"http://www.brendangregg.com/ebpf.html\">eBPF</a>, <strong><a href=\"https://cilium.io/\">Cilium</a></strong> provides API-aware networking and security by transparently inserting security in a way that is based on service, pod or container identity in contrast to IP address identification. By decoupling security from addressing, Cilium could play a significant role as a new network protection layer and we recommend you to check it out.</p>",
                "radarId": 55,
                "id": "en_2019-04_201904009",
                "blip_selector": "cilium"
            },
            {
                "blip_id": 201904062,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Transfer learning for NLP",
                "display_name": "Transfer learning for NLP",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "126",
                "tag": "new",
                "description": "<p>Transfer learning has been quite effective within the field of computer vision, speeding the time to train a model by reusing existing models. Those of us who work in machine learning are excited that the same techniques can be applied to natural language processing (NLP) with the publication of <a href=\"https://arxiv.org/abs/1801.06146\">ULMFiT</a> and open source pretrained models and code examples. We think <strong>transfer learning for NLP</strong> will significantly reduce the effort to create systems dealing with text classification.</p>",
                "radarId": 14,
                "id": "en_2019-04_201904062",
                "blip_selector": "transfer-learning-for-nlp"
            },
            {
                "blip_id": 1254,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "125",
                "name": "Contentful",
                "display_name": "Contentful",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "225",
                "tag": "move",
                "description": "<p>Headless content management systems (CMSes) are becoming a common component of digital platforms. <a href=\"http://www.contentful.com/\"><strong>Contentful</strong></a> is a modern headless CMS that our teams have successfully integrated into their development workflows. We particularly like its API-first approach and implementation of <a href=\"http://www.contentful.com/r/knowledgebase/cms-as-code/\">CMS as code</a>. It supports powerful content modeling primitives as code and content model evolution scripts, which allow it to be treated like other data store schemas and enable <a href=\"http://martinfowler.com/articles/evodb.html\">evolutionary database design</a> practices to be applied to CMS development. Its robustness and a stream of new features, including a sandbox environment, have impressed our teams further and made Contentful our default choice in this space.</p>",
                "radarId": 20,
                "id": "en_2019-04_1254",
                "blip_selector": "contentful"
            },
            {
                "blip_id": 201904061,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "batect",
                "display_name": "batect",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "66",
                "tag": "new",
                "description": "<p>So much energy and effort continue to be wasted on configuring local development environments and troubleshooting the \"works on my machine\" problem. For many years our teams have adopted the <a href=\"https://www.thoughtworks.com/insights/blog/praise-go-script-part-i\">\"check out and go\"</a> approach where we use a scripted approach to ensure the local development environment is configured consistently. <strong><a href=\"https://github.com/charleskorn/batect/\">batect</a></strong> is an open source tool developed by a ThoughtWorker that makes it easy to set up and share a build environment based on <a href=\"/radar/techniques/docker-for-builds\">Docker</a>. batect becomes the entry point script for your build system, launching containers to perform build tasks that don't rely at all on local setup. Changes to build configuration and dependencies are simply shared through source control without requiring any changes or installations on local machines or CI agents. While we like <a href=\"/radar/tools/cage\">Cage</a>, among other tools, in this space, we see batect quickly growing in favor with our teams.</p>",
                "radarId": 45,
                "id": "en_2019-04_201904061",
                "blip_selector": "batect"
            },
            {
                "blip_id": 1153,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Traefik",
                "display_name": "Traefik",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "9",
                "tag": "move",
                "description": "<p><strong><a href=\"https://traefik.io/\">Traefik</a></strong> is an open-source reverse proxy and load balancer. If you're looking for an edge proxy that provides simple routing without all the features of <a href=\"https://nginx.org\">NGINX</a> and <a href=\"https://haproxy.org\">HAProxy</a>, Traefik is a good choice. The router provides a reload-less reconfiguration, metrics, monitoring and circuit breakers that are essential when running microservices. It also integrates nicely with <a href=\"/radar/tools/let-s-encrypt\">Let's Encrypt</a> to provide SSL termination as well as infrastructure components such as Kubernetes, Docker Swarm or Amazon ECS to automatically pick up new services or instances to include in its load balancing.</p>",
                "radarId": 52,
                "id": "en_2019-04_1153",
                "blip_selector": "traefik"
            },
            {
                "blip_id": 201904025,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Taiko",
                "display_name": "Taiko",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "349",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/getgauge/taiko\">Taiko</a></strong> is a node.js library with a clear and concise API to assist with chrome or chromium browser automation. You can leverage Taiko's smart selectors and write reliable tests as the structure of the web application evolves. There's no need for ID, CSS or XPath selectors or adding explicit waits (for XHR requests) in test scripts. The interactive REPL recorder comes in handy when you want to develop the tests side by side as you explore the functionality. Although you could use Taiko independently, we've had good success using it with <a href=\"/radar/tools/gauge\">Gauge</a>.</p>",
                "radarId": 97,
                "id": "en_2019-04_201904025",
                "blip_selector": "taiko"
            },
            {
                "blip_id": 1058,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Kafka Streams",
                "display_name": "Kafka Streams",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "244",
                "tag": "move",
                "description": "<p><strong><a href=\"https://kafka.apache.org/documentation/streams/\">Kafka Streams</a></strong> is a lightweight library to build streaming applications. It supports basic streaming APIs such as join, filter, map and aggregate as well as local storage for common use cases such as windowing and sessions. Unlike other stream-processing platforms such as <a href=\"/radar/platforms/apache-spark\">Apache Spark</a> and <a href=\"https://doc.akka.io/docs/akka-stream-kafka/current/home.html\">Alpakka Kafka</a>, Kafka Streams has been a good fit for scenarios that don't require large-scale distribution and parallel processing; hence we could get away without yet another piece of infrastructure such as cluster schedulers. Naturally, Kafka Streams has been a good choice when operating in the Kafka ecosystem. Kafka Streams is particularly useful when we have to process data strictly in order and exactly once. One particular use case of Kafka Streams is to build a <a href=\"https://en.wikipedia.org/wiki/Change_data_capture#Event_Programming\">change data capture (CDC)</a> platform.</p>",
                "radarId": 25,
                "id": "en_2019-04_1058",
                "blip_selector": "kafka-streams"
            },
            {
                "blip_id": 1231,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Infrastructure configuration scanner",
                "display_name": "Infrastructure configuration scanner",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "116",
                "tag": "move",
                "description": "<p>For some time now we've recommended that delivery teams take ownership of their entire stack, including infrastructure. This means increased responsibility in the delivery team itself for configuring the infrastructure in a safe, secure and compliant way. When adopting cloud strategies, most organizations default to a tightly locked-down and centrally managed configuration to reduce risk, but this also creates substantial productivity bottlenecks. An alternative approach is to allow teams to manage their own configuration and use an <strong>infrastructure configuration scanner</strong> to ensure the configuration is safe and secure. Options include open-source scanners such as <a href=\"https://github.com/toniblyx/prowler\">prowler</a> for <a href=\"/radar/platforms/aws\">AWS</a> and <a href=\"/radar/tools/kube-bench\">kube-bench</a> for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> installations. For more continuous detection, take a look at cloud platforms such as AWS Config Rules among other commercial services.</p>",
                "radarId": 10,
                "id": "en_2019-04_1231",
                "blip_selector": "infrastructure-configuration-scanner"
            },
            {
                "blip_id": 201904021,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Honeycomb",
                "display_name": "Honeycomb",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "48",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.honeycomb.io/\">Honeycomb</a></strong> is an observability tool that ingests rich data from production systems and makes it manageable through dynamic sampling. Developers can log large amounts of rich events and decide later how to slice and correlate them. This interactive approach is useful when working with today's large distributed systems because we've passed the point where we can reasonably anticipate which questions we might want to ask of production systems.</p>",
                "radarId": 59,
                "id": "en_2019-04_201904021",
                "blip_selector": "honeycomb"
            },
            {
                "blip_id": 201904065,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Wardley mapping",
                "display_name": "Wardley mapping",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "108",
                "tag": "new",
                "description": "<p>We're usually wary of covering diagrammatic techniques, but <strong><a href=\"https://medium.com/wardleymaps\">Wardley mapping</a></strong> is an interesting approach to start conversations around the evolution of an organization's software estate. At their simplest, they're used to visualize the value chains that exist within an organization, starting with customers' needs and progressively plotting the different capabilities and systems used to deliver on those needs along with the evolution of those capabilities and systems. The value of this technique is the process of collaborating to create the maps rather than the artefact itself. We recommend getting the right people in the room to produce them, and then treat them as living, evolving things rather than a complete artefact.</p>",
                "radarId": 15,
                "id": "en_2019-04_201904065",
                "blip_selector": "wardley-mapping"
            },
            {
                "blip_id": 201904004,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Embark",
                "display_name": "Embark",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "296",
                "tag": "new",
                "description": "<p>We've recommended <a href=\"/radar/languages-and-frameworks/truffle\">Truffle</a> for <a href=\"/radar/techniques/ethereum-for-decentralized-applications\">decentralized application</a> (dapp) development in the past. <strong><a href=\"https://embark.status.im/\">Embark</a></strong> too can make your work easier. Embark provides features such as scaffolding, building, testing and debugging and integrates with decentralized storages such as <a href=\"/radar/platforms/ipfs\">IPFS</a>. Through its declarative configuration, you can manage <a href=\"/radar/techniques/smart-contracts\">smart contract</a> configuration, dependencies, artifact and deployment quite easily. Embark's interactive CLI dashboard is also impressive. We keep seeing people use <a href=\"https://remix.ethereum.org\">Remix</a> to write smart contracts and manually deploy their apps without automated testing, source control management or artifact management. We'd like to draw people's attention to dapp engineering practice by promoting tools such as Truffle and Embark.</p>",
                "radarId": 87,
                "id": "en_2019-04_201904004",
                "blip_selector": "embark"
            },
            {
                "blip_id": 1297,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "285",
                "name": "Quorum",
                "display_name": "Quorum",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "240",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://www.jpmorgan.com/global/Quorum\">Quorum</a></strong> is \"an enterprise-focused version of Ethereum\" that aims to provide network permissioning and transaction privacy as well as higher performance. One of our teams has worked deeply with Quorum; however, their experience so far hasn't been great. Some challenges result from <a href=\"/radar/techniques/smart-contracts\">complex smart contract programming</a> and some come from Quorum itself. For example, it doesn't work well with load balancers and only has partial database support, which will lead to significant deployment burden. We faced some stability and compatibility issues especially on private transactions. Quorum recently attracted a lot of attention because of <a href=\"https://www.jpmorgan.com/global/news/digital-coin-payments\">JPM Coin</a>. However, from a tech perspective, we recommend being cautious when implementing Quorum while keeping an eye on its development.</p>",
                "radarId": 34,
                "id": "en_2019-04_1297",
                "blip_selector": "quorum"
            },
            {
                "blip_id": 201904059,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Templating in YAML",
                "display_name": "Templating in YAML",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "108",
                "tag": "new",
                "description": "<p>As infrastructures grow in complexity, so do the configuration files that define them. Tools such as <a href=\"https://aws.amazon.com/cloudformation/\">AWS CloudFormation</a>, <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> and <a href=\"/radar/tools/helm\">Helm</a> expect configuration files in JSON or YAML syntax, presumably in an attempt to make them easy to write and process. However, in most cases, teams quickly reach the point where they have some parts that are similar but not quite the same, for example, when the same service must be deployed in different regions with a slightly different setup. For such cases tools offer <strong>templating in YAML</strong> (or JSON), which has caused a huge amount of <a href=\"https://leebriggs.co.uk/blog/2019/02/07/why-are-we-templating-yaml.html\">frustration with practitioners</a>. The problem is that the syntax of JSON and YAML requires all sorts of awkward compromises to graft templating features such as conditionals and loops into the files. We recommend using an API from a programming language instead or, when this is not an option, a templating system in a programming language, either a general-purpose language such as Python or something specialized such as <a href=\"https://jsonnet.org/\">Jsonnet</a>.</p>",
                "radarId": 19,
                "id": "en_2019-04_201904059",
                "blip_selector": "templating-in-yaml"
            },
            {
                "blip_id": 201904016,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "Kubernetes Operators",
                "display_name": "Kubernetes Operators",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "36",
                "tag": "new",
                "description": "<p>We're excited about the impact <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> has had on our industry but also concerned about the operational complexity that comes with it. Keeping a Kubernetes cluster up and running and then managing packages deployed on it requires special skills and time. Operational processes such as upgrades, migrations, backups, among others, can be a full-time job. We think that <strong><a href=\"https://coreos.com/operators/\">Kubernetes Operators</a></strong> will play a key role in reducing this complexity. The framework provides a standard mechanism to describe automated operational processes for packages running in a Kubernetes cluster. Although Operators were spearheaded and promoted by RedHat, several community-developed Operators for common open-source packages such as <a href=\"/radar/tools/jaeger\">Jaeger</a>, <a href=\"/radar/platforms/mongodb\">MongoDB</a> and <a href=\"/radar/platforms/redis\">Redis</a> have begun to emerge.</p>",
                "radarId": 61,
                "id": "en_2019-04_201904016",
                "blip_selector": "kubernetes-operators"
            },
            {
                "blip_id": 1295,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Ktor",
                "display_name": "Ktor",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "304",
                "tag": "move",
                "description": "<p><a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> has demonstrated its value beyond mobile app development. When building microservices and shipping software to production, our teams have had good experiences with Ktor. <strong><a href=\"https://ktor.io\">Ktor</a></strong> is a framework that, unlike other web frameworks that support Kotlin, is written in Kotlin, using language features such as <a href=\"https://kotlinlang.org/docs/reference/coroutines-overview.html\">coroutines</a> which allow for an asynchronous nonblocking implementation. The flexibility to incorporate different tools for logging, DI or a template engine — in addition to its lightweight architecture — makes Ktor an interesting option for creating RESTful services.</p>",
                "radarId": 75,
                "id": "en_2019-04_1295",
                "blip_selector": "ktor"
            },
            {
                "blip_id": 201904049,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "CloudEvents",
                "display_name": "CloudEvents",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "187",
                "tag": "new",
                "description": "<p>Outside the function code itself, applications written as serverless functions are tightly coupled to the cloud platform on which they're hosted. Although events are a common FaaS-triggering mechanism, and every cloud provider supports them in some form, the current proprietary specifications prevent interoperability across clouds. The <strong><a href=\"https://cloudevents.io/\">CloudEvents</a></strong> specification is a burgeoning standard that has been accepted into the <a href=\"https://www.cncf.io/sandbox-projects/\">CNCF Sandbox</a>. The standard is still in active development but several language bindings exist and Microsoft has announced first-class support in <a href=\"/radar/platforms/azure\">Azure</a>. We're hoping other cloud providers will follow suit.</p>",
                "radarId": 27,
                "id": "en_2019-04_201904049",
                "blip_selector": "cloudevents"
            },
            {
                "blip_id": 201904040,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Arrow",
                "display_name": "Arrow",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "280",
                "tag": "new",
                "description": "<p><strong><a href=\"https://arrow-kt.io/\">Arrow</a></strong> is a functional programming library for <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a>, created by merging two existing popular libraries (<a href=\"https://github.com/JcMinarro/kategory\">kategory</a> and <a href=\"https://github.com/MarioAriasC/funKTionale\">funKTionale</a>). While Kotlin provides building blocks for functional programming, Arrow delivers a package of ready-to-use higher-level abstractions for application developers. It provides data types, type classes, effects, optics and other functional programming patterns as well as integrations with popular libraries. With Arrow, existing libraries are unified, which should go a long way to avoid fractured communities in this space.</p>",
                "radarId": 84,
                "id": "en_2019-04_201904040",
                "blip_selector": "arrow"
            },
            {
                "blip_id": 201904033,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "http4k",
                "display_name": "http4k",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "307",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.http4k.org/\">http4k</a></strong> is an HTTP toolkit written in pure <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> for serving and consuming HTTP services. One of the key ideas behind http4k is that HTTP apps are modelled by composing two simple functions — HttpHandler and Filter. They derive inspiration from Twitter's <a href=\"https://monkey.org/%7Emarius/funsrv.pdf\">\"Your Server as a Function\"</a> paper. It's very lightweight with the core module having no dependencies apart from Kotlin StdLib. Apart from its elegance and simplicity, we also like its emphasis on testability — given that the entities in the libraries are immutable and the routes in the app, as well as the app itself, are just functions, they're super easy to test. One of the things to be aware of, though, is that we don't have nonblocking or coroutines support in http4k yet.</p>",
                "radarId": 89,
                "id": "en_2019-04_201904033",
                "blip_selector": "http4k"
            },
            {
                "blip_id": 1113,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "InSpec",
                "display_name": "InSpec",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "41",
                "tag": "move",
                "description": "<p>How does an organization give autonomy to delivery teams while still making sure their deployed solutions are safe and compliant? How do you ensure that servers, once deployed, maintain a consistent configuration without drift? <strong><a href=\"https://www.chef.io/inspec/\">InSpec</a></strong> is positioned as a solution for continuous compliance and security, but you can also use it for general infrastructure testing. InSpec allows the creation of declarative infrastructure tests, which can then be continuously run against provisioned environments including production. Our teams particularly praise its extensible design with resources and matchers for multiple platforms. We recommend trialling InSpec as a solution to the problem of assuring compliance and security.</p>",
                "radarId": 48,
                "id": "en_2019-04_1113",
                "blip_selector": "inspec"
            },
            {
                "blip_id": 1337,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "285",
                "name": "Knative",
                "display_name": "Knative",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "217",
                "tag": "refresh_writeup",
                "description": "<p>The <a href=\"/radar/techniques/serverless-architecture\">serverless architecture</a> has popularized a FaaS style of programming among developers; it helps developers focus on solving core business problems with independently built and deployed functions that react to an event, run a business process, produce other events in the process and scale down to zero. Historically, proprietary serverless platforms such as <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> or Microsoft <a href=\"https://azure.microsoft.com/en-us/services/functions/\">Azure Functions</a> have enabled this programming paradigm. <strong><a href=\"https://www.knative.dev/\">Knative</a></strong> is an open-source Kubernetes-based platform to run FaaS workloads. There are few things that stand out about Knative: it's open source and provider agnostic; it implements the serverless workflow as described in the CNCF Serverless Working Group <a href=\"https://github.com/cncf/wg-serverless/tree/master/whitepapers/serverless-overview\">whitepaper</a>; it ensures cross-service interoperability by implementing its eventing interface consistent with <a href=\"https://github.com/cloudevents/spec/blob/master/spec.md#design-goals\">CNCF CloudEvents</a> specification; and, most importantly, it addresses a common challenge of operating a harmonized and yet hybrid FaaS and long-running container-based architecture. It easily integrates with both <a href=\"/radar/platforms/istio\">Istio</a> and <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. For example, developers can take advantage of roll-out strategies that Istio implements by traffic splitting between different revisions of the functions. Developers can take benefit of Istio-provided observability not only for long-running container services but also for FaaS programs in the same Kubernetes environment. We anticipate that Knative open-source eventing interface will continue to enable new underlying source and destination event integrations.</p>",
                "radarId": 31,
                "id": "en_2019-04_1337",
                "blip_selector": "knative"
            },
            {
                "blip_id": 201904013,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Flagr",
                "display_name": "Flagr",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "60",
                "tag": "new",
                "description": "<p><a href=\"https://martinfowler.com/articles/feature-toggles.html\">Feature toggles</a> are an important technique in continuous deployment scenarios. We've come across a number of good home-grown solutions, but we do like the approach <strong><a href=\"https://github.com/checkr/flagr\">Flagr</a></strong> takes: a complete feature toggle as a service, distributed as a Docker container. It comes with SDKs for all major languages, has a simple and well-documented REST API and provides a convenient frontend.</p>",
                "radarId": 57,
                "id": "en_2019-04_201904013",
                "blip_selector": "flagr"
            },
            {
                "blip_id": 815,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "65",
                "name": "Terraform",
                "display_name": "Terraform",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "30",
                "tag": "move",
                "description": "<p><strong><a href=\"https://www.terraform.io/\">Terraform</a></strong>, is rapidly becoming a de facto choice for creating and managing cloud infrastructures by writing declarative definitions. The configuration of the servers instantiated by Terraform is usually left to Puppet, Chef or Ansible. We like Terraform because the syntax of its files is quite readable and because it supports a number of cloud providers while making no attempt to provide an artificial abstraction across those providers. The active community will add support for the latest features from most cloud providers. Following our first, more cautious, mention of Terraform almost two years ago, it has seen continued development and has evolved into a stable product with a good ecosystem that has proven its value in our projects. The issue with state file management can now be sidestepped by using what Terraform calls a \"remote state backend.\" We've successfully used <a href=\"https://aws.amazon.com/s3/\">AWS S3</a> for that purpose.</p>",
                "radarId": 41,
                "id": "en_2019-04_815",
                "blip_selector": "terraform"
            },
            {
                "blip_id": 201904010,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Anka",
                "display_name": "Anka",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "84",
                "tag": "new",
                "description": "<p><strong><a href=\"https://ankadoc.bitbucket.io/\">Anka</a></strong> is a set of tools to create, manage and distribute build and test macOS reproducible virtual environments for iOS and macOS development. It brings Docker-like experience to macOS environments: instant start, CLI to manage virtual machines and registry to version and tag virtual machines for distribution. We discovered Anka when we proposed a macOS private cloud solution to a client. This tool is worth considering when applying DevOps workflow to iOS and macOS environments.</p>",
                "radarId": 53,
                "id": "en_2019-04_201904010",
                "blip_selector": "anka"
            },
            {
                "blip_id": 201904043,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "Formik",
                "display_name": "Formik",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "283",
                "tag": "new",
                "description": "<p><strong><a href=\"https://jaredpalmer.com/formik/\">Formik</a></strong> is a useful higher-order component for making the surprisingly verbose and complex job of handling forms in <a href=\"/radar/languages-and-frameworks/react-js\">React</a> much easier. It localizes state management, assists with submission and optionally uses <a href=\"https://www.npmjs.com/package/yup\">Yup</a> to simplify data validation.</p>",
                "radarId": 72,
                "id": "en_2019-04_201904043",
                "blip_selector": "formik"
            },
            {
                "blip_id": 201904038,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "ReasonML",
                "display_name": "ReasonML",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "344",
                "tag": "new",
                "description": "<p><strong><a href=\"https://reasonml.github.io/\">ReasonML</a></strong> is an interesting new language based on OCaml with a sprinkling of C-like syntax and uses JavaScript as the default compilation target. Created by Facebook, it allows embedded JavaScript snippets and JSX templating with good <a href=\"/radar/languages-and-frameworks/react-js\">React</a> integration. It aims to be approachable for JavaScript developers and leverages that ecosystem, while providing type safety in a functional language.</p>",
                "radarId": 96,
                "id": "en_2019-04_201904038",
                "blip_selector": "reasonml"
            },
            {
                "blip_id": 201904064,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Ethical OS",
                "display_name": "Ethical OS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "162",
                "tag": "new",
                "description": "<p>As developers at ThoughtWorks we're acutely aware of the ethics of the work we do. As society becomes ever more reliant on technology, it's important that we consider ethics when making decisions as software development teams. Several toolkits have emerged that can help us think through some of the future implications of the software we're building. They include <a href=\"http://tarotcardsoftech.artefactgroup.com/\">Tarot Cards of Tech</a> and <strong><a href=\"https://ethicalos.org/\">Ethical OS</a></strong>, which we've had good feedback on. Ethical OS is a thinking framework and a set of tools that drive discussions around the ethics of building software. The framework is a collaboration between the Institute for the Future and the Tech and Society Solutions Lab. It's based on a practical set of risk zones, such as addiction and the <a href=\"https://eand.co/the-dopamine-economy-336b239272ef\">dopamine economy</a>, plus a number of scenarios to drive conversation and discussion.</p>",
                "radarId": 12,
                "id": "en_2019-04_201904064",
                "blip_selector": "ethical-os"
            },
            {
                "blip_id": 1255,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "AWS Fargate",
                "display_name": "AWS Fargate",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "192",
                "tag": "move",
                "description": "<p><strong><a href=\"http://aws.amazon.com/fargate/\">AWS Fargate</a></strong>, the docker-as-a-service option on <a href=\"/radar/platforms/aws\">AWS</a>, is now widely available across regions. It's a great solution for situations in which teams want to run Docker containers, because <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> functions aren't powerful enough, without having to manage EC2 instances or Kubernetes clusters. Our teams report generally positive experiences with Fargate; however, the convenience of this managed service can come at a cost, in financial terms.</p>",
                "radarId": 21,
                "id": "en_2019-04_1255",
                "blip_selector": "aws-fargate"
            },
            {
                "blip_id": 201904097,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Release train",
                "display_name": "Release train",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "126",
                "tag": "new",
                "description": "<p>We've seen organizations successfully move from very infrequent releases to a higher cadence by using the <strong>release train</strong> concept. The release train is a technique for coordinating releases across multiple teams or components that have runtime dependencies. All releases happen on a fixed and reliable schedule regardless of whether all expected features are ready (the train doesn't wait for you — if you miss it you wait for the next one). Although we wholeheartedly endorse discipline around regularly releasing and demoing working software, we've experienced serious drawbacks with the approach over the medium to long term as it reinforces temporal coupling around sequencing of changes and can degrade quality as teams rush to complete features. We prefer to focus on the architectural and organizational approaches necessary to support independent releases. Although the train can be a useful forcing function for speeding up slower teams, we've also seen it as imposing an upper limit on how quickly faster-moving teams can move. We believe that it is a technique that should be approached with a good degree of caution, if at all.</p>",
                "radarId": 18,
                "id": "en_2019-04_201904097",
                "blip_selector": "release-train"
            },
            {
                "blip_id": 1321,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "WebFlux",
                "display_name": "WebFlux",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "353",
                "tag": "move",
                "description": "<p><strong><a href=\"https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html\">WebFlux</a></strong> is the Spring Framework implementation of <a href=\"https://www.reactive-streams.org/\">Reactive Streams</a>. We see a rise in reactive programming models across our teams in general and the use of WebFlux in teams who are working in the Spring ecosystem. It's best used in large microservices ecosystems where the high performance of the requests is a major concern. It allows overlapping request processing asynchronously without the complications of using multiple threads. WebFlux uses <a href=\"https://github.com/reactor/reactor\">Reactor</a> as its reactive library but it is interoperable with other reactive libraries via Reactive Streams. It uses <a href=\"https://netty.io/\">Netty</a> as its underlying high-performance communications engine. Although we encourage using Reactive Streams, adopting this programming model requires a significant shift in thinking.</p>",
                "radarId": 82,
                "id": "en_2019-04_1321",
                "blip_selector": "webflux"
            },
            {
                "blip_id": 1035,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "95",
                "name": "Micro frontends",
                "display_name": "Micro frontends",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "150",
                "tag": "move",
                "description": "<p>We've seen significant benefits from introducing <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a>, which have allowed teams to scale the delivery of independently deployed and maintained services. Unfortunately, we've also seen many teams create a frontend monolith — a large, entangled browser application that sits on top of the backend services — largely neutralizing the benefits of microservices. Since we first described <strong>micro frontends</strong> as a technique to address this issue, we've had almost universally positive experiences with the approach and have found a number of patterns to use micro frontends even as more and more code shifts from the server to the web browser. So far, <a href=\"/radar/platforms/web-components-standard\">web components</a> have been elusive in this field, though.</p>",
                "radarId": 2,
                "id": "en_2019-04_1035",
                "blip_selector": "micro-frontends"
            },
            {
                "blip_id": 201904006,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "AnyStatus",
                "display_name": "AnyStatus",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "82",
                "tag": "new",
                "description": "<p>As developers used to pushing many small commits daily, we rely on monitors to notify us when builds go green. <strong><a href=\"https://www.anystat.us/\">AnyStatus</a></strong> is a lightweight Windows desktop app that rolls up metrics and events from various sources into one place. Examples include build results and releases, health checks for different services and OS metrics. Think of it as CCTray on steroids. It's also available as a Visual Studio plugin.</p>",
                "radarId": 43,
                "id": "en_2019-04_201904006",
                "blip_selector": "anystatus"
            },
            {
                "blip_id": 201904034,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Immer",
                "display_name": "Immer",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "312",
                "tag": "new",
                "description": "<p>With the increasing complexity of single-page JavaScript applications, managing state predictably is becoming more and more important. Immutability can help to ensure our applications behave consistently, but unfortunately JavaScript doesn't natively support the ability to create immutable objects. Libraries such as <a href=\"/radar/languages-and-frameworks/immutable-js\">Immutable.js</a> filled that gap but introduced new problems because now two kinds of objects and arrays existed in the application, the library's version and the native JavaScript ones. <strong><a href=\"https://github.com/mweststrate/immer\">Immer</a></strong> — German for <em>always</em> — is a tiny package that lets you work with immutable state in a more convenient way. It's based on the copy-on-write mechanism, has a minimal API and operates on normal JavaScript objects and arrays. This means that data access is seamless and no large refactoring efforts are needed when introducing immutability to an existing codebase.</p>",
                "radarId": 90,
                "id": "en_2019-04_201904034",
                "blip_selector": "immer"
            },
            {
                "blip_id": 1041,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Container security scanning",
                "display_name": "Container security scanning",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "155",
                "tag": "move",
                "description": "<p>The container revolution around <a href=\"/radar/platforms/docker\">Docker</a> has massively reduced the friction in moving applications between environments, fueling increased adoption of continuous delivery and continuous deployments. The latter, especially, has blown a rather large hole in the traditional controls over what can go to production. The technique of <strong>container security scanning</strong> is a necessary response to this threat vector. Tools in the build pipeline automatically check containers flowing through the pipeline against known vulnerabilities. Since our first mention of this technique, the tool landscape has matured and the technique has proven useful on development efforts with our clients.</p>",
                "radarId": 7,
                "id": "en_2019-04_1041",
                "blip_selector": "container-security-scanning"
            },
            {
                "blip_id": 1303,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Secrets as a service",
                "display_name": "Secrets as a service",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "108",
                "tag": "move",
                "description": "<p>Humans and machines use secrets throughout the value stream of building and operating software. The build pipelines need secrets to interface with secure infrastructures such as container registries, the applications use API keys as secrets to get access to business capabilities, and the service-to-service communications are secured using certificates and keys as secrets. You can set and retrieve these secrets in different ways. We've long cautioned developers about using source code management for storing secrets. We've recommended <a href=\"/radar/techniques/decoupling-secret-management-from-source-code\">decoupling secret management from source code</a> and using tools such as <a href=\"/radar/tools/git-secrets\">git-secrets</a> and <a href=\"/radar/tools/talisman\">Talisman</a> to avoid storing secrets in the source code. We've been using <strong>secrets as a service</strong> as a default technique for storing and accessing secrets. With this technique you can use tools such as <a href=\"/radar/tools/hashicorp-vault\">Vault</a> or <a href=\"https://aws.amazon.com/kms/\">AWS Key Management Service (KMS)</a> to read/write secrets over an HTTPS endpoint with fine-grained levels of access control. Secrets as a service uses external identity providers such as <a href=\"https://aws.amazon.com/iam/\">AWS IAM</a> to identify the actors who request access to secrets. Actors authenticate themselves with the secrets service. For this process to work, it's important to automate bootstrapping the identity of the actors, services and applications. Platforms based on <a href=\"/radar/platforms/spiffe\">SPIFFE</a> have improved the automation of assigning identities to services.</p>",
                "radarId": 5,
                "id": "en_2019-04_1303",
                "blip_selector": "secrets-as-a-service"
            },
            {
                "blip_id": 1298,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "55",
                "name": "Four key metrics",
                "display_name": "Four key metrics",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "138",
                "tag": "move",
                "description": "<p>The thorough <a href=\"https://devops-research.com/research.html\">State of DevOps</a> reports have focused on data-driven and statistical analysis of high-performing organizations. The result of this multiyear research, published in <a href=\"https://itrevolution.com/book/accelerate/\">Accelerate</a>, demonstrates a direct link between organizational performance and software delivery performance. The researchers have determined that only <strong>four key metrics</strong> differentiate between low, medium and high performers: lead time, deployment frequency, mean time to restore (MTTR) and change fail percentage. Indeed, we've found that these four key metrics are a simple and yet powerful tool to help leaders and teams focus on measuring and improving what matters. A good place to start is to instrument the build pipelines so you can capture the four key metrics and make the software delivery value stream visible. <a href=\"https://www.gocd.org/\">GoCD pipelines,</a> for example, provide the ability to measure these four key metrics as a first-class citizen of the <a href=\"https://www.gocd.org/analytics.html\">GoCD analytics</a>.</p>",
                "radarId": 1,
                "id": "en_2019-04_1298",
                "blip_selector": "four-key-metrics"
            },
            {
                "blip_id": 1206,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "Chaos Engineering",
                "display_name": "Chaos Engineering",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "168",
                "tag": "refresh_writeup",
                "description": "<p>In the last year we've seen <strong>Chaos Engineering</strong> move from a much talked-about idea to an accepted, mainstream approach to improving and assuring distributed system resilience. As organizations large and small begin to implement Chaos Engineering as an operational process, we're learning how to apply these techniques safely at scale. The approach is definitely not for everyone, and to be effective and safe, it requires organizational support at scale. Industry acceptance and available expertise will definitely increase with the appearance of commercial services such as <a href=\"/radar/tools/gremlin\">Gremlin</a> and deployment tools such as <a href=\"/radar/tools/spinnaker\">Spinnaker</a> implementing some Chaos Engineering tools.</p>",
                "radarId": 6,
                "id": "en_2019-04_1206",
                "blip_selector": "chaos-engineering"
            },
            {
                "blip_id": 201904003,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Handwritten CloudFormation",
                "display_name": "Handwritten CloudFormation",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "45",
                "tag": "new",
                "description": "<p><a href=\"https://aws.amazon.com/cloudformation/\">AWS CloudFormation</a> is a proprietary declarative language to provision AWS infrastructure as code. Handwriting CloudFormation files is often a default approach to bootstrap AWS infrastructure automation. Although this might be a sensible way to start a small project, our teams, and the industry at large, have found that <strong>handwritten CloudFormation</strong> simply does not scale as the infrastructure grows. Noticeable pitfalls of handwritten CloudFormation files for large projects include poor readability, lack of imperative constructs, limited parameter definition and usage, and lack of type checking. Addressing these shortfalls has led to a rich ecosystem of both open-source and custom tooling. We find <a href=\"/radar/tools/terraform\">Terraform</a> a sensible default that not only addresses shortfalls of CloudFormation but also has an active community to add the latest AWS features and fix bugs. In addition to Terraform, you can choose from many other tools and languages, including <a href=\"/radar/languages-and-frameworks/troposphere\">troposphere</a>, <a href=\"https://github.com/cloudreach/sceptre\">sceptre</a>, <a href=\"https://github.com/capitalone/stack-deployment-tool\">Stack Deployment Tool</a> and <a href=\"/radar/platforms/pulumi\">Pulumi</a>.</p>",
                "radarId": 67,
                "id": "en_2019-04_201904003",
                "blip_selector": "handwritten-cloudformation"
            },
            {
                "blip_id": 1138,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Service mesh",
                "display_name": "Service mesh",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "103",
                "tag": "move",
                "description": "<p><strong>Service mesh</strong> is an approach to operating a secure, fast and reliable microservices ecosystem. It has been an important stepping stone in making it easier to adopt microservices at scale. It offers discovery, security, tracing, monitoring and failure handling. It provides these cross-functional capabilities without the need for a shared asset such as an API gateway or baking libraries into each service. A typical implementation involves lightweight reverse-proxy processes, aka sidecars, deployed alongside each service process in a separate container. Sidecars intercept the inbound and outbound traffic of each service and provide cross-functional capabilities mentioned above. This approach has relieved the distributed service teams from building and updating the capabilities that the mesh offers as code in their services. This has lead to an even easier adoption of <a href=\"/radar/techniques/polyglot-programming\">polyglot programming</a> in a microservices ecosystem. Our teams have been successfully using this approach with open source projects such as <a href=\"/radar/platforms/istio\">Istio</a> and we will continue to monitor other open service mesh implementations such as <a href=\"http://linkerd.io/\">Linkerd</a> closely.</p>",
                "radarId": 11,
                "id": "en_2019-04_1138",
                "blip_selector": "service-mesh"
            },
            {
                "blip_id": 201904067,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Prophet",
                "display_name": "Prophet",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "232",
                "tag": "new",
                "description": "<p>Even in the era of deep learning, statistical models still play a role in business decision support. Time series models are widely used to forecast inventories, demand, customer traffic, and so on. Hand-crafting these models so that they're robust and flexible has typically been the role of either specialized statisticians or large commercial software vendors. <strong><a href=\"https://facebook.github.io/prophet/\">Prophet</a></strong> is an open-source alternative to commercial forecasting packages that can be programmed in R or Python. Facebook claims to use Prophet internally for business forecasting at scale and has made it available as an open-source package for anyone to use. We like that Prophet removes some of the tedium of model construction, maintenance and data manipulation so that human analysts and subject matter experts can focus on doing what they do best.</p>",
                "radarId": 33,
                "id": "en_2019-04_201904067",
                "blip_selector": "prophet"
            },
            {
                "blip_id": 201904048,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "MinIO",
                "display_name": "MinIO",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "225",
                "tag": "new",
                "description": "<p>Object storage is a popular choice for storing unstructured data and in a few cases structured data in the cloud. We do discourage the use of <a href=\"/radar/techniques/generic-cloud-usage\">generic cloud</a> but if you want to minimize the risk of cloud stickiness for object storage, we've found <strong><a href=\"https://min.io/\">MinIO</a></strong> quite helpful. With an S3-compatible API layer, MinIO abstracts object storage across cloud providers, including <a href=\"/radar/platforms/aws\">AWS</a>, <a href=\"/radar/platforms/azure\">Azure</a> and <a href=\"/radar/platforms/google-cloud-platform\">Google Cloud Platform</a> (GCP), and we've used it successfully in products with flexible target infrastructures from data centers to cloud providers.</p>",
                "radarId": 32,
                "id": "en_2019-04_201904048",
                "blip_selector": "minio"
            },
            {
                "blip_id": 201904014,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Humio",
                "display_name": "Humio",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "42",
                "tag": "new",
                "description": "<p><strong><a href=\"https://humio.com/\">Humio</a></strong> is a fairly new player in the log management space. It's been built from the ground up to be super fast at both log ingestion and query using its built-in query language on top of a custom-designed time series database. It integrates with just about everything out there from an ingestion, visualization and alerting perspective. The log management space has been dominated by Splunk and the ELK Stack, so having alternatives is a good thing. We'll be watching Humio's development with interest.</p>",
                "radarId": 60,
                "id": "en_2019-04_201904014",
                "blip_selector": "humio"
            },
            {
                "blip_id": 771,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "Rust",
                "display_name": "Rust",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "346",
                "tag": "move",
                "description": "<p>Since we last featured it on the Radar in January 2015, we've seen steadily increasing interest in <strong><a href=\"http://www.rust-lang.org/\">Rust</a></strong>. Some of our clients are now using Rust, mostly in the context of infrastructure tooling but also in high-powered embedded devices. Interest was fuelled by a growing ecosystem as well as improvements to the language itself. The latter included straightforward performance improvements but also changes that make Rust more intuitive, for example the change to non-lexical scoping. Most of the significant changes are included in the Rust 2018 standard released last December.</p>",
                "radarId": 81,
                "id": "en_2019-04_771",
                "blip_selector": "rust"
            },
            {
                "blip_id": 1154,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Jupyter",
                "display_name": "Jupyter",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "60",
                "tag": "move",
                "description": "<p>Over the past couple of years, we've noticed a steady rise in the popularity of analytics notebooks. These are Mathematica-inspired applications that combine text, visualization and code in a living, computational document. <strong><a href=\"http://jupyter.org/\">Jupyter</a></strong> Notebooks are widely used by our teams for prototyping and exploration in analytics and machine learning. We've moved Jupyter to Adopt for this issue of the Radar to reflect that it has emerged as the current default for Python notebooks. However, we caution to use <a href=\"/radar/techniques/productionizing-jupyter-notebooks\">Jupyter Notebooks in production</a>.</p>",
                "radarId": 39,
                "id": "en_2019-04_1154",
                "blip_selector": "jupyter"
            },
            {
                "blip_id": 201904050,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "TimescaleDB",
                "display_name": "TimescaleDB",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "262",
                "tag": "new",
                "description": "<p>In previous Radars we've discussed <a href=\"/radar/platforms/postgresql-for-nosql\">PostgreSQL for NoSQL</a>. PostgreSQL's maturity and extensibility have led to a steady stream of innovative persistence stores built on the Postgres engine. One that caught our attention is <strong><a href=\"https://www.timescale.com/\">TimescaleDB</a></strong>, a database that allows fast writes and optimized queries over time-series data. Albeit not (yet) as full-featured as <a href=\"/radar/platforms/influxdb\">InfluxDB</a>, TimescaleDB offers an alternative data model and querying capability. You should evaluate TimescaleDB if you have modest scalability needs, prefer to use SQL and appreciate the stability and familiar administrative interface that PostgreSQL offers.</p>",
                "radarId": 37,
                "id": "en_2019-04_201904050",
                "blip_selector": "timescaledb"
            },
            {
                "blip_id": 201904030,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Next.js",
                "display_name": "Next.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "328",
                "tag": "new",
                "description": "<p><a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> has revolutionized the way most people write single-page JavaScript applications. Generally, we recommend you use Create React App throughout the application lifecycle so you don't have to configure your setup, builds and packages manually. But some developers will prefer a tool whose initial defaults reflect a sound set of opinions. <strong><a href=\"https://nextjs.org/\">Next.js</a></strong> is just such an opinionated framework and it is garnering quite a bit of interest among our front-end enthusiasts. Next.js simplifies routing, renders on the server side by default and streamlines dependencies and builds. We're keen to see if it lives up to expectations on our own projects.</p>",
                "radarId": 93,
                "id": "en_2019-04_201904030",
                "blip_selector": "next-js"
            },
            {
                "blip_id": 201904041,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "fastai",
                "display_name": "fastai",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "301",
                "tag": "new",
                "description": "<p><strong><a href=\"https://docs.fast.ai/\">fastai</a></strong> is an open-source Python library that simplifies training fast and accurate neural nets. It is built on top of <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a> and has become a popular tool for our data scientists. fastai simplifies painful aspects of model training such as preprocessing and loading data down to a few lines of code. It's built on deep learning best practices and has out-of-the-box support for computer vision, natural language processing (NLP) and more. The founders' motivation has been to create an easy-to-use library for deep learning and an improved successor to <a href=\"/radar/languages-and-frameworks/keras\">Keras</a>. <a href=\"/radar/platforms/google-cloud-platform\">GCP</a>, <a href=\"/radar/platforms/aws\">AWS</a> and <a href=\"/radar/platforms/azure\">Azure</a> all have already included fastai in their machine images. The creators of fastai, acknowledging the speed and safety limitations of Python, have announced <a href=\"https://www.fast.ai/2019/03/06/fastai-swift/\">embracing Swift</a> as an alternative language for deep learning. We'll be closely watching this space.</p>",
                "radarId": 88,
                "id": "en_2019-04_201904041",
                "blip_selector": "fastai"
            },
            {
                "blip_id": 1278,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "TestCafe",
                "display_name": "TestCafe",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "17",
                "tag": "move",
                "description": "<p>We have good experience using \"post-Selenium\" web UI testing tools such as <a href=\"/radar/tools/cypress\">Cypress</a>, <strong><a href=\"https://github.com/DevExpress/testcafe\">TestCafe</a></strong> and <a href=\"/radar/languages-and-frameworks/puppeteer\">Puppeteer</a>. TestCafe lets you write tests in JavaScript or <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> and runs in-browser tests. TestCafe has several useful features that include out-of-the-box parallel execution and HTTP request mocking. TestCafe uses an asynchronous execution model with no explicit wait times, which results in much more stable test suites. Its selector API makes it easier to implement <a href=\"https://martinfowler.com/bliki/PageObject.html\">PageObject</a> patterns. TestCafe recently released version 1.0.<em>x</em>, which improved stability and functionality.</p>",
                "radarId": 51,
                "id": "en_2019-04_1278",
                "blip_selector": "testcafe"
            },
            {
                "blip_id": 201904023,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Stolon",
                "display_name": "Stolon",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "25",
                "tag": "new",
                "description": "<p>Setting up highly available PostgreSQL instances can be tricky, which is why we like <a href=\"/radar/tools/patroni\">Patroni</a> — it helps us speed up the setup of PostgreSQL clusters. <a href=\"https://github.com/sorintlab/stolon\"><strong>Stolon</strong></a> is another tool that we've used successfully to run high-availability (HA) clusters of PostgreSQL instances in production using Kubernetes. Although PostgreSQL supports streaming replication out of the box, the challenge in an HA setup is to assure that the clients always connect to the current master. We like that Stolon enforces the connection to the right PostgreSQL master by actively closing connections to unelected masters and routing requests to the active one.</p>",
                "radarId": 50,
                "id": "en_2019-04_201904023",
                "blip_selector": "stolon"
            },
            {
                "blip_id": 201904007,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Detekt",
                "display_name": "Detekt",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "66",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/arturbosch/detekt\">Detekt</a></strong> is a static code analysis tool for <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a>. It finds code smells and code complexity. You can run it from the command line or use its plugins for integration with popular developer tools such as <a href=\"/radar/tools/gradle\">Gradle</a> (to perform code analysis via builds) or <a href=\"https://www.sonarqube.org/\">SonarQube</a> (to perform code coverage in addition to static code analysis), and IntelliJ. Detekt is a great addition to build pipelines of Kotlin applications.</p>",
                "radarId": 56,
                "id": "en_2019-04_201904007",
                "blip_selector": "detekt"
            },
            {
                "blip_id": 201904036,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "AVA",
                "display_name": "AVA",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "74",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/avajs/ava\">AVA</a></strong> is a test runner for Node.js. Even though JavaScript is single-threaded, IO in Node.js can happen in parallel because of its asynchronous nature. AVA takes advantage of this and runs your tests concurrently, which is especially beneficial for IO-heavy tests. In addition, test files are run in parallel as separate processes, giving you even better performance and an isolated environment for each test file. AVA is a lightweight option, when compared to full-featured frameworks such as <a href=\"/radar/languages-and-frameworks/jest\">Jest</a>. It is opinionated and forces you to write atomic test cases.</p>",
                "radarId": 44,
                "id": "en_2019-04_201904036",
                "blip_selector": "ava"
            },
            {
                "blip_id": 201904045,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Room",
                "display_name": "Room",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "339",
                "tag": "new",
                "description": "<p><strong><a href=\"https://developer.android.com/topic/libraries/architecture/room\">Room</a></strong> is a persistence library to access SQLite on Android. It makes database access code much simpler, with minimal boilerplate code, and more robust, with compile-time verification of SQL queries. Our developers like its complete integration with observable queries, using <a href=\"https://developer.android.com/topic/libraries/architecture/livedata\">LiveData</a>. Room is one of the Android <a href=\"https://developer.android.com/jetpack\">Jetpack</a> components that were created to make application development on Android easier.</p>",
                "radarId": 80,
                "id": "en_2019-04_201904045",
                "blip_selector": "room"
            },
            {
                "blip_id": 201904012,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Tendermint",
                "display_name": "Tendermint",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "255",
                "tag": "new",
                "description": "<p><a href=\"https://en.wikipedia.org/wiki/Byzantine_fault\">Byzantine fault tolerance (BFT)</a> is one of the fundamental problems in cryptocurrency and blockchain systems. It requires overall system agreement on a single data value in the presence of a number of arbitrary faulty processes, which includes malicious fraud. <strong><a href=\"https://www.tendermint.com/\">Tendermint</a></strong> is a BFT state machine replication engine that lets you implement your own blockchain systems. The consensus engine, Tendermint Core, takes over the peer-to-peer communication and consensus part, you just need to implement the rest of the application (e.g., construct transaction and verify cryptographic signature) and communicate with Tendermint Core through <a href=\"https://github.com/tendermint/tendermint/tree/master/abci\">ABCI</a>. Some blockchain <a href=\"https://tendermint.com/ecosystem\">implementations</a> have already chosen Tendermint as their consensus engine.</p>",
                "radarId": 36,
                "id": "en_2019-04_201904012",
                "blip_selector": "tendermint"
            },
            {
                "blip_id": 1331,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "285",
                "name": "SPIFFE",
                "display_name": "SPIFFE",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "247",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://spiffe.io/\">SPIFFE</a></strong> standardization of service identity has been an important step in enabling turnkey solutions for end-to-end encryption and mutual authentication between services. The SPIFFE standards are backed by the OSS <a href=\"https://github.com/spiffe/spire\">SPIFFE Runtime Environment (SPIRE)</a>, which automatically delivers cryptographically provable identities to services. <a href=\"/radar/platforms/istio\">Istio</a> also uses SPIFFE by default. SPIFFE enables many use cases, including identity translation, OAuth client authentication, mTLS \"encryption everywhere\" and workload observability. ThoughtWorks is actively working with the Istio and SPIFFE communities to bridge the gap between legacy service identity providers and SPIFFE-based identities so that mTLS can be used everywhere between services, inside a service mesh and outside.</p>",
                "radarId": 35,
                "id": "en_2019-04_1331",
                "blip_selector": "spiffe"
            },
            {
                "blip_id": 201904047,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Hot Chocolate",
                "display_name": "Hot Chocolate",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "210",
                "tag": "new",
                "description": "<p>The <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> ecosystem and community keep growing. <strong><a href=\"https://hotchocolate.io/\">Hot Chocolate</a></strong> is a GraphQL server for .NET (core and classic). It lets you build and host schemas and then serve queries against them. The team behind Hot Chocolate has recently added schema stitching which allows for a single entry point to query across multiple schemas aggregated from different locations. Although there are plenty of ways to misuse this approach, it's worth assessing whether to add it to your toolkit.</p>",
                "radarId": 30,
                "id": "en_2019-04_201904047",
                "blip_selector": "hot-chocolate"
            },
            {
                "blip_id": 201904066,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Continuous delivery for machine learning (CD4ML)",
                "display_name": "Continuous delivery for machine learning (CD4ML)",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "142",
                "tag": "new",
                "description": "<p><strong>Continuous delivery for machine learning (CD4ML)</strong> apply continuous delivery practices to developing machine learning models so that they are always ready for production. This technique addresses two main problems of traditional machine learning model development: long cycle time between training models and deploying them to production, which often includes manually converting the model to production-ready code; and using production models that had been trained with stale data.</p>\n\n<p>A continuous delivery pipeline of a machine learning model has two triggers: (1) changes to the structure of the model and (2) changes to the training and test data sets. For this to work we need to both version <a href=\"/radar/techniques/versioning-data-for-reproducible-analytics\">the data sets</a> and the model's source code. The pipeline often includes steps such as testing the model against the test data set, applying automatic conversion of the model (if necessary) with tools such as <a href=\"https://www.h2o.ai/\">H2O</a>, and deploying the model to production to deliver value.</p>",
                "radarId": 8,
                "id": "en_2019-04_201904066",
                "blip_selector": "continuous-delivery-for-machine-learning-cd4ml"
            },
            {
                "blip_id": 201904057,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Productionizing Jupyter Notebooks",
                "display_name": "Productionizing Jupyter Notebooks",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "162",
                "tag": "new",
                "description": "<p><a href=\"/radar/tools/jupyter\">Jupyter Notebooks</a> have gained in popularity among data scientists who use them for exploratory analyses, early-stage development and knowledge sharing. This rise in popularity has led to the trend of <strong>productionizing Jupyter Notebooks</strong>, by providing the tools and support to execute them at scale. Although we wouldn't want to discourage anyone from using their tools of choice, we don't recommend using Jupyter Notebooks for building scalable, maintainable and long-lived production code — they lack effective version control, error handling, modularity and extensibility among other basic capabilities required for building scalable, production-ready code. Instead, we encourage developers and data scientists to work together to find solutions that empower data scientists to build production-ready machine learning models using <a href=\"/radar/techniques/continuous-delivery-for-machine-learning-cd4ml-models\">continuous delivery</a> practices with the right programming frameworks. We caution against productionization of Jupyter Notebooks to overcome inefficiencies in continuous delivery pipelines for machine learning, or inadequate automated testing.</p>",
                "radarId": 16,
                "id": "en_2019-04_201904057",
                "blip_selector": "productionizing-jupyter-notebooks"
            },
            {
                "blip_id": 201904011,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Terratest",
                "display_name": "Terratest",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "6",
                "tag": "new",
                "description": "<p>We widely use <a href=\"/radar/tools/terraform\">Terraform</a> as code to configure a cloud infrastructure. <strong><a href=\"https://github.com/gruntwork-io/terratest\">Terratest</a></strong> is a Golang library that makes it easier to write automated tests for infrastructure code. A test run creates real infrastructure components (such as servers, firewalls or load balancers), deploys applications on them and validates the expected behavior using Terratest. At the end of the test, Terratest can undeploy the apps and clean up resources. This makes it largely useful for end-to-end tests of your infrastructure in a real environment.</p>",
                "radarId": 66,
                "id": "en_2019-04_201904011",
                "blip_selector": "terratest"
            },
            {
                "blip_id": 1315,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "130",
                "name": "MockK",
                "display_name": "MockK",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "315",
                "tag": "move",
                "description": "<p><strong><a href=\"https://mockk.io\">MockK</a></strong> is our go-to tool for mocks when writing tests for <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> applications. We like to use this library because of its first-class support for Kotlin language features such as <a href=\"https://kotlinlang.org/docs/reference/coroutines-overview.html\">coroutines</a> or lambda blocks. As a native library, it helps our teams to write clean and concise code on testing Kotlin applications instead of using the inconvenient wrappers of Mockito or PowerMock.</p>",
                "radarId": 69,
                "id": "en_2019-04_1315",
                "blip_selector": "mockk"
            },
            {
                "blip_id": 201904026,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Dask",
                "display_name": "Dask",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "291",
                "tag": "new",
                "description": "<p>Data scientists and engineers often use libraries such as <a href=\"https://pandas.pydata.org/\">pandas</a> to perform ad hoc data analysis. Although expressive and powerful, these libraries have one critical limitation: they only work on a single CPU and don't provide horizontal scalability for large data sets. <a href=\"https://dask.org/\"><strong>Dask</strong></a>, however, includes a lightweight, high-performance scheduler that can scale from a laptop to a cluster of machines. And because it works with <a href=\"http://www.numpy.org/\">NumPy</a>, pandas and <a href=\"/radar/tools/scikit-learn\">Scikit-learn</a>, Dask looks promising for further assessment.</p>",
                "radarId": 86,
                "id": "en_2019-04_201904026",
                "blip_selector": "dask"
            },
            {
                "blip_id": 1272,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "95",
                "name": "UI dev environments",
                "display_name": "UI dev environments",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "15",
                "tag": "move",
                "description": "<p>As more and more teams embrace <a href=\"/radar/techniques/designops\">DesignOps</a>, practices and tooling in this space mature. <strong>UI dev environments</strong> provide a comprehensive environment for quickly iterating on UI components, focusing on collaboration between user experience designers and developers. We now have a few options in this space: <a href=\"https://storybook.js.org/\">Storybook</a>, <a href=\"https://react-styleguidist.js.org/\">React Styleguidist</a>, <a href=\"https://github.com/c8r\">Compositor</a> and <a href=\"https://mdxjs.com/\">MDX</a>. You can use these tools standalone in component library or design system development as well as embedded in a web application project. Many teams were able to decrease their UI feedback cycles and improve timing of UI work in preparation for development work, which has made using UI dev environments a reasonable default for us.</p>",
                "radarId": 42,
                "id": "en_2019-04_1272",
                "blip_selector": "ui-dev-environments"
            },
            {
                "blip_id": 1300,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "190",
                "name": "Crypto shredding",
                "display_name": "Crypto shredding",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "129",
                "tag": "refresh_writeup",
                "description": "<p>Maintaining proper control over sensitive data is difficult, especially when it's copied outside of a master system of record for backup and recovery purposes. <strong>Crypto shredding</strong> is the practice of rendering sensitive data unreadable by deliberately overwriting or deleting encryption keys used to secure that data. Considering there are systems, such as audit application or blockchain, that should not or could not delete historical records, this technique is quite useful for privacy protection and <a href=\"https://www.thoughtworks.com/insights/blog/gdpr-it-s-time-rethink-your-approach-privacy\">GDPR</a> compliance.</p>",
                "radarId": 9,
                "id": "en_2019-04_1300",
                "blip_selector": "crypto-shredding"
            },
            {
                "blip_id": 201904017,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "OpenAPM",
                "display_name": "OpenAPM",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "30",
                "tag": "new",
                "description": "<p>One of the challenges in adopting an open-source alternative to popular commercial packages is sorting through the complicated landscape of projects to understand which components you need, which ones play nicely together and exactly which part of a total solution each component covers. This is particularly difficult in the world of observability, where the standard practice is to purchase one comprehensive but pricey package to do it all. <strong><a href=\"https://openapm.io\">OpenAPM</a></strong> makes the open-source selection process for observability tools easier. It displays the current crop of open-source packages classified by component roles, so you can interactively select compatible components. As long as you keep the tool up to date, it should help you navigate through the confusing array of possible tools.</p>",
                "radarId": 62,
                "id": "en_2019-04_201904017",
                "blip_selector": "openapm"
            },
            {
                "blip_id": 681,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "130",
                "name": "TypeScript",
                "display_name": "TypeScript",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "337",
                "tag": "move",
                "description": "<p><strong><a href=\"https://www.typescriptlang.org/\">TypeScript</a></strong>, a statically typed language and superset of JavaScript, has become our sensible default. Large-scale projects benefit most from the type safety. Our developers favor its minimal configuration management, well-integrated IDE support and its ability to refactor code safely and gradually adopt types. With its <a href=\"https://definitelytyped.org/\">good repository</a> of TypeScript-type definitions at hand, we benefit from all the rich JavaScript libraries while gaining type safety.</p>",
                "radarId": 70,
                "id": "en_2019-04_681",
                "blip_selector": "typescript"
            },
            {
                "blip_id": 1271,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "85",
                "name": "LocalStack",
                "display_name": "LocalStack",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "45",
                "tag": "move",
                "description": "<p>One of the challenges of using cloud services is being able to develop and test locally. <strong><a href=\"https://github.com/localstack/localstack\">LocalStack</a></strong> solves this problem for <a href=\"/radar/platforms/aws\">AWS</a> by providing local <a href=\"https://martinfowler.com/bliki/TestDouble.html\">test double</a> implementations of a wide range of AWS services, including S3, Kinesis, DynamoDB and Lambda. It builds on top of best-of-breed tools such as <a href=\"https://github.com/mhart/kinesalite\">Kinesalite</a>, <a href=\"https://github.com/mhart/dynalite\">dynalite</a> and <a href=\"https://github.com/spulec/moto\">Moto</a> and adds isolated processes and error injection functionality. LocalStack is very easy to use, ships with a simple JUnit runner and a JUnit 5 extension and can also run inside a docker container. For many teams, it has become the default for testing services that are deployed on AWS.</p>",
                "radarId": 40,
                "id": "en_2019-04_1271",
                "blip_selector": "localstack"
            },
            {
                "blip_id": 201904053,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "EVM beyond Ethereum",
                "display_name": "EVM beyond Ethereum",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "205",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/ethereum/wiki/wiki/Ethereum-Virtual-Machine-(EVM)-Awesome-List\">Ethereum Virtual Machine (EVM)</a> was originally designed for the <a href=\"/radar/platforms/ethereum\">Ethereum</a> main network. Nowadays, however, most teams no longer want to reinvent blockchain from scratch; instead, they'd like to take <strong>EVM beyond Ethereum</strong>. We've seen a lot of blockchain teams choose to fork Ethereum (e.g., <a href=\"/radar/platforms/quorum\">Quorum</a>) or implement the EVM spec (e.g., <a href=\"https://github.com/hyperledger/burrow\">Burrow</a>, <a href=\"https://github.com/PegaSysEng/pantheon\">Pantheon</a>), adding their own designs. The intention is to not only reuse the Ethereum design but also leverage its ecosystem and developer community. To many developers, the concept of \"smart contract\" is almost equivalent to a smart contract written in <a href=\"/radar/languages-and-frameworks/solidity\">Solidity</a>. Although Ethereum itself has some constraints, the technology around the EVM ecosystem is booming.</p>",
                "radarId": 22,
                "id": "en_2019-04_201904053",
                "blip_selector": "evm-beyond-ethereum"
            },
            {
                "blip_id": 1243,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Reactor",
                "display_name": "Reactor",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "325",
                "tag": "move",
                "description": "<p>We've talked about <strong><a href=\"http://projectreactor.io\">Reactor</a></strong> in the previous Radars. It has continued to gain traction in many of our projects. With the Spring ecosystem embracing Reactor, it has become the dominant implementation of <a href=\"http://www.reactive-streams.org/\">Reactive Streams</a>. Reactive systems come with improved scalability and resilience but with increased cost of debugging and a steeper learning curve. For those projects where this tradeoff is acceptable, Reactor has proven to be a good choice. Some of our projects have observed significant improvements in scalability once they moved to Reactor and the rest of the Reactive stack. With <a href=\"http://r2dbc.io/\">R2DBC</a> we are starting to get reactive support for RDBMS drivers which addresses one of the weaknesses of reactive services.</p>",
                "radarId": 78,
                "id": "en_2019-04_1243",
                "blip_selector": "reactor"
            },
            {
                "blip_id": 201904032,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Micronaut",
                "display_name": "Micronaut",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "322",
                "tag": "new",
                "description": "<p><strong><a href=\"https://micronaut.io/\">Micronaut</a></strong> is a new JVM framework for building microservices using Java, <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> or Groovy. It distinguishes itself through a small memory footprint and short startup time. It achieves these improvements by avoiding runtime reflection for DI and proxy generation, a common shortcoming of traditional frameworks, and instead uses a <a href=\"https://martinfowler.com/articles/injection.html\">DI</a>/<a href=\"https://en.wikipedia.org/wiki/Aspect-oriented_programming\">AOP</a> container which performs dependency injection at compile time. This makes it attractive not just for standard server-side microservices but also in the context of, for example, the Internet of Things, Android applications and serverless functions. Micronaut uses Netty and has first-class support for reactive programming. It also includes many features that make it cloud-native friendly such as service discovery and circuit breaking. Micronaut is a very promising entrant to the full stack framework for the JVM space and we're keenly watching it.</p>",
                "radarId": 92,
                "id": "en_2019-04_201904032",
                "blip_selector": "micronaut"
            },
            {
                "blip_id": 201904024,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Lottie",
                "display_name": "Lottie",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "33",
                "tag": "new",
                "description": "<p>Good UI animation could greatly improve user experience. However, to reproduce a designer's delicate animation on an app is usually a challenging task for developers. <strong><a href=\"http://airbnb.io/lottie/#/\">Lottie</a></strong> is a library for Android, iOS, web, and Windows that parses Adobe After Effects animations exported as JSON with Bodymovin and renders them natively on mobile and on the web. Both designers and developers can continue to use their familiar tools and have a fluent collaboration.</p>",
                "radarId": 49,
                "id": "en_2019-04_201904024",
                "blip_selector": "lottie"
            },
            {
                "blip_id": 201904100,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "265",
                "name": "Laconia",
                "display_name": "Laconia",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "311",
                "tag": "new",
                "description": "<p><strong><a href=\"https://laconiajs.io/\">Laconia</a></strong> is a framework for developing <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> functions in JavaScript. As interest and use of serverless tech has grown so has the complexity of the applications being built. Laconia is a small, lightweight framework that takes away some of the rough edges we often encounter. It uses dependency injection to isolate your application code from lower-level AWS APIs and provides adaptors for the different events that your application can respond too. It also plays nicely with the <a href=\"/radar/tools/serverless-framework\">Serverless Framework</a> at deploy time. We like small and simple frameworks and Laconia is just that.</p>",
                "radarId": 76,
                "id": "en_2019-04_201904100",
                "blip_selector": "laconia"
            },
            {
                "blip_id": 1222,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "265",
                "name": "Helm",
                "display_name": "Helm",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "50",
                "tag": "move",
                "description": "<p><a href=\"http://helm.sh\"><strong>Helm</strong></a> is a package manager for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. It comes with a repository of curated Kubernetes applications that are maintained in the official <a href=\"https://github.com/helm/charts\">Charts repository</a>. Helm has two components: a command line utility called Helm and a cluster component called Tiller. Securing a Kubernetes cluster is a wide and nuanced topic, but we highly recommend setting up Tiller in a role-based access control (RBAC) environment. We've used Helm in a number of client projects and its dependency management, templating and hook mechanism has greatly simplified the application lifecycle management in Kubernetes. However, we recommend proceeding with caution — Helm's <a href=\"/radar/techniques/templating-in-yaml\">YAML templating</a> can be difficult to understand, and Tiller still has some rough edges. Helm 3 is expected to address these issues.</p>",
                "radarId": 47,
                "id": "en_2019-04_1222",
                "blip_selector": "helm"
            },
            {
                "blip_id": 201904052,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Deno",
                "display_name": "Deno",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "202",
                "tag": "new",
                "description": "<p>As a group we have mixed feelings about programming in JavaScript on the server side, especially when the rationale for doing so is simply to avoid <a href=\"/radar/techniques/polyglot-programming\">polyglot programming</a>. That said, if you decide to use JavaScript or TypeScript on the server, have a look at <strong><a href=\"https://deno.land/\">Deno</a></strong>. Written by Ryan Dahl, the inventor of Node.js, Deno aims to avoid what Ryan considers mistakes that were made in Node.js. It brings a strict sandbox system and built-in dependency and package management, and it supports <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> out of the box. Deno is built using <a href=\"/radar/languages-and-frameworks/rust\">Rust</a> and V8.</p>",
                "radarId": 29,
                "id": "en_2019-04_201904052",
                "blip_selector": "deno"
            },
            {
                "blip_id": 201904060,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "105",
                "name": "Opinionated and automated code formatting",
                "display_name": "Opinionated and automated code formatting",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "135",
                "tag": "new",
                "description": "<p>For as long as we can remember, what style to use for formatting code has been a matter of personal taste, company policy and heated debate. Finally, the industry appears to be tiring of this endless argument and teams are freeing up surprisingly large amounts of time by forgoing these discussions and just adopting <strong>opinionated and automated code formatting</strong> tools. Even if you don't agree 100% with the opinions of the various tools, the benefits of focusing on what your code does rather than how it looks is something most teams should be able to get behind. <a href=\"/radar/tools/prettier\">Prettier</a> has been getting our vote for JavaScript, but similar tools, such as <a href=\"https://github.com/ambv/black\">Black</a> for Python, are available for many other languages and are increasingly being built-in as we see with <a href=\"https://golang.org/cmd/gofmt/\">Golang</a> and <a href=\"https://elixir-lang.org/blog/2018/01/17/elixir-v1-6-0-released/\">Elixir</a>. The key here is not to spend hours discussing which rules to enforce, but instead pick a tool that is opinionated, minimally configurable and automated — ideally as a pre-commit hook.</p>",
                "radarId": 3,
                "id": "en_2019-04_201904060",
                "blip_selector": "opinionated-and-automated-code-formatting"
            },
            {
                "blip_id": 1320,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Apache Beam",
                "display_name": "Apache Beam",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "278",
                "tag": "move",
                "description": "<p><strong><a href=\"https://beam.apache.org/\">Apache Beam</a></strong> is an open-source unified programming model for defining and executing both batch and streaming data parallel processing pipelines. The Beam model is based on the <a href=\"http://www.vldb.org/pvldb/vol8/p1792-Akidau.pdf\">Dataflow model</a> which allows us to express logic in an elegant way so that we can easily switch between batch, windowed batch or streaming. The big data-processing ecosystem has been evolving quite a lot which can make it difficult to choose the right data-processing engine. One of the key reasons to choose Beam is that it allows us to switch between different runners — a few months ago <a href=\"http://samza.apache.org/\">Apache Samza</a> was added to the other runners it already supports, which include <a href=\"https://spark.apache.org/\">Apache Spark</a>, <a href=\"https://flink.apache.org/\">Apache Flink</a> and <a href=\"/radar/platforms/google-cloud-dataflow\">Google Cloud Dataflow</a>. Different runners have different capabilities and providing a portable API is a difficult task. Beam tries to strike a delicate balance by actively pulling innovations from these runners into the Beam model and also working with the community to influence the roadmap of these runners. Beam has SDKs in multiple languages including Java, Python and Golang. We've also had success using <a href=\"https://github.com/spotify/scio\">Scio</a> which provides a Scala wrapper around Beam.</p>",
                "radarId": 71,
                "id": "en_2019-04_1320",
                "blip_selector": "apache-beam"
            },
            {
                "blip_id": 201904054,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "InfluxDB",
                "display_name": "InfluxDB",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "218",
                "tag": "new",
                "description": "<p><a href=\"/radar/platforms/time-series-databases\">Time series databases</a> (TSDBs) have been around for some time now. But increasingly they're becoming more mainstream as more use cases naturally fit the time series model. <a href=\"https://github.com/influxdata/influxdb\"><strong>InfluxDB</strong></a> continues to remain a good choice for TSDBs with monitoring being one of its key use cases. <a href=\"/radar/platforms/tick-stack\">TICK Stack</a> is an example of a monitoring solution that has InfluxDB at its heart. Influx 2.0 alpha recently introduced Flux — a scripting language for querying and processing time series data. It's still early days for Flux and the jury's out on its <a href=\"https://medium.com/timescale/sql-vs-flux-influxdb-query-language-time-series-database-290977a01a8a\">broader adoption beyond InfluxDB</a>, but it promises to be more powerful and expressive than InfluxQL and enables pushing time series analytic workloads to the database. However, clustering support for InfluxDB is only available with the enterprise version which has limited its adoption on some of our projects.</p>",
                "radarId": 23,
                "id": "en_2019-04_201904054",
                "blip_selector": "influxdb"
            },
            {
                "blip_id": 201904028,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Chaos Toolkit",
                "display_name": "Chaos Toolkit",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "285",
                "tag": "new",
                "description": "<p>The <strong><a href=\"https://chaostoolkit.org/\">Chaos Toolkit</a></strong> is one of a number of <a href=\"/radar/techniques/chaos-engineering\">Chaos Engineering</a> tools that made this edition of the Radar. You use the toolkit to describe and then run repeatable experiments on your infrastructure to understand its resilience in the event of failure. Many of our teams have been using homegrown tools to do this, so it's great to see an open-source project dedicated to the practice. The toolkit already has drivers for <a href=\"/radar/platforms/aws\">AWS</a>, <a href=\"/radar/platforms/azure-service-fabric\">Azure Service Fabric</a> and GCE (among others) and plays nicely with build tools which lets you experiment with automation. The usual caveats apply though, Chaos Engineering is a very powerful technique that is best used on resilience-aware systems, that is, systems that have been built to cope with failure. For that reason, we recommend starting using Chaos Toolkit in your nonproduction environments first.</p>",
                "radarId": 85,
                "id": "en_2019-04_201904028",
                "blip_selector": "chaos-toolkit"
            },
            {
                "blip_id": 983,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Nomad",
                "display_name": "Nomad",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "257",
                "tag": "move",
                "description": "<p>HashiCorp continues to release interesting software. We've featured <a href=\"/radar/tools/hashicorp-vault\">HashiCorp Vault</a> in March 2017, and tools related to Terraform are all over this edition of the Radar. We've moved <strong><a href=\"https://www.nomadproject.io/\">Nomad</a></strong> to Trial because we've had positive experiences using it. While <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> continues to gain traction, we like Nomad's general applicability. It's not just limited to running containerized workloads but can be used to schedule just about anything. Java and Golang are supported natively as well as batch and distributed cron jobs. We like its focus on multi- and hybrid-cloud operations, something likely to become more important to avoid sticky clouds and the fact that it does scheduling well.</p>",
                "radarId": 26,
                "id": "en_2019-04_983",
                "blip_selector": "nomad"
            },
            {
                "blip_id": 201904005,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Pose",
                "display_name": "Pose",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "333",
                "tag": "new",
                "description": "<p><strong><a href=\"https://popmotion.io/pose/\">Pose</a></strong> is a simple CSS-like animation library for <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a>, <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> and <a href=\"/radar/languages-and-frameworks/vue-js\">Vue.js</a> frameworks. It is a declarative motion system that combines the simplicity of CSS syntax with the power and flexibility of JavaScript animations and interactions.</p>",
                "radarId": 94,
                "id": "en_2019-04_201904005",
                "blip_selector": "pose"
            },
            {
                "blip_id": 1239,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "Apollo",
                "display_name": "Apollo",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "292",
                "tag": "move",
                "description": "<p>Our teams report that <strong><a href=\"http://www.apollographql.com/client\">Apollo</a></strong> has become the library of choice when building a <a href=\"/radar/languages-and-frameworks/react-js\">React</a> application that uses GraphQL to access data from a <a href=\"/radar/techniques/bff-backend-for-frontends\">back-end</a> service. Although the Apollo project also provides a server framework and a GraphQL gateway, the Apollo client gets our attention because it simplifies the problem of binding UI components to data served by any GraphQL backend. Put simply, this means less code needs to be written than using REST backends and redux.</p>",
                "radarId": 68,
                "id": "en_2019-04_1239",
                "blip_selector": "apollo"
            },
            {
                "blip_id": 9215,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "55",
                "name": "Polyglot programming",
                "display_name": "Polyglot programming",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "120",
                "tag": "move",
                "description": "<p>We put <strong>polyglot programming</strong> on Trial in one of our first Radars to suggest that choosing the right language for the job could significantly boost productivity, and there were new language entrants that were worthy of consideration. We want to reraise this suggestion because we're seeing a new push to standardize language stacks by both developers and enterprises. While we acknowledge that placing no restrictions on language uses can create more problems than it solves, promoting a few languages that support different ecosystems or language features is important for both enterprises to accelerate processes and go live more quickly and developers to have the right tools to solve the problem at hand.</p>",
                "radarId": 4,
                "id": "en_2019-04_9215",
                "blip_selector": "polyglot-programming"
            },
            {
                "blip_id": 201904008,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Gremlin",
                "display_name": "Gremlin",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "54",
                "tag": "new",
                "description": "<p><a href=\"https://www.gremlin.com/\"><strong>Gremlin</strong></a> is a SaaS solution for organizations to conduct <a href=\"/radar/techniques/chaos-katas\">chaos experiments</a> and help test the resilience of their systems. It comes with a series of failure attacks — including resource, network and state failures — that can be run ad hoc or on schedule and require minimal setup (especially for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> users, who can run <a href=\"/radar/tools/helm\">Helm</a> to install Gremlin). The Gremlin client also has a nice web-based user interface, which makes it easy to execute and manage chaos experiments.</p>",
                "radarId": 58,
                "id": "en_2019-04_201904008",
                "blip_selector": "gremlin"
            },
            {
                "blip_id": 201904035,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "285",
                "name": "react-testing-library",
                "display_name": "react-testing-library",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "338",
                "tag": "new",
                "description": "<p>As the pace of change in JavaScript frameworks has slowed, our teams have more time to work with specific frameworks and are gaining deeper insights as a result. With <a href=\"/radar/languages-and-frameworks/react-js\">React</a> and the dominant testing framework, <a href=\"/radar/languages-and-frameworks/enzyme\">Enzyme</a>, we've observed a worrying trend of unit tests becoming tightly coupled to implementation details without providing — because the focus is on shallow details — much confidence that features work as expected. These unit tests make evolving the design difficult and they shift too much responsibility up the test pyramid to functional testing. This has made us revisit the idea of <a href=\"https://www.martinfowler.com/bliki/SubcutaneousTest.html\">subcutaneous testing</a>. Additionally, because of its design, <a href=\"https://github.com/airbnb/enzyme/issues/1917\">Enzyme has issues</a> trying to keep up with React's development. All this has pushed us toward assessing <strong><a href=\"https://github.com/kentcdodds/react-testing-library\">react-testing-library</a></strong> as a new framework for testing React applications.</p>",
                "radarId": 95,
                "id": "en_2019-04_201904035",
                "blip_selector": "react-testing-library"
            },
            {
                "blip_id": 201904042,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "joi",
                "display_name": "joi",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "297",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/hapijs/joi\">joi</a></strong> is a schema description language and validator for JavaScript objects. We like that joi is independent of any web application framework, so our teams can use the same schemas across different stacks. You can also use companion libraries to generate Swagger documentation for APIs that validate requests with joi schemas.</p>",
                "radarId": 74,
                "id": "en_2019-04_201904042",
                "blip_selector": "joi"
            },
            {
                "blip_id": 1324,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Puppeteer",
                "display_name": "Puppeteer",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "318",
                "tag": "move",
                "description": "<p>Much like <a href=\"/radar/tools/cypress\">Cypress</a> and <a href=\"/radar/tools/testcafe\">TestCafe</a>, <strong><a href=\"https://pptr.dev/\">Puppeteer</a></strong> is one of the web UI testing tools garnering praise from our teams. Puppeteer can have fine-grained control over headless browsers, obtain time-trace for performance diagnostics and more. Our teams have found Puppeteer to be stable as well as faster and more flexible than alternatives based on WebDriver.</p>",
                "radarId": 77,
                "id": "en_2019-04_1324",
                "blip_selector": "puppeteer"
            },
            {
                "blip_id": 201904029,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Aeron",
                "display_name": "Aeron",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "275",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/real-logic/aeron\">Aeron</a></strong> is an efficient and reliable peer-to-peer message transport. It provides a replicated persistent log of messages via a number of media drivers, including HTTP, UDP and TCP. It also supports persistent storage of message streams for later replay. For many applications, Aeron may be overkill because it operates at a pretty low level (OSI Layer 4 conceptually), but it's peer-to-peer design and low (and predictable) latency are useful in a number of use cases. Indeed, we've found it to be useful in certain machine learning applications as well as playing a part in event-driven architectures. We think it's worth pointing out that alternative messaging protocols exist that don't require additional services such as <a href=\"/radar/tools/apache-kafka\">Apache Kafka</a> to be run.</p>",
                "radarId": 83,
                "id": "en_2019-04_201904029",
                "blip_selector": "aeron"
            },
            {
                "blip_id": 201904058,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Puncturing encapsulation with change data capture",
                "display_name": "Puncturing encapsulation with change data capture",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "144",
                "tag": "new",
                "description": "<p><a href=\"https://en.wikipedia.org/wiki/Change_data_capture\">Change data capture</a> (CDC) is a very powerful technique for pulling database changes out of a system and performing some actions on that data. One of the most popular ways of doing this is to use the database's transaction log to identify changes and then publish those changes directly onto an event bus that can be consumed by other services. This works very well for use cases such as <a href=\"https://martinfowler.com/articles/break-monolith-into-microservices.html\">breaking monoliths into microservices</a> but when used for first-class integration between microservices, this leads to puncturing encapsulation and leaking the source service's data layer into the event contract. We've talked about <a href=\"/radar/techniques/domain-scoped-events\">domain scoped events</a> and other techniques that emphasize the importance of having our events model our domain properly. We're seeing some projects use CDC for publishing row-level change events and directly consuming these events in other services. This <strong>puncturing of encapsulation with change data capture</strong> can be a slippery slope leading to fragile integrations and we would like to call this out with this blip.</p>",
                "radarId": 17,
                "id": "en_2019-04_201904058",
                "blip_selector": "puncturing-encapsulation-with-change-data-capture"
            },
            {
                "blip_id": 201904022,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Cage",
                "display_name": "Cage",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "78",
                "tag": "new",
                "description": "<p><strong><a href=\"http://cage.faraday.io/\">Cage</a></strong> is an open-source wrapper around <a href=\"https://docs.docker.com/compose/\">Docker Compose</a> that lets you configure and run multiple dependent components as a larger application. It lets you orchestrate the execution of components such as Docker images, service source code from repo, scripts to load datastores and pods, which are containers that run together as a unit. Cage uses the Docker Compose v2 configuration file format. It addresses some of the Docker Compose gaps such as supporting multiple environments, including the dev environment for running a distributed application on the local developer machine and the test environment for running integration tests and production.</p>",
                "radarId": 54,
                "id": "en_2019-04_201904022",
                "blip_selector": "cage"
            },
            {
                "blip_id": 201904018,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Elasticsearch LTR",
                "display_name": "Elasticsearch LTR",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "58",
                "tag": "new",
                "description": "<p>One of the challenges of search is ensuring the most relevant results for the user appear at the top of the list. This is where learning to rank (LTR) can help. LTR is the process of applying machine learning to rank documents retrieved by a search engine. If you're using <a href=\"/radar/platforms/elastic-search\">Elasticsearch</a>, you can achieve search-relevant ranking with the <a href=\"https://github.com/o19s/elasticsearch-learning-to-rank\"><strong>Elasticsearch LTR</strong></a> plugin. The plugin uses <a href=\"https://sourceforge.net/p/lemur/wiki/RankLib/\">RankLib</a> for generating the models during the training phase. Then, when querying Elasticsearch, you can use this plugin to \"rescore\" the top results. We've used it in a few projects and have been happy with the results. There's also an equivalent <a href=\"http://lucene.apache.org/solr/guide/7_7/learning-to-rank.html\">LTR solution</a> for Solr users.</p>",
                "radarId": 46,
                "id": "en_2019-04_201904018",
                "blip_selector": "elasticsearch-ltr"
            },
            {
                "blip_id": 1149,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "80",
                "name": "Cypress",
                "display_name": "Cypress",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-04",
                "theta": "74",
                "tag": "move",
                "description": "<p>We keep receiving positive feedback on \"post-Selenium\" web UI testing tools such as <strong><a href=\"http://www.cypress.io/\">Cypress</a></strong>, <a href=\"/radar/tools/testcafe\">TestCafe</a> and <a href=\"/radar/languages-and-frameworks/puppeteer\">Puppeteer</a>. Running end-to-end tests can present challenges, such as the long duration of the running process, the flakiness of some tests and the challenges of fixing failures in CI when running tests in headless mode. Our teams have had very good experiences with Cypress by solving common issues such as lack of performance and long wait time for responses and resources to load. Cypress has become the tool of choice for end-to-end testing within our teams.</p>",
                "radarId": 38,
                "id": "en_2019-04_1149",
                "blip_selector": "cypress"
            }
        ]
    },
    {
        "date": "2019-11",
        "blips": [
            {
                "blip_id": 201911003,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Crowdin",
                "display_name": "Crowdin",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "200",
                "tag": "new",
                "description": "<p>Most of the projects with multilingual support start with development teams building features in one language and managing the rest through offline translation via emails and spreadsheets. Although this simple setup works, things can quickly get out of hand. You may have to keep answering the same questions for different language translators, sucking the energy out of the collaboration between translators, proofreaders and the development team. <strong><a href=\"https://crowdin.com\">Crowdin</a></strong> is one of a handful of platforms that help in streamlining the localization workflow of your project. With Crowdin the development team can continue building features and the platform streamlines the text that needs translation into an online workflow. We like that Crowdin nudges the teams to continuously and incrementally incorporate translation rather than managing them in large batches toward the end.</p>",
                "radarId": 37,
                "id": "en_2019-11_201911003",
                "blip_selector": "crowdin"
            },
            {
                "blip_id": 201911031,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "125",
                "name": "Testing using real device",
                "display_name": "Testing using real device",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "101",
                "tag": "new",
                "description": "<p>When adopting continuous delivery (CD) successfully, teams strive to make the various test environments look as close to production as possible. This allows them to avoid bugs that would otherwise only show themselves in the production environment. This remains just as valid for embedded and Internet of Things software; if we don't run our tests in realistic environments we can expect to find some bugs for the first time in production. <strong>Testing using real devices</strong> helps avoid this issue by making sure the right devices are available in the CD pipeline.</p>",
                "radarId": 6,
                "id": "en_2019-11_201911031",
                "blip_selector": "testing-using-real-device"
            },
            {
                "blip_id": 201911068,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Docker Notary",
                "display_name": "Docker Notary",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "60",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/notaryproject/notary\">Docker Notary</a></strong> is an OSS tool that enables signing of assets such as images, files and containers. This means that the provenance of assets can be asserted which is superuseful in regulated environments and better practice everywhere. As an example, when a container is created, it's signed by a private key and a hash, tied to the publisher's identity, stored as metadata. Once published, the provenance of the container (or other asset) can be checked using the image hash and the publisher's public key. There are publicly available, trusted registries such as the <a href=\"https://docs.docker.com/ee/dtr/\">Docker Trusted Registry</a>, but it's also possible to run your own. Our teams have reported some spiky edges running local Notary servers and suggest using a registry that includes Notary where possible.</p>",
                "radarId": 67,
                "id": "en_2019-11_201911068",
                "blip_selector": "docker-notary"
            },
            {
                "blip_id": 201911024,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "340",
                "name": "Paged.js",
                "display_name": "Paged.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "327",
                "tag": "new",
                "description": "<p>When using HTML and related technologies to produce books and other print output, the question of pagination must be considered. This includes page counters, repeated elements in headers and footers, as well as mechanisms to avoid awkward page breaks. <strong><a href=\"https://www.pagedmedia.org/paged-js/\">Paged.js</a></strong> is an open-source library that implements a series of polyfills for the <a href=\"https://www.w3.org/TR/css-page-3/\">Paged Media</a> and <a href=\"https://www.w3.org/TR/css-gcpm-3/\">Generated Content for Paged Media</a> CSS modules. It is still experimental but fills an important gap in the \"write once, publish everywhere\" story for HTML.</p>",
                "radarId": 92,
                "id": "en_2019-11_201911024",
                "blip_selector": "paged-js"
            },
            {
                "blip_id": 201911030,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "jest-when",
                "display_name": "jest-when",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "300",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.npmjs.com/package/jest-when\">jest-when</a></strong> is a lightweight JavaScript library that complements <a href=\"/radar/languages-and-frameworks/jest\">Jest</a> by matching mock function call arguments. Jest is a great tool for testing the stack; jest-when allows you to expect specific arguments for mock functions and thus lets you write more robust unit tests of modules with many dependencies.</p>",
                "radarId": 80,
                "id": "en_2019-11_201911030",
                "blip_selector": "jest-when"
            },
            {
                "blip_id": 201911054,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Ethical bias testing",
                "display_name": "Ethical bias testing",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "147",
                "tag": "new",
                "description": "<p>Over the past year, we've seen a shift in interest around machine learning and deep neural networks in particular. Until now, tool and technique development has been driven by excitement over the remarkable capabilities of these models. Currently though, there is rising concern that these models could cause unintentional harm. For example, a model could be trained to make profitable credit decisions by simply excluding disadvantaged applicants. Fortunately, we're seeing a growing interest in <strong>ethical bias testing</strong> that will help to uncover potentially harmful decisions. Tools such as <a href=\"https://github.com/marcotcr/lime\">lime</a>, <a href=\"https://aif360.mybluemix.net/\">AI Fairness 360</a> or <a href=\"/radar/tools/what-if-tool\">What-If</a> can help uncover inaccuracies that result from underrepresented groups in training data and visualization tools such as <a href=\"https://ai.googleblog.com/2017/07/facets-open-source-visualization-tool.html\">Google Facets</a> or <a href=\"https://pair-code.github.io/facets/\">Facets Dive</a> can be used to discover subgroups within a corpus of training data. However, this is a developing field and we expect standards and practices specific to ethical bias testing to emerge over time.</p>",
                "radarId": 20,
                "id": "en_2019-11_201911054",
                "blip_selector": "ethical-bias-testing"
            },
            {
                "blip_id": 201911028,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Fairseq",
                "display_name": "Fairseq",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "278",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/pytorch/fairseq\">Fairseq</a></strong> is a sequence-to-sequence modelling toolkit by Facebook AI Research that allows researchers and developers to train custom models for translation, summarization, language modeling and other NLP tasks. For users of <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a>, this is a good choice. It provides reference implementations of various sequence-to-sequence models; supports distributed training across multiple GPUs and machines; is very extensible; and has a bunch of pretrained models, including <a href=\"https://github.com/pytorch/fairseq/blob/master/examples/roberta/README.md\">RoBERTa</a> which is an optimization on top of <a href=\"/radar/techniques/bert\">BERT</a>.</p>",
                "radarId": 86,
                "id": "en_2019-11_201911028",
                "blip_selector": "fairseq"
            },
            {
                "blip_id": 1329,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "315",
                "name": "Azure DevOps",
                "display_name": "Azure DevOps",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "190",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://azure.microsoft.com/en-us/services/devops/\">Azure DevOps</a></strong> services include a set of managed services such as hosted Git repos, CI/CD pipelines, automated testing tooling, backlog management tooling and artifact repository. Azure DevOps Pipelines have been maturing over time. We particularly like its ability to define <a href=\"/radar/techniques/pipelines-as-code\">Pipelines as code</a> and its ecosystem of extensions on the Azure DevOps <a href=\"https://marketplace.visualstudio.com/azuredevops\">marketplace</a>. At the time of writing, our teams are still running into a few immature features, including lack of an effective UI for pipeline visualization and navigation and the inability to trigger a pipeline from artifacts or other pipelines.</p>",
                "radarId": 35,
                "id": "en_2019-11_1329",
                "blip_selector": "azure-devops"
            },
            {
                "blip_id": 201911038,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Zhong Tai",
                "display_name": "Zhong Tai",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "98",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.thoughtworks.com/insights/blog/zhong-tai-radical-approach-enterprise-it\">Zhong Tai</a></strong> has been a buzzword in the Chinese IT industry for years, but it has yet to catch on in the West. At its core, Zhong Tai is an approach to delivering encapsulated business models. It's designed to help a new breed of small businesses deliver first-rate services without the costs of traditional enterprise infrastructure and enabling existing organizations to bring innovative services to market at breakneck speeds. The Zhong Tai strategy was originally proposed by Alibaba and soon followed by many Chinese Internet companies, because their business model is digital native, making it suitable to replicate for new markets and sectors. Nowadays, more Chinese firms are using Zhong Tai as a lever for digital transformation.</p>",
                "radarId": 17,
                "id": "en_2019-11_201911038",
                "blip_selector": "zhong-tai"
            },
            {
                "blip_id": 1246,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Flutter",
                "display_name": "Flutter",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "292",
                "tag": "move",
                "description": "<p>Several of our teams use <strong><a href=\"http://flutter.io/\">Flutter</a></strong> and really like it. It's a cross-platform framework that enables you to write native mobile apps in <a href=\"/radar/languages-and-frameworks/google-dart\">Dart</a>. It benefits from Dart and can be compiled into native code and communicates with the target platform without bridge and context switching. Flutter's hot-reload feature is still impressive and provides superfast visual feedback when editing code. We're confident in recommending that you try Flutter on one of your projects.</p>",
                "radarId": 79,
                "id": "en_2019-11_1246",
                "blip_selector": "flutter"
            },
            {
                "blip_id": 201911018,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "SwiftUI",
                "display_name": "SwiftUI",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "343",
                "tag": "new",
                "description": "<p>Apple has taken a big step forward with their new <strong><a href=\"https://developer.apple.com/xcode/swiftui/\">SwiftUI</a></strong> framework for implementing user interfaces on macOS and iOS platforms. We like that SwiftUI moves beyond the somewhat kludgy relationship between Interface Builder and XCode and adopts a coherent, declarative and code-centric approach. You can now view your code and the resulting visual interface side by side in XCode 11, making for a much better developer experience. The SwiftUI framework also draws inspiration from the <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> world that has dominated web development in recent years. Immutable values in view models and an asynchronous update mechanism make for a unified reactive programming model. This gives developers an entirely native alternative to similar reactive frameworks such as <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> or <a href=\"/radar/languages-and-frameworks/flutter\">Flutter</a>. Although SwiftUI definitely represents the future of Apple UI development, it is quite new and it will take time to smooth out the rough edges. We look forward to improved documentation and a community of developers who can establish a set of practices for testing and other engineering concerns.</p>",
                "radarId": 94,
                "id": "en_2019-11_201911018",
                "blip_selector": "swiftui"
            },
            {
                "blip_id": 201911110,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "JAMstack",
                "display_name": "JAMstack",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "124",
                "tag": "new",
                "description": "<p>The trend that started as <a href=\"/radar/platforms/backend-as-a-service\">backend as a service</a> for native mobile apps many years ago is now becoming popular with web applications. We're seeing frameworks such as <a href=\"/radar/languages-and-frameworks/gatsby-js\">Gatsby.js</a> that combine static site generation and client-side rendering with third-party APIs. Referred to as <strong><a href=\"https://jamstack.org/\">JAMstack</a></strong> (the JAM stands for <strong>J</strong>avaScript, <strong>A</strong>PI, and <strong>M</strong>arkup), this approach can provide rich user experiences to web applications that rely mostly on APIs and SaaS offerings. Because the HTML is rendered either in the web browser or at build time, the deployment model is the same as fully statically generated sites, with all its benefits: the attack surface on the server is small and great performance can be achieved with low resource usage. Such deployments are also ideal for a content delivery network. In fact, we toyed with the idea of labelling this technique as <em>CDN first</em> applications.</p>",
                "radarId": 22,
                "id": "en_2019-11_201911110",
                "blip_selector": "jamstack"
            },
            {
                "blip_id": 201911043,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "Data integrity at the origin",
                "display_name": "Data integrity at the origin",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "153",
                "tag": "new",
                "description": "<p>Today, many organizations' answer to unlocking data for analytical usage is to build a labyrinth of data pipelines. Pipelines retrieve data from one or multiple sources, cleanse it and then transform and move it to another location for consumption. This approach to data management often leaves the consuming pipelines with the difficult task of verifying the inbound data's integrity and building complex logic to cleanse the data to meet its required level of quality. The fundamental problem is that the source of the data has no incentive and accountability for providing quality data to its consumers. For this reason, we strongly advocate for <strong>data integrity at the origin</strong>, by which we mean, any source that provides consumable data must describe its measures of data quality explicitly and guarantee those measures. The main reason behind this is that the originating systems and teams are most intimately familiar with their data and best positioned to fix it at the source. <a href=\"/radar/techniques/data-mesh\">Data mesh</a> architecture takes this one step further, comparing consumable data to a <em>product</em>, where data quality and its objectives are integral attributes of every shared data set.</p>",
                "radarId": 2,
                "id": "en_2019-11_201911043",
                "blip_selector": "data-integrity-at-the-origin"
            },
            {
                "blip_id": 201911042,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Experiment tracking tools for machine learning",
                "display_name": "Experiment tracking tools for machine learning",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "128",
                "tag": "new",
                "description": "<p>The day-to-day work of machine learning often boils down to a series of experiments in selecting a modeling approach, the network topology, training data and various optimizations or tweaks to the model. Because many of these models are still difficult to interpret or explain, data scientists must use experience and intuition to hypothesize changes and then measure the impact those changes have on the overall performance of the model. As these models have become increasingly common in business systems, several different <strong>experiment tracking tools for machine learning</strong> have emerged to help investigators keep track of these experiments and work through them methodically. Although no clear winner has emerged, tools such as <a href=\"https://mlflow.org/\">MLflow</a> or <a href=\"https://www.wandb.com/\">Weights & Biases</a> and platforms such as <a href=\"https://comet.ml\">Comet</a> or <a href=\"https://neptune.ml\">Neptune</a> have introduced rigor and repeatability into the entire machine learning workflow. They also facilitate collaboration and help turn data science from a solitary endeavor into a team sport.</p>",
                "radarId": 13,
                "id": "en_2019-11_201911042",
                "blip_selector": "experiment-tracking-tools-for-machine-learning"
            },
            {
                "blip_id": 201911066,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Aplas",
                "display_name": "Aplas",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "84",
                "tag": "new",
                "description": "<p>It's often very difficult to get a handle on our software estates as they grow ever more complex. <strong><a href=\"https://aplas.com/public\">Aplas</a></strong> is a new software mapping tool that can be used to create visualizations of our software landscapes in the form of maps. The tool works by ingesting metadata about your existing systems and then displaying a map over which various views can be projected. Ingestion is either a manual process or one that can be automated via APIs. We're pretty excited to see this product evolve and to see what's possible with the automated collection of metadata. It should be possible, for example, to expose <a href=\"/radar/techniques/architectural-fitness-function\">architectural fitness functions</a> such as <a href=\"/radar/techniques/run-cost-as-architecture-fitness-function\">run cost</a> to create visualizations of how much is being spent on cloud infrastructure. Understanding which systems talk to other systems via which technology is another problem we often face and Aplas can visualize it for us.</p>",
                "radarId": 63,
                "id": "en_2019-11_201911066",
                "blip_selector": "aplas"
            },
            {
                "blip_id": 201911075,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Twistlock",
                "display_name": "Twistlock",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "18",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.paloaltonetworks.com/prisma/cloud\">Twistlock</a></strong> is a commercial product with build-time and run-time security vulnerability detection and prevention capabilities. These capabilities span protecting VMs, container schedulers and containers to various registries and repositories that applications rely on. Twistlock has helped our teams accelerate development of regulated applications, where application infrastructure and architecture require compliance with, for example, Payment Card Industry (PCI) standards and the Health Insurance Portability and Accountability Act (HIPAA). Our teams have enjoyed the developer experience that Twistlock provides: the ability to run provisioning as code, the easy integration with other common observability platforms, and the out-of-the-box benchmarks to measure the infrastructure against industry-consensus best practices. We run Twistlock with regular runtime scans over our cloud-native applications, particularly when regulatory compliance is required.</p>",
                "radarId": 61,
                "id": "en_2019-11_201911075",
                "blip_selector": "twistlock"
            },
            {
                "blip_id": 986,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "GraphQL",
                "display_name": "GraphQL",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "302",
                "tag": "refresh_writeup",
                "description": "<p>We've seen many successful <strong><a href=\"https://github.com/facebook/graphql\">GraphQL</a></strong> implementations on our projects. We've seen some interesting patterns of use too, including <a href=\"/radar/techniques/graphql-for-server-side-resource-aggregation\">GraphQL for server-side resource aggregation</a>. That said, we've concerns about misuse of this framework and some of the problems that can occur. Examples include performance gotchas around N+1 queries and lots of boilerplate code needed when adding new models, leading to complexity. There are workarounds to these gotchas such as query caching. Even though it's not a silver bullet, we still think it's worth assessing as part of your architecture.</p>",
                "radarId": 89,
                "id": "en_2019-11_986",
                "blip_selector": "graphql"
            },
            {
                "blip_id": 201911073,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Loki",
                "display_name": "Loki",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "36",
                "tag": "new",
                "description": "<p><strong><a href=\"https://loki.js.org\">Loki</a></strong> is a visual regression tool that works with <a href=\"https://storybook.js.org/\">Storybook</a>, which we mentioned previously in the context of <a href=\"/radar/tools/ui-dev-environments\">UI dev environments</a>. With a few lines of configuration, Loki can be used to test all UI components. The preferred mode of operation is using Chrome in a Docker container as this avoids one-pixel differences when tests are run in nonidentical environments. Our experience has been that the tests are very stable, but updates to Storybook tend to cause tests to fail with minor differences. It also seems impossible to test components which use <code>position: fixed</code> but you can work around that by wrapping the component with a <code>fixed</code>.</p>",
                "radarId": 59,
                "id": "en_2019-11_201911073",
                "blip_selector": "loki"
            },
            {
                "blip_id": 201911001,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Oculus Quest",
                "display_name": "Oculus Quest",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "245",
                "tag": "new",
                "description": "<p>We've long tracked AR/VR (Augmented/Virtual Reality) in our Radar, but its appeal has been limited to specific platforms and tethering options. The <strong>Oculus Quest</strong> changes the game, becoming one of the first consumer mass-market standalone VR headsets that requires no tethering or support outside a smartphone. This device opens the door for a huge jump in potential exposure to VR applications, whose demand will in turn drive the market toward more aggressive innovation. We applaud the democratization of VR this device helps usher in and can't wait to see what's on the horizon.</p>",
                "radarId": 46,
                "id": "en_2019-11_201911001",
                "blip_selector": "oculus-quest"
            },
            {
                "blip_id": 201911044,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Dependency drift fitness function",
                "display_name": "Dependency drift fitness function",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "143",
                "tag": "new",
                "description": "<p>Many teams and organizations have no formal or consistent way of tracking technical dependencies in their software. This issue often shows itself when that software needs to be changed, at which point the use of an outdated version of a library, API or component will cause problems or delay. <strong>Dependency drift fitness function</strong> is a technique to introduce a specific <a href=\"/radar/techniques/evolutionary-architecture\">evolutionary architecture</a> fitness function to track these dependencies over time, thus giving an indication of the possible work needed and whether a potential issue is getting better or worse.</p>",
                "radarId": 11,
                "id": "en_2019-11_201911044",
                "blip_selector": "dependency-drift-fitness-function"
            },
            {
                "blip_id": 201911111,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "FoundationDB",
                "display_name": "FoundationDB",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "220",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.foundationdb.org\">FoundationDB</a></strong> is an open-source multimodel database, acquired by Apple in 2015 and then open sourced in April 2018. The core of FoundationDB is a distributed key-value store, which provides strict serializability transactions. One of the interesting aspects of FoundationDB is its concept of layers to offer additional models. These layers are essentially stateless components built on top of the core key-value store, such as the <a href=\"https://www.foundationdb.org/blog/announcing-record-layer/\">Record layer</a> and the <a href=\"https://www.foundationdb.org/blog/announcing-document-layer/\">Document layer</a>. FoundationDB sets a high standard with its <a href=\"https://apple.github.io/foundationdb/testing.html\">Simulation testing</a> where they run daily tests simulating various system failures. With its performance, rigorous testing and easy operability, FoundationDB is not just a database but can also be used by those looking to build distributed systems where they can use FoundationDB as a core primitive on which to build their system.</p>",
                "radarId": 41,
                "id": "en_2019-11_201911111",
                "blip_selector": "foundationdb"
            },
            {
                "blip_id": 972,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Apache Flink",
                "display_name": "Apache Flink",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "195",
                "tag": "move",
                "description": "<p><strong><a href=\"https://flink.apache.org/\">Apache Flink</a></strong> has seen increasing adoption since our initial assessment on 2016. Flink is recognized as the leading stream-processing engine and also gradually matured in the fields of batch processing and machine learning. One of Flink's key differentiator from other stream-processing engines is its use of consistent checkpoints of an application's state. In the event of failure, the application is restarted and its state is loaded from the latest checkpoint — so that the application can continue processing as if the failure had never happened. This helps us to reduce complexity of building and operating external systems for fault tolerance. We see more and more companies using Flink to build their data-processing platform.</p>",
                "radarId": 29,
                "id": "en_2019-11_972",
                "blip_selector": "apache-flink"
            },
            {
                "blip_id": 201904007,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Detekt",
                "display_name": "Detekt",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "63",
                "tag": "move",
                "description": "<p><strong><a href=\"https://github.com/arturbosch/detekt\">Detekt</a></strong> is a static code analysis tool for <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a>. It provides code smell analysis and complexity reports based on highly configurable rule sets. It can be run from the command line and, using plugins, via <a href=\"/radar/tools/gradle\">Gradle</a>, <a href=\"https://www.sonarqube.org/\">SonarQube</a> and IntelliJ. Our teams have found great value in using Detekt to maintain high code quality. When analysis and report generation are integrated into a build pipeline, it's obviously important that the reports are checked on a regular basis and the team sets aside time to act on the findings.</p>",
                "radarId": 56,
                "id": "en_2019-11_201904007",
                "blip_selector": "detekt"
            },
            {
                "blip_id": 201911046,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Legacy migration feature parity",
                "display_name": "Legacy migration feature parity",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "108",
                "tag": "new",
                "description": "<p>We find that more and more organizations need to replace aging legacy systems to keep up with the demands of their customers (both internal and external). One antipattern we keep seeing is <strong>legacy migration feature parity</strong>, the desire to retain feature parity with the old. We see this as a huge missed opportunity. Often the old systems have bloated over time, with many features unused by users (50% according to a <a href=\"https://www.standishgroup.com/sample_research_files/Exceeding%20Value_Layout.pdf\">2014 Standish Group report</a>) and business processes that have evolved over time. Replacing these features is a waste. Our advice: Convince your customers to take a step back and understand what their users currently <em>need</em> and prioritize these needs against business outcomes and metrics — which often is easier said than done. This means conducting user research and applying modern product development practices rather than simply replacing the existing ones.</p>",
                "radarId": 28,
                "id": "en_2019-11_201911046",
                "blip_selector": "legacy-migration-feature-parity"
            },
            {
                "blip_id": 201911037,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Automated machine learning (AutoML)",
                "display_name": "Automated machine learning (AutoML)",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "173",
                "tag": "new",
                "description": "<p>The power and promise of machine learning has created a demand for expertise that outstrips the supply of data scientists who specialize in this area. In response to this skills gap, we've seen the emergence of <strong>Automated machine learning (AutoML)</strong> tools that purport to make it easy for nonexperts to automate the end-to-end process of model selection and training. Examples include <a href=\"https://cloud.google.com/automl/\">Google's AutoML</a>, <a href=\"https://www.datarobot.com\">DataRobot</a> and <a href=\"http://docs.h2o.ai/h2o/latest-stable/h2o-docs/automl.html\">the H2O AutoML interface</a>. Although we've seen promising results from these tools, we'd caution businesses against viewing them as the sum total of their machine-learning journey. As stated on the <a href=\"http://docs.h2o.ai/h2o/latest-stable/h2o-docs/automl.html\">H2O website</a>, \"there is still a fair bit of knowledge and background in data science that is required to produce high-performing machine learning models.\" Blind trust in automated techniques also increases the risk of introducing ethical bias or making decisions that disadvantage minorities. While businesses may use these tools as a starting point to generate useful, trained models, we encourage them to seek out experienced data scientists to validate and refine the results.</p>",
                "radarId": 7,
                "id": "en_2019-11_201911037",
                "blip_selector": "automated-machine-learning-automl"
            },
            {
                "blip_id": 201911061,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "MemGuard",
                "display_name": "MemGuard",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "30",
                "tag": "new",
                "description": "<p>If your application handles sensitive information (such as cryptographic keys) as plain text in memory, there's a high probability that someone could potentially exploit it as an attack vector and compromise the information. Most of the cloud-based solutions often use <a href=\"https://en.wikipedia.org/wiki/Hardware_security_module\">hardware security modules (HSM)</a> to avoid such attacks. However, if you're in a situation where you need to do this in a self-hosted manner without access to HSMs, then we've found <strong><a href=\"https://github.com/awnumar/memguard\">MemGuard</a></strong> to be quite useful. MemGuard acts as a secured software enclave for storage of sensitive information in memory. Although MemGuard is not a replacement for HSMs, it does deploy a number of security tactics such as protection against cold boot attacks, avoiding interference with garbage collection and fortifying with guard pages to reduce the likelihood of sensitive data being exposed.</p>",
                "radarId": 72,
                "id": "en_2019-11_201911061",
                "blip_selector": "memguard"
            },
            {
                "blip_id": 201911069,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Open Policy Agent (OPA)",
                "display_name": "Open Policy Agent (OPA)",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "24",
                "tag": "new",
                "description": "<p>Defining and enforcing security policies uniformly across a diverse technology landscape is a challenge. Even for simple applications, you have to control access to their components — such as container orchestrators, services and data stores to keep the services' state — using their components' built-in security policy configuration and enforcement mechanisms.</p>\n\n<p>We're excited about <strong><a href=\"https://www.openpolicyagent.org/\">Open Policy Agent (OPA)</a></strong>, an open-source technology that attempts to solve this problem. OPA lets you define fine-grained access control and flexible policies as code, using the <a href=\"https://www.openpolicyagent.org/docs/latest/policy-language/\">Rego</a> policy definition language. Rego enforces the policies in a distributed and unobtrusive manner outside of the application code. At the time of this writing, OPA implements uniform and flexible policy definition and enforcement to secure access to Kubernetes APIs, microservices APIs through <a href=\"https://www.envoyproxy.io/\">Envoy</a> sidecar and <a href=\"/radar/tools/apache-kafka\">Kafka</a>. It can also be used as a sidecar to any service to verify access policies or filter response data. <a href=\"https://www.styra.com/\">Styra</a>, the company behind OPA, provides commercial solutions for centralized visibility to distributed policies. We like to see OPA mature through the <a href=\"https://www.cncf.io/blog/2019/04/02/toc-votes-to-move-opa-into-cncf-incubator/\">CNCF incubation program</a> and continue to build support for more challenging policy enforcement scenarios such as diverse data stores.</p>",
                "radarId": 73,
                "id": "en_2019-11_201911069",
                "blip_selector": "open-policy-agent-opa"
            },
            {
                "blip_id": 201911074,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Yocto Project",
                "display_name": "Yocto Project",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "9",
                "tag": "new",
                "description": "<p>Increasingly we're seeing powerful Internet of Things devices that run Linux rather than a special embedded OS. In order to reduce resource usage and decrease the attack surface, it makes sense to build a custom Linux distribution that only contains the tools and dependencies needed to run the software on the device. In this context the <strong><a href=\"https://www.yoctoproject.org/\">Yocto Project</a></strong> has renewed relevance as a tool to create a Linux distribution tailored to the needs of a specific case. The learning curve is steep and due to its flexibility, it can be easy to do the wrong thing. However, over the many years of its existence, the Yocto Project has attracted an active community that can help. Compared to similar tools, it's easier to integrate into a CD workflow and, unlike Android Things or Ubuntu core for example, it's not tied to a specific ecosystem.</p>",
                "radarId": 62,
                "id": "en_2019-11_201911074",
                "blip_selector": "yocto-project"
            },
            {
                "blip_id": 201911021,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "KotlinTest",
                "display_name": "KotlinTest",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "310",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/kotlintest/kotlintest\">KotlinTest</a></strong> is a stand-alone testing tool for the <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> ecosystem that our teams have come to like. It allows <a href=\"/radar/techniques/property-based-unit-testing\">property-based testing</a>, a technique we've highlighted in the Radar before. Key advantages are that it offers a variety of testing styles in order to structure the test suites and that it comes with a comprehensive set of matchers, which allow for expressive tests in an elegant internal DSL.</p>",
                "radarId": 90,
                "id": "en_2019-11_201911021",
                "blip_selector": "kotlintest"
            },
            {
                "blip_id": 201911065,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "in-toto",
                "display_name": "in-toto",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "42",
                "tag": "new",
                "description": "<p>We're seeing increased use of <a href=\"/radar/techniques/binary-attestation\">Binary attestation</a> for securing the software supply chain, particularly within regulated industries. The currently favored approaches seem to involve either building a custom system for implementing the binary verification or relying on a cloud vendor's service. We're encouraged to see the open-source <strong><a href=\"https://github.com/in-toto/in-toto\">in-toto</a></strong> enter this space. in-toto is a framework for cryptographically verifying every component and step along the path to production for a software artifact. The project includes a number of integrations into many widely used build, container auditing and deployment tools. A software supply chain tool can be a critical piece of an organization's security apparatus, so we like that as an open-source project, in-toto's behavior is transparent, and its own integrity and supply chain can be verified by the community. We'll have to wait and see if it'll gain a critical mass of users and contributors to compete in this space.</p>",
                "radarId": 70,
                "id": "en_2019-11_201911065",
                "blip_selector": "in-toto"
            },
            {
                "blip_id": 201911008,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Delta Lake",
                "display_name": "Delta Lake",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "210",
                "tag": "new",
                "description": "<p><strong><a href=\"https://docs.databricks.com/delta/index.html\">Delta Lake</a></strong> is an open-source storage layer by Databricks that attempts to bring transactions to big data processing. One of the problems we often encounter when using <a href=\"/radar/platforms/apache-spark\">Apache Spark</a> is the lack of ACID transactions. Delta Lake integrates with the Spark API and addresses this problem by its use of a transaction log and versioned <a href=\"https://parquet.apache.org/\">Parquet</a> files. With its serializable isolation, it allows concurrent readers and writers to operate on Parquet files. Other welcome features include schema enforcement on write and versioning, which allows us to query and revert to older versions of data if necessary. We've started to use it in some of our projects and quite like it.</p>",
                "radarId": 39,
                "id": "en_2019-11_201911008",
                "blip_selector": "delta-lake"
            },
            {
                "blip_id": 201911072,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Jib",
                "display_name": "Jib",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "45",
                "tag": "new",
                "description": "<p>Building containerized applications can require complex configurations in development environments and on build agents. If you're building a Java application and use Docker, you might consider using Google's <strong><a href=\"https://github.com/GoogleContainerTools/jib\">Jib</a></strong>. Jib is an open-source plugin supporting both Maven and Gradle. The Jib plugin uses information from your build config to build your application directly as a Docker image without requiring a Dockerfile or Docker daemon. Jib optimizes around image layering, promising to speed up subsequent builds.</p>",
                "radarId": 58,
                "id": "en_2019-11_201911072",
                "blip_selector": "jib"
            },
            {
                "blip_id": 1047,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "365",
                "name": "Enzyme",
                "display_name": "Enzyme",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "315",
                "tag": "move",
                "description": "<p>We don't always move deprecated tools to Hold in the Radar, but our teams feel strongly that <strong><a href=\"http://airbnb.io/enzyme/\">Enzyme</a></strong> has been replaced for unit testing <a href=\"/radar/languages-and-frameworks/react-js\">React</a> UI components by <a href=\"https://testing-library.com/docs/intro\">React Testing Library</a>. Teams using Enzyme have found that its focus on testing component internals leads to brittle, unmaintainable tests.</p>",
                "radarId": 96,
                "id": "en_2019-11_1047",
                "blip_selector": "enzyme"
            },
            {
                "blip_id": 201911026,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Quarkus",
                "display_name": "Quarkus",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "335",
                "tag": "new",
                "description": "<p><strong><a href=\"https://quarkus.io/\">Quarkus</a></strong> is a cloud-native, container-first framework by Red Hat for writing Java applications. It has a very fast startup time (tens of milliseconds) and has low memory utilization which makes it a good candidate for FaaS or frequent scaling up and down in a container orchestrator. Like <a href=\"/radar/languages-and-frameworks/micronaut\">Micronaut</a>, Quarkus achieves this by using ahead-of-time compilation techniques to do dependency injection at compile time and avoid the runtime costs of reflection. It also works well with <a href=\"/radar/platforms/graalvm\">GraalVM</a>'s Native Image which further reduces startup time. Quarkus supports both imperative and reactive models. Along with Micronaut and <a href=\"https://helidon.io/#/\">Helidon</a>, Quarkus is leading the charge on the new generation of Java frameworks which attempt to address startup performance and memory without sacrificing developer effectiveness. It's gained a lot of community attention and is worth keeping an eye on.</p>",
                "radarId": 93,
                "id": "en_2019-11_201911026",
                "blip_selector": "quarkus"
            },
            {
                "blip_id": 201911077,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Trivy",
                "display_name": "Trivy",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "27",
                "tag": "new",
                "description": "<p>Build pipelines that create and deploy containers should include <a href=\"/radar/techniques/container-security-scanning\">container security scanning</a>. Our teams particularly like <strong><a href=\"https://github.com/aquasecurity/trivy\">Trivy</a></strong>, a vulnerability scanner for containers, because it's easier to set up than other tools,  thanks to it shipping as a stand-alone binary. Other benefits of Trivy are that it's open-source software and that it supports <a href=\"/radar/techniques/distroless-docker-images\">distroless containers</a>.</p>",
                "radarId": 60,
                "id": "en_2019-11_201911077",
                "blip_selector": "trivy"
            },
            {
                "blip_id": 201911060,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Kubeflow",
                "display_name": "Kubeflow",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "36",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.kubeflow.org/\">Kubeflow</a></strong> is interesting for two reasons. First, it is an innovative use of <a href=\"/radar/tools/kubernetes-operators\">Kubernetes Operators</a> which we've spotlighted in our April 2019 edition of the Radar. Second, it provides a way to encode and version machine-learning workflows so that they can be more easily ported from one execution environment to another. Kubeflow consists of several components, including Jupyter notebooks, data pipelines, and control tools. Several of these components are packaged as Kubernetes operators to draw on Kubernetes's ability to react to events generated by pods implementing various stages of the workflow. By packaging the individual programs and data as containers, entire workflows can be ported from one environment to another. This can be useful when moving a useful but computationally challenging workflow developed in the cloud to a custom supercomputer or tensor processing unit cluster.</p>",
                "radarId": 71,
                "id": "en_2019-11_201911060",
                "blip_selector": "kubeflow"
            },
            {
                "blip_id": 201911062,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "AWSume",
                "display_name": "AWSume",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "72",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/trek10inc/awsume\">AWSume</a></strong> is a convenient script to manage AWS session tokens and assume role credentials from the command line. We find AWSume quite handy when we deal with multiple AWS accounts at the same time. Instead of specifying profiles individually in every command, the script reads from the CLI cache and exports them to environment variables. As a result, both the commands and AWS SDKs pick up the right credentials.</p>",
                "radarId": 65,
                "id": "en_2019-11_201911062",
                "blip_selector": "awsume"
            },
            {
                "blip_id": 201911101,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Facets",
                "display_name": "Facets",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "54",
                "tag": "new",
                "description": "<p>Given the growing amount of weighty decisions that are derived from large data sets, either directly or as training input for machine learning models, it's important to understand the gaps, flaws and potential biases in your data. Google's <strong><a href=\"https://pair-code.github.io/facets/\">Facets</a></strong> project provides two helpful tools in this space: Facets Overview and Facets Dive. Facets Overview visualizes the distribution of values for features in a data set, can show training and validation set skew and can be used to compare multiple data sets; Facets Dive is for drilling down and visualizing individual data points in large data sets, using different visual dimensions to explore the relationships between attributes. They're both useful tools in carrying out <a href=\"/radar/techniques/ethical-bias-testing\">ethical bias testing</a>.</p>",
                "radarId": 68,
                "id": "en_2019-11_201911101",
                "blip_selector": "facets"
            },
            {
                "blip_id": 201911053,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Federated learning",
                "display_name": "Federated learning",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "135",
                "tag": "new",
                "description": "<p>Model training generally requires collecting data from its source and transporting it to a centralized location where the model training algorithm runs. This becomes particularly problematic when the training data consists of personally identifiable information. We're encouraged by the emergence of <strong>federated learning</strong> as a privacy-preserving method for training on a large diverse set of data relating to individuals. Federated learning techniques allow the data to remain on the users' device, under their control, yet contribute to an aggregate corpus of training data. In one such technique, each user device updates a model independently; then the model parameters, rather than the data itself, are combined into a centralized view. Network bandwidth and device computational limitations present some significant technical challenges, but we like the way federated learning leaves users in control of their own personal information.</p>",
                "radarId": 21,
                "id": "en_2019-11_201911053",
                "blip_selector": "federated-learning"
            },
            {
                "blip_id": 201911059,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Skaffold",
                "display_name": "Skaffold",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "12",
                "tag": "new",
                "description": "<p>Google brings us <strong><a href=\"https://skaffold.dev/\">Skaffold</a></strong>, an open-source tool to automate local development workflows, including deployment on <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Skaffold detects changes in source code and triggers workflows to build, tag and deploy into a K8s cluster including capturing application logs back to the command line. The workflows are pluggable with different build and deployment tools, but this comes with an opinionated default configuration to make it easier to get started.</p>",
                "radarId": 75,
                "id": "en_2019-11_201911059",
                "blip_selector": "skaffold"
            },
            {
                "blip_id": 201911014,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Hydra",
                "display_name": "Hydra",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "230",
                "tag": "new",
                "description": "<p>Not everyone needs a self-hosted OAuth2 solution, but if you do, we found <strong><a href=\"https://www.ory.sh/hydra/\">Hydra</a></strong> — a fully compliant open-source OAuth2 server and OpenID connect provider — quite useful. We really like that Hydra doesn't provide any identity management solutions out of the box; so no matter what flavor of identity management you have, it's possible to integrate it with Hydra through a clean API. This clear separation of identity from the rest of the OAuth2 framework makes it easier to integrate Hydra with an existing authentication ecosystem.</p>",
                "radarId": 43,
                "id": "en_2019-11_201911014",
                "blip_selector": "hydra"
            },
            {
                "blip_id": 1224,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Dependabot",
                "display_name": "Dependabot",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "72",
                "tag": "move",
                "description": "<p>Keeping dependencies up to date is a chore, but for security reasons it's important to respond to updates in a timely manner. You can use tools to make this process as painless and automated as possible. In practical use our teams have had good experiences with <strong><a href=\"http://dependabot.com/\">Dependabot</a></strong>. It integrates with GitHub repositories and automatically checks dependencies for new versions. When required, Dependabot will open a pull request with upgraded dependencies.</p>",
                "radarId": 55,
                "id": "en_2019-11_1224",
                "blip_selector": "dependabot"
            },
            {
                "blip_id": 201911067,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "asdf-vm",
                "display_name": "asdf-vm",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "78",
                "tag": "new",
                "description": "<p><strong><a href=\"https://asdf-vm.com\">asdf-vm</a></strong> is a command-line tool to manage runtime versions of multiple languages, per project. It's similar to other command-line version management tools, such as <a href=\"https://rvm.io/\">RVM</a> for Ruby and <a href=\"https://github.com/nvm-sh/nvm\">nvm</a> for Node.js, with the advantage of an extensible plugin architecture to handle multiple languages. Its list of current <a href=\"https://asdf-vm.com/#/plugins-all\">plugins</a> include many languages as well as tools such as <a href=\"https://github.com/rajatvig/asdf-bazel\">Bazel</a> or <a href=\"https://github.com/RykHawthorn/asdf-tflint\">tflint</a>, whose runtime version you may need to manage per project.</p>",
                "radarId": 64,
                "id": "en_2019-11_201911067",
                "blip_selector": "asdf-vm"
            },
            {
                "blip_id": 201911063,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Falco",
                "display_name": "Falco",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "48",
                "tag": "new",
                "description": "<p>With increased adoption of <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> as container orchestrator, the security toolset around containers and Kubernetes is evolving rapidly. <strong><a href=\"https://falco.org/\">Falco</a></strong> is one such container-native tool aimed at addressing runtime security. Falco leverages <a href=\"https://sysdig.com/blog/fascinating-world-linux-system-calls/\">Sysdig's Linux kernel instrumentation</a> and system call profiling and lets us gain deep insights into system behavior and helps us detect abnormal activities in applications, containers, underlying host or Kubernetes orchestrator itself. We like Falco's capability to detect threats without injecting third-party code or sidecar containers.</p>",
                "radarId": 69,
                "id": "en_2019-11_201911063",
                "blip_selector": "falco"
            },
            {
                "blip_id": 201911015,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "GCP Pub/Sub",
                "display_name": "GCP Pub/Sub",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "225",
                "tag": "new",
                "description": "<p><strong><a href=\"https://cloud.google.com/pubsub/\">GCP Pub/Sub</a></strong> is Google Cloud's event streaming platform. It's a popular piece of infrastructure for many of our architectures running <a href=\"/radar/platforms/google-cloud-platform\">Google Cloud Platform</a>, including mass event ingestion, communication of serverless workloads and streaming data-processing workflows. One of its unique features is support of pull and push subscriptions: subscribing to receive all published messages available at the time of subscription or pushing messages to a particular endpoint. Our teams have enjoyed its reliability and scale and that it just works as advertised.</p>",
                "radarId": 31,
                "id": "en_2019-11_201911015",
                "blip_selector": "gcp-pub-sub"
            },
            {
                "blip_id": 201911078,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Styled components",
                "display_name": "Styled components",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "340",
                "tag": "new",
                "description": "<p>Using tagged template literals <strong><a href=\"https://www.styled-components.com/\">styled components</a></strong> make it possible to put the CSS needed to style a React component directly into the JavaScript code that creates the component. This greatly reduces the pain with managing CSS and obviates the need for naming conventions or other means of avoiding naming conflicts in CSS. Developers can see the styling when looking at the component definition, and they don't have to memorize several megabytes worth of CSS. Of course, placing the CSS into the JavaScript code can make it harder to get a consistent view across the styling of different components, which is why we recommend understanding the trade-offs with this approach.</p>",
                "radarId": 84,
                "id": "en_2019-11_201911078",
                "blip_selector": "styled-components"
            },
            {
                "blip_id": 201904035,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "React Testing Library",
                "display_name": "React Testing Library",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "330",
                "tag": "move",
                "description": "<p>The JavaScript world moves pretty fast, and as we gain more experience using a framework our recommendations change. The <strong><a href=\"https://testing-library.com/\">React Testing Library</a></strong> is a good example of a framework that with deeper usage has eclipsed the alternatives to become the sensible default when testing React-based frontends. Our teams like the fact that tests written with this framework are less brittle than with alternative frameworks such as <a href=\"/radar/languages-and-frameworks/enzyme\">Enzyme</a> because you're encouraged to test component relationships individually as opposed to testing all implementation details.</p>",
                "radarId": 83,
                "id": "en_2019-11_201904035",
                "blip_selector": "react-testing-library"
            },
            {
                "blip_id": 201911029,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Flair",
                "display_name": "Flair",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "286",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/zalandoresearch/flair\">Flair</a></strong> is a simple Python-based framework for NLP processing. It allows users to do standard NLP tasks such as <a href=\"https://en.wikipedia.org/wiki/Named-entity_recognition\">named entity recognition (NER)</a>, <a href=\"https://en.wikipedia.org/wiki/Part-of-speech_tagging\">part-of-speech tagging (PoS)</a>, <a href=\"https://en.wikipedia.org/wiki/Word-sense_disambiguation\">word-sense disambiguation</a> and classification and performs well on a range of NLP tasks. Flair presents a simple and unified interface for a variety of word and document embeddings, including <a href=\"/radar/techniques/bert\">BERT</a>, Elmo and its own Flair embeddings. It also has multilingual support. The framework itself is built on top of <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a>. We're using it in some of our projects and like its ease of use and powerful abstractions.</p>",
                "radarId": 87,
                "id": "en_2019-11_201911029",
                "blip_selector": "flair"
            },
            {
                "blip_id": 201911051,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Data mesh",
                "display_name": "Data mesh",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "158",
                "tag": "new",
                "description": "<p><strong><a href=\"https://martinfowler.com/articles/data-monolith-to-mesh.html\">Data mesh</a></strong> is an architectural paradigm that unlocks analytical data at scale; rapidly unlocking access to an ever-growing number of distributed domain data sets, for a proliferation of consumption scenarios such as machine learning, analytics or data intensive applications across the organization. Data mesh addresses the common failure modes of the traditional centralized <a href=\"https://martinfowler.com/bliki/DataLake.html\">data lake</a> or data platform architecture, with a shift from the centralized paradigm of a lake, or its predecessor, the data warehouse. Data mesh shifts to a paradigm that draws from modern distributed architecture: considering domains as the first-class concern, applying platform thinking to create a self-serve data infrastructure, treating data as a product and implementing open standardization to enable an ecosystem of interoperable distributed data products.</p>",
                "radarId": 19,
                "id": "en_2019-11_201911051",
                "blip_selector": "data-mesh"
            },
            {
                "blip_id": 201911081,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "95",
                "name": "Commitizen",
                "display_name": "Commitizen",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "68",
                "tag": "new",
                "description": "<p><strong><a href=\"http://commitizen.github.io/cz-cli/\">Commitizen</a></strong> is a simple tool to help streamline the commit process when using Git. It prompts you to provide any required fields and also formats your commit message appropriately. It supports different conventions for describing the required check-in formats, and you can add your own via an adapter. This simple tool saves time and avoids later rejections from a commit hook.</p>",
                "radarId": 51,
                "id": "en_2019-11_201911081",
                "blip_selector": "commitizen"
            },
            {
                "blip_id": 201911052,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Semi-supervised learning loops",
                "display_name": "Semi-supervised learning loops",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "102",
                "tag": "new",
                "description": "<p><strong>Semi-supervised learning loops</strong> are a class of iterative machine-learning workflows that take advantage of the relationships to be found in unlabeled data. These techniques may improve models by combining labeled and unlabeled data sets in various ways. In other cases they compare models trained on different subsets of the data. Unlike either unsupervised learning where a machine infers classes in unlabeled data or supervised techniques where the training set is entirely labeled, semi-supervised techniques take advantage of a small set of labeled data and a much larger set of unlabeled data. Semi-supervised learning is also closely related to active learning techniques where a human is directed to selectively label ambiguous data points. Since expert humans that can accurately label data are a scarce resource and labeling is often the most time-consuming activity in the machine-learning workflow, semi-supervised techniques lower the cost of training and make machine learning feasible for a new class of users.</p>",
                "radarId": 24,
                "id": "en_2019-11_201911052",
                "blip_selector": "semi-supervised-learning-loops"
            },
            {
                "blip_id": 201911070,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Figma",
                "display_name": "Figma",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "54",
                "tag": "new",
                "description": "<p>One of the great pain points in interaction and visual design is the lack of tools built for collaboration. This is where <strong><a href=\"https://www.figma.com/\">Figma</a></strong> comes in. It has the same functionalities of design programs such as Sketch and Invision, but by being able to collaborate with another person at the same time, it helps you discover new ideas together with real-time collaboration capabilities. Our teams find Figma very useful, especially in remote and distributed design work enablement and facilitation. In addition to its collaboration capabilities, Figma also offers an API that helps to improve the <a href=\"/radar/techniques/designops\">DesignOps</a> process.</p>",
                "radarId": 57,
                "id": "en_2019-11_201911070",
                "blip_selector": "figma"
            },
            {
                "blip_id": 201904040,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Arrow",
                "display_name": "Arrow",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "278",
                "tag": "move",
                "description": "<p><strong><a href=\"https://arrow-kt.io/\">Arrow</a></strong> is a functional programming library for <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a>, created by merging two existing popular libraries (<a href=\"https://github.com/JcMinarro/kategory\">kategory</a> and <a href=\"https://github.com/MarioAriasC/funKTionale\">funKTionale</a>). While Kotlin provides building blocks for functional programming, Arrow delivers a package of ready-to-use higher-level abstractions for application developers. It provides data types, type classes, effects, optics and other functional programming patterns as well as integrations with popular libraries. Our initial positive impressions of Arrow were confirmed when using it to build applications that are now in production.</p>",
                "radarId": 78,
                "id": "en_2019-11_201904040",
                "blip_selector": "arrow"
            },
            {
                "blip_id": 201911007,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "AWS Cloud Development Kit",
                "display_name": "AWS Cloud Development Kit",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "185",
                "tag": "new",
                "description": "<p>For many of our teams <a href=\"/radar/tools/terraform\">Terraform</a> has become the default choice for defining cloud infrastructure. However, some of our teams have been experimenting with <strong><a href=\"https://docs.aws.amazon.com/cdk/latest/guide/home.html\">AWS Cloud Development Kit</a></strong> (AWS CDK) and they like what they've seen so far. In particular, they like the use of first-class programming languages instead of configuration files which allows them to use existing tools, test approaches and skills. Like similar tools, care is still needed to ensure deployments remain easy to understand and maintain. Given that support for C# and Java is coming soon and ignoring for now some gaps in functionality, we think AWS CDK is worth watching as an alternative to other configuration file–based approaches.</p>",
                "radarId": 34,
                "id": "en_2019-11_201911007",
                "blip_selector": "aws-cloud-development-kit"
            },
            {
                "blip_id": 1035,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Micro frontends",
                "display_name": "Micro frontends",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "133",
                "tag": "refresh_writeup",
                "description": "<p>We've seen significant benefits from introducing <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a>, which have allowed teams to scale the delivery of independently deployed and maintained services. Unfortunately, we've also seen many teams create a front-end monolith — a large, entangled browser application that sits on top of the back-end services — largely neutralizing the benefits of microservices. <strong>Micro frontends</strong> have continued to gain in popularity since they were first introduced. We've seen many teams adopt some form of this architecture as a way to manage the complexity of multiple developers and teams contributing to the same user experience. In June of this year, one of the originators of this technique published an <a href=\"https://martinfowler.com/articles/micro-frontends.html\">introductory article</a> that serves as a reference for micro frontends. It shows how this style can be implemented using various web programming mechanisms and builds out an example application using <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a>. We're confident this style will grow in popularity as larger organizations try to decompose UI development across multiple teams.</p>",
                "radarId": 3,
                "id": "en_2019-11_1035",
                "blip_selector": "micro-frontends"
            },
            {
                "blip_id": 1287,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Bitrise",
                "display_name": "Bitrise",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "81",
                "tag": "move",
                "description": "<p>Building, testing and deploying mobile applications entails complex steps, especially when we consider a pipeline from source code repository to app stores. All of these steps can be automated with scripts and build pipelines in generic CI/CD tools. However, our teams have found <strong><a href=\"https://www.bitrise.io\">Bitrise</a></strong>, a domain-specific CD tool for mobile applications, useful for mobile applications when there was no need to integrate with build pipelines for back-end systems. Bitrise is easy to set up and provides a comprehensive set of prebuilt steps for most mobile development needs.</p>",
                "radarId": 54,
                "id": "en_2019-11_1287",
                "blip_selector": "bitrise"
            },
            {
                "blip_id": 201911057,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "10x engineers",
                "display_name": "10x engineers",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "162",
                "tag": "new",
                "description": "<p>The old term <strong>10x engineer</strong> has come under scrutiny these past few months. A widely shared Twitter thread essentially suggests companies should excuse antisocial and damaging behaviors in order to retain engineers who are perceived as having immense individual output. Thankfully, many people on social media made fun of the concept, but the stereotype of the \"rockstar developer\" is still pervasive. In our experience, great engineers are driven not by individual output but by working in amazing teams. It's more effective to build teams of talented individuals with mixed experiences and diverse backgrounds and provide the right ingredients for teamwork, learning and continuous improvement. These 10x teams can move faster, scale more quickly and are much more resilient — without needing to pander to bad behaviors.</p>",
                "radarId": 25,
                "id": "en_2019-11_201911057",
                "blip_selector": "10x-engineers"
            },
            {
                "blip_id": 201911011,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Azure Pipelines",
                "display_name": "Azure Pipelines",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "195",
                "tag": "new",
                "description": "<p><strong><a href=\"https://azure.microsoft.com/en-us/services/devops/pipelines/\">Azure Pipelines</a></strong> is a product of <a href=\"/radar/platforms/azure-devops\">Azure DevOps</a> that offers cloud-based solutions to implement pipelines as code for projects hosted in Azure DevOps Git server or other Git solution such as GitHub or Bitbucket. The interesting part of this solution is the ability to run your scripts in Linux, MacOS and Windows agents without the overhead of managing a virtual machine on your own. This represents a big step forward, especially for teams that work on Windows environments with .NET Framework solutions; we're also assessing this service for continuous delivery in iOS.</p>",
                "radarId": 36,
                "id": "en_2019-11_201911011",
                "blip_selector": "azure-pipelines"
            },
            {
                "blip_id": 201911049,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "BERT",
                "display_name": "BERT",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "169",
                "tag": "new",
                "description": "<p><strong><a href=\"https://arxiv.org/abs/1810.04805\">BERT</a></strong> stands for Bidirectional Encoder Representations from Transformers; it's a new method of pretraining language representations which was published by researchers at Google in October 2018. BERT has significantly altered the natural language processing (NLP) landscape by obtaining state-of-the-art results on a wide array of NLP tasks. Based on Transformer architecture, it learns from both the left and right side of a token's context during training. Google has also released pretrained general-purpose BERT models that have been trained on a large corpus of unlabelled text including Wikipedia. Developers can use and fine-tune these pre-trained models on their task-specific data and achieve great results. We talked about <a href=\"/radar/techniques/transfer-learning-for-nlp\">transfer learning for NLP</a> in our April 2019 edition of the Radar; BERT and its successors continue to make transfer learning for NLP a very exciting field with significant reduction in effort for users dealing with text classification.</p>",
                "radarId": 18,
                "id": "en_2019-11_201911049",
                "blip_selector": "bert"
            },
            {
                "blip_id": 201911005,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Snowflake",
                "display_name": "Snowflake",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "260",
                "tag": "new",
                "description": "<p>We often relate data warehousing to a central infrastructure that is hard to scale and manage with the growing demands around data. <strong><a href=\"https://www.snowflake.com\">Snowflake</a></strong>, however, is a new SQL Data Warehouse as a Service solution built from the ground up for the cloud. With a bunch of neatly crafted features such as database-level atomicity, structured and semi-structured data support, in-database analytics functions and above all with a clear separation of storage, compute and services layer, Snowflake addresses most of the challenges faced in data warehousing.</p>",
                "radarId": 49,
                "id": "en_2019-11_201911005",
                "blip_selector": "snowflake"
            },
            {
                "blip_id": 201911047,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "ONNX",
                "display_name": "ONNX",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "250",
                "tag": "new",
                "description": "<p>The tools and frameworks ecosystem around neural networks have been evolving rapidly. The interoperability between them, however, has been a challenge. It's not uncommon in the ML industry to quickly prototype and train the model in one tool and then deploy it in a different tool for inference. Because the internal format of these tools aren't compatible, we need to implement and maintain messy convertors to make the models compatible. The Open Neural Network Exchange format <strong><a href=\"https://onnx.ai/\">ONNX</a></strong>  addresses this problem. In ONNX, the neural networks are represented as graphs using standard operator specifications, and together with a serialization format for trained weights, neural network models can be <a href=\"https://onnx.ai/supported-tools\">transferred from one tool to another</a>. This opens up lots of possibilities, including <a href=\"https://github.com/onnx/models\">Model Zoo</a>, a collection of pretrained models in ONNX format.</p>",
                "radarId": 47,
                "id": "en_2019-11_201911047",
                "blip_selector": "onnx"
            },
            {
                "blip_id": 201911034,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Security policy as code",
                "display_name": "Security policy as code",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "113",
                "tag": "new",
                "description": "<p>Security policies are rules and procedures that protect our systems from threats and disruption. For example, access control policies define and enforce who can access which services and resources under what circumstances; or network security policies can dynamically limit the traffic rate to a particular service. The complexity of the technology landscape today demands treating <strong>security policy as code</strong>: define and keep policies under version control, automatically validate them, automatically deploy them and monitor their performance. Tools such as <a href=\"/radar/tools/open-policy-agent-opa\">Open Policy Agent</a>, or platforms such as <a href=\"/radar/platforms/istio\">Istio</a> provide flexible policy definition and enforcement mechanisms that support the practice of security policy as code.</p>",
                "radarId": 15,
                "id": "en_2019-11_201911034",
                "blip_selector": "security-policy-as-code"
            },
            {
                "blip_id": 201911058,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Azure Data Factory for orchestration",
                "display_name": "Azure Data Factory for orchestration",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "45",
                "tag": "new",
                "description": "<p><a href=\"https://azure.microsoft.com/en-us/services/data-factory/\">Azure Data Factory</a> (ADF) is currently Azure's default product for orchestrating data-processing pipelines. It supports data ingestion, copying data from and to different storage types on prem or on Azure and executing transformation logic. While we've had a reasonable experience with ADF for simple migrations of data stores from on prem to cloud, we discourage the use of <strong>Azure Data Factory for orchestration</strong> of complex data-processing pipelines. Our experience has been challenging due to several factors, including limited coverage of capabilities that can be implemented through coding first, as it appears that ADF is prioritizing enabling <a href=\"/radar/platforms/low-code-platforms\">low-code platform</a> capabilities first; poor debuggability and error reporting; limited observability as ADF logging capabilities don't integrate with other products such as Azure Data Lake Storage or Databricks, making it difficult to get an end-to-end observability in place; and availability of data source-triggering mechanisms only to certain regions. At this time, we encourage using other open-source orchestration tools (e.g., <a href=\"/radar/tools/airflow\">Airflow</a>) for complex data pipelines and limit ADF for data copying or snapshotting. We're hoping that ADF will address these concerns to support for more complex data-processing workflows and prioritize access to capabilities through code first.</p>",
                "radarId": 77,
                "id": "en_2019-11_201911058",
                "blip_selector": "azure-data-factory-for-orchestration"
            },
            {
                "blip_id": 201911048,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Privacy-preserving record linkage (PPRL) using Bloom filter",
                "display_name": "Privacy-preserving record linkage (PPRL) using Bloom filter",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "113",
                "tag": "new",
                "description": "<p>Linking records from different data providers in the presence of a shared key is trivial. However, you may not always have a shared key; even if you do, it may not be a good idea to expose it due to privacy concerns. <strong>Privacy-preserving record linkage (PPRL) using Bloom filter</strong> (a space-efficient probabilistic data structure) is an established technique that allows probabilistic linkage of records from different data providers without exposing privately identifiable personal data. For example, when linking data from two data providers, each provider encrypts its personally identifiable data using <a href=\"https://en.wikipedia.org/wiki/Bloom_filter\">Bloom filter</a> to get cryptographic linkage keys and then sends them to you via a secure channel. Once data is received, the records can be linked by computing similarity scores between sets of cryptographic linkage keys from each provider. Among other techniques, we found PPRL using Bloom filters to be scalable for large data sets.</p>",
                "radarId": 23,
                "id": "en_2019-11_201911048",
                "blip_selector": "privacy-preserving-record-linkage-pprl-using-bloom-filter"
            },
            {
                "blip_id": 201911079,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "65",
                "name": "ESLint",
                "display_name": "ESLint",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "45",
                "tag": "new",
                "description": "<p><strong><a href=\"https://eslint.org/\">ESLint</a></strong> is being used as a standard in many of our projects. As a linting tool for JavaScript it has multiple rule sets, recommended rules and plugins in order to extend to frameworks or JavaScript flavors. We've seen it leveraged heavily to help teams create and enforce norms in their code by allowing for real-time analysis of code during development. It can be used to standardize coding practices by enforcing best practices and code styling, and identify vulnerabilities in your code. It does so by integrating well with most IDEs and giving live feedback while coding. It's styling rules in particular will automatically fix the linting errors, making the process seamless and effective without incurring additional development cost. Developers can quickly get up to speed with the rules thanks to the community documentation, which does a good job of explaining coding patterns.  As ESLint becomes more common and powerful, it has gained traction in the industry, and this is illustrated by the <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> team's move to support and work with ESLint rather than investing in TSLint.</p>",
                "radarId": 52,
                "id": "en_2019-11_201911079",
                "blip_selector": "eslint"
            },
            {
                "blip_id": 1256,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Mongoose OS",
                "display_name": "Mongoose OS",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "240",
                "tag": "move",
                "description": "<p><strong><a href=\"http://mongoose-os.com/\">Mongoose OS</a></strong> remains one of our preferred open-source microcontroller operating systems and embedded firmware development frameworks. It's worth noting that Mongoose OS fills a noticeable gap for embedded software developers: the gap between Arduino firmware suitable for prototyping and bare-metal microcontrollers' native SDKs. Our teams have successfully used <a href=\"https://mongoose-os.com/about.html\">Cesanta's</a> new end-to-end device management platform, <a href=\"https://mdash.net/home/\">mDash</a>, for small-scale greenfield hardware projects. Major Internet of Things (IoT) cloud platform providers today support the Mongoose OS development framework for their device management, connectivity, and over-the-air (OTA) firmware upgrades. Since we last reported on Mongoose OS, the number of supported boards and microcontrollers has grown to include STM, Texas Instruments and Espressif. We continue to enjoy its seamless support for OTA updates and its built-in security at the individual device level.</p>",
                "radarId": 32,
                "id": "en_2019-11_1256",
                "blip_selector": "mongoose-os"
            },
            {
                "blip_id": 201911004,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Teleport",
                "display_name": "Teleport",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "265",
                "tag": "new",
                "description": "<p><strong><a href=\"https://gravitational.com/teleport/\">Teleport</a></strong> is a security gateway for remotely accessing cloud native infrastructures. One of Teleport's interesting <a href=\"https://gravitational.com/teleport/features/\">features</a> is its ability to double as a Certificate Authority (CA) for your infrastructure. You can issue short-lived certificates and build richer role-based access control (RBAC) for your <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> infrastructure (or for just SSH). With increased focus on infrastructure security it's important to keep track of changes. However, not all events require the same level of auditing. With Teleport you can stick with logging for most of the events but go the extra mile by recording the user screen for more privileged root sessions.</p>",
                "radarId": 50,
                "id": "en_2019-11_201911004",
                "blip_selector": "teleport"
            },
            {
                "blip_id": 201911056,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Front-end integration via artifact",
                "display_name": "Front-end integration via artifact",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "144",
                "tag": "new",
                "description": "<p>When teams embrace the concept of <a href=\"/radar/techniques/micro-frontends\">micro frontends</a> they have a number of patterns at their disposal to integrate the individual micro frontends into one application. As always there are antipatterns, too. A common one in this case is <strong>front-end integration via artifact</strong>. For each micro frontend an artifact is built, usually an NPM package, which is pushed into a registry. A later step, sometimes in a different build pipeline, then combines the individual packages into a final package that contains all micro frontends. From a purely technical perspective this integration at build time results in a working application. However, integrating via artifact implies that for each change the full artifact needs to be rebuilt, which is time consuming and will likely have a negative impact on developer experience. Worse, this style of integrating frontends also introduces direct dependencies between the micro frontends at build time and therefore causes considerable coordination overhead.</p>",
                "radarId": 26,
                "id": "en_2019-11_201911056",
                "blip_selector": "front-end-integration-via-artifact"
            },
            {
                "blip_id": 1338,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "112",
                "name": "Run cost as architecture fitness function",
                "display_name": "Run cost as architecture fitness function",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "116",
                "tag": "move",
                "description": "<p>Automating the estimation, tracking and projection of cloud infrastructure's run cost is necessary for today's organizations. The cloud providers' savvy pricing models, combined with proliferation of pricing parameters and the dynamic nature of today's architecture, can lead to surprisingly expensive run cost. For example, the price of <a href=\"/radar/techniques/serverless-architecture\">serverless</a> based on API calls, event streaming solutions based on traffic or data processing clusters based on running jobs, all have a dynamic nature that changes over time as the architecture evolves. When our teams manage infrastructure on the cloud, implementing <strong>run cost as architecture fitness function</strong> is one of their early activities. This means that our teams can observe the cost of running services against the value delivered; when they see deviations from what was expected or acceptable, they'll discuss whether it's time to evolve the architecture. The observation and calculation of the run cost is implemented as an automated function.</p>",
                "radarId": 5,
                "id": "en_2019-11_1338",
                "blip_selector": "run-cost-as-architecture-fitness-function"
            },
            {
                "blip_id": 201904032,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Micronaut",
                "display_name": "Micronaut",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "310",
                "tag": "move",
                "description": "<p><strong><a href=\"https://micronaut.io/\">Micronaut</a></strong> is a JVM framework for building services using Java, <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> or Groovy. It distinguishes itself through a small memory footprint and short startup time; it achieves these improvements by avoiding runtime reflection for <a href=\"https://martinfowler.com/articles/injection.html\">dependency injection (DI)</a> and proxy generation, a common shortcoming of traditional frameworks, and instead uses a DI/<a href=\"https://en.wikipedia.org/wiki/Aspect-oriented_programming\">AOP</a> container which performs dependency injection at compile time. This makes it attractive not just for standard server-side microservices but also in the context of, for example, the Internet of Things, Android applications and serverless functions. Micronaut uses Netty and has first-class support for reactive programming. It also includes features such as service discovery and circuit breaking that make it cloud-native friendly. Micronaut is a very promising entrant to the full-stack framework for the JVM space, and we're seeing it in more and more projects in production, prompting us to move it to Trial.</p>",
                "radarId": 81,
                "id": "en_2019-11_201904032",
                "blip_selector": "micronaut"
            },
            {
                "blip_id": 201911080,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "95",
                "name": "React Styleguidist",
                "display_name": "React Styleguidist",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "23",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/styleguidist/react-styleguidist\">React Styleguidist</a></strong> is a development environment for React components. It includes a dev server with hot reloading capabilities and generates an HTML style guide for sharing with teams. The style guide shows a live version of all components in one place with documentation and a list of their props. We've mentioned React Styleguidist as a <a href=\"/radar/tools/ui-dev-environments\">UI dev environment</a> before, and over time it has become our default choice among similar tools in this space.</p>",
                "radarId": 53,
                "id": "en_2019-11_201911080",
                "blip_selector": "react-styleguidist"
            },
            {
                "blip_id": 201911023,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "NestJS",
                "display_name": "NestJS",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "319",
                "tag": "new",
                "description": "<p><strong><a href=\"https://nestjs.com/\">NestJS</a></strong> is a server-side Node.js framework written in <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>. By integrating the rich ecology of the Node.js community, NestJS provides an out-of-the-box application architecture. The mental model to develop NestJS is similar to the server-side version of Angular or the TypeScript version of Spring Boot, so the learning curve for developers is low. NestJS supports protocols such as <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a>, Websocket and ORM libraries.</p>",
                "radarId": 91,
                "id": "en_2019-11_201911023",
                "blip_selector": "nestjs"
            },
            {
                "blip_id": 201911055,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Lambda pinball",
                "display_name": "Lambda pinball",
                "ring": "Hold",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "126",
                "tag": "new",
                "description": "<p>We've been building <a href=\"/radar/techniques/serverless-architecture\">serverless</a> architectures on our projects for a couple of years now, and we've noticed that it's quite easy to fall into the trap of building a distributed monolith. <strong><a href=\"https://twitter.com/ctford/status/1128774411832762369\">Lambda pinball</a></strong> architectures characteristically lose sight of important domain logic in the tangled web of lambdas, buckets and queues as requests bounce around increasingly complex graphs of cloud services. Typically they're hard to test as units, and the application needs must be tested as an integrated whole. One pattern we can use to avoid these pinball architectures is to draw a distinction between <a href=\"https://martinfowler.com/ieeeSoftware/published.pdf\">public and published interfaces</a> and apply good old domain boundaries with published interfaces between them.</p>",
                "radarId": 27,
                "id": "en_2019-11_201911055",
                "blip_selector": "lambda-pinball"
            },
            {
                "blip_id": 201911076,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "dbt",
                "display_name": "dbt",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "66",
                "tag": "new",
                "description": "<p>Data transformation is an essential part of data-processing workflows: filtering, grouping or joining multiple sources into a format that is suitable for analyzing data or feeding machine-learning models. <strong><a href=\"https://www.getdbt.com\">dbt</a></strong> is an open-source tool and a commercial SaaS product that provides simple and effective transformation capabilities for data analysts. The current frameworks and tooling for data transformation fall either into the group of <em>powerful and flexible</em> — requiring intimate understanding of the programming model and languages of the framework such as <a href=\"/radar/platforms/apache-spark\">Apache Spark</a> — or in the group of dumb drag-and-drop UI tools that don't lend themselves to reliable engineering practices such as automated testing and deployment. dbt fills a niche: it uses SQL — an interface widely understood — to model simple batch transformations, while it provides command-line tooling that encourages good engineering practices such as versioning, automated testing and deployment; essentially it implements SQL-based transformation modeling as code. dbt currently supports multiple <a href=\"https://docs.getdbt.com/docs/supported-databases\">data sources</a>, including <a href=\"/radar/platforms/snowflake\">Snowflake</a> and Postgres, and provides various <a href=\"https://docs.getdbt.com/docs/running-dbt-in-production\">execution options</a>, such as <a href=\"/radar/tools/airflow\">Airflow</a> and Apache's own cloud offering. Its transformation capability is limited to what SQL offers, and it doesn't support real-time streaming transformations at the time of writing.</p>",
                "radarId": 66,
                "id": "en_2019-11_201911076",
                "blip_selector": "dbt"
            },
            {
                "blip_id": 201911017,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "ROS",
                "display_name": "ROS",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "255",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.ros.org/\">ROS</a></strong> (Robot Operating System) is a set of libraries and tools to help software developers create robot applications. It's a development framework that provides hardware abstraction, device drivers, libraries, visualizers, message-passing, package management and more. <a href=\"/radar/platforms/apollo-auto\">Apollo Auto</a> is based on ROS. In our other <a href=\"https://en.wikipedia.org/wiki/Advanced_driver-assistance_systems\">ADAS</a> simulation project, we've also used ROS's messaging system (<a href=\"http://wiki.ros.org/Bags\">bag</a>). The technology isn't new, but it has regained developers’ attention with the development of ADAS.</p>",
                "radarId": 33,
                "id": "en_2019-11_201911017",
                "blip_selector": "ros"
            },
            {
                "blip_id": 201911035,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Data discoverability",
                "display_name": "Data discoverability",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "150",
                "tag": "new",
                "description": "<p>One of the main points of friction for data scientists and analysts, in their workflow, is to locate the data they need, make sense of it and evaluate whether it's trustworthy to use it. This remains a challenge due to the missing metadata about the available data sources and lack of adequate functionality needed to search and locate data. We encourage teams who are providing analytical data sets or building data platforms to make <strong>data discoverability</strong> a first-class function of their environments; to provide the ability to easily locate available data, detect its quality, understand its structure and lineage and get access to it. Traditionally this function has been provided by bloated data cataloguing solutions. In recent years, we've seen the growth of open-source projects that are improving developer experiences for both data providers and data consumers to do one thing really well: to make data discoverable. <a href=\"https://github.com/lyft/amundsen\">Amundsen</a> by Lyft and <a href=\"https://github.com/linkedin/WhereHows\">WhereHows</a> by LinkedIn are among these tools. What we like to see is a change in providers' behavior to intentionally share the metadata that help discoverability in favor of discoverability tools that infer partial metadata information from silos of application databases.</p>",
                "radarId": 10,
                "id": "en_2019-11_201911035",
                "blip_selector": "data-discoverability"
            },
            {
                "blip_id": 201911012,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "MicroK8s",
                "display_name": "MicroK8s",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "240",
                "tag": "new",
                "description": "<p>We talked about <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> in the past and it continues to be the default choice for deploying and managing containers in production clusters. However, it's getting increasingly difficult to provide a similar experience offline for developers. Among other options, we've found <strong><a href=\"https://microk8s.io/\">MicroK8s</a></strong> to be quite useful. To install the <a href=\"https://snapcraft.io/microk8s\">MicroK8s snap</a>, pick a release channel (stable, candidate, beta or edge), and you can get Kubernetes running with a few commands. You can also keep track of mainstream releases and choose to upgrade your setup automatically.</p>",
                "radarId": 45,
                "id": "en_2019-11_201911012",
                "blip_selector": "microk8s"
            },
            {
                "blip_id": 982,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "174",
                "name": "TensorFlow",
                "display_name": "TensorFlow",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "350",
                "tag": "move",
                "description": "<p>With its 2.0 release, <strong><a href=\"https://www.tensorflow.org/\">TensorFlow</a></strong> retains its prominence as the industry’s leading machine learning framework. TensorFlow began as a numerical processing package that gradually expanded to include libraries supporting a variety of ML approaches and execution environments, ranging from mobile CPU to large GPU clusters. Along the way, a slew of frameworks became available to simplify the tasks of network creation and training. At the same time, other frameworks, notably <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a>, offered an imperative programming model that made debugging and execution simpler and easier. TensorFlow 2.0 now defaults to imperative flow (eager execution) and adopts <a href=\"/radar/languages-and-frameworks/keras\">Keras</a> as the single high-level API. While these changes modernize TensorFlow's usability and make it more competitive with PyTorch, it is a significant rewrite that often breaks backward compatibility — many tools and serving frameworks in the TensorFlow ecosystem won't immediately work with the new version. For the time being, consider whether you want to design and experiment in TensorFlow 2.0 but revert to version 1 to serve and run your models in production.</p>",
                "radarId": 85,
                "id": "en_2019-11_982",
                "blip_selector": "tensorflow"
            },
            {
                "blip_id": 1136,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Sidecars for endpoint security",
                "display_name": "Sidecars for endpoint security",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "105",
                "tag": "move",
                "description": "<p>Many of the technical solutions we build today run in increasingly complex <a href=\"/radar/techniques/polycloud\">polycloud</a> or hybrid-cloud environments with multiple distributed components and services. Under such circumstances, we apply two security principles early in implementation: <em>zero trust network</em>, never trust the network and always verify; and the principle of <em>least privilege</em>, granting the minimum permissions necessary for performing a particular job. <strong>Sidecars for endpoint security</strong> is a common technique we use to implement these principles to enforce security controls at every component's endpoint, e.g., APIs of services, data stores or <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> control interface. We do this using an out-of-process sidecar — a process or a container that is deployed and scheduled with each service sharing the same execution context, host and identity. <a href=\"/radar/tools/open-policy-agent-opa\">Open Policy Agent</a> and <a href=\"http://github.com/envoyproxy/envoy\">Envoy</a> are tools that implement this technique. Sidecars for endpoint security minimize the trusted footprint to a local endpoint rather than the network perimeter. We like to see the responsibility of sidecar’s security policy configuration left with the team that is responsible for the endpoint and not a separate centralized team.</p>",
                "radarId": 16,
                "id": "en_2019-11_1136",
                "blip_selector": "sidecars-for-endpoint-security"
            },
            {
                "blip_id": 201911009,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Crux",
                "display_name": "Crux",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "205",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.juxt.pro/crux/index.html\">Crux</a></strong> is an open-source document database with bitemporal graph queries. Most database systems are temporal, meaning they help us model facts along with the time at which they occurred. Bitemporal database systems let you model not just the <em>valid</em> time the fact occurred but also the <em>transaction</em> time when it was received. If you need a document store with graph capabilities for querying the content, then give Crux a try. It's currently in alpha and lacks SQL support, but you can use a <a href=\"https://en.wikipedia.org/wiki/Datalog\">Datalog</a> query interface for reading and traversing relationships.</p>",
                "radarId": 38,
                "id": "en_2019-11_201911009",
                "blip_selector": "crux"
            },
            {
                "blip_id": 201911020,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "245",
                "name": "React Hooks",
                "display_name": "React Hooks",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "320",
                "tag": "new",
                "description": "<p>Earlier this year, <strong><a href=\"https://reactjs.org/docs/hooks-intro.html\">React Hooks</a></strong> were introduced to the popular JavaScript framework. They make it possible to use state and other React features without writing a class, offering a cleaner approach than higher-order components or render-props for use cases. Libraries such as <a href=\"/radar/languages-and-frameworks/material-ui\">Material UI</a> and <a href=\"/radar/languages-and-frameworks/apollo\">Apollo</a> have already switched to using Hooks. There are some issues with testing Hooks, especially with Enzyme, which contributed to our reassessment of <a href=\"/radar/languages-and-frameworks/enzyme\">Enzyme</a> as the tool of choice.</p>",
                "radarId": 82,
                "id": "en_2019-11_201911020",
                "blip_selector": "react-hooks"
            },
            {
                "blip_id": 201911071,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Pumba",
                "display_name": "Pumba",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "18",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/alexei-led/pumba\">Pumba</a></strong> is a chaos testing and network emulation tool for Docker. Pumba can kill, stop, remove or pause Docker containers. Pumba can also emulate networks and simulate different network failures such as delays, packet loss and bandwidth rate limits. Pumba uses the <a href=\"https://en.wikipedia.org/wiki/Tc_(Linux)\">tc</a> tool for network emulation which means it needs to be available in our containers or we need to run Pumba in a sidecar container with tc. Pumba is particularly useful when we want to run some automated chaos tests against a distributed system running on a bunch of containers locally or in the build pipeline.</p>",
                "radarId": 74,
                "id": "en_2019-11_201911071",
                "blip_selector": "pumba"
            },
            {
                "blip_id": 201911013,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Rootless containers",
                "display_name": "Rootless containers",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "255",
                "tag": "new",
                "description": "<p>Ideally, containers should be managed and run by the respective container runtime without root privileges. This is not trivial but when achieved, it reduces the attack surface and avoids whole classes of security problems, notably privilege escalation out of the container. The community has discussed this as <strong>rootless containers</strong> for quite a while, and it is part of the open container runtime specification and its standard implementation <a href=\"https://github.com/opencontainers/runc#rootless-containers\">runc</a>, which underpins <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Now, Docker 19.03 introduces rootless containers as an experimental feature. Although fully functional, the feature doesn't yet work with several other features such as cgroups resource controls and <a href=\"https://wiki.ubuntu.com/AppArmor\">AppArmor</a> security profiles.</p>",
                "radarId": 48,
                "id": "en_2019-11_201911013",
                "blip_selector": "rootless-containers"
            },
            {
                "blip_id": 201911064,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "What-If Tool",
                "display_name": "What-If Tool",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "6",
                "tag": "new",
                "description": "<p>The machine learning world has shifted emphasis slightly from exploring what models are capable of understanding to how they do it. Concerns about introducing bias or overgeneralizing a model's applicability have resulted in interesting new tools such as <strong><a href=\"https://pair-code.github.io/what-if-tool/\">What-If Tool</a></strong> (WIT). This tool helps data scientists to dig into a model's behavior and to visualize the impact various features and data sets have on the output. Introduced by Google and available either through <a href=\"https://www.tensorflow.org/tensorboard\">Tensorboard</a> or <a href=\"/radar/tools/jupyter\">Jupyter</a> notebooks, WIT simplifies the tasks of comparing models, slicing data sets, visualizing facets and editing individual data points. Although WIT makes it easier to perform these analyses, they still require a deep understanding of the mathematics and theory behind the models. It is a tool for data scientists to gain deeper insights into model behavior. Naive users shouldn't expect any tool to remove the risk or minimize the damage done by a misapplied or poorly trained algorithm.</p>",
                "radarId": 76,
                "id": "en_2019-11_201911064",
                "blip_selector": "what-if-tool"
            },
            {
                "blip_id": 201911025,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Gatsby.js",
                "display_name": "Gatsby.js",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "294",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.gatsbyjs.org/\">Gatsby.js</a></strong> is a framework to write web applications in an architectural style known as <a href=\"/radar/techniques/jamstack\">JAMstack</a>. Part of the application is generated at build time and deployed as a static site, while the remainder of the functionality is implemented as a <a href=\"https://en.wikipedia.org/wiki/Progressive_web_applications\">progressive web application (PWA)</a> running in the browser. Such applications work without code running on the server side. Usually, though, the PWA makes calls to third-party APIs and SaaS solutions for content management, for example. In the case of Gatsby.js, all client and build time code is written using React. The framework includes some optimizations to make the web application feel fast. It provides code and data splitting out of the box to minimize load times and speeds up performance when navigating the application by prefetching resources. APIs are called via <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> and several plugins simplify integration with existing services.</p>",
                "radarId": 88,
                "id": "en_2019-11_201911025",
                "blip_selector": "gatsby-js"
            },
            {
                "blip_id": 201904066,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "Continuous delivery for machine learning (CD4ML)",
                "display_name": "Continuous delivery for machine learning (CD4ML)",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "158",
                "tag": "refresh_writeup",
                "description": "<p>With an increased popularity of ML-based applications, and the technical complexity involved in building them, our teams rely heavily on <strong><a href=\"https://martinfowler.com/articles/cd4ml.html\">continuous delivery for machine learning (CD4ML)</a></strong> to deliver such applications safely, quickly and in a sustainable manner. CD4ML is the discipline of bringing CD principles and practices to ML applications. It removes long cycle times between training models and deploying them to production. CD4ML removes manual handoffs between different teams, data engineers, data scientists and ML engineers in the end-to-end process of build and deployment of a model served by an application. Using CD4ML, our teams have successfully implemented the automated versioning, testing and deployment of all components of ML-based applications: data, model and code.</p>",
                "radarId": 9,
                "id": "en_2019-11_201904066",
                "blip_selector": "continuous-delivery-for-machine-learning-cd4ml"
            },
            {
                "blip_id": 201911039,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Explainability as a first-class model selection criterion",
                "display_name": "Explainability as a first-class model selection criterion",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "120",
                "tag": "new",
                "description": "<p>Deep neural networks have demonstrated remarkable recall and accuracy across a wide range of problems. Given sufficient training data and an appropriately chosen topology, these models meet and exceed human capabilities in certain select problem spaces. However, they're inherently opaque. Although parts of models can be reused through <a href=\"/radar/techniques/transfer-learning-for-nlp\">transfer learning</a>, we're seldom able to ascribe any human-understandable meaning to these elements. In contrast, an explainable model is one that allows us to say how a decision was made. For example, a decision tree yields a chain of inference that describes the classification process. Explainability becomes critical in certain regulated industries or when we're concerned about the ethical impact of a decision. As these models are incorporated more widely into critical business systems, it's important to consider <strong>explainability as a first-class model selection criterion</strong>. Despite their power, neural networks might not be an appropriate choice when explainability requirements are strict.</p>",
                "radarId": 14,
                "id": "en_2019-11_201911039",
                "blip_selector": "explainability-as-a-first-class-model-selection-criterion"
            },
            {
                "blip_id": 201911045,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Binary attestation",
                "display_name": "Binary attestation",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "165",
                "tag": "new",
                "description": "<p>As the usage of containers, deployment of large fleet of services by autonomous teams and increased speed of continuous delivery become common practice for many organizations, the need for automated deploy-time software security controls arise. <strong>Binary attestation</strong> is a technique to implement deploy-time security control; to cryptographically verify that a binary image is authorized for deployment. Using this technique, an attestor, an automated build process or a security team signs off the binaries that have passed the required quality checks and tests and are authorized to be deployed. Services such as <a href=\"https://cloud.google.com/binary-authorization/\">GCP Binary Authorization</a> enabled by <a href=\"/radar/tools/grafeas\">Grafeas</a>, and tools such as <a href=\"/radar/tools/in-toto\">in-toto</a> and <a href=\"/radar/tools/docker-notary\">Docker Notary</a> support creating attestations and validating the image signatures before deployment.</p>",
                "radarId": 8,
                "id": "en_2019-11_201911045",
                "blip_selector": "binary-attestation"
            },
            {
                "blip_id": 1131,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "Pipelines for infrastructure as code",
                "display_name": "Pipelines for infrastructure as code",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "129",
                "tag": "move",
                "description": "<p>The use of continuous delivery pipelines to orchestrate the release process for software has become a mainstream concept. CI/CD tools can be used to test server configuration (e.g., Chef cookbooks, Puppet modules, Ansible playbooks), server image building (e.g., <a href=\"/radar/tools/packer\">Packer</a>), environment provisioning (e.g., <a href=\"/radar/tools/terraform\">Terraform</a>, CloudFormation) and the integration of environments. The use of <strong>pipelines for infrastructure as code</strong> lets you find errors before changes are applied to operational environments — including environments used for development and testing. They also offer a way to ensure that infrastructure tooling is run consistently, using CI/CD agents rather than individual workstations. Our teams have had good results adopting this technique on their projects.</p>",
                "radarId": 4,
                "id": "en_2019-11_1131",
                "blip_selector": "pipelines-for-infrastructure-as-code"
            },
            {
                "blip_id": 201911040,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Design systems",
                "display_name": "Design systems",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "135",
                "tag": "new",
                "description": "<p>As application development becomes increasingly dynamic and complex, it's a challenge to achieve the effective delivery of accessible and usable products that are consistent in style. <strong>Design systems</strong> define a collection of design patterns, component libraries and good design and engineering practices that ensure consistency in the development of digital products. We've found design systems a useful addition to our toolbox when working across teams and disciplines in product development, because they allow teams to focus on more strategic challenges around the product itself without the need to reinvent the wheel every time they need to add a visual component. The types of components and tools you use to create design systems can vary greatly.</p>",
                "radarId": 12,
                "id": "en_2019-11_201911040",
                "blip_selector": "design-systems"
            },
            {
                "blip_id": 201911010,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "GraalVM",
                "display_name": "GraalVM",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "225",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.graalvm.org/\">GraalVM</a></strong> is a universal virtual machine by Oracle for running applications written in JVM languages, JavaScript, Python, Ruby and R, as well as C/C++ and other LLVM-based languages. At its simplest, GraalVM can be used as a more performant VM for JVM and other supported non-JVM languages. But it also allows us to write polyglot applications with very little performance impact; and its <a href=\"https://www.graalvm.org/22.0/reference-manual/native-image/\">Native Image</a> utility (currently only available as an <a href=\"https://docs.oracle.com/en/graalvm/enterprise/19/guide/overview/license/licensing-information.html\">Early Adopter Technology</a>) lets us compile Java code ahead of time to stand-alone executables for faster startup and less memory use. GraalVM has generated a lot of excitement in the Java community, and a host of Java frameworks (including <a href=\"/radar/languages-and-frameworks/micronaut\">Micronaut</a>, <a href=\"https://quarkus.io/\">Quarkus</a>, and <a href=\"https://helidon.io/#/\">Helidon</a>) are already taking advantage of it.</p>",
                "radarId": 42,
                "id": "en_2019-11_201911010",
                "blip_selector": "graalvm"
            },
            {
                "blip_id": 201911006,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Kuma",
                "display_name": "Kuma",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "235",
                "tag": "new",
                "description": "<p><strong><a href=\"https://kuma.io\">Kuma</a></strong> is a platform-agnostic <a href=\"/radar/techniques/service-mesh\">service mesh</a> for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>, VMs and bare metal environments. Kuma is implemented as a control plane on top of <a href=\"https://www.envoyproxy.io/\">Envoy</a> and as such can instrument any Layer 4/Layer 7 traffic to secure, observe, route and enhance connectivity between services. Most of the service mesh implementations are targeted natively at the Kubernetes ecosystem which in itself is not bad but hinders the adoption of service mesh for existing non-Kubernetes applications. Rather than waiting for large platform transformation efforts to be complete, you can now use Kuma and modernize the network infrastructure.</p>",
                "radarId": 44,
                "id": "en_2019-11_201911006",
                "blip_selector": "kuma"
            },
            {
                "blip_id": 201911002,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Fission",
                "display_name": "Fission",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "215",
                "tag": "new",
                "description": "<p><a href=\"/radar/platforms/kubernetes\">Kubernetes</a>'s serverless ecosystem is growing. We talked about <a href=\"/radar/platforms/knative\">Knative</a> in a previous Radar; now we're seeing <strong><a href=\"https://fission.io/\">Fission</a></strong> gaining traction. Fission lets developers focus on writing short-lived functions and map them to HTTP requests while the framework handles the rest of the plumbing and automation of Kubernetes resources behind the scenes. Fission also lets you <a href=\"https://fission.io/workflows/\">compose functions</a>, integrate with third-party providers via web hooks and automate the management of the Kubernetes infrastructure.</p>",
                "radarId": 40,
                "id": "en_2019-11_201911002",
                "blip_selector": "fission"
            },
            {
                "blip_id": 201911027,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Testcontainers",
                "display_name": "Testcontainers",
                "ring": "Assess",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "351",
                "tag": "new",
                "description": "<p>Creating reliable environments for running automated tests is a perennial problem, particularly as the number of components that modern systems depend on keeps increasing. <strong><a href=\"https://www.testcontainers.org/\">Testcontainers</a></strong> is a Java library that helps mitigate this challenge by managing dockerized dependencies for your tests. This is particularly useful for spinning up repeatable database instances or similar infrastructure, but it can also be used in web browsers for UI testing. Our teams have found this library to be helpful for making integration tests more reliable with these programmable, lightweight and disposable containers.</p>",
                "radarId": 95,
                "id": "en_2019-11_201911027",
                "blip_selector": "testcontainers"
            },
            {
                "blip_id": 1041,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Container security scanning",
                "display_name": "Container security scanning",
                "ring": "Adopt",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "164",
                "tag": "move",
                "description": "<p>The continued adoption of containers for deployments, especially <a href=\"/radar/platforms/docker\">Docker</a>, has made <strong>container security scanning</strong> a must-have technique and we've moved this technique into Adopt to reflect that. Specifically, containers introduced a new path for security issues; it's vital that you use tools to scan and check containers during deployment. We prefer using automated scanning tools that run as part of the deployment pipeline.</p>",
                "radarId": 1,
                "id": "en_2019-11_1041",
                "blip_selector": "container-security-scanning"
            },
            {
                "blip_id": 201911016,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "Apollo Auto",
                "display_name": "Apollo Auto",
                "ring": "Trial",
                "blip_status": null,
                "volume_date": "2019-11",
                "theta": "210",
                "tag": "new",
                "description": "<p>Once exclusive to tech giants, self-driving technology isn't rocket science anymore, as demonstrated by <strong><a href=\"http://apollo.auto/\">Apollo Auto</a></strong>. The goal of the Baidu-owned Apollo program is to become the Android of the autonomous driving industry. The Apollo platform has components such as perception, simulation, planning and intelligent control that enable car companies to integrate their own autonomous driving systems into their vehicles' hardware. The developer community is still new but with a lot of vendors joining to contribute more ports. One of our projects helped our client to complete self-driving license exams with the Apollo-based autopilot system. Apollo also provides an evolutionary architecture approach to adopt advanced features gradually, which enables us to integrate more sensors and functions in an agile, iterative way.</p>",
                "radarId": 30,
                "id": "en_2019-11_201911016",
                "blip_selector": "apollo-auto"
            }
        ]
    },
    {
        "date": "2020-05",
        "blips": [
            {
                "blip_id": 202005041,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "255",
                "name": "Argo CD",
                "display_name": "Argo CD",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "198",
                "tag": "new",
                "description": "<p>Without making a judgment of the GitOps technique, we'd like to talk about <strong><a href=\"https://argoproj.github.io/argo-cd/\">Argo CD</a></strong> within the scope of deploying and monitoring applications in <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> environments. Based on its ability to automate the deployment of the desired application state in the specified target environments in Kubernetes and our good experience with troubleshooting failed deployments, verifying logs and monitoring deployment status, we recommend you give Argo CD a try. You can even see graphically what is going on in the cluster, how a change is propagated and how pods are created and destroyed in real time.</p>",
                "radarId": 31,
                "id": "en_2020-05_202005041",
                "blip_selector": "argo-cd"
            },
            {
                "blip_id": 1285,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Jaeger",
                "display_name": "Jaeger",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "62",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://github.com/jaegertracing/jaeger\">Jaeger</a></strong> is an open source distributed tracing system. Similar to <a href=\"/radar/tools/zipkin\">Zipkin</a>, it's been inspired by the Google <a href=\"https://ai.google/research/pubs/pub36356\">Dapper</a> paper and complies with <a href=\"/radar/platforms/opentelemetry\">OpenTelemetry</a>. We've used Jaeger successfully with <a href=\"/radar/platforms/istio\">Istio</a> and <a href=\"https://www.envoyproxy.io/\">Envoy</a> on Kubernetes and like its <a href=\"https://github.com/jaegertracing/jaeger-ui\">UI</a>. Jaeger exposes tracing metrics in the <a href=\"/radar/tools/prometheus\">Prometheus</a> format so they can be made available to other tools. However, a new generation of tools such as <a href=\"/radar/tools/honeycomb\">Honeycomb</a> integrates traces and metrics into a single observability stream for simpler aggregate analysis. Jaeger joined <a href=\"https://www.cncf.io/blog/2017/09/13/cncf-hosts-jaeger/\">CNCF</a> in 2017 and has recently been elevated to CNCF's highest level of maturity, indicating its widespread deployment into production systems.</p>",
                "radarId": 56,
                "id": "en_2020-05_1285",
                "blip_selector": "jaeger"
            },
            {
                "blip_id": 201911070,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "Figma",
                "display_name": "Figma",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "30",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://www.figma.com/\">Figma</a></strong> has demonstrated to be the go-to tool for collaborative design, not only for designers but for multidisciplinary teams too; it allows developers and other roles to view and comment on designs through the browser without the desktop version. Compared to its competitors (e.g., Invision or Sketch) which have you use more than one tool for versioning, collaborating and design sharing, Figma puts together all of these features in one tool that makes it easier for our teams to discover new ideas together. Our teams find Figma very useful, especially in remote and distributed design work enablement and facilitation. In addition to its real-time design and collaboration capabilities, Figma also offers an API that helps to improve the <a href=\"/radar/techniques/designops\">DesignOps</a> process.</p>",
                "radarId": 51,
                "id": "en_2020-05_201911070",
                "blip_selector": "figma"
            },
            {
                "blip_id": 202005026,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "370",
                "name": "Node overload",
                "display_name": "Node overload",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "225",
                "tag": "new",
                "description": "<p>Technologies, especially wildly popular ones, have a tendency to be overused. What we're seeing at the moment is <strong>Node overload</strong>, a tendency to use Node.js indiscriminately or for the wrong reasons. Among these, two stand out in our opinion. Firstly, we frequently hear that Node should be used so that all programming can be done in one programming language. Our view remains that <a href=\"/radar/techniques/polyglot-programming\">polyglot programming</a> is a better approach, and this still goes <a href=\"/radar/languages-and-frameworks/javascript-as-a-first-class-language\">both ways</a>. Secondly, we often hear teams cite performance as a reason to choose Node.js. Although there are myriads of more or less sensible benchmarks, this perception is rooted in history. When Node.js became popular, it was the first major framework to embrace a nonblocking programming model which made it very efficient for IO-heavy tasks. (We mentioned this in our write-up of Node.js in 2012.) Due to its single-threaded nature, Node.js was never a good choice for compute-heavy workloads, though, and now that capable nonblocking frameworks also exist on other platforms — some with elegant, modern APIs — performance is no longer a reason to choose Node.js.</p>",
                "radarId": 49,
                "id": "en_2020-05_202005026",
                "blip_selector": "node-overload"
            },
            {
                "blip_id": 202005110,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Sarama",
                "display_name": "Sarama",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "343",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/Shopify/sarama\">Sarama</a></strong> is a Go client library for <a href=\"/radar/tools/apache-kafka\">Apache Kafka</a>. If you’re developing your APIs in Go, you'll find Sarama quite easy to set up and manage as it doesn't depend on any native libraries. Sarama has two types of APIs — a high-level API for easily producing and consuming messages and a low-level API for controlling bytes on the wire.</p>",
                "radarId": 88,
                "id": "en_2020-05_202005110",
                "blip_selector": "sarama"
            },
            {
                "blip_id": 201911018,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "185",
                "name": "SwiftUI",
                "display_name": "SwiftUI",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "351",
                "tag": "move_in",
                "description": "<p>Apple has taken a big step forward with their new <strong><a href=\"https://developer.apple.com/xcode/swiftui/\">SwiftUI</a></strong> framework for implementing user interfaces on the macOS and iOS platforms. We like that SwiftUI moves beyond the somewhat kludgy relationship between Interface Builder and Xcode and adopts a coherent, declarative and code-centric approach. You can now view your code and the resulting visual interface side by side in Xcode 11, making for a much better developer experience. The SwiftUI framework also draws inspiration from the <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> world that has dominated web development in recent years. Immutable values in view models and an asynchronous update mechanism make for a unified reactive programming model. This gives developers an entirely native alternative to similar reactive frameworks such as <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> or <a href=\"/radar/languages-and-frameworks/flutter\">Flutter</a>. SwiftUI definitely represents the future of Apple UI development, and although new, it has shown its benefits. We've been having great experience with it — and its shallow learning curve. It's worth noting that you should know your customer's use case before jumping into using SwiftUI, given that it doesn't support iOS 12 or below.</p>",
                "radarId": 89,
                "id": "en_2020-05_201911018",
                "blip_selector": "swiftui"
            },
            {
                "blip_id": 202005099,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "ERNIE",
                "display_name": "ERNIE",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "300",
                "tag": "new",
                "description": "<p>In the previous edition of the Radar we had <a href=\"/radar/techniques/bert\">BERT</a> — which is a key milestone in the NLP landscape. Last year, Baidu released <strong><a href=\"https://github.com/PaddlePaddle/ERNIE/\">ERNIE</a></strong> 2.0 (Enhanced Representation through kNowledge IntEgration) which outperformed BERT on seven GLUE language understanding tasks and on all nine of the Chinese NLP tasks. ERNIE, like BERT, provides unsupervised pretrained language models, which can be fine-tuned by adding output layers to create state-of-the-art models for a variety of NLP tasks. ERNIE differs from traditional pretraining methods in that it is a continual pretraining framework. Instead of training with a small number of pretraining objectives, it could constantly introduce a large variety of pretraining tasks to help the model efficiently learn language representations. We're pretty excited about the advancements in NLP and are looking forward to experimenting with ERNIE on our projects.</p>",
                "radarId": 92,
                "id": "en_2020-05_202005099",
                "blip_selector": "ernie"
            },
            {
                "blip_id": 202005020,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "kind",
                "display_name": "kind",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "51",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/kubernetes-sigs/kind\">kind</a></strong> is a tool for running local <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> clusters using Docker container nodes. With <a href=\"https://github.com/kubernetes/test-infra/tree/master/kubetest\">kubetest</a> integration, kind makes it easy to do end-to-end testing on Kubernetes. We've used kind to create ephemeral Kubernetes clusters to test Kubernetes resources such as Operators and Custom Resource Definitions (CRDs) in our CI pipelines.</p>",
                "radarId": 58,
                "id": "en_2020-05_202005020",
                "blip_selector": "kind"
            },
            {
                "blip_id": 1133,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "Applying product management to internal platforms",
                "display_name": "Applying product management to internal platforms",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "168",
                "tag": "move_in",
                "description": "<p>More and more companies are building internal platforms to roll out new digital solutions quickly and efficiently. Companies that succeed with this strategy are <strong>applying product management to internal platforms</strong>. This means establishing empathy with internal consumers (the development teams) and collaborating with them on the design. Platform product managers create roadmaps and ensure the platform delivers value to the business and enhances the developer experience. Unfortunately, we're also seeing less successful approaches, where teams create a platform in the void, based on unverified assumptions and without internal customers. These platforms, often despite aggressive internal tactics, end up being underutilized and a drain on the organization's delivery capability. As usual, good product management is all about building products that consumers love.</p>",
                "radarId": 1,
                "id": "en_2020-05_1133",
                "blip_selector": "applying-product-management-to-internal-platforms"
            },
            {
                "blip_id": 202005100,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Manifold",
                "display_name": "Manifold",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "33",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/uber/manifold\">Manifold</a></strong> is a model-agnostic visual debugger for machine learning (ML). Model developers spend a significant amount of time on iterating and improving an existing model rather than creating a new one. By shifting the focus from model space to data space, Manifold supplements the existing performance metrics with a visual characteristics of the data set that influences the model performance. We think Manifold will be a useful tool to assess in the ML ecosystem.</p>",
                "radarId": 73,
                "id": "en_2020-05_202005100",
                "blip_selector": "manifold"
            },
            {
                "blip_id": 1223,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "ScoutSuite",
                "display_name": "ScoutSuite",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "17",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://github.com/nccgroup/ScoutSuite\">ScoutSuite</a></strong> is an expanded and updated tool based on Scout2 (featured in the Radar in 2018) that provides security posture assessment across <a href=\"/radar/platforms/aws\">AWS</a>, <a href=\"/radar/platforms/azure\">Azure</a>, <a href=\"/radar/platforms/google-cloud-platform\">GCP</a> and other cloud providers. It works by automatically aggregating configuration data for an environment and applying rules to audit the environment. We've found this very useful across projects for doing point-in-time security assessments.</p>",
                "radarId": 64,
                "id": "en_2020-05_1223",
                "blip_selector": "scoutsuite"
            },
            {
                "blip_id": 202005085,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "DeepWalk",
                "display_name": "DeepWalk",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "129",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/phanein/deepwalk\">DeepWalk</a></strong> is an algorithm that helps apply machine learning on graphs. When working on data sets that are represented as graphs, one of the key problems is to extract features from the graph. This is where DeepWalk can help. It uses SkipGram to construct node embeddings by viewing the graph as a language where each node is a unique word in the language and random walks of finite length on the graph constitutes a sentence. These embeddings can then be used by various ML models. DeepWalk is one of the techniques we're trialling on some of our projects where we've needed to apply machine learning on graphs.</p>",
                "radarId": 20,
                "id": "en_2020-05_202005085",
                "blip_selector": "deepwalk"
            },
            {
                "blip_id": 201911051,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Data mesh",
                "display_name": "Data mesh",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "168",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://martinfowler.com/articles/data-monolith-to-mesh.html\">Data mesh</a></strong> is an architectural and organizational paradigm that challenges the age-old assumption that we must centralize big analytical data to use it, have data all in one place or be managed by a centralized data team to deliver value. Data mesh claims that for big data to fuel innovation, its ownership must be federated among domain data owners who are accountable for providing their data as products (with the support of a self-serve data platform to abstract the technical complexity involved in serving data products);  it must also adopt a new form of federated governance through automation to enable interoperability of domain-oriented data products. Decentralization, along with interoperability and focus on the experience of data consumers, are key to the democratization of innovation using data.</p>\n\n<p>If your organization has a large number of domains with numerous systems and teams generating data or a diverse set of data-driven use cases and access patterns, we suggest you assess data mesh. Implementation of data mesh requires investment in building a self-serve data platform and embracing an organizational change for domains to take on the long-term ownership of their data products, as well as an incentive structure that rewards domains serving and utilizing data as a product.</p>",
                "radarId": 17,
                "id": "en_2020-05_201911051",
                "blip_selector": "data-mesh"
            },
            {
                "blip_id": 1265,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Visual Studio Live Share",
                "display_name": "Visual Studio Live Share",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "7",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack\">Visual Studio Live Share</a></strong> is a suite of extensions for <a href=\"/radar/tools/visual-studio-code\">Visual Studio Code</a> and Visual Studio. At a time when teams are searching for good remote collaboration options, we want to call attention to the excellent tooling here. Live Share provides a good, low-latency remote-pairing experience, and requires significantly less bandwidth than the brute-force approach of sharing your entire desktop. Importantly, developers can work with their preferred configuration, extensions and key mappings during a pairing session. In addition to real-time collaboration for editing and debugging code, Live Share allows voice calls and sharing terminals and servers.</p>",
                "radarId": 66,
                "id": "en_2020-05_1265",
                "blip_selector": "visual-studio-live-share"
            },
            {
                "blip_id": 201911046,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Legacy migration feature parity",
                "display_name": "Legacy migration feature parity",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "150",
                "tag": "stay",
                "description": "<p>We find that more and more organizations need to replace aging legacy systems to keep up with the demands of their customers (both internal and external). One antipattern we keep seeing is <strong>legacy migration feature parity</strong> , the desire to retain feature parity with the old. We see this as a huge missed opportunity. Often the old systems have bloated over time, with many features unused by users (50% according to a <a href=\"https://www.standishgroup.com/sample_research_files/Exceeding%20Value_Layout.pdf\">2014 Standish Group report</a>) and business processes that have evolved over time. Replacing these features is a waste. Our advice: Convince your customers to take a step back and understand what their users currently <em>need</em> and prioritize these needs against business outcomes and metrics — which often is easier said than done. This means conducting user research and applying modern product development practices rather than simply replacing the existing ones.</p>",
                "radarId": 24,
                "id": "en_2020-05_201911046",
                "blip_selector": "legacy-migration-feature-parity"
            },
            {
                "blip_id": 201904010,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "225",
                "name": "Anka",
                "display_name": "Anka",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "189",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://ankadoc.bitbucket.io/\">Anka</a></strong> is a set of tools to create, manage, distribute, build and test macOS reproducible virtual environments for iOS and macOS. It brings Docker-like experience to macOS environments: instant start, CLI to manage virtual machines and registry to version and tag virtual machines for distribution. We've used Anka to build a macOS private cloud for a client. This tool is worth considering when virtualizing iOS and macOS environments.</p>",
                "radarId": 30,
                "id": "en_2020-05_201904010",
                "blip_selector": "anka"
            },
            {
                "blip_id": 202005049,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Gloo",
                "display_name": "Gloo",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "50",
                "tag": "new",
                "description": "<p>With the increasing adoption of <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> and <a href=\"/radar/techniques/service-mesh\">service mesh</a>, API gateways have been experiencing an existential crisis in cloud-native distributed systems. After all, many of their capabilities (such as traffic control, security, routing and observability) are now provided by the cluster’s ingress controller and mesh gateway. <strong><a href=\"https://www.solo.io/products/gloo/\">Gloo</a></strong> is a lightweight API gateway that embraces this change; it uses <a href=\"https://www.envoyproxy.io/\">Envoy</a> as its gateway technology, while providing added value such as a cohesive view of the APIs to the external users and applications. It also provides an administrative interface for controlling Envoy gateways and runs and integrates with multiple service mesh implementations such as <a href=\"https://linkerd.io/\">Linkerd</a>, <a href=\"/radar/platforms/istio\">Istio</a> and <a href=\"https://aws.amazon.com/app-mesh/\">AWS App Mesh</a>. While its open source implementation provides the basic capabilities expected from an API gateway, its enterprise edition has a more mature set of security controls such as API key management or integration with <a href=\"/radar/tools/open-policy-agent-opa\">OPA</a>. Gloo is a promising lightweight API gateway that plays well with the ecosystem of cloud-native technology and architecture, while avoiding the API gateway trap of enabling business logic to glue APIs for the end user.</p>",
                "radarId": 71,
                "id": "en_2020-05_202005049",
                "blip_selector": "gloo"
            },
            {
                "blip_id": 202005035,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "MeiliSearch",
                "display_name": "MeiliSearch",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "245",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/meilisearch/MeiliSearch\">MeiliSearch</a></strong> is a fast, easy-to-use and easy-to-deploy text search engine. Over the years Elasticsearch has become the popular choice for scalable text searches. However, if you don't have the volume of data that warrants a distributed solution but still want to provide a fast typo-tolerant search engine, then we recommend assessing MeiliSearch.</p>",
                "radarId": 46,
                "id": "en_2020-05_202005035",
                "blip_selector": "meilisearch"
            },
            {
                "blip_id": 201911014,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Hydra",
                "display_name": "Hydra",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "243",
                "tag": "move_in",
                "description": "<p>Not everyone needs a self-hosted OAuth2 solution, but if you do, have a look at <strong><a href=\"https://www.ory.sh/hydra/\">Hydra</a></strong> — a fully compliant open source OAuth2 server and OpenID connect provider. Hydra has in-memory storage support for development and a relational database (PostgreSQL) for production use cases. Hydra as such is stateless and easy to scale horizontally in platforms such as <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Depending on your performance requirement, you may have to tune the number of database instances while scaling Hydra instances. And because Hydra doesn't provide any identity management solutions out of the box, you can integrate whatever flavor of identity management you have with Hydra through a clean API. This clear separation of identity from the rest of the OAuth2 framework makes it easier to integrate Hydra with an existing authentication ecosystem.</p>",
                "radarId": 36,
                "id": "en_2020-05_201911014",
                "blip_selector": "hydra"
            },
            {
                "blip_id": 1101,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Platform engineering product teams",
                "display_name": "Platform engineering product teams",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "137",
                "tag": "move_in",
                "description": "<p>The adoption of cloud and DevOps — while increasing the productivity of teams who can now move more quickly with reduced dependency on centralized operations teams and infrastructure — also has constrained teams that lack the skills to self-manage a full application and operations stack. Some organizations have tackled this challenge by creating <strong>platform engineering product teams</strong>. These teams maintain an internal platform that enables delivery teams to deploy and operate systems with reduced lead time and stack complexity. The emphasis here is on API-driven self-service and supporting tools, with delivery teams still responsible for supporting what they deploy onto the platform. Organizations that consider establishing such a platform team should be very cautious not to accidentally create a <a href=\"/radar/techniques/separate-devops-team\">separate DevOps team</a>, nor should they simply relabel their <a href=\"/radar/platforms/superficial-private-cloud\">existing hosting and operations structure</a> as a platform. If you're wondering how to best set up platform teams, we've been using the concepts from <a href=\"https://teamtopologies.com/\">Team Topologies</a> to split platform teams in our projects into Enabling Teams, core \"platform within a platform\" teams and Stream-aligned Teams.</p>",
                "radarId": 11,
                "id": "en_2020-05_1101",
                "blip_selector": "platform-engineering-product-teams"
            },
            {
                "blip_id": 1282,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Optimal Workshop",
                "display_name": "Optimal Workshop",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "29",
                "tag": "move_in",
                "description": "<p>UX research demands data collection and analysis to make better decisions about the products we need to build. Our teams find <strong><a href=\"https://www.optimalworkshop.com\">Optimal Workshop</a></strong> useful because it makes it easy to validate prototypes and configure tests for data collection and thus make better decisions. Features such as first-click, card sorting, or a heatmap of user interaction help to both validate prototypes and improve website navigation and information display. It's an ideal tool for distributed teams since it allows them to conduct remote research.</p>",
                "radarId": 62,
                "id": "en_2020-05_1282",
                "blip_selector": "optimal-workshop"
            },
            {
                "blip_id": 202005054,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Tailwind CSS",
                "display_name": "Tailwind CSS",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "320",
                "tag": "new",
                "description": "<p>CSS tools and frameworks offer predesigned components for fast results; after a while, however, they can complicate customization. <strong><a href=\"https://tailwindcss.com/\">Tailwind CSS</a></strong> proposes an interesting approach by providing lower-level utility CSS classes to create building blocks without opinionated styles and aiming for easy customization. The breadth of the low-level utilities allows you to avoid writing any classes or CSS on your own which leads to a more maintainable codebase in the long term. It seems that Tailwind CSS offers the right balance between reusability and customization to create visual components.</p>",
                "radarId": 94,
                "id": "en_2020-05_202005054",
                "blip_selector": "tailwind-css"
            },
            {
                "blip_id": 790,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "385",
                "name": "Long-lived branches with Gitflow",
                "display_name": "Long-lived branches with Gitflow",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "120",
                "tag": "refresh_writeup",
                "description": "<p>Five years ago we highlighted the problems with <strong>long-lived branches with Gitflow</strong>. Essentially, long-lived branches are the opposite of continuously integrating all changes to the source code, and in our experience continuous integration is the better approach for most kinds of software development. Later we extended our caution to <a href=\"/radar/techniques/gitflow\">Gitflow</a> itself, because we saw teams using it almost exclusively with long-lived branches. Today, we still see teams in settings where continuous delivery of web-based systems is the stated goal being drawn to long-lived branches. So we were delighted that the author of Gitflow has now added a note to his <a href=\"https://nvie.com/posts/a-successful-git-branching-model/\">original article</a>, explaining that Gitflow was not intended for such use cases.</p>",
                "radarId": 26,
                "id": "en_2020-05_790",
                "blip_selector": "long-lived-branches-with-gitflow"
            },
            {
                "blip_id": 201904062,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Transfer learning for NLP",
                "display_name": "Transfer learning for NLP",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "115",
                "tag": "move_in",
                "description": "<p>We had this technique in Assess previously. The innovations in the NLP landscape continue at a great pace, and we're able to leverage these innovations in our projects thanks to the ubiquitous <strong>transfer learning for NLP</strong>. The GLUE benchmark (a suite of language understanding tasks) scores have seen dramatic progress over the past couple of years with average scores moving from 70.0 at launch to some of the leaders crossing 90.0 as of April 2020. A lot of our projects in the NLP domain are able to make significant progress by starting from pretrained models from ELMo, <a href=\"/radar/techniques/bert\">BERT</a>, and <a href=\"/radar/languages-and-frameworks/ernie\">ERNIE</a>, among others, and then fine-tuning them based on the project needs.</p>",
                "radarId": 14,
                "id": "en_2020-05_201904062",
                "blip_selector": "transfer-learning-for-nlp"
            },
            {
                "blip_id": 202005031,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Anthos",
                "display_name": "Anthos",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "188",
                "tag": "new",
                "description": "<p>We see a shift from accidental hybrid or whole-of-estate cloud migration plans to intentional and sophisticated hybrid, poly or portable cloud strategies, where organizations apply multidimensional principles to establish and execute their cloud strategy: where to host their various data and functional assets based on risk, ability to control and performance profiles; how to utilize their on-premise infrastructure investments while reducing the cost of operations; and how to take advantage of multiple cloud providers and their unique differentiated services without creating complexity and friction for users building and operating applications.</p>\n\n<p><strong><a href=\"https://cloud.google.com/anthos\">Anthos</a></strong> is Google's answer to enable hybrid and multicloud strategies by providing a high-level management and control plane on top of a set of open source technologies such as <a href=\"https://cloud.google.com/anthos/gke\">GKE</a>, <a href=\"https://cloud.google.com/anthos/service-mesh\">Service Mesh</a> and a Git-based <a href=\"https://cloud.google.com/anthos/config-management\">Configuration Management</a>. It enables running portable workloads and other assets on different hosting environments, including Google Cloud and on-premises hardware. Although other cloud providers have comparative offerings, Anthos intends to go beyond a hybrid cloud to a portable cloud enabler using open source components, but that is yet to be seen. We're seeing a rising interest in Anthos. While Google's approach in managed hybrid cloud environments seems promising, it’s not a magic bullet and requires changes in both existing cloud and on-premise assets. Our advice for clients considering Anthos is to make measured tradeoffs between selecting services from the Google Cloud ecosystem and other options, to maintain their right level of neutrality and control.</p>",
                "radarId": 39,
                "id": "en_2020-05_202005031",
                "blip_selector": "anthos"
            },
            {
                "blip_id": 202005009,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Managing stateful systems via container orchestration",
                "display_name": "Managing stateful systems via container orchestration",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "116",
                "tag": "new",
                "description": "<p>We recommend caution in <strong>managing stateful systems via container orchestration</strong> platforms such as Kubernetes. Some databases are not built with native support for orchestration — they don't expect a scheduler to kill and relocate them to a different host. Building a highly available service on top of such databases is not trivial, and we still recommend running them on bare metal hosts or a virtual machine (VM) rather than to force-fit them into a container orchestration platform.</p>",
                "radarId": 21,
                "id": "en_2020-05_202005009",
                "blip_selector": "managing-stateful-systems-via-container-orchestration"
            },
            {
                "blip_id": 202005070,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Koin",
                "display_name": "Koin",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "310",
                "tag": "new",
                "description": "<p>As <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> is used increasingly for both mobile and server-side development, the associated ecosystem continues to evolve. <strong><a href=\"https://insert-koin.io/\">Koin</a></strong> is a Kotlin framework that handles one of the routine problems in software development: dependency injection. Although you can choose from a variety of dependency injection frameworks for Kotlin, our teams have come to prefer the simplicity of Koin. Koin avoids using annotations and injects either through constructors or by mimicking Kotlin's lazy initialization so that objects are injected only when needed. This is in contrast to the statically compiled <a href=\"/radar/languages-and-frameworks/dagger\">Dagger</a> injection framework for Android. Our developers like the lightweight nature of this framework and its built-in testability.</p>",
                "radarId": 84,
                "id": "en_2020-05_202005070",
                "blip_selector": "koin"
            },
            {
                "blip_id": 202005048,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Gitpod",
                "display_name": "Gitpod",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "58",
                "tag": "new",
                "description": "<p>You can build most software following a simple two-step process: check out a repository, and then run a single build script. The process of setting up a full coding environment can still be cumbersome, though. <strong><a href=\"https://www.gitpod.io/\">Gitpod</a></strong> addresses this by providing cloud-based, \"ready-to-code\" environments for Github or GitLab repositories. It offers an IDE based on Visual Studio Code that runs inside the web browser. By default, these environments are launched on the Google Cloud Platform, although you can also deploy on-premise solutions. We see the immediate appeal, especially for open source software where this approach can lower the bar for casual contributors. However, it remains to be seen how viable this approach will be in corporate environments.</p>",
                "radarId": 70,
                "id": "en_2020-05_202005048",
                "blip_selector": "gitpod"
            },
            {
                "blip_id": 1213,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "GraphQL for server-side resource aggregation",
                "display_name": "GraphQL for server-side resource aggregation",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "156",
                "tag": "move_in",
                "description": "<p>We see more and more tools such as <a href=\"https://www.apollographql.com/docs/apollo-server/federation/introduction/\">Apollo Federation</a> that can aggregate multiple GraphQL endpoints into a single graph. However, we caution against misusing <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a>, especially when turning it into a server-to-server protocol. Our practice is to use <strong><a href=\"/radar/techniques/graphql-for-server-side-resource-aggregation\">GraphQL for server-side resource aggregation</a></strong> only. When using this pattern, the microservices continue to expose well-defined RESTful APIs, while under-the-hood aggregate services or <a href=\"/radar/techniques/bff-backend-for-frontends\">BFF (Backend for Frontends)</a> patterns use GraphQL resolvers as the implementation for stitching resources from other services. The shape of the graph is driven by domain-modeling exercises to ensure ubiquitous language is limited to subgraphs where needed (in the case of one-microservice-per-bounded-context). This technique simplifies the internal implementation of aggregate services or BFFs, while encouraging good modeling of services to avoid <a href=\"/radar/techniques/anemic-rest\">anemic REST</a>.</p>",
                "radarId": 9,
                "id": "en_2020-05_1213",
                "blip_selector": "graphql-for-server-side-resource-aggregation"
            },
            {
                "blip_id": 202005092,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Zero trust architecture (ZTA)",
                "display_name": "Zero trust architecture (ZTA)",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "99",
                "tag": "new",
                "description": "<p>The technology landscape of organizations today is increasingly more complex with assets — data, functions, infrastructure and users — spread across security boundaries, such as local hosts, multiple cloud providers and a variety of SaaS vendors. This demands a paradigm shift in enterprise security planning and systems architecture, moving from static and slow-changing security policy management, based on trust zones and network configurations, to dynamic, fine-grained security policy enforcement based on temporal access privileges.</p>\n\n<p><strong>Zero trust architecture (ZTA)</strong> is an organization's strategy and journey to implement zero-trust security principles for all of their assets — such as devices, infrastructure, services, data and users — and includes implementing practices such as securing all access and communications regardless of the network location, enforcing policies as code based on the least privilege and as granular as possible, and continuous monitoring and automated mitigation of threats. Our Radar reflects many of the enabling techniques such as <a href=\"/radar/techniques/security-policy-as-code\">security policy as code</a>, <a href=\"/radar/techniques/sidecars-for-endpoint-security\">sidecars for endpoint security</a> and <a href=\"/radar/techniques/beyondcorp\">BeyondCorp</a>. If you're on your journey toward ZTA, refer to the <a href=\"https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-207-draft2.pdf\">NIST ZTA publication</a> to learn more about principles, enabling technology components and migration patterns as well as Google's publication on <a href=\"https://cloud.google.com/security/beyondprod\">BeyondProd</a>.</p>",
                "radarId": 16,
                "id": "en_2020-05_202005092",
                "blip_selector": "zero-trust-architecture-zta"
            },
            {
                "blip_id": 202005106,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "ConfigCat",
                "display_name": "ConfigCat",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "66",
                "tag": "new",
                "description": "<p>If you're looking for a service to support dynamic feature toggles (and bear in mind that simple feature toggles work well too), check out <strong><a href=\"https://configcat.com/\">ConfigCat</a></strong>. We'd describe it as \"like LaunchDarkly but cheaper and a bit less fancy\" and find that it does most of what we need. ConfigCat supports simple feature toggles, user segmentation, and A/B testing and has a generous free tier for low-volume use cases or those just starting out.</p>",
                "radarId": 69,
                "id": "en_2020-05_202005106",
                "blip_selector": "configcat"
            },
            {
                "blip_id": 201911042,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "230",
                "name": "Experiment tracking tools for machine learning",
                "display_name": "Experiment tracking tools for machine learning",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "74",
                "tag": "refresh_writeup",
                "description": "<p>The day-to-day work of machine learning often boils down to a series of experiments in selecting a modeling approach and the network topology, training data and optimizing or tweaking the model. Data scientists must use experience and intuition to hypothesize changes and then measure the impact those changes have on the overall performance of the model. As this practice has matured, our teams have found an increasing need for <strong>experiment tracking tools for machine learning</strong>. These tools help investigators keep track of the experiments and work through them methodically. Although no clear winner has emerged, tools such as <a href=\"https://mlflow.org/\">MLflow</a> and platforms such as <a href=\"https://comet.ml\">Comet</a> or <a href=\"https://neptune.ml\">Neptune</a> have introduced rigor and repeatability into the entire machine learning workflow.</p>",
                "radarId": 54,
                "id": "en_2020-05_201911042",
                "blip_selector": "experiment-tracking-tools-for-machine-learning"
            },
            {
                "blip_id": 202005089,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "Snapshot testing only",
                "display_name": "Snapshot testing only",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "105",
                "tag": "new",
                "description": "<p>The value of snapshot testing is undeniable when working with legacy systems by ensuring that the system continues to work and the legacy code doesn't break. However, we're seeing the common, rather harmful practice of using <strong>snapshot testing only</strong> as the primary test mechanism. Snapshot tests validate the exact result generated in the DOM by a component, not the component's behavior; therefore, it can be weak and unreliable, fostering the \"only delete the snapshot and regenerate it\" bad practice. Instead, you should test the logic and behavior of the components emulating what users would do. This mindset is encouraged by tools in the <a href=\"https://testing-library.com/docs/guiding-principles\">Testing Library</a> family.</p>",
                "radarId": 27,
                "id": "en_2020-05_202005089",
                "blip_selector": "snapshot-testing-only"
            },
            {
                "blip_id": 201911069,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Open Policy Agent (OPA)",
                "display_name": "Open Policy Agent (OPA)",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "34",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://www.openpolicyagent.org/\">Open Policy Agent (OPA)</a></strong> has rapidly become a favorable component of many distributed cloud-native solutions that we build for our clients. OPA provides a uniform framework and <a href=\"https://www.openpolicyagent.org/docs/latest/#rego\">language</a> for declaring, enforcing and controlling policies for various components of a cloud-native solution. It's a great example of a tool that implements <a href=\"/radar/techniques/security-policy-as-code\">security policy as code</a>. We've had a smooth experience using OPA in multiple scenarios, including deploying resources to K8s clusters, enforcing access control across services in a <a href=\"/radar/techniques/service-mesh\">service mesh</a> and fine-grained security controls as code for accessing application resources. A recent commercial offering, <a href=\"https://www.styra.com/\">Styra's Declarative Authorization Service (DAS)</a>, eases the adoption of OPA for enterprises by adding a management tool, or control plane, to OPA for K8s with a prebuilt policy library, impact analysis of the policies and logging capabilities. We look forward to maturity and extension of OPA beyond operational services to (big) data-centric solutions.</p>",
                "radarId": 61,
                "id": "en_2020-05_201911069",
                "blip_selector": "open-policy-agent-opa"
            },
            {
                "blip_id": 202005061,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "DVC",
                "display_name": "DVC",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "79",
                "tag": "new",
                "description": "<p>In 2018 we mentioned <strong><a href=\"https://dvc.org/\">DVC</a></strong> in conjunction with the <a href=\"/radar/techniques/versioning-data-for-reproducible-analytics\">versioning data for reproducible analytics</a>. Since then it has become a favorite tool for managing experiments in machine learning (ML) projects. Since it's based on Git, DVC is a familiar environment for software developers to bring their engineering practices to ML practice. Because it versions the code that processes data along with the data itself and tracks stages in a pipeline, it helps bring order to the modeling activities without interrupting the analysts’ flow.</p>",
                "radarId": 53,
                "id": "en_2020-05_202005061",
                "blip_selector": "dvc"
            },
            {
                "blip_id": 201911034,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Security policy as code",
                "display_name": "Security policy as code",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "131",
                "tag": "stay",
                "description": "<p>Security policies are rules and procedures that protect our systems from threats and disruption. For example, access control policies define and enforce who can access which services and resources under what circumstances; or network security policies can dynamically limit the traffic rate to a particular service. The complexity of the technology landscape today demands treating <strong>security policy as code</strong>: define and keep policies under version control, automatically validate them, automatically deploy them and monitor their performance. Tools such as <a href=\"/radar/tools/open-policy-agent-opa\">Open Policy Agent</a> or platforms such as <a href=\"/radar/platforms/istio\">Istio</a> provide flexible policy definition and enforcement mechanisms that support the practice of security policy as code.</p>",
                "radarId": 12,
                "id": "en_2020-05_201911034",
                "blip_selector": "security-policy-as-code"
            },
            {
                "blip_id": 702,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Cloud lift and shift",
                "display_name": "Cloud lift and shift",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "165",
                "tag": "refresh_writeup",
                "description": "<p>It is rather curious, that after over a decade of industry experience with cloud migration, we still feel it's necessary to call out <strong>cloud lift and shift</strong>; a practice that views cloud simply as a hosting solution, resulting in the replication of an existing architecture, security practices and IT operational models in the cloud. This fails to realize the cloud's promises of agility and digital innovation. A cloud migration requires intentional change across multiple axes toward a cloud-native state, and depending on the unique migration circumstances, each organization might end up somewhere on the spectrum from cloud lift and shift to cloud native. Systems architecture, for example, is one of the pillars of delivery agility and often requires change. The temptation to simply <a href=\"https://cloud.google.com/migrate/anthos/docs/anthos-migrate-benefits\">lift and shift existing systems as containers</a> to the cloud can be strong. While this tactic can speed up cloud migration, it falls short when it comes to creating agility and delivering features and value. Enterprise security in the cloud is fundamentally different from traditional perimeter-based security through firewalls and zoning, and it demands a journey toward <a href=\"/radar/techniques/zero-trust-architecture-zta\">zero trust architecture</a>. The IT operating model too has to be reformed to safely provide cloud services through self-serve automated platforms and empower teams to take more of the operational responsibility and gain autonomy. Last but not least, organizations must build a foundation to enable continuous change, such as creating pipelines with continuous testing of applications and infrastructure as a part of the migration. These will help the migration process, result in a more robust and well-factored system and give organizations a way to continue to evolve and improve their systems.</p>",
                "radarId": 23,
                "id": "en_2020-05_702",
                "blip_selector": "cloud-lift-and-shift"
            },
            {
                "blip_id": 202005059,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "mkcert",
                "display_name": "mkcert",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "45",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/FiloSottile/mkcert\">mkcert</a></strong> is a convenient tool for creating locally trusted development certificates. Using certificates from real certificate authorities (CAs) for local development can be challenging if not impossible (for hosts such as example.test, localhost or 127.0.0.1). In such situations self-signed certificates may be your only option. mkcert lets you generate self-signed certificates and installs the local CA in the system root store. For anything other than local development and testing, we strongly recommend using certificates from real CAs to avoid trust issues.</p>",
                "radarId": 59,
                "id": "en_2020-05_202005059",
                "blip_selector": "mkcert"
            },
            {
                "blip_id": 202005030,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "MURAL",
                "display_name": "MURAL",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "40",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.mural.co/\">MURAL</a></strong> describes itself as a \"digital workspace for visual collaboration\" and allows teams to interact with a shared workspace based on a whiteboard/sticky notes metaphor. Its features include voting, commenting, notes and \"follow the presenter.\" We particularly like the template feature that allows a facilitator to design and then reuse guided sessions with a team. Each of the major collaboration suites have a tool in this space (for example, <a href=\"https://jamboard.google.com/\">Google Jamboard</a> and <a href=\"https://www.microsoft.com/en-ca/microsoft-365/microsoft-whiteboard/digital-whiteboard-app\">Microsoft Whiteboard</a>) and these are worth investigating, but we've found MURAL to be slick, effective and flexible.</p>",
                "radarId": 60,
                "id": "en_2020-05_202005030",
                "blip_selector": "mural"
            },
            {
                "blip_id": 202005111,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "eBPF",
                "display_name": "eBPF",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "216",
                "tag": "new",
                "description": "<p>For several years now, the Linux kernel has included the extended Berkeley Packet Filter (<strong>eBPF</strong>) virtual machine and provided the ability to attach eBPF filters to particular sockets. But <em>extended</em> BPF goes far beyond packet filtering and allows custom scripts to be triggered at various points within the kernel with very little overhead. Although this technology isn't new, it's now coming into its own with the increasing use of microservices deployed as orchestrated containers. Service-to-service communications can be complex in these systems, making it difficult to correlate latency or performance issues back to an API call. We're now seeing tools released with prewritten eBPF scripts for collecting and visualizing packet traffic or reporting on CPU utilization. With the rise of <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>, we’re seeing a new generation of security enforcement and instrumentation based on eBPF scripts that help tame the complexity of a large microservices deployment.</p>",
                "radarId": 33,
                "id": "en_2020-05_202005111",
                "blip_selector": "ebpf"
            },
            {
                "blip_id": 202005006,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Preflight builds",
                "display_name": "Preflight builds",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "103",
                "tag": "new",
                "description": "<p>Even though we strongly advocate in favor of CI rather than <a href=\"/radar/techniques/gitflow\">Gitflow</a>, we know that <a href=\"https://trunkbaseddevelopment.com/committing-straight-to-the-trunk/\">committing straight to the trunk</a> and running the CI on a master branch can be ineffective if the team is too big, the builds are slow or flaky, or the team lacks the discipline to run the full test suite locally. In this situation a red build can block multiple devs or pairs of devs. Instead of fixing the underlying root cause — slow builds, the inability to run tests locally or monolithic architectures that necessitate many people working in the same area — teams usually rely on feature branches to bypass these issues. We discourage feature branches, given they may require significant effort to resolve merge conflicts, and they introduce longer feedback loops and potential bugs during conflict resolution. Instead, we propose using <strong>preflight builds</strong> as an alternative: these are pull request–based builds for “micro branches” that live only for the duration of the pipeline run, with the branch opened for every commit. To help automate this workflow, we've come across bots such as <a href=\"https://bors.tech/\">Bors</a>, which automates merging to master and branch deletion in case the mini branch build succeeds. We're assessing this flow, and you should too; but don't use this to solve the wrong problem, as it can lead to misuse of branches and may cause more harm than benefit.</p>",
                "radarId": 22,
                "id": "en_2020-05_202005006",
                "blip_selector": "preflight-builds"
            },
            {
                "blip_id": 202005098,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Apache Superset",
                "display_name": "Apache Superset",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "82",
                "tag": "new",
                "description": "<p><strong><a href=\"https://superset.apache.org/\">Apache Superset</a></strong> is a great business intelligence (BI) tool for data exploration and visualization to work with large data lake and data warehouse setups. It works, for example, with <a href=\"/radar/platforms/presto\">Presto</a>, <a href=\"https://aws.amazon.com/athena/\">Amazon Athena</a> and <a href=\"https://aws.amazon.com/redshift/\">Amazon Redshift</a> and can be nicely integrated with enterprise authentication. Moreover, you don't have to be a data engineer to use it; it’s meant to benefit all engineers exploring data in their everyday work. It's worth pointing out that Apache Superset is currently undergoing incubation at the Apache Software Foundation (ASF), meaning it's not yet fully endorsed by ASF.</p>",
                "radarId": 67,
                "id": "en_2020-05_202005098",
                "blip_selector": "apache-superset"
            },
            {
                "blip_id": 771,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "165",
                "name": "Rust",
                "display_name": "Rust",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "335",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"http://www.rust-lang.org/\">Rust</a></strong> is continuously gaining in popularity. We've had heated discussions about which is better, Rust or C++/Go, without a clear winner. However, we're glad to see Rust has improved significantly, with more built-in APIs being added and stabilized, including <a href=\"https://blog.rust-lang.org/2019/11/07/Async-await-stable.html\">advanced async support</a>, since we mentioned it in our previous Radar. In addition, Rust has also inspired the design of new languages. For example, the <a href=\"https://developers.libra.org/docs/move-overview\">Move language</a> on Libra borrows Rust's way of managing memory to manage resources, ensuring that digital assets can never be copied or implicitly discarded.</p>",
                "radarId": 87,
                "id": "en_2020-05_771",
                "blip_selector": "rust"
            },
            {
                "blip_id": 202005038,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Trillian",
                "display_name": "Trillian",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "261",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/google/trillian\">Trillian</a></strong> is a cryptographically verifiable, centralized data store. For trustless, decentralized environments, you can use blockchain-based distributed ledgers. For enterprise environments, however, where the cost of CPU-heavy consensus protocols is unwarranted, we recommend you give Trillian a try.</p>",
                "radarId": 48,
                "id": "en_2020-05_202005038",
                "blip_selector": "trillian"
            },
            {
                "blip_id": 202005051,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Snowpack",
                "display_name": "Snowpack",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "17",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.snowpack.dev/\">Snowpack</a></strong> is an interesting new entrant in the field of JavaScript build tools. The key improvement over other solutions is that Snowpack makes it possible to build applications with modern frameworks such as <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a>, <a href=\"/radar/languages-and-frameworks/vue-js\">Vue.js</a>, and <a href=\"/radar/languages-and-frameworks/angular\">Angular</a> without the need for a bundler. Cutting out the bundling step dramatically improves the feedback cycle during development because changes become available in the browser almost immediately. For this magic to work, Snowpack transforms the dependencies in <code>node_modules</code> into single JavaScript files in a new <code>web_modules</code> directory, from where they can be imported as an ECMAScript module (ESM). For IE11 and other browsers that don't support ESM, a workaround is available. Unfortunately, because no browser today can import CSS from JavaScript, using CSS modules is <a href=\"https://www.snowpack.dev/#importing-css\">not straightforward</a>.</p>",
                "radarId": 75,
                "id": "en_2020-05_202005051",
                "blip_selector": "snowpack"
            },
            {
                "blip_id": 202005046,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "AsyncAPI",
                "display_name": "AsyncAPI",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "74",
                "tag": "new",
                "description": "<p>Open standards are one of the foundational pillars of building distributed systems. For example, the <a href=\"https://github.com/OAI\">OpenAPI (formerly Swagger)</a> specification, as an industry standard to define RESTful APIs, has been instrumental to the success of distributed architectures such as <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a>. It has enabled a proliferation of tooling to support building, testing and monitoring RESTful APIs. However, such standardizations have been largely missing in distributed systems for <a href=\"https://martinfowler.com/articles/201701-event-driven.html\">event-driven APIs</a>.</p>\n\n<p><strong><a href=\"https://www.asyncapi.com/\">AsyncAPI</a></strong> is an open source initiative to create a much needed event-driven and asynchronous API standardization and development tooling. The <a href=\"https://www.asyncapi.com/docs/specifications/2.0.0/\">AsyncAPI specification</a>, inspired by the OpenAPI specification, describes and documents event-driven APIs in a machine-readable format. It's protocol agnostic, so it can be used for APIs that work over many protocols, including MQTT, WebSockets, and Kafka. We're eager to see the ongoing improvements of AsyncAPI and further maturity of its tooling ecosystem.</p>",
                "radarId": 68,
                "id": "en_2020-05_202005046",
                "blip_selector": "asyncapi"
            },
            {
                "blip_id": 201904027,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Karate",
                "display_name": "Karate",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "302",
                "tag": "move_in",
                "description": "<p>Given our experience that tests are the only API specifications that really matter, we're always on the lookout for new tools that might help with testing. <strong><a href=\"https://github.com/karatelabs/karate\">Karate</a></strong> is an API testing framework whose unique feature is that tests are written in Gherkin-based syntax without relying on a general-purpose programming language to implement test behavior. Karate uses a domain-specific language for describing HTTP-based API tests. Our teams like the readable specification that they get with this tool and recommend to keep tests with Karate in the upper levels of the <a href=\"https://martinfowler.com/articles/practical-test-pyramid.html\">testing pyramid</a> and not overload its use by making very detailed assertions.</p>",
                "radarId": 83,
                "id": "en_2020-05_201904027",
                "blip_selector": "karate"
            },
            {
                "blip_id": 201911054,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Ethical bias testing",
                "display_name": "Ethical bias testing",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "164",
                "tag": "move_in",
                "description": "<p>Over the past year, we've seen a shift in interest around machine learning and deep neural networks in particular. Until now, tool and technique development has been driven by excitement over the remarkable capabilities of these models. Currently, though, there is rising concern that these models could cause unintentional harm. For example, a model could be trained inadvertently to make profitable credit decisions by simply excluding disadvantaged applicants. Fortunately, we're seeing a growing interest in <strong>ethical bias testing</strong> that will help to uncover potentially harmful decisions. Tools such as <a href=\"https://github.com/marcotcr/lime\">lime</a>, <a href=\"https://aif360.mybluemix.net/\">AI Fairness 360</a> or <a href=\"/radar/tools/what-if-tool\">What-If Tool</a> can help uncover inaccuracies that result from underrepresented groups in training data and visualization tools such as <a href=\"https://ai.googleblog.com/2017/07/facets-open-source-visualization-tool.html\">Google Facets</a> or <a href=\"https://pair-code.github.io/facets/\">Facets Dive</a> can be used to discover subgroups within a corpus of training data. We've used lime (local interpretable model-agnostic explanations) in addition to this technique in order to understand the predictions of any machine-learning classifier and what classifiers (or models) are doing.</p>",
                "radarId": 8,
                "id": "en_2020-05_201911054",
                "blip_selector": "ethical-bias-testing"
            },
            {
                "blip_id": 202005064,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Clinic.js Bubbleprof",
                "display_name": "Clinic.js Bubbleprof",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "280",
                "tag": "new",
                "description": "<p>With the aim of improving performance in our code, profiling tools are very useful to identify bottlenecks or delays in code which are hard to identify, especially in asynchronous operations. <strong><a href=\"https://clinicjs.org/bubbleprof/\">Clinic.js Bubbleprof</a></strong> represents visually the async operations in Node.js processes, drawing a map of delays in the application's flow. We like this tool because it helps developers to easily identify and prioritize what to improve in the code.</p>",
                "radarId": 90,
                "id": "en_2020-05_202005064",
                "blip_selector": "clinic-js-bubbleprof"
            },
            {
                "blip_id": 202005001,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "115",
                "name": "Pragmatic remote pairing",
                "display_name": "Pragmatic remote pairing",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "121",
                "tag": "new",
                "description": "<p>We firmly believe that <a href=\"https://martinfowler.com/articles/on-pair-programming.html\">pair programming</a> improves the quality of code, spreads knowledge throughout a team and allows overall faster delivery of software. In a post COVID-19 world, however, many software teams will be distributed or fully remote, and in this situation we recommend <strong>pragmatic remote pairing</strong>: adjusting pairing practices to what's possible given the tools at hand. Consider tools such as <a href=\"/radar/tools/visual-studio-live-share\">Visual Studio Live Share</a> for efficient, low-latency collaboration. Only resort to pixel-sharing if both participants reside in relative geographic proximity and have high-bandwidth internet connections. Pair developers who are in similar time zones rather than expecting pairing to work between participants regardless of their location. If pairing isn't working for logistical reasons, fall back to practices such as individual programming augmented via code reviews, pull-request collaboration (but beware <a href=\"/radar/techniques/long-lived-branches-with-gitflow\">long-lived branches with Gitflow</a>) or shorter pairing sessions for critical parts of the code. We've engaged in remote pairing for years, and we've found it to be effective if done with a dose of pragmatism.</p>",
                "radarId": 5,
                "id": "en_2020-05_202005001",
                "blip_selector": "pragmatic-remote-pairing"
            },
            {
                "blip_id": 201904066,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "190",
                "name": "Continuous delivery for machine learning (CD4ML)",
                "display_name": "Continuous delivery for machine learning (CD4ML)",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "172",
                "tag": "refresh_writeup",
                "description": "<p>Applying machine learning to make the business applications and services intelligent is more than just training models and serving them. It requires implementing end-to-end and continuously repeatable cycles of training, testing, deploying, monitoring and operating the models. <strong><a href=\"https://martinfowler.com/articles/cd4ml.html\">Continuous delivery for machine learning (CD4ML)</a></strong> is a technique that enables reliable end-to-end cycles of development, deploying and monitoring machine learning models. The underpinning technology stack to enable CD4ML includes tooling for accessing and discovering data, version control of artefacts (such as data, model and code), continuous delivery pipelines, automated environment provisioning for various deployments and experiments, model performance assessment and tracking, and model operational observability. Companies can choose their own tool set depending on their existing tech stack. CD4ML emphasizes automation and removing manual handoffs. CD4ML is our de facto approach for developing ML models.</p>",
                "radarId": 7,
                "id": "en_2020-05_201904066",
                "blip_selector": "continuous-delivery-for-machine-learning-cd4ml"
            },
            {
                "blip_id": 9142,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "60",
                "name": "Infrastructure as code",
                "display_name": "Infrastructure as code",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "155",
                "tag": "refresh_writeup",
                "description": "<p>Although <strong>infrastructure as code</strong> is a relatively old technique (we’ve featured it in the Radar in 2011), it has become vitally important in the modern cloud era where the act of setting up infrastructure has become the passing of configuration instructions to a cloud platform. When we say \"as code\" we mean that all the good practices we've learned in the software world should be applied to infrastructure. Using source control, adhering to the <a href=\"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself\">DRY principle</a>, modularization, maintainability, and using automated testing and deployment are all critical practices. Those of us with a deep software and infrastructure background need to empathize with and support colleagues who do not. Saying \"treat infrastructure like code\" isn't enough; we need to ensure the hard-won learnings from the software world are also applied consistently throughout the infrastructure realm.</p>",
                "radarId": 2,
                "id": "en_2020-05_9142",
                "blip_selector": "infrastructure-as-code"
            },
            {
                "blip_id": 201904047,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Hot Chocolate",
                "display_name": "Hot Chocolate",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "234",
                "tag": "move_in",
                "description": "<p>The <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> ecosystem and community keep growing. <strong><a href=\"https://hotchocolate.io/\">Hot Chocolate</a></strong> is a GraphQL server for .NET (Core and Classic). It lets you build and host schemas and then serve queries against them using the same base components of GraphQL — data loader, resolver, schema, operations and types. The team behind Hot Chocolate has recently added schema stitching, which allows for a single entry point to query across multiple schemas aggregated from different locations. Despite the potential to misuse this approach, our teams are happy with Hot Chocolate — it’s well documented, and we're able to deliver value quickly to our clients.</p>",
                "radarId": 35,
                "id": "en_2020-05_201904047",
                "blip_selector": "hot-chocolate"
            },
            {
                "blip_id": 202005028,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "232",
                "name": "GraphQL Inspector",
                "display_name": "GraphQL Inspector",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "294",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/kamilkisiela/graphql-inspector\">GraphQL Inspector</a></strong> lets you compare changes between two GraphQL schemas. We've <a href=\"/radar/languages-and-frameworks/graphql\">cautioned against the use of GraphQL</a> in the past, and we're happy to see some improvements in tooling around GraphQL since. Most of our teams continue to use <a href=\"/radar/techniques/graphql-for-server-side-resource-aggregation\">GraphQL for server-side resource aggregation</a>, and by integrating GraphQL Inspector in their CI pipelines, we've been able to catch potential breaking changes in the GraphQL schema.</p>",
                "radarId": 82,
                "id": "en_2020-05_202005028",
                "blip_selector": "graphql-inspector"
            },
            {
                "blip_id": 1186,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "CSS-in-JS",
                "display_name": "CSS-in-JS",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "278",
                "tag": "move_in",
                "description": "<p>Since we first mentioned <strong>CSS-in-JS</strong> as an emerging technique in 2017, it has become much more popular, a trend we also see in our work. With some solid production experience under our belts, we can now recommend CSS-in-JS as a technique to trial. A good starting point is the <a href=\"/radar/languages-and-frameworks/styled-components\">styled components</a> framework, which we mentioned in our previous Radar. Next to all the positives, though, there usually is a downside when using CSS-in-JS: the calculation of styles at runtime can cause a <a href=\"https://calendar.perfplanet.com/2019/the-unseen-performance-costs-of-css-in-js-in-react-apps/\">noticeable lag for end users</a>. With <a href=\"https://linaria.now.sh/\">Linaria</a> we're now seeing a new class of frameworks that were created with this issue in mind. Linaria employs a number of techniques to shift most of the performance overhead to build time. Alas, this does come with its own set of trade-offs, most notably a lack of dynamic style support in IE11.</p>",
                "radarId": 80,
                "id": "en_2020-05_1186",
                "blip_selector": "css-in-js"
            },
            {
                "blip_id": 202005083,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Decentralized identity",
                "display_name": "Decentralized identity",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "155",
                "tag": "new",
                "description": "<p>Since the birth of the internet, the technology landscape has experienced an accelerated evolution toward decentralization. While protocols such as HTTP and architectural patterns such as <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a> or <a href=\"/radar/techniques/data-mesh\">data mesh</a> enable decentralized implementations, identity management remains centralized. The emergence of distributed ledger technology (DLT), however, provides the opportunity to enable the concept of <strong>decentralized identity</strong>. In a decentralized identity system, entities — that is, discrete identifiable units such as people, organizations and things — are free to use any shared root of trust. In contrast, conventional identity management systems are based on centralized authorities and registries such as corporate directory services, certificate authorities or domain name registries.</p>\n\n<p>The development of <a href=\"https://www.w3.org/TR/did-core/\">decentralized identifiers</a> — globally unique, persistent and <em>self-sovereign identifiers</em> that are cryptographically verifiable — is a major enabling standard. Although scaled implementations of decentralized identifiers in the wild are still rare, we're excited by the premise of this movement and have started using the concept in our architecture. For the latest experiments and industry collaborations, check out <a href=\"https://identity.foundation/\">Decentralized Identity Foundation</a>.</p>",
                "radarId": 18,
                "id": "en_2020-05_202005083",
                "blip_selector": "decentralized-identity"
            },
            {
                "blip_id": 202005075,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Marquez",
                "display_name": "Marquez",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "229",
                "tag": "new",
                "description": "<p><strong><a href=\"https://marquezproject.github.io/marquez/\">Marquez</a></strong> is a relatively young open source project for collecting and serving metadata information about a data ecosystem. It represents a simple data model to capture metadata such as lineage, upstream and downstream data processing jobs and their status, and a flexible set of tags to capture the attributes of data sets. It provides a simple <a href=\"https://marquezproject.github.io/marquez/openapi.html#\">RESTful API</a> to manage the metadata which eases the integration of Marquez to other tool sets within the data ecosystem.</p>\n\n<p>We've used Marquez as a starting point and easily extended it to fit our needs such as enforcing security policies as well as changes to its domain language. If you're looking for a small and simple tool to bootstrap storage and visualization of your data-processing jobs and data sets, Marquez is a good place to start.</p>",
                "radarId": 44,
                "id": "en_2020-05_202005075",
                "blip_selector": "marquez"
            },
            {
                "blip_id": 202005034,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "JupyterLab",
                "display_name": "JupyterLab",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "220",
                "tag": "new",
                "description": "<p><strong><a href=\"https://jupyterlab.readthedocs.io/en/stable/getting_started/overview.html\">JupyterLab</a></strong> is the next-generation web-based user interface for Project <a href=\"/radar/tools/jupyter\">Jupyter</a>. If you've been using Jupyter Notebooks, JupyterLab is worth a try; it gives you an interactive environment for Jupyter notebooks, code and data. We see it as an evolution of Jupyter Notebook: it provides a better experience by extending its original capabilities of allowing code, visualization and documentation to exist in one place.</p>",
                "radarId": 43,
                "id": "en_2020-05_202005034",
                "blip_selector": "jupyterlab"
            },
            {
                "blip_id": 1055,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "60",
                "name": "Vue.js",
                "display_name": "Vue.js",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "325",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://vuejs.org/\">Vue.js</a></strong> has become one of the successfully applied, loved and trusted frontend JavaScript frameworks among our community. Although there are other, well-adopted alternatives, such as <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a>, the simplicity of Vue.js in API design, its clear segregation of directives and components (one file per component idiom) and its simpler state management have made it a compelling option among others.</p>",
                "radarId": 79,
                "id": "en_2020-05_1055",
                "blip_selector": "vue-js"
            },
            {
                "blip_id": 1199,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "140",
                "name": "Istio",
                "display_name": "Istio",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "240",
                "tag": "move_in",
                "description": "<p>If you're building and operating a scaled <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a> architecture and have embraced <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>, adopting <a href=\"/radar/techniques/service-mesh\">service mesh</a> to manage all cross-cutting aspects of running the architecture is a default position. Among various implementations of service mesh, <strong><a href=\"https://istio.io\">Istio</a></strong> has gained majority adoption. It has a rich feature set, including service discovery, traffic management, service-to-service and origin-to-service security, observability (including telemetry and distributed tracing), rolling releases and resiliency. Its user experience has been improved in its latest releases, because of its ease of installation and control panel architecture. Istio has lowered the bar for implementing large-scale microservices with operational quality for many of our clients, while admitting that operating your own Istio and Kubernetes instances requires adequate knowledge and internal resources which is not for the fainthearted.</p>",
                "radarId": 29,
                "id": "en_2020-05_1199",
                "blip_selector": "istio"
            },
            {
                "blip_id": 202005105,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "tfsec",
                "display_name": "tfsec",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "9",
                "tag": "new",
                "description": "<p>Security is everyone's concern and capturing risks early is always better than facing problems later on. In the <a href=\"/radar/techniques/infrastructure-as-code\">infrastructure as code</a> space, where <a href=\"/radar/tools/terraform\">Terraform</a> is an obvious choice to manage cloud environments, we now also have <strong><a href=\"https://github.com/liamg/tfsec\">tfsec</a></strong>, which is a static analysis tool that helps to scan Terraform templates and find any potential security issues. It comes with preset rules for different cloud providers including <a href=\"/radar/platforms/aws\">AWS</a> and <a href=\"/radar/platforms/azure\">Azure</a>. We always like tools that help to mitigate security risks, and tfsec not only excels in identifying security risks, it's also easy to install and use.</p>",
                "radarId": 76,
                "id": "en_2020-05_202005105",
                "blip_selector": "tfsec"
            },
            {
                "blip_id": 202005068,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Exposed",
                "display_name": "Exposed",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "286",
                "tag": "new",
                "description": "<p>Through their extended use of <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a>, our development teams have gained experience with more frameworks designed specifically for Kotlin rather than using Java frameworks with Kotlin. Although it's been around for a while, <strong><a href=\"https://github.com/JetBrains/Exposed\">Exposed</a></strong> has caught our attention as a lightweight object-relational mapper (ORM). Exposed has two flavors of database access: a typesafe internal DSL wrapping SQL and an implementation of the data access object (DAO) pattern. It supports features expected from a mature ORM such as handling of many-to-many references, eager loading, and support for joins across entities. We also like that the implementation works without proxies and doesn't rely on reflection, which is certainly beneficial to performance.</p>",
                "radarId": 81,
                "id": "en_2020-05_202005068",
                "blip_selector": "exposed"
            },
            {
                "blip_id": 201911023,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "NestJS",
                "display_name": "NestJS",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "319",
                "tag": "move_in",
                "description": "<p>The growth in popularity of Node.js and trends such as <a href=\"/radar/platforms/node-overload\">Node overload</a> have led to the application of Node.js for developing business applications. We often see problems, such as scalability and maintainability, with large JavaScript-based applications. <strong><a href=\"https://nestjs.com/\">NestJS</a></strong> is a <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript-first</a> framework that makes the development of Node.js applications safer and less error prone. NestJS is opinionated and comes with SOLID principles and an Angular-inspired architecture out of the box. When building Node.js microservices, NestJS is one of the frameworks that our teams commonly use to empower developers to create testable, scalable, loosely coupled and easily maintainable applications.</p>",
                "radarId": 85,
                "id": "en_2020-05_201911023",
                "blip_selector": "nestjs"
            },
            {
                "blip_id": 717,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Visual regression testing tools",
                "display_name": "Visual regression testing tools",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "12",
                "tag": "refresh_writeup",
                "description": "<p>Since we first mentioned <strong>visual regression testing tools</strong> in 2014, the use of the technique has spread and the tools landscape has evolved. <a href=\"/radar/tools/backstopjs\">BackstopJS</a> remains an excellent choice with new features being added regularly, including support for running inside Docker containers. <a href=\"/radar/tools/loki\">Loki</a> was featured in our previous Radar. <a href=\"https://applitools.com/\">Applitools</a>, <a href=\"https://crossbrowsertesting.com/\">CrossBrowserTesting</a> and <a href=\"https://percy.io/\">Percy</a> are SaaS solutions. Another notable mention is <a href=\"https://github.com/rsmbl\">Resemble.js</a>, an image diffing library. Although most teams use it indirectly as part of BackstopJS, some of our teams have been using it to analyze and compare images of web pages directly. In general, our experience shows that visual regression tools are less useful in the early stages when the interface goes through significant changes, but they certainly prove their worth as the product matures and the interface stabilizes.</p>",
                "radarId": 65,
                "id": "en_2020-05_717",
                "blip_selector": "visual-regression-testing-tools"
            },
            {
                "blip_id": 202005004,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Use \"remote native\" processes and approaches",
                "display_name": "Use \"remote native\" processes and approaches",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "107",
                "tag": "new",
                "description": "<p><a href=\"https://www.martinfowler.com/articles/remote-or-co-located.html\">Distributed teams come in many shapes and setups</a>; delivery teams in a 100% single-site co-located setup, however, have become the exception for us. Most of our teams are either multisite teams or have at least some team members working off-site. Therefore, <strong>using \"remote native\" processes and approaches</strong> by default can help significantly with the overall team flow and effectiveness. This starts with making sure that everybody has access to the necessary remote systems. Moreover, using tools such as <a href=\"/radar/tools/visual-studio-live-share\">Visual Studio Live Share</a>, <a href=\"/radar/tools/mural\">MURAL</a> or <a href=\"https://gsuite.google.com/products/jamboard/\">Jamboard</a> turn online workshops and remote pairing into routines instead of ineffective exceptions. But \"remote native\" goes beyond a lift-and-shift of co-location practices to the digital world: Embracing more asynchronous communication, even more discipline around decision documentation, and \"everybody always remote\" meetings are other approaches our teams practice by default to optimize for location fluidity.</p>",
                "radarId": 15,
                "id": "en_2020-05_202005004",
                "blip_selector": "use-remote-native-processes-and-approaches"
            },
            {
                "blip_id": 202005066,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Tamer",
                "display_name": "Tamer",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "330",
                "tag": "new",
                "description": "<p>If you need to ingest data from relational databases into a Kafka topic, consider <strong><a href=\"https://github.com/laserdisc-io/tamer\">Tamer</a></strong>, which labels itself \"a domesticated JDBC source connector for Kafka.\" Despite being a relatively new framework, we've found Tamer to be more efficient than the Kafka JDBC connector, especially when huge amounts of data are involved.</p>",
                "radarId": 95,
                "id": "en_2020-05_202005066",
                "blip_selector": "tamer"
            },
            {
                "blip_id": 202005084,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Declarative data pipeline definition",
                "display_name": "Declarative data pipeline definition",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "142",
                "tag": "new",
                "description": "<p>Many data pipelines are defined in a large, more or less imperative script written in Python or Scala. The script contains the logic of the individual steps as well as the code chaining the steps together. When faced with a similar situation in Selenium tests, developers discovered the Page Object pattern, and later many behavior-driven development (BDD) frameworks implemented a split between step definitions and their composition. Some teams are now experimenting with bringing the same thinking to data engineering. A separate <strong>declarative data pipeline definition</strong>, maybe written in YAML, contains only the declaration and sequence of steps. It states input and output data sets but refers to scripts if and when more complex logic is needed. With <a href=\"https://github.com/binaryaffairs/a-la-mode\">A La Mode</a>, we're seeing the first open source tool appear in this space.</p>",
                "radarId": 19,
                "id": "en_2020-05_202005084",
                "blip_selector": "declarative-data-pipeline-definition"
            },
            {
                "blip_id": 201911052,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Semi-supervised learning loops",
                "display_name": "Semi-supervised learning loops",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "123",
                "tag": "move_in",
                "description": "<p><strong>Semi-supervised learning loops</strong> are a class of iterative machine-learning workflows that take advantage of the relationships to be found in unlabeled data. These techniques may improve models by combining labeled and unlabeled data sets in various ways. In other cases they compare models trained on different subsets of the data. Unlike either unsupervised learning where a machine infers classes in unlabeled data or supervised techniques where the training set is entirely labeled, semi-supervised techniques take advantage of a small set of labeled data and a much larger set of unlabeled data. Semi-supervised learning is also closely related to active learning techniques where a human is directed to selectively label ambiguous data points. Since expert humans that can accurately label data are a scarce resource and labeling is often the most time-consuming activity in the machine-learning workflow, semi-supervised techniques lower the cost of training and make machine learning feasible for a new class of users. We're also seeing the application of weakly supervised techniques where machine-labeled data is used but is trusted less than the data labeled by humans.</p>",
                "radarId": 13,
                "id": "en_2020-05_201911052",
                "blip_selector": "semi-supervised-learning-loops"
            },
            {
                "blip_id": 1035,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "80",
                "name": "Micro frontends",
                "display_name": "Micro frontends",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "142",
                "tag": "stay",
                "description": "<p>We've seen significant benefits from introducing <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a>, which have allowed teams to scale the delivery of independently deployed and maintained services. Unfortunately, we've also seen many teams create a front-end monolith — a large, entangled browser application that sits on top of the back-end services — largely neutralizing the benefits of microservices. <strong>Micro frontends</strong> have continued to gain in popularity since they were first introduced. We've seen many teams adopt some form of this architecture as a way to manage the complexity of multiple developers and teams contributing to the same user experience. In June of last year, one of the originators of this technique published an <a href=\"https://martinfowler.com/articles/micro-frontends.html\">introductory article</a> that serves as a reference for micro frontends. It shows how this style can be implemented using various web programming mechanisms and builds out an example application using <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a>. We're confident this style will grow in popularity as larger organizations try to decompose UI development across multiple teams.</p>",
                "radarId": 3,
                "id": "en_2020-05_1035",
                "blip_selector": "micro-frontends"
            },
            {
                "blip_id": 202005109,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Goss",
                "display_name": "Goss",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "68",
                "tag": "new",
                "description": "<p>We mentioned <strong><a href=\"https://github.com/aelsabbahy/goss\">Goss</a></strong>, a tool for <a href=\"/radar/techniques/provisioning-testing\">provisioning testing</a>, in passing in previous Radars, for example, when describing the technique of <a href=\"/radar/techniques/tdd-ing-containers\">TDD'ing containers</a>. Although Goss isn't always an alternative to <a href=\"/radar/tools/serverspec\">Serverspec</a>, simply because it doesn't offer the same amount of features, you may want to consider it when its features meet your needs, especially since it comes as a small, self-contained binary (rather than requiring a Ruby environment). A common anti-pattern with using tools such as Goss is double-entry bookkeeping, where each change in the actual infrastructure as code files requires a corresponding change in the test assertions. Such tests are maintenance heavy and because of the close correspondence between code and test, failures mostly occur when an engineer updates one side and forgets the other. And these tests rarely catch genuine problems.</p>",
                "radarId": 55,
                "id": "en_2020-05_202005109",
                "blip_selector": "goss"
            },
            {
                "blip_id": 202005015,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Firebase",
                "display_name": "Firebase",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "225",
                "tag": "new",
                "description": "<p>Google's <strong><a href=\"https://firebase.google.com/\">Firebase</a></strong> has undergone significant evolution since we mentioned it as part of a <a href=\"/radar/techniques/serverless-architecture\">serverless architecture</a> in 2016. Firebase is a comprehensive platform for building mobile and web apps in a way that's supported by Google's underlying scalable infrastructure. We particularly like Firebase App Distribution, which makes it easy to publish test versions of an app via a CD pipeline, and Firebase Remote Config, which allows configuration changes to be dynamically pushed to apps without needing to republish them.</p>",
                "radarId": 34,
                "id": "en_2020-05_202005015",
                "blip_selector": "firebase"
            },
            {
                "blip_id": 201911003,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Crowdin",
                "display_name": "Crowdin",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "207",
                "tag": "move_in",
                "description": "<p>Most of the projects with multilingual support start with development teams building features in one language and managing the rest through offline translation via emails and spreadsheets. Although this simple setup works, things can quickly get out of hand. You may have to keep answering the same questions for different language translators, sucking the energy out of the collaboration between translators, proofreaders and the development team. <strong><a href=\"https://crowdin.com\">Crowdin</a></strong> is one of a handful of platforms that help in streamlining the localization workflow of your project. With Crowdin the development team can continue building features, while the platform streamlines the text that needs translation into an online workflow. We like that Crowdin nudges the teams to continuously and incrementally incorporate translations rather than managing them in large batches toward the end.</p>",
                "radarId": 32,
                "id": "en_2020-05_201911003",
                "blip_selector": "crowdin"
            },
            {
                "blip_id": 202005058,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "k9s",
                "display_name": "k9s",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "57",
                "tag": "new",
                "description": "<p>We continue to be ardent supporters of <a href=\"/radar/techniques/infrastructure-as-code\">infrastructure as code</a>, and we continue to believe that a robust monitoring solution is a prerequisite for operating distributed applications. Sometimes an interactive tool such as the AWS web console can be a useful addition. It allows us to explore all kinds of resources in an ad-hoc fashion without having to remember every single obscure command. Using an interactive tool to make manual modifications on the fly is still a questionable practice, though. For <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> we now have <strong><a href=\"https://k9scli.io/\">k9s</a></strong>, which provides an interactive interface for basically everything that kubectl can do. And to boot, it's not a web application but runs inside a terminal window, evoking fond memories of <a href=\"https://en.wikipedia.org/wiki/Midnight_Commander\">Midnight Commander</a> for some of us.</p>",
                "radarId": 57,
                "id": "en_2020-05_202005058",
                "blip_selector": "k9s"
            },
            {
                "blip_id": 201911020,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "React Hooks",
                "display_name": "React Hooks",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "292",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://reactjs.org/docs/hooks-intro.html\">React Hooks</a></strong> have introduced a new approach to managing stateful logic; given React components have always been closer to functions than classes, Hooks have embraced this and brought state to the functions, instead of taking function as methods to the state with classes. Based on our experience, Hooks improve reuse of functionality among components and code readability. Given Hooks’ testability improvements, using <a href=\"https://reactjs.org/docs/test-renderer.html\">React Test Renderer</a> and <a href=\"/radar/languages-and-frameworks/react-testing-library\">React Testing Library</a>, and their growing community support, we consider them our approach of choice.</p>",
                "radarId": 77,
                "id": "en_2020-05_201911020",
                "blip_selector": "react-hooks"
            },
            {
                "blip_id": 202005040,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Google BigQuery ML",
                "display_name": "Google BigQuery ML",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "212",
                "tag": "new",
                "description": "<p>Often training and predicting outcomes from machine learning models require code to take the data to the model. <strong><a href=\"https://cloud.google.com/bigquery-ml/docs\">Google BigQuery ML</a></strong> inverts this by bringing the model to the data. <a href=\"https://cloud.google.com/bigquery\">Google BigQuery</a> is a data warehouse designed to serve large-scale queries using SQL, for analytical use cases. Google BigQuery ML extends this function and its SQL interface to create, train and evaluate machine learning models using its data sets; and eventually run model predictions to create new BigQuery data sets. It supports a limited set of models out of the box, such as linear regression for forecasting or binary and multiclass regression for classification. It also supports, with limited functionality, importing previously trained <a href=\"/radar/languages-and-frameworks/tensorflow\">TensorFlow</a> models. Although BigQuery ML and its SQL-based approach lower the bar for using machine learning to make predictions and recommendations, particularly for quick explorations, this comes with a difficult trade-off: compromising on other aspects of model training such as <a href=\"/radar/techniques/ethical-bias-testing\">ethical bias testing</a>, <a href=\"/radar/techniques/explainability-as-a-first-class-model-selection-criterion\">explainability</a> and <a href=\"/radar/techniques/continuous-delivery-for-machine-learning-cd4ml\">continuous delivery for machine learning</a>.</p>",
                "radarId": 42,
                "id": "en_2020-05_202005040",
                "blip_selector": "google-bigquery-ml"
            },
            {
                "blip_id": 1047,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "385",
                "name": "Enzyme",
                "display_name": "Enzyme",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "315",
                "tag": "stay",
                "description": "<p>We don't always move deprecated tools to Hold in the Radar, but our teams feel strongly that <strong><a href=\"http://airbnb.io/enzyme/\">Enzyme</a></strong> has been replaced for unit testing <a href=\"/radar/languages-and-frameworks/react-js\">React</a> UI components by <a href=\"https://testing-library.com/docs/intro\">React Testing Library</a>. Teams using Enzyme have found that its focus on testing component internals leads to brittle, unmaintainable tests.</p>",
                "radarId": 98,
                "id": "en_2020-05_1047",
                "blip_selector": "enzyme"
            },
            {
                "blip_id": 1172,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "PyTorch",
                "display_name": "PyTorch",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "317",
                "tag": "move_in",
                "description": "<p>Our teams have continued to use and appreciate the <strong><a href=\"http://pytorch.org/\">PyTorch</a></strong> machine learning framework, and several teams prefer PyTorch over <a href=\"/radar/languages-and-frameworks/tensorflow\">TensorFlow</a>. PyTorch exposes the inner workings of ML that TensorFlow hides, making it easier to debug, and contains constructs that programmers are familiar with such as loops and actions. Recent releases have improved performance of PyTorch, and we've been using it successfully in production projects.</p>",
                "radarId": 86,
                "id": "en_2020-05_1172",
                "blip_selector": "pytorch"
            },
            {
                "blip_id": 202005065,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "MediaPipe",
                "display_name": "MediaPipe",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "310",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/google/mediapipe\">MediaPipe</a></strong> is a framework for building MultiModal (such as video, audio, time series data, etc.), cross-platform (for example, Android, iOS, Web, and edge devices) and applied ML pipelines. It provides multiple capabilities, including face detection, hand tracking, gesture detection and object detection. Although MediaPipe is primarily deployed to mobile devices, it's started to show up in the browser thanks to WebAssembly and XNNPack ML Inference Library. We're exploring MediaPipe for some AR use cases and like what we see so far.</p>",
                "radarId": 93,
                "id": "en_2020-05_202005065",
                "blip_selector": "mediapipe"
            },
            {
                "blip_id": 202005025,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Wire",
                "display_name": "Wire",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "340",
                "tag": "new",
                "description": "<p>The Golang community has had its fair share of dependency injection skeptics, partly because they confused the <a href=\"https://martinfowler.com/articles/injection.html\">pattern</a> with specific frameworks, and developers with a system-programming background naturally dislike runtime overhead caused by reflection. Then along came <strong><a href=\"https://github.com/google/wire\">Wire</a></strong>, a compile-time dependency injection tool that can generate code and wire components together. Wire has no additional runtime overhead, and the static dependency graph is easier to reason about. Whether you handwrite your code or use frameworks, we recommend using dependency injection to encourage modular and testable designs.</p>",
                "radarId": 96,
                "id": "en_2020-05_202005025",
                "blip_selector": "wire"
            },
            {
                "blip_id": 202005032,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Apache Pulsar",
                "display_name": "Apache Pulsar",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "196",
                "tag": "new",
                "description": "<p><strong><a href=\"https://pulsar.apache.org/en/\">Apache Pulsar</a></strong> is an open source pub-sub messaging/streaming platform, competing in a similar space with <a href=\"/radar/tools/apache-kafka\">Apache Kafka</a>. It provides expected functionality — such as low-latency async and sync message delivery and scalable persistent storage of messages — as well as various client libraries. What has excited us to evaluate Pulsar is its ease of scalability, particularly in large organizations with multiple segments of users. Pulsar natively supports multitenancy, georeplication, role-based access control and segregation of billing. We're also looking to Pulsar to solve the problem of a never-ending log of messages for our large-scale data systems where events are expected to persist indefinitely and subscribers are able to start consuming messages retrospectively. This is supported through a <a href=\"https://pulsar.apache.org/docs/en/concepts-tiered-storage/\">tiered storage</a> model. Although Pulsar is a promising platform for large organizations, there is room for improvement. Its current installation requires administering <a href=\"https://pulsar.apache.org/docs/en/administration-zk-bk/\">ZooKeeper and BookKeeper</a> among other pieces of technology. We hope that with its growing adoption, users can soon count on wider community support.</p>",
                "radarId": 40,
                "id": "en_2020-05_202005032",
                "blip_selector": "apache-pulsar"
            },
            {
                "blip_id": 202005013,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Micro frontends for mobile",
                "display_name": "Micro frontends for mobile",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "148",
                "tag": "new",
                "description": "<p>Since introducing it in the Radar in 2016, we've seen widespread adoption of <a href=\"/radar/techniques/micro-frontends\">micro frontends</a> for web UIs. Recently, however, we've seen projects extend this architectural style to include <strong>micro frontends for mobile</strong> applications as well. When the application becomes sufficiently large and complex, it becomes necessary to distribute the development over multiple teams. This presents the challenge of maintaining team autonomy while integrating their work into a single app. Although we've seen teams writing their own frameworks to enable this development style, existing modularization frameworks such as <a href=\"/radar/languages-and-frameworks/atlas-and-beehive\">Atlas and Beehive</a> can also simplify the problem of integrating multiteam app development.</p>",
                "radarId": 10,
                "id": "en_2020-05_202005013",
                "blip_selector": "micro-frontends-for-mobile"
            },
            {
                "blip_id": 202005076,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "340",
                "name": "Matomo",
                "display_name": "Matomo",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "237",
                "tag": "new",
                "description": "<p><strong><a href=\"https://matomo.org\">Matomo</a></strong> (formerly Piwik) is an open source web analytics platform that provides you with full control over your data. You can self-host Matomo and secure your web analytics data from third parties. Matomo also makes it easy to integrate web analytics data with your in-house data platform and lets you build usage models that are tailored to your needs.</p>",
                "radarId": 45,
                "id": "en_2020-05_202005076",
                "blip_selector": "matomo"
            },
            {
                "blip_id": 202005033,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Cosmos",
                "display_name": "Cosmos",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "204",
                "tag": "new",
                "description": "<p>The performance of blockchain technology has been greatly improved since we <a href=\"/radar/techniques/blockchain-beyond-bitcoin\">initially assessed</a> this area in the Radar. However, there's still no single blockchain that could achieve \"internet-level\" throughput. As various blockchain platforms develop, we're seeing new data and value silos. That's why cross-chain tech has always been a key topic in the blockchain community: the future of blockchain may be a network of independent parallel blockchains. This is also the vision of <strong><a href=\"https://cosmos.network/\">Cosmos</a></strong>. Cosmos releases <a href=\"/radar/platforms/tendermint\">Tendermint</a> and CosmosSDK to let developers customize independent blockchains. These parallel blockchains could exchange value through the Inter-Blockchain Communication (IBC) protocol and Peg-Zones. Our teams have had great experiences with CosmosSDK, and the IBC protocol is maturing. This architecture could solve blockchain interoperability and scalability issues.</p>",
                "radarId": 41,
                "id": "en_2020-05_202005033",
                "blip_selector": "cosmos"
            },
            {
                "blip_id": 1095,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "OpenTelemetry",
                "display_name": "OpenTelemetry",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "252",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://opentelemetry.io/\">OpenTelemetry</a></strong> is an open source observability project that merges <a href=\"https://opentracing.io/\">OpenTracing</a> and <a href=\"https://github.com/census-instrumentation\">OpenCensus</a>. The OpenTelemetry project includes <a href=\"https://github.com/open-telemetry/opentelemetry-specification\">specification</a>, libraries, agents, and other components needed to capture telemetry from services to better observe, manage and debug them. It covers the three pillars of observability — distributed tracing, metrics and logging (currently in beta) — and its specification connects these three pieces through <a href=\"https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/correlationcontext/api.md\">correlations</a>; thus you can use <em>metrics</em> to pinpoint a problem, locate the corresponding <em>traces</em> to discover where the problem occured, and ultimately study the corresponding <em>logs</em> to find the exact root cause. OpenTelemetry components can be connected to back-end observability systems such as <a href=\"/radar/tools/prometheus\">Prometheus</a> and <a href=\"/radar/tools/jaeger\">Jaeger</a> among <a href=\"https://opentelemetry.io/registry/?s=exporter\">others</a>. Formation of OpenTracing is a positive step toward the convergence of standardization and the simplification of tooling.</p>",
                "radarId": 37,
                "id": "en_2020-05_1095",
                "blip_selector": "opentelemetry"
            },
            {
                "blip_id": 866,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "60",
                "name": ".NET Core",
                "display_name": ".NET Core",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "210",
                "tag": "refresh_writeup",
                "description": "<p>We previously had <strong>.NET Core</strong> in Adopt, indicating that it had become our default for .NET projects. But we felt it's worth again calling attention to .NET Core. With the release of .NET Core 3.<em>x</em> last year, the bulk of the features from .NET Framework have now been ported into .NET Core. With the announcement that <a href=\"https://devblogs.microsoft.com/dotnet/introducing-net-5\">.NET Framework is on its last release</a>, Microsoft have reinforced the view that <a href=\"https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/\">.NET Core is the future of .NET</a>. Microsoft has done a lot of work to make .NET Core <a href=\"https://devblogs.microsoft.com/dotnet/using-net-and-docker-together-dockercon-2019-update/\">container friendly</a>. Most of our .NET Core–based projects target Linux and are often deployed as containers. The upcoming <a href=\"https://devblogs.microsoft.com/dotnet/introducing-net-5/\">.NET 5</a> release looks promising, and we're looking forward to it.</p>",
                "radarId": 28,
                "id": "en_2020-05_866",
                "blip_selector": "net-core"
            },
            {
                "blip_id": 202005103,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Sizzy",
                "display_name": "Sizzy",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "25",
                "tag": "new",
                "description": "<p>Building web applications that look just as intended on a large number of devices and screen sizes can be cumbersome. <strong><a href=\"https://sizzy.co/\">Sizzy</a></strong> is a SaaS solution that shows many viewports in a single browser window. The application is rendered in all viewports simultaneously and interactions with the application are also synched across the viewports. In our experience interacting with an application in this way can make it easier to spot potential issues earlier, before a <a href=\"/radar/tools/visual-regression-testing-tools\">visual regression testing tool</a> flags the issue in the build pipeline. We should mention, though, that some of our developers who tried Sizzy for a while did, on balance, prefer to work with the tooling provided by Chrome.</p>",
                "radarId": 74,
                "id": "en_2020-05_202005103",
                "blip_selector": "sizzy"
            },
            {
                "blip_id": 1037,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "60",
                "name": "Pipelines as code",
                "display_name": "Pipelines as code",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "129",
                "tag": "refresh_writeup",
                "description": "<p>The <strong>pipelines as code</strong> technique emphasizes that the configuration of delivery pipelines that build, test and deploy our applications or infrastructure should be treated as code; they should be placed under source control and modularized in reusable components with automated testing and deployment. As organizations move to decentralized autonomous teams building <a href=\"https://martinfowler.com/articles/microservices.html\">microservices</a> or <a href=\"/radar/techniques/micro-frontends\">micro frontends</a>, the need for engineering practices in managing pipelines as code increases to keep building and deploying software consistent within the organization. This need has given rise to delivery pipeline templates and tooling that enable a standardized way to build and deploy services and applications. Such tools use the <em>declarative delivery pipelines</em> of applications, adopting a pipeline blueprint to execute the underlying tasks for various stages of a delivery lifecycle such as build, test and deployment; and they abstract away implementation details. The ability to build, test and deploy pipelines as code should be one of the evaluation criteria for choosing a CI/CD tool.</p>",
                "radarId": 4,
                "id": "en_2020-05_1037",
                "blip_selector": "pipelines-as-code"
            },
            {
                "blip_id": 202005090,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Log aggregation for business analytics",
                "display_name": "Log aggregation for business analytics",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "135",
                "tag": "new",
                "description": "<p>Several years ago, a new generation of log aggregation platforms emerged that were capable of storing and searching over vast amounts of log data to uncover trends and insights in operational data. <a href=\"/radar/tools/splunk\">Splunk</a> was the most prominent but by no means the only example of these tools. Because these platforms provide broad operational and security visibility across the entire estate of applications, administrators and developers have grown increasingly dependent on them. This enthusiasm spread as stakeholders discovered that they could use <strong>log aggregation for business analytics</strong>. However, business needs can quickly outstrip the flexibility and usability of these tools. Logs intended for technical observability are often inadequate to infer deep customer understanding. We prefer either to use tools and metrics designed for customer analytics or to take a more event-driven approach to observability where both business and operational events are collected and stored in a way they can be replayed and processed by more purpose-built tools.</p>",
                "radarId": 25,
                "id": "en_2020-05_202005090",
                "blip_selector": "log-aggregation-for-business-analytics"
            },
            {
                "blip_id": 201904035,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "React Testing Library",
                "display_name": "React Testing Library",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "315",
                "tag": "move_in",
                "description": "<p>The JavaScript world moves pretty fast, and as we gain more experience using a framework our recommendations change. The <strong><a href=\"https://testing-library.com/\">React Testing Library</a></strong> is a good example of a framework that with deeper usage has eclipsed the alternatives to become the sensible default when testing React-based frontends. Our teams like the fact that tests written with this framework are less brittle than with alternative frameworks such as <a href=\"/radar/languages-and-frameworks/enzyme\">Enzyme</a>, because you're encouraged to test component relationships individually as opposed to testing all implementation details. This mindset is brought by <a href=\"https://testing-library.com/\">Testing Library</a> which React Testing Library is part of and which provides a whole family of libraries for <a href=\"/radar/languages-and-frameworks/angular\">Angular</a> and <a href=\"/radar/languages-and-frameworks/vue-js\">Vue.js</a>, for example.</p>",
                "radarId": 78,
                "id": "en_2020-05_201904035",
                "blip_selector": "react-testing-library"
            },
            {
                "blip_id": 202005024,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Deequ",
                "display_name": "Deequ",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "290",
                "tag": "new",
                "description": "<p>There are still some tool gaps when applying good software engineering practices in data engineering. Attempting to automate data quality checks between different steps in a data pipeline, one of our teams was surprised when they found only a few tools in this space. They settled on <strong><a href=\"https://github.com/awslabs/deequ\">Deequ</a></strong>, a library for writing tests that resemble unit tests for data sets. Deequ is built on top of <a href=\"/radar/platforms/apache-spark\">Apache Spark</a>, and even though it's published by AWS Labs it can be used in environments other than <a href=\"/radar/platforms/aws\">AWS</a>.</p>",
                "radarId": 91,
                "id": "en_2020-05_202005024",
                "blip_selector": "deequ"
            },
            {
                "blip_id": 202005044,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Phrase",
                "display_name": "Phrase",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "23",
                "tag": "new",
                "description": "<p>As mentioned in our description of <a href=\"/radar/platforms/crowdin\">Crowdin</a>, you now have a choice of platforms to manage the translation of a product into multiple languages instead of emailing large spreadsheets. Our teams report positive experiences with <strong><a href=\"https://phrase.com/\">Phrase</a></strong>, emphasizing that it's easy to use for all key user groups. Translators use a convenient browser-based UI. Managers can add new fields and synchronize translations with other teams in the same UI. Developers can access Phrase locally and from a build pipeline. A feature that deserves a specific mention is the ability to apply versioning to translations through tags, which makes it possible to compare the look of different translations inside the actual product.</p>",
                "radarId": 63,
                "id": "en_2020-05_202005044",
                "blip_selector": "phrase"
            },
            {
                "blip_id": 202005108,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Dojo",
                "display_name": "Dojo",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "84",
                "tag": "new",
                "description": "<p>A few years ago, Docker — and containers in general — radically changed how we think about packaging, deploying and running our applications. But despite this improvement in production, developers still spend a lot of time setting up development environments and regularly run into \"but it works on my machine\" style problems. <strong><a href=\"https://github.com/kudulab/dojo\">Dojo</a></strong> aims to fix this by creating standard development environments, versioned and released as Docker images. Several of our teams use Dojo to streamline developing, testing and building code from local development through production pipelines.</p>",
                "radarId": 52,
                "id": "en_2020-05_202005108",
                "blip_selector": "dojo"
            },
            {
                "blip_id": 202005037,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Stratos",
                "display_name": "Stratos",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "253",
                "tag": "new",
                "description": "<p>Ultraleap (previously Leap Motion) has been a leader in the XR space for some time, creating remarkable hand-tracking hardware that allows a user's hands to make the leap into virtual reality. <strong><a href=\"https://www.ultraleap.com/haptics/\">Stratos</a></strong> is Ultraleap's underlying haptics, sensors and software platform, and it can use targeted ultrasound to create haptic feedback in mid-air. A use case is responding to a driver's hand gesture to change the air conditioning in the car and providing haptic feedback as part of the interface. We're excited to see this technology and what creative technologists might do to incorporate it into their use cases.</p>",
                "radarId": 47,
                "id": "en_2020-05_202005037",
                "blip_selector": "stratos"
            },
            {
                "blip_id": 1149,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Cypress",
                "display_name": "Cypress",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2020-05",
                "theta": "60",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"http://www.cypress.io/\">Cypress</a></strong> is still a favorite among our teams where developers manage end-to-end tests themselves, as part of a healthy <a href=\"https://martinfowler.com/articles/practical-test-pyramid.html#End-to-endTests\">test pyramid</a>, of course. We decided to call it out again in this Radar because recent versions of Cypress have added <a href=\"https://cypress.io/blog/2020/02/06/introducing-firefox-and-edge-support-in-cypress-4-0/\">support for Firefox</a>, and we strongly suggest testing on multiple browsers. The dominance of Chrome and Chromium-based browsers has led to a worrying trend of teams seemingly only testing with Chrome which can lead to <a href=\"https://twitter.com/mike_conley/status/1245797292453609478\">nasty surprises</a>.</p>",
                "radarId": 50,
                "id": "en_2020-05_1149",
                "blip_selector": "cypress"
            },
            {
                "blip_id": 202005050,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Lens",
                "display_name": "Lens",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "41",
                "tag": "new",
                "description": "<p>One of the strengths of <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> is its flexibility and range of configuration possibilities along with the API-driven, programmable configuration mechanisms and command-line visibility and control using manifest files. However, that strength can also be a weakness: when deployments are complex or when managing multiple clusters, it can be difficult to get a clear picture of the overall status through command-line arguments and manifests alone. <strong><a href=\"https://k8slens.dev/\">Lens</a></strong> attempts to solve this problem with an integrated environment for viewing the current state of the cluster and its workloads, visualizing cluster metrics and changing configurations through an embedded text editor. Rather than a simple point-and-click interface, Lens brings together the tools an administrator would run from the command line into a single, navigable interface. This tool is one of several approaches that are trying to tame the complexity of Kubernetes management. We've yet to see a clear winner in this space, but Lens strikes an interesting balance between a graphical UI and command-line–only tools.</p>",
                "radarId": 72,
                "id": "en_2020-05_202005050",
                "blip_selector": "lens"
            },
            {
                "blip_id": 202005002,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "115",
                "name": "Simplest possible feature toggle",
                "display_name": "Simplest possible feature toggle",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "103",
                "tag": "new",
                "description": "<p>Unfortunately, <a href=\"https://martinfowler.com/articles/feature-toggles.html\">feature toggles</a> are less common than we'd like, and quite often we see people mixing up its types and use cases. It's quite common to come across teams that use heavyweight platforms such as <a href=\"https://launchdarkly.com/\">LaunchDarkly</a> to implement feature toggles, including release toggles, to benefit from <a href=\"https://martinfowler.com/articles/continuousIntegration.html\">Continuous Integration</a>, when all you need are if/else conditionals. Therefore, unless you need A/B testing or <a href=\"https://martinfowler.com/bliki/CanaryRelease.html\">canary release</a> or hand over feature release responsibility to business folks, we encourage you to use the <strong>simplest possible feature toggle</strong> instead of unnecessarily complex feature toggle frameworks.</p>",
                "radarId": 6,
                "id": "en_2020-05_202005002",
                "blip_selector": "simplest-possible-feature-toggle"
            },
            {
                "blip_id": 202005067,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "XState",
                "display_name": "XState",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-05",
                "theta": "350",
                "tag": "new",
                "description": "<p>We've featured several state management libraries in the Radar before, but <strong><a href=\"https://xstate.js.org/docs/\">XState</a></strong> takes a slightly different approach. It's a simple JavaScript and <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> framework for creating finite state machines and visualizing them as state charts. It integrates with the more popular reactive JavaScript frameworks (<a href=\"/radar/languages-and-frameworks/vue-js\">Vue.js</a>, <a href=\"/radar/languages-and-frameworks/ember-js\">Ember.js</a>, <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> and <a href=\"https://rxjs.dev/\">RxJS</a>) and is based on the W3C standard for finite state machines. Another notable feature is the serialization of machine definitions. One thing that we've found helpful when creating finite state machines in other contexts (particularly when writing game logic) is the ability to visualize states and their possible transitions; we like the fact that it's really easy to do this with XState's <a href=\"https://xstate.js.org/viz/\">visualizer</a>.</p>",
                "radarId": 97,
                "id": "en_2020-05_202005067",
                "blip_selector": "xstate"
            },
            {
                "blip_id": 201911005,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Snowflake",
                "display_name": "Snowflake",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-05",
                "theta": "261",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://www.snowflake.com\">Snowflake</a></strong> has proven to be a robust SaaS big data storage, warehouse or lake solution for many of our clients. It has a superior architecture to scale storage, compute, and services to load, unload and use data. It's also very flexible: it supports storage of structured, semi-structured and unstructured data; provides a growing list of <a href=\"https://docs.snowflake.com/en/user-guide/conns-drivers.html\">connectors</a> for different access patterns such as Spark for data science and SQL for analytics; and runs on multiple cloud providers. Our advice to many of our clients is to use managed services for their utility technology such as big data storage; however, if the risk and regulations prohibit the use of managed services, then Snowflake is a good candidate for companies with large volumes of data and heavy processing workloads. Although we've been successful using Snowflake in our medium-sized engagements, we've yet to experience Snowflake in large ecosystems where data need to be owned across segments of the organization.</p>",
                "radarId": 38,
                "id": "en_2020-05_201911005",
                "blip_selector": "snowflake"
            }
        ]
    },
    {
        "date": "2020-10",
        "blips": [
            {
                "blip_id": 202005105,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "tfsec",
                "display_name": "tfsec",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "13",
                "tag": "move_in",
                "description": "<p>Security is everyone's concern, and capturing risks early is always better than facing problems later on. In the <a href=\"/radar/techniques/infrastructure-as-code\">infrastructure as code</a> space — where <a href=\"/radar/tools/terraform\">Terraform</a> has been an obvious choice to manage cloud environments — we now also have <strong><a href=\"https://github.com/liamg/tfsec\">tfsec</a></strong>, a static analysis tool that scans Terraform templates to find potential security issues. Our teams have been using tfsec quite successfully. The tool is easy to set up and use, which makes it a great choice for any development team determined to mitigate security risks to prevent breaches before they happen. Its preset rules for different cloud providers, including <a href=\"/radar/platforms/aws\">AWS</a> and <a href=\"/radar/platforms/azure\">Azure</a>, compliment the benefits that tfsec brings to the teams that use Terraform.</p>",
                "radarId": 58,
                "id": "en_2020-10_202005105",
                "blip_selector": "tfsec"
            },
            {
                "blip_id": 202010027,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Diagrams as code",
                "display_name": "Diagrams as code",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "144",
                "tag": "new",
                "description": "<p>We're seeing more and more tools that enable you to create software architecture and other <strong>diagrams as code</strong>. There are benefits to using these tools over the heavier alternatives, including easy version control and the ability to generate the DSLs from many sources. Tools in this space that we like include <a href=\"https://diagrams.mingrammer.com/\">Diagrams</a>, <a href=\"https://structurizr.com/dsl\">Structurizr DSL</a>, <a href=\"https://asciidoctor.org/docs/asciidoctor-diagram/\">AsciiDoctor Diagram</a> and stables such as <a href=\"https://www.websequencediagrams.com/\">WebSequenceDiagrams</a>, <a href=\"/radar/tools/plantuml\">PlantUML</a> and the venerable <a href=\"https://graphviz.org/\">Graphviz</a>. It's also fairly simple to generate your own SVG these days, so don't rule out quickly writing your own tool either. One of our authors wrote a small <a href=\"/radar/languages-and-frameworks/ruby\">Ruby</a> script to quickly create SVGs, for example.</p>",
                "radarId": 8,
                "id": "en_2020-10_202010027",
                "blip_selector": "diagrams-as-code"
            },
            {
                "blip_id": 201911044,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "Dependency drift fitness function",
                "display_name": "Dependency drift fitness function",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "162",
                "tag": "move_in",
                "description": "<p>Fitness functions introduced by <a href=\"/radar/techniques/evolutionary-architecture\">evolutionary architecture</a>, borrowed from <a href=\"https://en.wikipedia.org/wiki/Evolutionary_computation#:%7E:text=In%20computer%20science%2C%20evolutionary%20computation,soft%20computing%20studying%20these%20algorithms.\">evolutionary computing</a>, are executable functions that inform us if our applications and architecture are objectively moving away from their desired characteristics. They're essentially tests that can be incorporated into our release pipelines. One of the major characteristics of an application is the freshness of its dependencies to other libraries, APIs or environmental components that a <strong>dependency drift fitness function</strong> tracks to flag the out-of-date dependencies that require updating. With the growing and maturing number of tools that detect dependency drifts, such as <a href=\"/radar/tools/dependabot\">Dependabot</a> or <a href=\"/radar/tools/snyk\">Snyk</a>, we can easily incorporate dependency drift fitness functions into our software release process to take timely action in keeping our application dependencies up to date.</p>",
                "radarId": 1,
                "id": "en_2020-10_201911044",
                "blip_selector": "dependency-drift-fitness-function"
            },
            {
                "blip_id": 202010055,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "OSS Index",
                "display_name": "OSS Index",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "27",
                "tag": "new",
                "description": "<p>It's important for a development team to identify whether the dependencies of their application have known vulnerabilities. <strong><a href=\"https://ossindex.sonatype.org/\">OSS Index</a></strong> could be used to achieve this goal. OSS Index is a free catalog of open-source components and scanning tools designed to help developers identify vulnerabilities, understand risk and keep their software safe. Our teams are already integrating this index into pipelines via different languages, including <a href=\"https://github.com/sonatype-nexus-community/auditjs\">AuditJS</a> and <a href=\"https://github.com/sonatype-nexus-community/scan-gradle-plugin\">Gradle plugin</a>. The speed is fast, vulnerabilities are identified accurately and few false positives occur.</p>",
                "radarId": 71,
                "id": "en_2020-10_202010055",
                "blip_selector": "oss-index"
            },
            {
                "blip_id": 777,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "70",
                "name": "Tailored service templates",
                "display_name": "Tailored service templates",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "108",
                "tag": "move_in",
                "description": "<p>Since we last mentioned <strong>tailored service templates</strong>, we've seen a broader adoption of the pattern to help pave the road for organizations moving to microservices. With constant advances in observability tooling, container orchestration and service mesh sidecars, a template provides sensible defaults to bootstrap a new service, removing a great deal of setup needed to make the service work well with the surrounding infrastructure. We've had success <a href=\"/radar/techniques/applying-product-management-to-internal-platforms\">applying product management</a> principles to tailored service templates, treating internal developers as customers and making it easier for them to push code to production and operate it with appropriate observability. This has the added benefit of acting as a lightweight governance mechanism to centralize default technical decisions.</p>",
                "radarId": 4,
                "id": "en_2020-10_777",
                "blip_selector": "tailored-service-templates"
            },
            {
                "blip_id": 202010039,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "K3s",
                "display_name": "K3s",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "229",
                "tag": "new",
                "description": "<p><strong><a href=\"https://k3s.io/\">K3s</a></strong> is a lightweight <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> distribution built for IoT and edge computing. It's packaged as a single binary and has minimal to no OS dependencies, making it really easy to operate and use. It uses <a href=\"https://docs.python.org/3/library/sqlite3.html\">sqlite3</a> as the default storage backend instead of <a href=\"https://etcd.io/\">etcd</a>. It has a reduced memory footprint because it runs all relevant components in a single process. It also achieves a smaller binary by stripping out third-party storage drivers and cloud providers that are not relevant for the K3s use cases. For environments with constrained resources, K3s is a pretty good choice and worth considering.</p>",
                "radarId": 36,
                "id": "en_2020-10_202010039",
                "blip_selector": "k3s"
            },
            {
                "blip_id": 202010073,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Dremio",
                "display_name": "Dremio",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "212",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.dremio.com/\">Dremio</a></strong> is a cloud data lake engine that powers interactive queries against cloud data lake storage. With Dremio, you don't have to manage data pipelines in order to extract and transform data into a separate data warehouse for predictive performance. Dremio creates virtual data sets from data ingested into a data lake and provides a uniform view to consumers. <a href=\"/radar/platforms/presto\">Presto</a> popularized the technique of separating storage from the compute layer, and Dremio takes it further by improving performance and optimizing cost of operation.</p>",
                "radarId": 34,
                "id": "en_2020-10_202010073",
                "blip_selector": "dremio"
            },
            {
                "blip_id": 201911051,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Data mesh",
                "display_name": "Data mesh",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "162",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://martinfowler.com/articles/data-monolith-to-mesh.html\">Data mesh</a></strong> marks a welcome architectural and organizational paradigm shift in how we manage big analytical data. The paradigm is founded on four principles: (1) domain-oriented decentralization of data ownership and architecture; (2) domain-oriented data served as a product; (3) self-serve data infrastructure as a platform to enable autonomous, domain-oriented data teams; and (4) federated governance to enable ecosystems and interoperability. Although the principles are intuitive and attempt to address many of the known challenges of previous centralized analytical data management, they transcend the available analytical data technologies. After building data mesh for multiple clients on top of the existing tooling, we learned two things: (a) there is a large gap in open-source or commercial tooling to accelerate implementation of data mesh (for example, implementation of a universal access model to time-based polyglot data which we currently custom build for our clients) and (b) despite the gap, it's feasible to use the existing technologies as the basic building blocks.</p>\n\n<p>Naturally, technology fit is a major component of implementing your organization's data strategy based on data mesh. Success, however, demands an organizational restructure to separate the data platform team, create the role of data product owner for each domain and introduce the incentive structures necessary for domains to own and share their analytical data as products.</p>",
                "radarId": 6,
                "id": "en_2020-10_201911051",
                "blip_selector": "data-mesh"
            },
            {
                "blip_id": 201904066,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "220",
                "name": "Continuous delivery for machine learning (CD4ML)",
                "display_name": "Continuous delivery for machine learning (CD4ML)",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "171",
                "tag": "refresh_writeup",
                "description": "<p>About a decade ago we introduced <a href=\"/radar/techniques/continuous-delivery-cd\">continuous delivery (CD)</a>, our default way to deliver software solutions. Today's solutions increasingly include machine-learning models and we find them no exception in adopting continuous delivery practices. We call this <strong><a href=\"https://martinfowler.com/articles/cd4ml.html\">continuous delivery for machine learning (CD4ML)</a></strong>. Although the principles of CD remain the same, the practices and tools to implement the end-to-end process of training, testing, deploying and monitoring models require some modifications. For example: version control must not only include code but also the data, the models and its parameters; the testing pyramid extends to include model bias, fairness and data and feature validation; the deployment process must consider how to promote and evaluate the performance of new models against current champion models. While the industry is celebrating the new buzzword of MLOps, we feel CD4ML is our holistic approach to implement an end-to-end process to reliably release and continuously improve machine-learning models, from idea to production.</p>",
                "radarId": 5,
                "id": "en_2020-10_201904066",
                "blip_selector": "continuous-delivery-for-machine-learning-cd4ml"
            },
            {
                "blip_id": 202010090,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Switchback experimentation",
                "display_name": "Switchback experimentation",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "110",
                "tag": "new",
                "description": "<p>Controlled experiments using A/B testing is a great way to inform decisions around product development. But it doesn't work well when we can't establish independence between the two groups involved in the A/B test — i.e., adding someone to the \"A\" group impacts the \"B\" group and vice versa. One technique to address this problem space is <strong><a href=\"https://medium.com/@DoorDash/switchback-tests-and-randomized-experimentation-under-network-effects-at-doordash-f1d938ab7c2a\">Switchback experimentation</a></strong>. The core concept here is we switch back and forth between the \"A\" and \"B\" modes of the experiment in a certain region at alternating time periods instead of both running during the same time period. We then compare the customer experience and other key metrics between the two time buckets. We've tried this to good effect in some of our projects — it's a good tool to have in our experiments toolbelt.</p>",
                "radarId": 20,
                "id": "en_2020-10_202010090",
                "blip_selector": "switchback-experimentation"
            },
            {
                "blip_id": 928,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Concourse",
                "display_name": "Concourse",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "78",
                "tag": "move_in",
                "description": "<p>Implementing sustainable continuous delivery pipelines that can build and deploy production software across multiple environments requires a tool that treats build pipelines and artifacts as first-class citizens. When we first started assessing <strong><a href=\"https://concourse-ci.org/\">Concourse</a></strong>, we liked its simple and flexible model, the principle of container-based builds and the fact that it forces you to define <a href=\"/radar/techniques/pipelines-as-code\">pipelines as code</a>. Since then, the usability has improved, and the simple model has stood the test of time. Many of our teams and clients have successfully been using Concourse for large pipeline setups over longer periods of time. We also often leverage Concourse's flexibility to run workers anywhere, for example, when hardware integration tests require a local setup.</p>",
                "radarId": 48,
                "id": "en_2020-10_928",
                "blip_selector": "concourse"
            },
            {
                "blip_id": 202010008,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Browser-tailored polyfills",
                "display_name": "Browser-tailored polyfills",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "160",
                "tag": "new",
                "description": "<p>Polyfills are extremely useful to help the web evolve, providing substitute implementations of modern features for browsers that don't implement them (yet). Too often, though, web applications ship polyfills to browsers that don't need them, which causes unnecessary download and parsing overhead. The situation is becoming more pronounced now as only a few rendering engines remain and the bulk of the polyfills target only one of them: the Trident renderer in IE11. Further, market share of IE11 is dwindling with <a href=\"https://techcommunity.microsoft.com/t5/microsoft-365-blog/microsoft-365-apps-say-farewell-to-internet-explorer-11-and/ba-p/1591666\">support ending</a> in less than a year. We therefore suggest that you make use of <strong>browser-tailored polyfills</strong>, shipping only necessary polyfills to a given browser. This technique can even be implemented as a service with <a href=\"https://polyfill.io/v3/\">Polyfill.io</a>.</p>",
                "radarId": 15,
                "id": "en_2020-10_202010008",
                "blip_selector": "browser-tailored-polyfills"
            },
            {
                "blip_id": 201911007,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "AWS Cloud Development Kit",
                "display_name": "AWS Cloud Development Kit",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "196",
                "tag": "refresh_writeup",
                "description": "<p>For many of our teams, <a href=\"/radar/tools/terraform\">Terraform</a> has become the default choice for defining cloud infrastructure. However, some of our teams have been experimenting with <strong><a href=\"https://docs.aws.amazon.com/cdk/latest/guide/home.html\">AWS Cloud Development Kit</a></strong> (AWS CDK), and they like what they've seen so far. In particular, they like the use of first-class programming languages instead of configuration files which allows them to use existing tools, test approaches and skills. Like similar tools, care is still needed to ensure deployments remain easy to understand and maintain. It currently supports <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>, JavaScript, Python, Java and C# and .NET. We'll continue to watch AWS CDK, especially since the AWS and HashiCorp teams recently launched a <a href=\"https://aws.amazon.com/blogs/developer/introducing-the-cloud-development-kit-for-terraform-preview/\">preview for Cloud Development Kit for Terraform</a> to generate Terraform configurations and enable provisioning with the Terraform platform.</p>",
                "radarId": 32,
                "id": "en_2020-10_201911007",
                "blip_selector": "aws-cloud-development-kit"
            },
            {
                "blip_id": 202010078,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "k6",
                "display_name": "k6",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "59",
                "tag": "new",
                "description": "<p>We're quite excited by <a href=\"https://k6.io/\"><strong>k6</strong></a>, a relatively new tool in the performance testing ecosystem with a heavy focus on developer experience. The k6 command line runner executes scripts written in JavaScript and allows you to configure the execution time and the number of virtual users. The CLI has several <a href=\"https://k6.io/blog/how-to-control-a-live-k6-test\">advanced features</a> that let you see the current statistics before the test has finished executing, scale the number of virtual users beyond what was originally defined and even pause and resume a running test. The command line output provides a set of customizable metrics with transformers that let you visualize the results in <a href=\"https://www.datadoghq.com/\">Datadog</a> and other observability tools. Adding <a href=\"https://k6.io/docs/using-k6/checks\">checks</a> to your scripts is an easy way to integrate performance testing into your CI/CD pipeline. For accelerated performance testing, check out the commercial version, <a href=\"https://k6.io/cloud\">k6 Cloud</a>, which provides cloud scaling and additional visualizations.</p>",
                "radarId": 65,
                "id": "en_2020-10_202010078",
                "blip_selector": "k6"
            },
            {
                "blip_id": 202010061,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Svelte",
                "display_name": "Svelte",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "343",
                "tag": "new",
                "description": "<p>We continue to see new front-end JavaScript frameworks, and <strong><a href=\"https://svelte.dev/\">Svelte</a></strong> stands out as a promising new component framework. Unlike other frameworks that leverage the virtual DOM, Svelte compiles your code into vanilla framework-less JavaScript code that surgically updates the DOM directly. However, it's only a component framework; if you're planning to build feature-rich applications, consider assessing <a href=\"https://sapper.svelte.dev/\">Sapper</a> together with Svelte.</p>",
                "radarId": 97,
                "id": "en_2020-10_202010061",
                "blip_selector": "svelte"
            },
            {
                "blip_id": 202010062,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Parallel run with reconciliation",
                "display_name": "Parallel run with reconciliation",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "117",
                "tag": "new",
                "description": "<p>Replacing legacy code at scale is always a difficult endeavor and one that often benefits from executing a <strong>parallel run with reconciliation</strong>. In practice, the technique relies on executing the same production flow through both the old and new code, returning the response from the legacy code but comparing the results to gain confidence in the new code. Despite being an old technique, we've seen more robust implementations in recent years building on continuous delivery practices such as canary releases and feature toggles and extending them by adding an extra layer of experimentation and data analysis to compare live results. We've even used the approach to compare cross-functional results such as response time. Although we've used the technique multiple times with bespoke tooling, we certainly owe a nod to GitHub's <a href=\"https://github.com/github/scientist\">Scientist</a> tool, which they used to modernize a critical piece of their application and which has now been ported to multiple languages.</p>",
                "radarId": 11,
                "id": "en_2020-10_202010062",
                "blip_selector": "parallel-run-with-reconciliation"
            },
            {
                "blip_id": 1266,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Terragrunt",
                "display_name": "Terragrunt",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "20",
                "tag": "move_in",
                "description": "<p>We've used <a href=\"/radar/tools/terraform\">Terraform</a> extensively to create and manage cloud infrastructure. In our experience with larger setups, where code is divided into modules that are included in different ways, teams eventually hit a wall of unavoidable repetition caused by a lack of flexibility. We've addressed this by using <strong><a href=\"https://github.com/gruntwork-io/terragrunt\">Terragrunt</a></strong>, a thin wrapper for Terraform that implements the practices advocated by Yevgeniy Brikman’s <em><a href=\"https://www.oreilly.com/library/view/terraform-up-and/9781491977071/\">Terraform: Up and Running</a></em>. We've found Terragrunt helpful because it encourages versioned modules and reusability for different environments. Lifecycle hooks are another useful feature providing additional flexibility. In terms of packaging, Terragrunt has the same limitations as Terraform: there is no proper way to define packages or dependencies between packages. As a workaround, you can use modules and specify a version associated with a Git tag.</p>",
                "radarId": 57,
                "id": "en_2020-10_1266",
                "blip_selector": "terragrunt"
            },
            {
                "blip_id": 202010050,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "Mock Service Worker",
                "display_name": "Mock Service Worker",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "320",
                "tag": "new",
                "description": "<p>Web applications, especially those written for internal use in enterprises, are usually written in two parts. The user interface and some business logic run in the web browser while business logic, authorization and persistence run on a server. These two halves normally communicate via JSON over HTTP. The endpoints shouldn't be mistaken for a real API; they're simply an implementation detail of an application that is split across two run-time environments. At the same time, they provide a valid seam to test the pieces individually. When testing the JavaScript part, the server side can be stubbed and mocked at the network level by a tool such as <a href=\"/radar/tools/mountebank\">Mountebank</a>. An alternative approach is to intercept the requests in the browser. We like the approach taken by <strong><a href=\"https://mswjs.io/\">Mock Service Worker</a></strong> because with service workers it uses an abstraction familiar to developers. This approach results in a simpler setup and faster test execution. However, because these tests don't test the actual network layer, you want to implement some end-to-end tests as part of a healthy test pyramid.</p>",
                "radarId": 93,
                "id": "en_2020-10_202010050",
                "blip_selector": "mock-service-worker"
            },
            {
                "blip_id": 201911030,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "80",
                "name": "jest-when",
                "display_name": "jest-when",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "330",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://www.npmjs.com/package/jest-when\">jest-when</a></strong> is a lightweight JavaScript library that complements <a href=\"/radar/languages-and-frameworks/jest\">Jest</a> by matching mock function call arguments. Jest is a great tool for testing the stack; jest-when allows you to expect specific arguments for mock functions which enables you to write more robust unit tests of modules with many dependencies. It's easy to use and provides great support for multiple matchers, which is why our teams have made jest-when their default choice for mocking in this space.</p>",
                "radarId": 77,
                "id": "en_2020-10_201911030",
                "blip_selector": "jest-when"
            },
            {
                "blip_id": 202010048,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Materialize",
                "display_name": "Materialize",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "237",
                "tag": "new",
                "description": "<p><strong><a href=\"https://materialize.io/\">Materialize</a></strong> is a streaming database that enables you to do incremental computation without complicated data pipelines. Just describe your computations via standard SQL views and connect Materialize to the data stream. The underlying <a href=\"https://github.com/TimelyDataflow/differential-dataflow\">differential data flow</a> engine performs incremental computation to provide consistent and correct output with minimal latency. Unlike traditional databases, there are no restrictions in defining these materialized views and the computations are executed in real time.</p>",
                "radarId": 37,
                "id": "en_2020-10_202010048",
                "blip_selector": "materialize"
            },
            {
                "blip_id": 202010099,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Zola",
                "display_name": "Zola",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "6",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.getzola.org/\">Zola</a></strong> is a static site generator written in <a href=\"/radar/languages-and-frameworks/rust\">Rust</a>. As such it comes as a single executable with no dependencies, is very fast and supports all the usual things you'd expect such as Sass, content in markdown and hot reloading. We've had success building static sites with Zola and appreciate how intuitive it is to use.</p>",
                "radarId": 75,
                "id": "en_2020-10_202010099",
                "blip_selector": "zola"
            },
            {
                "blip_id": 202010094,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Tekton",
                "display_name": "Tekton",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "253",
                "tag": "new",
                "description": "<p><strong><a href=\"https://tekton.dev/\">Tekton</a></strong> is a young <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>-native platform for managing continuous integration and delivery (CI/CD) pipelines. It not only installs and runs on Kubernetes but also defines its CI/CD pipelines as Kubernetes <a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/\">custom resources</a>. This means the pipelines can now be controlled by native Kubernetes clients (CLI or APIs) and can take advantage of underlying resource management features such as rollbacks. The pipeline declaration format is flexible and allows defining workflows with conditions, parallel execution paths and handling final tasks to clean up among other features. As a result, Tekton can support complex and hybrid deployment workflows with rollbacks, canary release and more. Tekton is open source and also offered as a <a href=\"https://cloud.google.com/tekton\">managed service by GCP</a>. Although the documentation has room for improvement and the community is growing, we've been using Tekton successfully for production workloads on <a href=\"/radar/platforms/aws\">AWS</a>.</p>",
                "radarId": 39,
                "id": "en_2020-10_202010094",
                "blip_selector": "tekton"
            },
            {
                "blip_id": 202010003,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "Apollo Federation",
                "display_name": "Apollo Federation",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "165",
                "tag": "new",
                "description": "<p>When we first covered <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> in the Radar, we cautioned that its misuse can lead to antipatterns which, in the long run, has more disadvantages than benefits. Nevertheless, we’ve seen an increasing interest in GraphQL among our teams because of its ability to <a href=\"/radar/techniques/graphql-for-server-side-resource-aggregation\">aggregate information from different resources</a>. This time we want to caution you about using <strong><a href=\"https://www.apollographql.com/docs/apollo-server/federation/introduction/\">Apollo Federation</a></strong> and its  strong support for a single unified data graph for your company. Even though at first glance the idea of having ubiquitous concepts across the organization is tempting, we have to take into account previous similar attempts in the industry — such as <a href=\"/radar/techniques/master-data-management\">MDM</a> and canonical data model among others — that have exposed the pitfalls of this approach. The challenges can be significant, especially when the domain we find ourselves in is complex enough to create a unique unified model.</p>",
                "radarId": 22,
                "id": "en_2020-10_202010003",
                "blip_selector": "apollo-federation"
            },
            {
                "blip_id": 1222,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "Helm",
                "display_name": "Helm",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "35",
                "tag": "move_in",
                "description": "<p><strong><a href=\"http://helm.sh/\">Helm</a></strong> is a package manager for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. It comes with a repository of curated Kubernetes applications that are maintained in the official <a href=\"https://github.com/helm/charts\">Charts repository</a>. Since we last talked about Helm, Helm 3 has been released, and the most significant change is the removal of Tiller, the server-side component of Helm 2. The benefit of a design without Tiller is that you can only make changes to the Kubernetes cluster from the client side, that is, you can only modify the cluster according to the permissions you have as a user of the Helm command. We've used Helm in a number of client projects and its dependency management, templating and hook mechanism has greatly simplified the application lifecycle management in Kubernetes.</p>",
                "radarId": 45,
                "id": "en_2020-10_1222",
                "blip_selector": "helm"
            },
            {
                "blip_id": 202010021,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "Amundsen",
                "display_name": "Amundsen",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "188",
                "tag": "new",
                "description": "<p>Data scientists spend a large part of their time on data discovery, which means tooling to help in this space is bound to generate some excitement. Although the <a href=\"/radar/platforms/apache-atlas\">Apache Atlas</a> project has become the de facto tool for metadata management, data discovery is still not easily accomplished. Enter <strong><a href=\"https://github.com/amundsen-io/amundsen\">Amundsen</a></strong>, which can be deployed in concert with Apache Atlas to provide a much nicer search interface for data discovery.</p>",
                "radarId": 31,
                "id": "en_2020-10_202010021",
                "blip_selector": "amundsen"
            },
            {
                "blip_id": 202010069,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "CML",
                "display_name": "CML",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "85",
                "tag": "new",
                "description": "<p>We've included <a href=\"/radar/techniques/continuous-delivery-for-machine-learning-cd4ml\">continuous delivery for machine learning</a> as a technique in previous Radars, and in this edition we want to highlight a promising new tool called <strong><a href=\"https://cml.dev/\">Continuous Machine Learning</a> (or CML)</strong> from the people who made <a href=\"/radar/tools/dvc\">DVC</a>. CML aims to bring the best engineering practices of CI and CD to AI and ML teams and can help to organize your MLOps infrastructure on top of a traditional software engineering stack, instead of creating separate AI platforms. We like that they've prioritized support for DVC and see this as a good sign for this burgeoning new tool.</p>",
                "radarId": 60,
                "id": "en_2020-10_202010069",
                "blip_selector": "cml"
            },
            {
                "blip_id": 202010032,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Open Application Model (OAM)",
                "display_name": "Open Application Model (OAM)",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "130",
                "tag": "new",
                "description": "<p>We've talked a lot about the benefits of creating <a href=\"/radar/techniques/platform-engineering-product-teams\">platform engineering product teams</a> in support of your other product teams, but actually doing it is hard. It seems that the industry is still searching for the right abstraction in the world of <a href=\"/radar/techniques/infrastructure-as-code\">infrastructure as code</a>. Although tools such as <a href=\"/radar/tools/terraform\">Terraform</a> and <a href=\"/radar/tools/helm\">Helm</a> are steps in the right direction, the focus is still on managing infrastructure as opposed to application development. There are also shifts toward the concept of infrastructure as software with new tools such as <a href=\"/radar/platforms/pulumi\">Pulumi</a> and <a href=\"/radar/platforms/aws-cloud-development-kit\">CDK</a> being released. The <strong><a href=\"https://oam.dev/\">Open Application Model (OAM)</a></strong> is an attempt to bring some standardization to this space. Using the abstractions of components, application configurations, scopes and traits, developers can describe their applications in a platform-agnostic way, while platform implementers define their platform in terms of workload, trait and scope. Whether the OAM will be widely adopted remains to be seen, but we recommend keeping an eye on this interesting and needed idea.</p>",
                "radarId": 18,
                "id": "en_2020-10_202010032",
                "blip_selector": "open-application-model-oam"
            },
            {
                "blip_id": 202010029,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Flagger",
                "display_name": "Flagger",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "75",
                "tag": "new",
                "description": "<p><a href=\"/radar/techniques/service-mesh\">Service meshes</a> and API gateways provide a convenient way to route traffic to a variety of microservices, all of which implement the same API interface. <strong><a href=\"https://flagger.app/\">Flagger</a></strong> uses this feature to dynamically adjust the portion of traffic that is routed to a new version of a service. This is a common technique for <a href=\"/radar/techniques/1-canary\">canary releases</a> or blue/green deployment. Flagger works in conjunction with a variety of popular proxies (including Envoy and <a href=\"/radar/tools/kong-api-gateway\">Kong</a>) to progressively ramp up requests to a service and report metrics on the load in order to provide fast feedback on a new release. We like that Flagger simplifies this valuable practice so that it can be more widely adopted. Although Flagger is sponsored by Weaveworks, it stands on its own with no obligation to use it in conjunction with Weaveworks' other tooling.</p>",
                "radarId": 62,
                "id": "en_2020-10_202010029",
                "blip_selector": "flagger"
            },
            {
                "blip_id": 202005090,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "370",
                "name": "Log aggregation for business analytics",
                "display_name": "Log aggregation for business analytics",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "135",
                "tag": "stay",
                "description": "<p>Several years ago, a new generation of log aggregation platforms emerged that were capable of storing and searching over vast amounts of log data to uncover trends and insights in operational data. <a href=\"/radar/tools/splunk\">Splunk</a> was the most prominent but by no means the only example of these tools. Because these platforms provide broad operational and security visibility across the entire estate of applications, administrators and developers have grown increasingly dependent on them. This enthusiasm spread as stakeholders discovered that they could use <strong>log aggregation for business analytics</strong>. However, business needs can quickly outstrip the flexibility and usability of these tools. Logs intended for technical observability are often inadequate to infer deep customer understanding. We prefer either to use tools and metrics designed for customer analytics or to take a more event-driven approach to observability where both business and operational events are collected and stored in a way they can be replayed and processed by more purpose-built tools.</p>",
                "radarId": 24,
                "id": "en_2020-10_202005090",
                "blip_selector": "log-aggregation-for-business-analytics"
            },
            {
                "blip_id": 202005092,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Zero trust architecture",
                "display_name": "Zero trust architecture",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "99",
                "tag": "refresh_writeup",
                "description": "<p>While the fabric of computing and data continues to shift in enterprises — from monolithic applications to <a href=\"/radar/techniques/microservices\">microservices</a>, from centralized data lakes to <a href=\"/radar/techniques/data-mesh\">data mesh</a>, from on-prem hosting to polycloud, with an increasing proliferation of connected devices — the approach to securing enterprise assets for the most part remains unchanged, with heavy reliance and trust in the network perimeter: Organizations continue to make heavy investments to secure their assets by hardening the virtual walls of their enterprises, using private links and firewall configurations and replacing static and cumbersome security processes that no longer serve the reality of today. This continuing trend compelled us to highlight <strong>zero trust architecture</strong> (ZTA) again.</p>\n\n<p>ZTA is a paradigm shift in security architecture and strategy. It’s based on the assumption that a network perimeter is no longer representative of a secure boundary and no implicit trust should be granted to users or services based solely on their physical or network location. The number of resources, tools and platforms available to implement aspects of ZTA keeps growing and includes: enforcing <a href=\"/radar/techniques/security-policy-as-code\">policies as code</a> based on the least privilege and as granular as possible principles and continuous monitoring and automated mitigation of threats; using <a href=\"/radar/techniques/service-mesh\">service mesh</a> to enforce security control application-to-service and service-to-service; implementing <a href=\"/radar/techniques/binary-attestation\">binary attestation</a> to verify the origin of the binaries; and including <a href=\"/radar/techniques/secure-enclaves\">secure enclaves</a> in addition to traditional encryption to enforce the three pillars of data security: in transit, at rest and in memory. For introductions to the topic, consult the <a href=\"https://csrc.nist.gov/publications/detail/sp/800-207/final\">NIST ZTA</a> publication and Google's white paper on <a href=\"https://cloud.google.com/security/beyondprod\">BeyondProd</a>.</p>",
                "radarId": 13,
                "id": "en_2020-10_202005092",
                "blip_selector": "zero-trust-architecture"
            },
            {
                "blip_id": 202010017,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Stryker",
                "display_name": "Stryker",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "26",
                "tag": "new",
                "description": "<p><strong><a href=\"https://stryker-mutator.io/\">Stryker</a></strong> is a relatively new entry in the mutation testing space. Similar to <a href=\"/radar/tools/pitest\">Pitest</a>, Stryker lets you evaluate the quality of your tests. We've been using it quite successfully in JavaScript projects, but it also supports C# and Scala projects. Stryker is very user friendly and highly customizable, and we've been able to increase code coverage as well as confidence in the applications we're delivering for our clients.</p>",
                "radarId": 56,
                "id": "en_2020-10_202010017",
                "blip_selector": "stryker"
            },
            {
                "blip_id": 202010004,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Bounded low-code platforms",
                "display_name": "Bounded low-code platforms",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "170",
                "tag": "new",
                "description": "<p>One of the most nuanced decisions facing companies at the moment is the adoption of low-code or no-code platforms, that is, platforms that solve very specific problems in very limited domains. Many vendors are pushing aggressively into this space. The problems we see with these platforms typically relate to an inability to apply good engineering practices such as versioning. Testing too is typically really hard. However, we noticed some interesting new entrants to the market — including <a href=\"https://www.honeycode.aws/\">Amazon Honeycode</a>, which makes it easy to create simple task or event management apps, and <a href=\"https://parabola.io/\">Parabola</a> for IFTTT-like cloud workflows — which is why we're including <strong>bounded low-code platforms</strong> in this volume. Nevertheless, we remain deeply skeptical about their wider applicability since these tools, like Japanese Knotweed, have a knack of escaping their bounds and tangling everything together. That's why we still strongly advise caution in their adoption.</p>",
                "radarId": 14,
                "id": "en_2020-10_202010004",
                "blip_selector": "bounded-low-code-platforms"
            },
            {
                "blip_id": 202010087,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Snorkel",
                "display_name": "Snorkel",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "331",
                "tag": "new",
                "description": "<p>Modern ML models are very complex and require massive amounts of labeled training data sets to learn from. <strong><a href=\"https://www.snorkel.org/\">Snorkel</a></strong> started at the Stanford AI lab with the realization that manually labeling data is very expensive and often not feasible. Snorkel allows us to label training data programmatically via the creation of labeling functions. Snorkel employs supervised learning techniques to assess the accuracies and correlations of these labeling functions, and then reweighs and combines their output labels, leading to high-quality training labels. The creators of Snorkel have since come out with a commercial platform called <a href=\"https://www.snorkel.ai/\">Snorkel Flow</a>. While Snorkel itself is no longer actively developed, it's still significant for its ideas on the use of weakly supervised methods to label data.</p>",
                "radarId": 95,
                "id": "en_2020-10_202010087",
                "blip_selector": "snorkel"
            },
            {
                "blip_id": 202005034,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "JupyterLab",
                "display_name": "JupyterLab",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "252",
                "tag": "move_in",
                "description": "<p>Since introducing <strong><a href=\"https://jupyterlab.readthedocs.io/en/stable/getting_started/overview.html\">JupyterLab</a></strong> in the Assess ring in our last issue, it has become the preferred web-based user interface for Project <a href=\"/radar/tools/jupyter\">Jupyter</a> for many of our data practitioners. JupyterLab use is rapidly overtaking Jupyter Notebooks, which it will eventually replace. If you're still using Jupyter Notebooks, you should give JupyterLab a try. Its interactive environment is an evolution of Jupyter Notebook: it extends the original capabilities with drag-and-drop cells and tab autocompletion among other new features.</p>",
                "radarId": 30,
                "id": "en_2020-10_202005034",
                "blip_selector": "jupyterlab"
            },
            {
                "blip_id": 202010065,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Babylon.js",
                "display_name": "Babylon.js",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "275",
                "tag": "new",
                "description": "<p>When we wrote about <a href=\"/radar/techniques/vr-beyond-gaming\">VR beyond gaming</a> a few years ago we made no prediction on how quickly and to what extent VR solutions would be found in fields other than video gaming. In hindsight, we've certainly seen interest and adoption grow but the uptake has been slower than some of us anticipated. One reason could be tooling. <a href=\"https://unity.com/\">Unity</a> and <a href=\"https://www.unrealengine.com/\">Unreal</a> are two very mature and capable engines for developing VR applications. We also highlighted <a href=\"/radar/platforms/godot\">Godot</a>. However, these engines are quite unlike what most web and enterprise teams are familiar with. As we continued exploring, we realized that web-based VR solutions have come a long way and we've had positive experience with <strong><a href=\"https://www.babylonjs.com/\">Babylon.js</a></strong>. Written in TypeScript and rendering its applications in the browser, Babylon.js provides a familiar experience for many development teams. Additionally, Babylon.js is open-source software, mature and well-funded, which makes it even more attractive.</p>",
                "radarId": 85,
                "id": "en_2020-10_202010065",
                "blip_selector": "babylon-js"
            },
            {
                "blip_id": 1338,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "50",
                "name": "Run cost as architecture fitness function",
                "display_name": "Run cost as architecture fitness function",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "144",
                "tag": "stay",
                "description": "<p>Automating the estimation, tracking and projection of cloud infrastructure's run cost is necessary for today's organizations. The cloud providers' savvy pricing models, combined with the proliferation of pricing parameters and the dynamic nature of today's architecture, can lead to surprisingly expensive run costs. For example, the price of <a href=\"/radar/techniques/serverless-architecture\">serverless</a> based on API calls, event streaming solutions based on traffic or data processing clusters based on running jobs, all have a dynamic nature that changes over time as the architecture evolves. When our teams manage infrastructure on the cloud, implementing <strong>run cost as architecture fitness function</strong> is one of their early activities. This means that our teams can observe the cost of running services against the value delivered; when they see deviations from what was expected or acceptable, they'll discuss whether it's time to evolve the architecture. The observation and calculation of the run cost is implemented as an automated function.</p>",
                "radarId": 2,
                "id": "en_2020-10_1338",
                "blip_selector": "run-cost-as-architecture-fitness-function"
            },
            {
                "blip_id": 202010035,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Hermes",
                "display_name": "Hermes",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "298",
                "tag": "new",
                "description": "<p><strong><a href=\"https://hermesengine.dev/\">Hermes</a></strong> is a JavaScript engine optimized for fast start-up of <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> applications on Android. JavaScript engines such as <a href=\"https://v8.dev/\">V8</a> have just-in-time (JIT) compilers that profile the code at run time to produce optimized instructions. Hermes, however, takes a different approach by compiling the JavaScript code ahead of time (AOT) into an optimized bytecode. As a result you get a smaller APK image size, lean memory consumption and faster startup time. We're carefully assessing Hermes in a few React Native apps and recommend you do the same.</p>",
                "radarId": 89,
                "id": "en_2020-10_202010035",
                "blip_selector": "hermes"
            },
            {
                "blip_id": 202010081,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Litmus",
                "display_name": "Litmus",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "38",
                "tag": "new",
                "description": "<p><strong><a href=\"https://litmuschaos.io/\">Litmus</a></strong> is a chaos engineering tool with a low barrier to entry. It allows you to inject various error scenarios into your <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> cluster with minimal effort. We're particularly excited by the range of capabilities Litmus offers beyond your random pod kill, including simulating network, CPU, memory and I/O issues. Litmus also supports tailored experiments to simulate errors for <a href=\"/radar/tools/apache-kafka\">Kafka</a> and Cassandra among other common services.</p>",
                "radarId": 69,
                "id": "en_2020-10_202010081",
                "blip_selector": "litmus"
            },
            {
                "blip_id": 1329,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Azure DevOps",
                "display_name": "Azure DevOps",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "198",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://azure.microsoft.com/en-us/services/devops/\">Azure DevOps</a></strong> services contain a set of managed services, including hosted Git repos, CI/CD pipelines, automated testing tooling, backlog management tooling and artifact repository. We've seen our teams getting more experience in using this platform with good results, which means Azure DevOps is maturing. We particularly like its flexibility; it allows you to use the services you want even if they're from different providers. For instance, you could use an external Git repository while still using the Azure DevOps pipeline services. Our teams are especially excited about <a href=\"https://azure.microsoft.com/en-us/services/devops/pipelines/\">Azure DevOps Pipelines</a>. Nevertheless, all the services offer a good developer experience that helps our teams deliver value.</p>",
                "radarId": 27,
                "id": "en_2020-10_1329",
                "blip_selector": "azure-devops"
            },
            {
                "blip_id": 202005083,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Decentralized identity",
                "display_name": "Decentralized identity",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "150",
                "tag": "refresh_writeup",
                "description": "<p>In 2016, Christopher Allen, a key contributor to <a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security\">SSL/TLS</a>, inspired us with an introduction of 10 principles underpinning a new form of digital identity and a path to get there, <a href=\"http://www.lifewithalacrity.com/2016/04/the-path-to-self-soverereign-identity.html\">the path to self-sovereign identity</a>. Self-sovereign identity, also known as <strong>decentralized identity</strong>, is a “lifetime portable identity for any person, organization, or thing that does not depend on any centralized authority and can never be taken away,” according to the <a href=\"/radar/platforms/trust-over-ip-stack\">Trust over IP</a> standard. Adopting and implementing decentralized identity is gaining momentum and becoming attainable. We see its adoption in privacy-respecting <a href=\"https://www.civic.com/healthkey/\">customer health applications</a>, <a href=\"https://www.truu.id/\">government healthcare infrastructure</a> and <a href=\"https://id-bulletin.com/2020/06/04/news-gleif-and-evernym-demo-organization-wallets-to-deliver-trust-and-transparency-in-digital-business/\">corporate legal identity</a>. If you want to rapidly get started with decentralized identity, you can assess <a href=\"https://sovrin.org/\">Sovrin Network</a>, <a href=\"https://github.com/hyperledger/aries\">Hyperledger Aries</a> and <a href=\"https://github.com/hyperledger/indy-node\">Indy</a> OSS, as well as <a href=\"https://www.w3.org/TR/did-core/\">decentralized identifiers</a> and <a href=\"/radar/techniques/verifiable-credentials\">verifiable credentials</a> standards. We're watching this space closely as we help our clients with their strategic positioning in the new era of digital trust.</p>",
                "radarId": 16,
                "id": "en_2020-10_202005083",
                "blip_selector": "decentralized-identity"
            },
            {
                "blip_id": 202010044,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "LGTM",
                "display_name": "LGTM",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "43",
                "tag": "new",
                "description": "<p>Writing secure code is as important as ever, but it's only one of the many things developers have to prioritize. <strong><a href=\"http://lgtm.com/\">LGTM</a></strong> provides both a safety net and a means to benefit from a knowledge base of secure coding practices. It is a static code analysis tool with a focus on security that is backed by a (partially open-source) catalog of secure coding rules. The rules are implemented as queries over your codebase in the <a href=\"https://codeql.github.com/docs/ql-language-reference/about-the-ql-language/\">CodeQL</a> query language. It can be used to integrate white-box security checks into your CD pipelines for Java, Go, JavaScript, Python, C# and C/C++. LGTM and CodeQL are part of the <a href=\"https://securitylab.github.com/\">Github Security Lab</a>.</p>",
                "radarId": 68,
                "id": "en_2020-10_202010044",
                "blip_selector": "lgtm"
            },
            {
                "blip_id": 202010053,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "Opacus",
                "display_name": "Opacus",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "32",
                "tag": "new",
                "description": "<p>The concept of <a href=\"/radar/techniques/differential-privacy\">differential privacy</a> first appeared in the Radar in 2016. Although the problem of breaking privacy through systematic model inference queries was recognized at the time, it was largely a theoretical issue since remedies were few. The industry has lacked tools to prevent this from happening. <strong><a href=\"https://github.com/pytorch/opacus\">Opacus</a></strong> is a new Python library that can be used in conjunction with <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a> to help thwart one type of differential privacy attack. Although this is a promising development, finding the right model and data set to which it applies has been a challenge. The library is still quite new so we're looking forward to seeing how it'll be accepted going forward.</p>",
                "radarId": 70,
                "id": "en_2020-10_202010053",
                "blip_selector": "opacus"
            },
            {
                "blip_id": 202010028,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "DuckDB",
                "display_name": "DuckDB",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "220",
                "tag": "new",
                "description": "<p><strong><a href=\"https://duckdb.org/\">DuckDB</a></strong> is an embedded, columnar database for data science and analytical workloads. Analysts spend significant time cleaning and visualizing data locally before scaling it to servers. Although databases have been around for decades, most of them are designed for client-server use cases and therefore not suitable for local interactive queries. To work around this limitation analysts usually end up using in-memory data-processing tools such as <a href=\"https://pandas.pydata.org/\">Pandas</a> or <a href=\"https://github.com/Rdatatable/data.table\">data.table</a>. Although these tools are effective, they do limit the scope of analysis to the volume of data that can fit in memory. We feel DuckDB neatly fills this gap in tooling with an embedded columnar engine that is optimized for analytics on local, larger-than-memory data sets.</p>",
                "radarId": 35,
                "id": "en_2020-10_202010028",
                "blip_selector": "duckdb"
            },
            {
                "blip_id": 202010082,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "MLflow",
                "display_name": "MLflow",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "52",
                "tag": "new",
                "description": "<p><strong><a href=\"https://mlflow.org/\">MLflow</a></strong> is an open-source tool for <a href=\"/radar/tools/experiment-tracking-tools-for-machine-learning\">machine-learning experiment tracking</a> and lifecycle management. The workflow to develop and continuously evolve a machine-learning model includes a series of experiments (a collection of runs), tracking the performance of these experiments (a collection of metrics) and tracking and tweaking models (projects). MLflow facilitates this workflow nicely by supporting existing open standards and integrates well with many other tools in the ecosystem. <a href=\"https://databricks.com/product/managed-mlflow\">MLflow as a managed service by Databricks</a> on the cloud, available in <a href=\"/radar/platforms/aws\">AWS</a> and <a href=\"/radar/platforms/azure\">Azure</a>, is rapidly maturing and we've used it successfully in our projects. We find MLflow a great tool for model management and tracking, supporting both UI-based and API-based interaction models. Our only growing concern is that MLflow is attempting to deliver too many conflating concerns as a single platform, such as model serving and scoring.</p>",
                "radarId": 52,
                "id": "en_2020-10_202010082",
                "blip_selector": "mlflow"
            },
            {
                "blip_id": 202010103,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "io-ts",
                "display_name": "io-ts",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "303",
                "tag": "new",
                "description": "<p>We've been really enjoying using <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> for a while now and love the safety that the strong typing provides. However, getting data into the bounds of the type system, from say a call to a back-end service, can lead to run-time errors. One library that helps solve this problem is <strong><a href=\"https://gcanti.github.io/io-ts/\">io-ts</a></strong>. It bridges the gap between compile-time type-checking and run-time consumption of external data by providing encode and decode functions. It can also be used as a custom type guard. According to our teams, it's an elegant solution to a rascal of a problem.</p>",
                "radarId": 90,
                "id": "en_2020-10_202010103",
                "blip_selector": "io-ts"
            },
            {
                "blip_id": 202010011,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Eleventy",
                "display_name": "Eleventy",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "80",
                "tag": "new",
                "description": "<p>We've long liked the idea of using <a href=\"/radar/techniques/static-site-generators\">static site generators</a> to avoid complexity and improve performance, whenever the use case allows it. Although <strong><a href=\"https://www.11ty.dev/\">Eleventy</a></strong> has been around for a few years, it's recently caught our attention as it's matured and previous favorites such as <a href=\"/radar/languages-and-frameworks/gatsby-js\">Gatsby.js</a> displayed some scalability problems. Eleventy is quick to learn and easy to build sites with. We also like the ease with which you can create semantic (and therefore more accessible) markup with its templating and its simple and robust support for pagination.</p>",
                "radarId": 61,
                "id": "en_2020-10_202010011",
                "blip_selector": "eleventy"
            },
            {
                "blip_id": 202010043,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Kustomize",
                "display_name": "Kustomize",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "58",
                "tag": "new",
                "description": "<p><strong><a href=\"https://kustomize.io/\">Kustomize</a></strong> is a tool to manage and customize Kubernetes manifest files. It allows you to select and patch your base Kubernetes resources before applying them to different environments and is now natively supported by <a href=\"https://kubernetes.io/docs/reference/kubectl/overview/\">kubectl</a>. We like it because it helps keep your code <a href=\"https://wiki.c2.com/?DontRepeatYourself\">DRY</a> and in contrast to <a href=\"/radar/tools/helm\">Helm</a> (which is trying to do many things — package management, version management and so on), we find Kustomize follows the Unix philosophy: do one thing well and expect the output of every program to be input to another.</p>",
                "radarId": 51,
                "id": "en_2020-10_202010043",
                "blip_selector": "kustomize"
            },
            {
                "blip_id": 202010066,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Backstage",
                "display_name": "Backstage",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "204",
                "tag": "new",
                "description": "<p>Organizations are looking to support and streamline development environments through developer portals or platforms. As the number of tools and technologies increases, some form of standardization is becoming increasingly important for consistency so that developers are able to focus on innovation and product development instead of getting bogged down with reinventing the wheel. A centralized developer portal can offer easy discoverability of services and best practices. <strong><a href=\"https://backstage.io/\">Backstage</a></strong> is an open-source platform for creating developer portals by Spotify. It is based upon software templates, unifying infrastructure tooling and consistent and centralized technical documentation. Its plugin architecture allows for extensibility and adaptability into an organization’s infrastructure ecosystem.</p>",
                "radarId": 33,
                "id": "en_2020-10_202010066",
                "blip_selector": "backstage"
            },
            {
                "blip_id": 202010098,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Verifiable credentials",
                "display_name": "Verifiable credentials",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "100",
                "tag": "new",
                "description": "<p>Credentials are everywhere in our lives and include passports, driver’s licenses and academic certificates. However, most digital credentials today are simple data records from information systems that are easy to modify and forge and often expose unnecessary information. In recent years, we've seen the continuous maturity of <strong>Verifiable Credentials</strong> solve this issue. The <a href=\"https://www.w3.org/TR/vc-data-model/\">W3C standard</a> defines it in a way that is cryptographically secure, privacy respecting and machine verifiable. The model puts credential holders at the center, which is similar to our experience when using physical credentials: users can put their verifiable credentials in their own digital wallets and show them to anyone at any time without the permission of the credentials’ issuer. This decentralized approach also enables users to better manage their own information and selectively disclose certain information and greatly improves data privacy protection. For example, powered by zero-knowledge proof technology, you can construct a verifiable credential to prove that you are an adult without revealing your birthday. The community has developed many <a href=\"https://www.w3.org/TR/vc-use-cases/\">use cases</a> around verifiable credentials. We've implemented our own COVID health certification with reference to the <a href=\"https://www.covidcreds.com/\">COVID-19 Credentials Initiative (CCI)</a>. Although verifiable credentials don't rely on blockchain technology or <a href=\"/radar/techniques/decentralized-identity\">decentralized identity</a>, this technique often works with DID in practice and uses blockchain as a verifiable data registry. Many decentralized identity frameworks are also embedded with verifiable credentials.</p>",
                "radarId": 21,
                "id": "en_2020-10_202010098",
                "blip_selector": "verifiable-credentials"
            },
            {
                "blip_id": 202010045,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "pnpm",
                "display_name": "pnpm",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "16",
                "tag": "new",
                "description": "<p><strong><a href=\"https://pnpm.js.org/\">pnpm</a></strong> is an up-and-coming package manager for <a href=\"/radar/platforms/node-js\">Node.js</a> that we're looking at closely because of its higher speed and greater efficiency compared to other package managers. Dependencies are saved in a single place on the disk and are linked into the respective <code>node_modules</code> directories. pnpm also supports incremental optimization on file level, provides a solid API foundation to allow extension/customization and supports store server mode, which speeds up dependency download even more. If your organization has a large number of projects with the same dependencies, you may want to take a closer look at pnpm.</p>",
                "radarId": 73,
                "id": "en_2020-10_202010045",
                "blip_selector": "pnpm"
            },
            {
                "blip_id": 202005004,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "Use \"remote native\" processes and approaches",
                "display_name": "Use \"remote native\" processes and approaches",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "108",
                "tag": "refresh_writeup",
                "description": "<p>As the pandemic stretches on it seems that highly distributed teams will be the \"new normal,\" at least for the time being. Over the past six months we've learnt a lot about effective remote working. On the positive side, good visual work-management and collaboration tools have made it easier than ever to collaborate remotely with colleagues. Developers, for example, can count on <a href=\"/radar/tools/visual-studio-live-share\">Visual Studio Live Share</a> and <a href=\"https://visualstudio.microsoft.com/services/github-codespaces/\">GitHub Codespaces</a> to facilitate teamwork and increase productivity. The biggest downside to remote work might be burnout: far too many people are scheduled for back-to-back video calls all day long, and this has begun to take its toll. While online visual tools make it easier to collaborate, it's also possible to build complex giant diagrams that end up being very hard to use, and the security aspects of tool proliferation also need to be carefully managed. Our advice is to remember to take a step back, talk to your teams, evaluate what's working and what's not and change processes and tools as needed.</p>",
                "radarId": 12,
                "id": "en_2020-10_202005004",
                "blip_selector": "use-remote-native-processes-and-approaches"
            },
            {
                "blip_id": 1283,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "295",
                "name": "Pulumi",
                "display_name": "Pulumi",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "245",
                "tag": "refresh_writeup",
                "description": "<p>We've seen interest in <strong><a href=\"https://pulumi.io/\">Pulumi</a></strong> slowly but steadily rising. Pulumi fills a gaping hole in the infrastructure coding world where <a href=\"/radar/tools/terraform\">Terraform</a> maintains a firm hold. While Terraform is a tried-and-true standby, its declarative nature suffers from inadequate abstraction facilities and limited testability. Terraform is adequate when the infrastructure is entirely static, but dynamic infrastructure definitions call for a real programming language. Pulumi distinguishes itself by allowing configurations to be written in <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>/JavaScript, <a href=\"/radar/languages-and-frameworks/python-3\">Python</a> and <a href=\"/radar/languages-and-frameworks/go-language\">Go</a> — no markup language or templating required. Pulumi is tightly focused on cloud-native architectures — including containers, serverless functions and data services — and provides good support for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Recently, <a href=\"/radar/platforms/aws-cloud-development-kit\">AWS CDK</a> has mounted a challenge, but Pulumi remains the only cloud-neutral tool in this area. We're anticipating wider Pulumi adoption in the future and looking forward to a viable tool and knowledge ecosystem emerging to support it.</p>",
                "radarId": 38,
                "id": "en_2020-10_1283",
                "blip_selector": "pulumi"
            },
            {
                "blip_id": 771,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "185",
                "name": "Rust",
                "display_name": "Rust",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "315",
                "tag": "stay",
                "description": "<p>The <strong><a href=\"http://www.rust-lang.org/\">Rust</a></strong> programming language continues to grow in popularity and has been voted Stack Overflow's \"most loved\" language by developers five years in a row. We like it too. It's a fast, safe and expressive language that is increasing in utility as its ecosystem grows. For example, Rust is starting to be used for data science and machine learning and can give a <a href=\"https://www.lpalmieri.com/posts/2019-12-01-taking-ml-to-production-with-rust-a-25x-speedup/\">significant performance boost</a>. Also, <a href=\"/radar/platforms/materialize\">Materialize</a> is a streaming-oriented, low-latency database written in Rust.</p>",
                "radarId": 81,
                "id": "en_2020-10_771",
                "blip_selector": "rust"
            },
            {
                "blip_id": 202010056,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Playwright",
                "display_name": "Playwright",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "22",
                "tag": "new",
                "description": "<p>Web UI testing continues to be an active space. Some of the folks who built <a href=\"/radar/languages-and-frameworks/puppeteer\">Puppeteer</a> have since moved on to Microsoft and are now applying their learnings to <strong><a href=\"https://playwright.dev/\">Playwright</a></strong>, which allows you to write tests for Chromium and Firefox as well as WebKit, all through the same API. Playwright has gained some attention for its support of all the major browser engines, which it currently achieves by including patched versions of Firefox and Webkit. It remains to be seen how quickly other tools can catch up, with more and more support for the <a href=\"https://chromedevtools.github.io/devtools-protocol/\">Chrome DevTools Protocol</a> as a common API for automating browsers.</p>",
                "radarId": 72,
                "id": "en_2020-10_202010056",
                "blip_selector": "playwright"
            },
            {
                "blip_id": 202010034,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Sensei",
                "display_name": "Sensei",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "11",
                "tag": "new",
                "description": "<p><strong><a href=\"https://securecodewarrior.com/sensei\">Sensei</a></strong> from Secure Code Warrior is a Java IDE plugin that makes it easy to create and distribute secure code quality guidelines. At ThoughtWorks we often advocate for \"tools over rules,\" that is, make it easy to do the right thing over applying checklist-like governance rules and procedures, and this tool fits this philosophy. Developers create recipes that can be easily shared with team members. These can be simple or complex and are implemented as queries targeting the Java AST. Examples include warnings for SQL injection, cryptographic weakness and many others. Another feature we like: Since it executes on code changes in the IDE, Sensei provides faster feedback than the more traditional static analysis tools.</p>",
                "radarId": 74,
                "id": "en_2020-10_202010034",
                "blip_selector": "sensei"
            },
            {
                "blip_id": 1232,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Sentry",
                "display_name": "Sentry",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "39",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://sentry.io/\">Sentry</a></strong> is a cross-platform application monitoring tool with a focus on error reporting. Tools like Sentry distinguish themselves from traditional logging solutions such as the <a href=\"https://www.elastic.co/elk-stack\">ELK Stack</a> in their focus on discovering, investigating and fixing errors. Sentry has been around for a while and supports several languages and frameworks. We've used Sentry in many projects, and it has been really useful in tracking errors, finding out if a commit actually fixed an issue and alerting us if an issue resurfaces due to a regression.</p>",
                "radarId": 54,
                "id": "en_2020-10_1232",
                "blip_selector": "sentry"
            },
            {
                "blip_id": 202010057,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Kube-managed cloud services",
                "display_name": "Kube-managed cloud services",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "140",
                "tag": "new",
                "description": "<p>Cloud providers have slowly started supporting <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>-style APIs, via custom resource definitions (CRDs), for managing their cloud services. In most cases these cloud services are a core part of the infrastructure, and we've seen teams use tools such as <a href=\"/radar/tools/terraform\">Terraform</a> or <a href=\"/radar/platforms/pulumi\">Pulumi</a> to provision them. With these new CRDs (<a href=\"https://github.com/aws/aws-controllers-k8s\">ACK</a> for <a href=\"/radar/platforms/aws\">AWS</a>, <a href=\"https://github.com/Azure/azure-service-operator\">Azure Service Operator</a> for <a href=\"/radar/platforms/azure\">Azure</a> and <a href=\"https://cloud.google.com/config-connector/docs/overview\">Config Connectors</a> for <a href=\"/radar/platforms/google-cloud-platform\">GCP</a>) you can use Kubernetes to provision and manage these cloud services. One advantage of these <strong>Kube-managed cloud services</strong> is that you can leverage the same Kubernetes control plane to enforce the declarative state of both your application and infrastructure. The downside is that it tightly couples your Kubernetes cluster with infrastructure, so we're carefully assessing it and you should too.</p>",
                "radarId": 17,
                "id": "en_2020-10_202010057",
                "blip_selector": "kube-managed-cloud-services"
            },
            {
                "blip_id": 202010059,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Recoil",
                "display_name": "Recoil",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "326",
                "tag": "new",
                "description": "<p>More and more teams using <a href=\"/radar/languages-and-frameworks/react-js\">React</a> are reevaluating their options for state management, something we also mention in our reassessment of <a href=\"/radar/languages-and-frameworks/redux\">Redux</a>. Now, Facebook — the creators of React — have published <strong><a href=\"https://recoiljs.org/\">Recoil</a></strong>, a new framework for managing state, which came out of an internal application that had to deal with large amounts of data. Even though we currently do not have much practical experience with Recoil, we see its potential and promise. The API is simple and easy to learn; it feels like idiomatic React. Unlike other approaches, Recoil provides an efficient and flexible way to have state shared across an application: it supports dynamically created state by derived data and queries as well as app-wide state observation without impairing code splitting.</p>",
                "radarId": 94,
                "id": "en_2020-10_202010059",
                "blip_selector": "recoil"
            },
            {
                "blip_id": 202010091,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "SWR",
                "display_name": "SWR",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "348",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/vercel/swr\">SWR</a></strong> is a <a href=\"/radar/languages-and-frameworks/react-hooks\">React Hooks</a> library for fetching remote data. It implements the <a href=\"https://tools.ietf.org/html/rfc5861\">stale-while-revalidate</a> HTTP caching strategy. SWR first returns data from cache (stale), then sends the fetch request (revalidate) and finally refreshes the values with the up-to-date response. Components receive a stream of data, first stale and then fresh, constantly and automatically. Our developers have had a good experience using SWR, dramatically improving the user experience with always having data on the screen. However, we caution teams to only use SWR caching strategy when appropriate for an application to return stale data. Note that <a href=\"https://tools.ietf.org/html/rfc2616\">HTTP</a> requires that caches respond to a request with the most up-to-date response held that is appropriate to the request, and only in <em>carefully considered circumstances</em> is a stale response allowed to be returned.</p>",
                "radarId": 98,
                "id": "en_2020-10_202010091",
                "blip_selector": "swr"
            },
            {
                "blip_id": 202010074,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "ESBs in API Gateway's clothing",
                "display_name": "ESBs in API Gateway's clothing",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "150",
                "tag": "new",
                "description": "<p>We've long warned against <a href=\"/radar/tools/esb\">centralized enterprise services buses</a> and defined <a href=\"https://martinfowler.com/articles/microservices.html#SmartEndpointsAndDumbPipes\">\"smart endpoints, dumb pipes\"</a> as one of the core characteristics of a microservices architecture. Unfortunately, we're observing a pattern of traditional ESBs rebranding themselves, creating <strong>ESBs in API gateway's clothing</strong> that naturally encourage <a href=\"/radar/platforms/overambitious-api-gateways\">overambitious API gateways</a>. Don't let the marketing fool you: regardless of what you call it, putting business logic (including orchestration and transformation) in a centralized tool creates architectural coupling, decreases transparency, and increases vendor lock-in with no clear upside. API gateways can still act as a useful abstraction for crosscutting concerns, but we believe the smarts should live in the APIs themselves.</p>",
                "radarId": 23,
                "id": "en_2020-10_202010074",
                "blip_selector": "esbs-in-api-gateway-s-clothing"
            },
            {
                "blip_id": 202010089,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Strikt",
                "display_name": "Strikt",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "337",
                "tag": "new",
                "description": "<p>The <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> ecosystem keeps growing and more libraries are taking advantage of Kotlin language features to replace their Java alternatives. <strong><a href=\"https://strikt.io/\">Strikt</a></strong> is an assertion library that allows you to write test assertions in a very fluent style. It uses Kotlin features such as blocks and lambdas to help make your tests less verbose while maintaining readability. Strikt also supports building custom assertions, which can make your tests more domain specific.</p>",
                "radarId": 83,
                "id": "en_2020-10_202010089",
                "blip_selector": "strikt"
            },
            {
                "blip_id": 1112,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Yarn",
                "display_name": "Yarn",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "7",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://yarnpkg.com/\">Yarn</a></strong> continues to be the package manager of choice for many teams. We're excited about Yarn 2, a major new release with a long list of changes and improvements. In addition to usability tweaks and improvements in the area of workspaces, Yarn 2 introduces the concept of <em>zero-installs</em>, which allows developers to run a project directly after cloning it. However, Yarn 2 includes some breaking changes which makes the upgrade <a href=\"https://yarnpkg.com/advanced/migration\">nontrivial</a>. It also defaults to <a href=\"https://classic.yarnpkg.com/en/docs/pnp/\">plug'n'play</a> (PnP) environments and at the same time doesn't support React Native in PnP environments. Teams can, of course, opt out of PnP or stay on Yarn 1. They should be aware, though, that Yarn 1 is now in maintenance mode.</p>",
                "radarId": 59,
                "id": "en_2020-10_1112",
                "blip_selector": "yarn"
            },
            {
                "blip_id": 202005067,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "XState",
                "display_name": "XState",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "348",
                "tag": "move_in",
                "description": "<p>We've featured several state management libraries in the Radar before, but <strong><a href=\"https://xstate.js.org/docs/\">XState</a></strong> takes a slightly different approach. It's a simple JavaScript and <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> framework for creating finite state machines and visualizing them as state charts. It integrates with the more popular reactive JavaScript frameworks (<a href=\"/radar/languages-and-frameworks/vue-js\">Vue.js</a>, <a href=\"/radar/languages-and-frameworks/ember-js\">Ember.js</a>, <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> and <a href=\"https://rxjs.dev/\">RxJS</a>) and is based on the W3C standard for finite state machines. Another notable feature is the serialization of machine definitions. One thing that we've found helpful when creating finite state machines in other contexts (particularly when writing game logic) is the ability to visualize states and their possible transitions; we like that it's really easy to do this with XState's <a href=\"https://xstate.js.org/viz/\">visualizer</a>.</p>",
                "radarId": 84,
                "id": "en_2020-10_202005067",
                "blip_selector": "xstate"
            },
            {
                "blip_id": 202010097,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Trust over IP stack",
                "display_name": "Trust over IP stack",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "261",
                "tag": "new",
                "description": "<p>Continuous challenges with how individuals and organizations establish trust digitally, over the internet, is giving rise to a new approach on how to prove identity, how to share and verify attributes needed to establish trust and how to securely transact. Our Radar features some of the foundational technologies such as <a href=\"/radar/techniques/decentralized-identity\">decentralized identity</a> and <a href=\"/radar/techniques/verifiable-credentials\">verifiable credentials</a> that enable this new era of digital trust.</p>\n\n<p>However, such a global scale change won't be possible without a standardization of a technical governance stack that enables interoperability. The new <a href=\"https://trustoverip.org/\">Trust over IP Foundation</a>, part of the Linux Foundation, has set out to do just that. Taking its inspiration from how TCP/IP standardization as the narrow waist of the internet has enabled interoperability across billions of devices, the group is defining a four-layer technical and governance <strong><a href=\"https://github.com/hyperledger/aries-rfcs/blob/master/concepts/0289-toip-stack/README.md\">Trust over IP stack</a></strong>. The stack includes public utilities such as decentralized identifiers, decentralized identity <em>comms</em> to standardized protocols for agents such as digital wallets to communicate, data exchange protocols such as flows to issue and verify verifiable credentials, as well as the application ecosystems such as education, finance, healthcare, etc. If you're revisiting your identity systems and how you establish trust with your ecosystem, we suggest looking into ToIP stack and its supporting tooling, <a href=\"https://www.hyperledger.org/projects/aries\">Hyperledger Aries</a>.</p>",
                "radarId": 40,
                "id": "en_2020-10_202010097",
                "blip_selector": "trust-over-ip-stack"
            },
            {
                "blip_id": 202010040,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Kedro",
                "display_name": "Kedro",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "309",
                "tag": "new",
                "description": "<p>In the past we've talked about the <a href=\"/radar/tools/experiment-tracking-tools-for-machine-learning\">improving</a> <a href=\"/radar/tools/dvc\">tooling</a> for applying <a href=\"/radar/techniques/continuous-delivery-for-machine-learning-cd4ml\">good engineering practices</a> in data science projects. <strong><a href=\"https://github.com/quantumblacklabs/kedro\">Kedro</a></strong> is another good addition in this space. It's a development workflow framework for data science projects that brings a standardized approach to building production-ready data and machine-learning pipelines. We like the focus on software engineering practices and good design with its emphasis on test-driven development, modularity, versioning and good hygiene practices such as keeping credentials out of the codebase.</p>",
                "radarId": 91,
                "id": "en_2020-10_202010040",
                "blip_selector": "kedro"
            },
            {
                "blip_id": 202010086,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "ShellCheck",
                "display_name": "ShellCheck",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "33",
                "tag": "new",
                "description": "<p>Even though tooling has vastly improved in the infrastructure space, writing a shell script may make sense in some cases. Of course, the syntax of shell scripts can only be described as arcane, and as we've less practice writing shell scripts these days, we've come to like <strong><a href=\"https://www.shellcheck.net/\">ShellCheck</a></strong>, a linter for shell scripts. ShellCheck can be used from the command line, as part of a build or, even better, as an extension in many popular IDEs. The wiki contains a detailed description of several hundred issues that ShellCheck can detect, and most tools and IDEs provide a way to conveniently access the respective wiki page when an issue is found.</p>",
                "radarId": 55,
                "id": "en_2020-10_202010086",
                "blip_selector": "shellcheck"
            },
            {
                "blip_id": 202010038,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "jscodeshift",
                "display_name": "jscodeshift",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "65",
                "tag": "new",
                "description": "<p>Maintaining large-scale JavaScript codebases is never easy, but it's especially challenging when migrating breaking changes. IDEs with refactoring capabilities may help in simple scenarios. However, when your codebase is a widely dependent library, every time you make a breaking change you have to go through a series of client codebases to make the appropriate updates — which requires human oversight and needs to be done manually. <strong><a href=\"https://github.com/facebook/jscodeshift\">jscodeshift</a></strong>, a toolkit to refactor JavaScript and <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>, helps relieve this pain. It can parse your code to abstract syntax trees (AST) and provides an API to manipulate the tree with various transformations (e.g., adding, renaming and deleting properties from existing components) and then exports the tree as final source code. jscodeshift also comes with a simple unit testing utility, which can apply test-driven development for writing migration codemods. We've found jscodeshift to be quite helpful when maintaining <a href=\"/radar/techniques/design-systems\">design systems</a>.</p>",
                "radarId": 50,
                "id": "en_2020-10_202010038",
                "blip_selector": "jscodeshift"
            },
            {
                "blip_id": 202010079,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Katran",
                "display_name": "Katran",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "53",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/facebookincubator/katran\">Katran</a></strong> is a high-performance layer 4 load balancer. It's not for everyone, but if you need redundancy for layer 7 load balancers (such as <a href=\"http://www.haproxy.org/\">HAProxy</a> or <a href=\"https://www.nginx.com/\">NGINX</a>) or need to scale load balancers to two or more servers, then we recommend assessing Katran. We see Katran as a flexible and efficient choice over techniques such as round-robin DNS over L7 load balancers or the IPVS Kernel model that network engineers usually adopt to solve similar challenges.</p>",
                "radarId": 66,
                "id": "en_2020-10_202010079",
                "blip_selector": "katran"
            },
            {
                "blip_id": 843,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Bokeh",
                "display_name": "Bokeh",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "84",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://bokeh.org/\">Bokeh</a></strong> is one of the principal libraries in Python for creating scientific plots and data visualizations that render in the browser via JavaScript. Such tools, compared to desktop tools that create static images, make it easy to reuse code for exploratory work in web applications. Bokeh is particularly good for this. The library is mature and full-featured. What we like about Bokeh: it's great at keeping to its concern as a presentation layer tool and not trying to take on concerns such as data aggregation (see <a href=\"https://github.com/yhat/ggpy\">ggplot</a>) or web app development (such as <a href=\"https://shiny.rstudio.com/\">Shiny</a> or <a href=\"/radar/tools/dash\">Dash</a>). This makes it a joy to use when separation of concerns is important to you. Bokeh does provide web UI widgets and can run in server mode, but you can take or leave these features as you see fit. Bokeh is flexible, and it doesn't make too many assumptions about how you'll use it nor does it have many dependencies (such as <a href=\"https://pandas.pydata.org/\">pandas</a> or notebooks).</p>",
                "radarId": 47,
                "id": "en_2020-10_843",
                "blip_selector": "bokeh"
            },
            {
                "blip_id": 1287,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "120",
                "name": "Bitrise",
                "display_name": "Bitrise",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "60",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://www.bitrise.io/\">Bitrise</a></strong>, a domain-specific CD tool for mobile applications, continues to be a useful part of the mobile workflow, and teams really should be using it. Bitrise can build, test and deploy mobile applications all the way from developer laptop to app store publishing. It's easy to set up and provides a comprehensive set of prebuilt steps for most mobile development needs.</p>",
                "radarId": 43,
                "id": "en_2020-10_1287",
                "blip_selector": "bitrise"
            },
            {
                "blip_id": 202010031,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "HashiCorp Sentinel",
                "display_name": "HashiCorp Sentinel",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "292",
                "tag": "new",
                "description": "<p>Although we're big advocates of defining <a href=\"/radar/techniques/security-policy-as-code\">security policy as code</a>, the tooling in this space has been fairly limited. If you're using HashiCorp products (such as <a href=\"/radar/tools/terraform\">Terraform</a> or <a href=\"/radar/tools/hashicorp-vault\">Vault</a>) and don't mind paying for the enterprise versions, you have the option of using <a href=\"https://www.hashicorp.com/sentinel\"><strong>HashiCorp Sentinel</strong></a>. Sentinel is, in effect, a complete programming language for defining and implementing context-based policy decisions. For example, in Terraform it can be used to test for policy violations before applying infrastructure changes. In Vault, Sentinel can be used to define fine-grained access control on the APIs. This approach has all the benefits of encapsulation, maintainability, readability and extensibility that high-level programming languages offer, creating an attractive alternative to traditional, declarative security policy. Sentinel is in the same class of tools as <a href=\"/radar/tools/open-policy-agent-opa\">Open Policy Agent</a> but is proprietary, closed-source and only works with HashiCorp products.</p>",
                "radarId": 88,
                "id": "en_2020-10_202010031",
                "blip_selector": "hashicorp-sentinel"
            },
            {
                "blip_id": 202010018,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Testing Library",
                "display_name": "Testing Library",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "354",
                "tag": "new",
                "description": "<p><strong><a href=\"https://testing-library.com/\">Testing Library</a></strong> is a family of packages for testing applications in numerous frameworks such as <a href=\"/radar/languages-and-frameworks/react-js\">React</a>, <a href=\"/radar/languages-and-frameworks/vue-js\">Vue</a>, <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> and <a href=\"/radar/languages-and-frameworks/angular\">Angular</a> among others. This set of libraries helps you test UI components in a user-centric way by encouraging you to test user behavior rather than implementation details, such as the presence of elements in the UI at a certain moment in time. One of the benefits of this mindset is more reliable tests, and this is what we call out as its main differentiator. We recommend you assess this family of libraries when testing your web applications in any framework. Although our direct experience is limited to <a href=\"/radar/languages-and-frameworks/react-testing-library\">React Testing Library</a> and Angular Testing Library, we've been impressed with what we've seen.</p>",
                "radarId": 99,
                "id": "en_2020-10_202010018",
                "blip_selector": "testing-library"
            },
            {
                "blip_id": 202010060,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Secure enclaves",
                "display_name": "Secure enclaves",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "120",
                "tag": "new",
                "description": "<p><strong>Secure enclaves</strong>, also identified as <a href=\"https://en.wikipedia.org/wiki/Trusted_execution_environment\">trusted execution environments (TEE)</a>, refer to a technique that isolates an environment — processor, memory and storage — with a higher level of security and only provides a limited exchange of information with its surrounding untrusted execution context. For example, a secure enclave at the hardware and OS levels can create and store private keys and perform operations with them such as encrypt data or verify signatures without the private keys leaving the secure enclave or being loaded in the untrusted application memory. Secure enclave provides a limited set of instructions to perform trusted operations, isolated from an untrusted application context.</p>\n\n<p>The technique has long been supported by many hardware and OS providers (including <a href=\"https://support.apple.com/guide/security/secure-enclave-overview-sec59b0b31ff/web\">Apple</a>), and developers have used it in IoT and edge applications. Only recently, however, has it gained attention in enterprise and cloud-based applications. Cloud providers have started to introduce <a href=\"https://confidentialcomputing.io/\">confidential computing</a> features such as hardware-based secure enclaves: <a href=\"https://azure.microsoft.com/en-us/solutions/confidential-compute/\">Azure confidential computing infrastructure</a> promises TEE-enabled VMs and access through the <a href=\"https://github.com/openenclave/openenclave\">Open Enclave SDK</a> open-source library to perform trusted operations. Similarly, <a href=\"https://cloud.google.com/compute/confidential-vm/docs/about-cvm\">GCP Confidential VMs and Compute Engine</a>, still in beta, allow using VMs with data encryption in memory, and <a href=\"https://aws.amazon.com/ec2/nitro/nitro-enclaves/\">AWS Nitro Enclaves</a> is following them with its upcoming preview release. With the introduction of cloud-based secure enclaves and confidential computing, we can add a third pillar to data protection: in rest, in transit and now in memory.</p>\n\n<p>Even though we're still in the very early days of secure enclaves for enterprise, we encourage you to consider this technique, while staying informed about known <a href=\"https://en.wikipedia.org/wiki/Foreshadow\">vulnerabilities</a> that can compromise the secure enclaves of the underlying hardware providers.</p>",
                "radarId": 19,
                "id": "en_2020-10_202010060",
                "blip_selector": "secure-enclaves"
            },
            {
                "blip_id": 202010088,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Streamlit",
                "display_name": "Streamlit",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "337",
                "tag": "new",
                "description": "<p><a href=\"https://www.streamlit.io/\"><strong>Streamlit</strong></a> is an open-source application framework in Python used by data scientists for building good-looking data visualization applications. Streamlit stands out from competitors such as Dash with its focus on rapid prototyping and support for a wide range of visualization libraries, including <a href=\"https://plotly.com/\">Plotly</a> and <a href=\"/radar/tools/bokeh\">Bokeh</a>. For data scientists who need quick showcases during the experimentation cycle, Streamlit is a solid choice. We're using it in a few projects and like how we can put together interactive visualizations with very little effort.</p>",
                "radarId": 96,
                "id": "en_2020-10_202010088",
                "blip_selector": "streamlit"
            },
            {
                "blip_id": 202010022,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Blazor",
                "display_name": "Blazor",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "281",
                "tag": "new",
                "description": "<p>Although JavaScript and its ecosystem is dominant in the web UI development space, new opportunities are opening up with the emergence of <a href=\"/radar/languages-and-frameworks/webassembly\">WebAssembly</a>. We see <strong><a href=\"https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor\">Blazor</a></strong> as an interesting option for building interactive web UIs using C#. We especially like this open-source framework because it allows running C# code in the browser on top of WebAssembly, leveraging the .NET Standard runtime and ecosystem as well as custom libraries developed in this programming language. Additionally, it can interoperate bidirectionally with JavaScript code in the browser if needed.</p>",
                "radarId": 86,
                "id": "en_2020-10_202010022",
                "blip_selector": "blazor"
            },
            {
                "blip_id": 951,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Redux",
                "display_name": "Redux",
                "ring": "Trial",
                "blip_status": "move_out",
                "volume_date": "2020-10",
                "theta": "303",
                "tag": "move_out",
                "description": "<p>We've decided to move <strong><a href=\"http://redux.js.org/\">Redux</a></strong> back into the Trial ring to show that we no longer consider it the default approach for state management in <a href=\"/radar/languages-and-frameworks/react-js\">React</a> applications. Our experience shows that Redux is still a valuable framework in many cases but compared to other approaches, it also leads to more verbose and harder-to-follow code. Throwing <a href=\"https://redux-saga.js.org/\">Redux Sagas</a> into the mix usually compounds this issue. As an alternative, you can often use the features in recent versions of React to manage state effectively without an additional framework. However, we want to highlight that when you reach the point at which your simple state management solution starts to become complex, it might be worth reaching for Redux after all or perhaps even Facebook’s recently published <a href=\"/radar/languages-and-frameworks/recoil\">Recoil</a>.</p>",
                "radarId": 80,
                "id": "en_2020-10_951",
                "blip_selector": "redux"
            },
            {
                "blip_id": 202010046,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "LitElement",
                "display_name": "LitElement",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "315",
                "tag": "new",
                "description": "<p>Steady progress has been made since we first wrote about <a href=\"/radar/platforms/web-components-standard\">web components</a> in 2014. <strong><a href=\"https://lit-element.polymer-project.org/\">LitElement</a></strong>, part of the <a href=\"https://www.polymer-project.org/\">Polymer Project</a>, is a simple library that you can use to create lightweight web components. It's really just a base class that removes the need for a lot of the common boilerplate making writing web components a lot easier. We've had early success using it on projects and are excited to see the technology maturing.</p>",
                "radarId": 92,
                "id": "en_2020-10_202010046",
                "blip_selector": "litelement"
            },
            {
                "blip_id": 202005084,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Declarative data pipeline definition",
                "display_name": "Declarative data pipeline definition",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "153",
                "tag": "move_in",
                "description": "<p>Many data pipelines are defined in a large, more or less imperative script written in Python or Scala. The script contains the logic of the individual steps as well as the code chaining the steps together. When faced with a similar situation in Selenium tests, developers discovered the Page Object pattern, and later many behavior-driven development (BDD) frameworks implemented a split between step definitions and their composition. Some teams are now experimenting with bringing the same thinking to data engineering. A separate <strong>declarative data pipeline definition</strong>, maybe written in YAML, contains only the declaration and sequence of steps. It states input and output data sets but refers to scripts if and when more complex logic is needed. <a href=\"https://github.com/binaryaffairs/a-la-mode\">A La Mode</a> is a relatively new tool that takes a DSL approach to defining pipelines, but <a href=\"https://github.com/rambler-digital-solutions/airflow-declarative\">airflow-declarative</a>, a tool that turns directed acyclic graphs defined in YAML into <a href=\"/radar/tools/airflow\">Airflow</a> task schedules, seems to have the most momentum in this space.</p>",
                "radarId": 7,
                "id": "en_2020-10_202005084",
                "blip_selector": "declarative-data-pipeline-definition"
            },
            {
                "blip_id": 202010080,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Kiali",
                "display_name": "Kiali",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "48",
                "tag": "new",
                "description": "<p>Given the increased use of <a href=\"/radar/techniques/service-mesh\">service mesh</a> to deploy collections of containerized microservices, we can expect to see tools emerge that automate and simplify the administrative tasks associated with this architectural style. <strong><a href=\"https://kiali.io/\">Kiali</a></strong> is one such tool. Kiali provides a graphical user interface to observe and control networks of services deployed with <a href=\"/radar/platforms/istio\">Istio</a>. We've found Kiali useful for visualizing the topology of services in a network and understanding the traffic routed between them. For example, when used in conjunction with <a href=\"/radar/tools/flagger\">Flagger</a>, Kiali can display requests that have been routed to a canary service release. We particularly like Kiali's ability to artificially inject network faults into a service mesh to test resilience in the face of network interruptions. This practice is all too often ignored due to the complexity of configuring and running failure tests in a complex mesh of microservices.</p>",
                "radarId": 67,
                "id": "en_2020-10_202010080",
                "blip_selector": "kiali"
            },
            {
                "blip_id": 970,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Pitest",
                "display_name": "Pitest",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "45",
                "tag": "move_in",
                "description": "<p>Traditional testing approaches focus on evaluating if our production code is doing what it's supposed to do. However, we could make mistakes in the testing code introducing incomplete or useless assertions that create a false sense of confidence. This is where mutation testing comes in; it assesses the quality of the tests themselves, finding corner cases that are hard to realize. Our teams have used <strong><a href=\"http://pitest.org/\">Pitest</a></strong> for a while now, and we recommend its use in Java projects to measure the health of the test suite. In short, mutation testing introduces changes in the production code and executes the same tests a second time; if the tests are still green it means that the tests are not good and need to improve. When you’re using programming languages other than Java <a href=\"/radar/tools/stryker\">Stryker</a> is a good choice in this space.</p>",
                "radarId": 53,
                "id": "en_2020-10_970",
                "blip_selector": "pitest"
            },
            {
                "blip_id": 1330,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Distroless Docker images",
                "display_name": "Distroless Docker images",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "135",
                "tag": "move_in",
                "description": "<p>When building <a href=\"/radar/platforms/docker\">Docker</a> images for our applications, we're often concerned with two things: the security and the size of the image. Traditionally, we've used <a href=\"/radar/techniques/container-security-scanning\">container security scanning</a> tools to detect and patch <a href=\"https://cve.mitre.org/\">common vulnerabilities and exposures</a> and small distributions such as <a href=\"https://alpinelinux.org/\">Alpine Linux</a> to address the image size and distribution performance. We've now gained more experience with <strong>distroless Docker images</strong> and are ready to recommend this approach as another important security precaution for containerized applications. Distroless Docker images reduce the footprint and dependencies by doing away with a full operating system distribution. This technique reduces security scan noise and the application attack surface. There are fewer vulnerabilities that need to be patched and as a bonus, these smaller images are more efficient. Google has published a set of <a href=\"https://github.com/GoogleContainerTools/distroless\">distroless container images</a> for different languages. You can create distroless application images using the Google build tool <a href=\"https://bazel.build/\">Bazel</a> or simply use multistage Dockerfiles. Note that distroless containers by default don't have a shell for debugging. However, you can easily find debug versions of distroless containers online, including a <a href=\"https://busybox.net/downloads/BusyBox.html\">BusyBox shell</a>. Distroless Docker images is a technique pioneered by Google and, in our experience, is still largely confined to Google-generated images. We're hoping that the technique catches on beyond this ecosystem.</p>",
                "radarId": 9,
                "id": "en_2020-10_1330",
                "blip_selector": "distroless-docker-images"
            },
            {
                "blip_id": 202010012,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Event interception",
                "display_name": "Event interception",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "126",
                "tag": "new",
                "description": "<p>As many more companies migrate away from their legacy systems, we feel it's worth highlighting an alternative to change data capture (CDC) as a mechanism for getting data from these systems. Martin Fowler described <strong><a href=\"https://www.martinfowler.com/bliki/EventInterception.html\">event interception</a></strong> back in 2004. In modern terms it involves forking requests on ingress to a system so that it's possible to gradually build a replacement. Often this is done by copying events or messages but forking HTTP requests is equally valid. Examples include forking events from point-of-sale systems before they're written to a mainframe and forking payment transactions before they're written to a core banking system. Both lead to the gradual replacement of parts of the legacy systems. We feel that as a technique, obtaining state changes from the source, rather than trying to recreate them postprocessing using CDC, has been overlooked which is why we're highlighting it in this issue of the Radar.</p>",
                "radarId": 10,
                "id": "en_2020-10_202010012",
                "blip_selector": "event-interception"
            },
            {
                "blip_id": 201904034,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "183",
                "name": "Immer",
                "display_name": "Immer",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "292",
                "tag": "move_in",
                "description": "<p>With the increasing complexity of single-page JavaScript applications, managing state predictably is becoming more and more important. Immutability can help to ensure our applications behave consistently but unfortunately JavaScript doesn't offer built-in deeply immutable data structures (see the <a href=\"https://github.com/tc39/proposal-record-tuple\">ES Record and Tuple proposal</a>). <strong><a href=\"https://github.com/mweststrate/immer\">Immer</a></strong> — German for <em>always</em> — is a tiny package that lets you work with immutable state in a more convenient way. It's based on the copy-on-write mechanism, has a minimal API and operates on normal JavaScript objects and arrays. This means that data access is seamless and no large refactoring efforts are needed when introducing immutability to an existing codebase. Many of our teams now use it in their JavaScript codebases and prefer it to <a href=\"/radar/languages-and-frameworks/immutable-js\">Immutable.js</a>, which is why we're moving it to Trial.</p>",
                "radarId": 79,
                "id": "en_2020-10_201904034",
                "blip_selector": "immer"
            },
            {
                "blip_id": 1288,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Debezium",
                "display_name": "Debezium",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "216",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://debezium.io/\">Debezium</a></strong> is a <a href=\"https://en.wikipedia.org/wiki/Change_data_capture\">change data capture (CDC)</a> platform that can stream database changes onto <a href=\"/radar/tools/apache-kafka\">Kafka</a> topics. CDC is a popular technique with multiple use cases, including replicating data to other databases, feeding analytics systems, extracting microservices from monoliths and invalidating caches. Debezium reacts to changes in the database's log files and has CDC connectors for multiple databases, including Postgres, MySQL, Oracle and MongoDB. We're using Debezium in many projects, and it has worked very well for us.</p>",
                "radarId": 28,
                "id": "en_2020-10_1288",
                "blip_selector": "debezium"
            },
            {
                "blip_id": 1174,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "single-spa",
                "display_name": "single-spa",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "326",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://single-spa.js.org/\">single-spa</a></strong> is a JavaScript framework for bringing together multiple <a href=\"/radar/techniques/micro-frontends\">micro frontends</a> in a single front-end application. Although we advise against <a href=\"/radar/techniques/micro-frontend-anarchy\">micro frontend anarchy</a>, the use of micro frontends as an excuse to mix and match multiple frameworks, single-spa supports just that. We understand that there are legitimate scenarios such as upgrading to a new revision of a framework across multiple micro frontends where integration across multiple frameworks is necessary. single-spa has been a go-to framework for micro frontend integration for our teams, and they're finding it to work well with <a href=\"https://github.com/systemjs/systemjs\">SystemJS</a> and managing different versions of a single dependency.</p>",
                "radarId": 82,
                "id": "en_2020-10_1174",
                "blip_selector": "single-spa"
            },
            {
                "blip_id": 201911034,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "Security policy as code",
                "display_name": "Security policy as code",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "126",
                "tag": "move_in",
                "description": "<p>As the technology landscape is becoming more complex, concerns such as security need more automation and engineering practices. When building systems, we need to take into consideration security policies, which are rules and procedures to protect our systems from threats and disruption. For example, access control policies define and enforce who can access which services and resources under what circumstances; by contrast, network security policies can dynamically limit the traffic rate to a particular service.</p>\n\n<p>Several of our teams have had a great experience treating <strong>security policy as code</strong>. When we say <em>as code</em>, we not only mean to write these security policies in a file but also to apply practices such as keeping the code under version control, introducing automatic validation in the pipeline, automatically deploying them in the environments and observing and monitoring their performance. Based on our experience and the maturity of the existing tools — including <a href=\"/radar/tools/open-policy-agent-opa\">Open Policy Agent</a> and platforms such as <a href=\"/radar/platforms/istio\">Istio</a> which provide flexible policy definition and enforcement mechanisms that support the practice of security policy as code — we highly recommend using this technique in your environment.</p>",
                "radarId": 3,
                "id": "en_2020-10_201911034",
                "blip_selector": "security-policy-as-code"
            },
            {
                "blip_id": 1125,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "120",
                "name": "Airflow",
                "display_name": "Airflow",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "75",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://airflow.apache.org/\">Airflow</a></strong> remains our most widely used and favorite open-source workflow management tool for data-processing pipelines as directed acyclic graphs (DAGs). This is a growing space with open-source tools such as <a href=\"https://github.com/spotify/luigi\">Luigi</a> and <a href=\"https://github.com/argoproj/argo\">Argo</a> and vendor-specific tools such as <a href=\"https://azure.microsoft.com/en-us/services/data-factory/\">Azure Data Factory</a> or <a href=\"https://aws.amazon.com/datapipeline/\">AWS Data Pipeline</a>. However, Airflow differentiates itself with its programmatic definition of workflows over limited low-code configuration files, support for automated testing, open-source and multiplatform installation, rich set of integration points to the data ecosystem and large community support. In decentralized data architectures such as <a href=\"/radar/techniques/data-mesh\">data mesh</a>, however, Airflow currently falls short as a centralized workflow orchestration.</p>",
                "radarId": 42,
                "id": "en_2020-10_1125",
                "blip_selector": "airflow"
            },
            {
                "blip_id": 201911077,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "80",
                "name": "Trivy",
                "display_name": "Trivy",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "20",
                "tag": "move_in",
                "description": "<p>Build pipelines that create and deploy containers should include <a href=\"/radar/techniques/container-security-scanning\">container security scanning</a>. Our teams particularly like <strong><a href=\"https://github.com/aquasecurity/trivy\">Trivy</a></strong>, a vulnerability scanner for containers. We've tried <a href=\"https://github.com/quay/clair\">Clair</a> and <a href=\"https://github.com/anchore/anchore-engine\">Anchore Engine</a> among other good tools in this field. Unlike Clair, Trivy doesn’t only check containers but also dependencies in the codebase. Also, because Trivy ships as a stand-alone binary, it's easier to set up and run the scan locally. Other benefits of Trivy are that it's open-source software and that it supports <a href=\"/radar/techniques/distroless-docker-images\">distroless containers</a>.</p>",
                "radarId": 46,
                "id": "en_2020-10_201911077",
                "blip_selector": "trivy"
            },
            {
                "blip_id": 202010014,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "Micro frontend anarchy",
                "display_name": "Micro frontend anarchy",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "120",
                "tag": "new",
                "description": "<p>Since we originally introduced the term in 2016, <a href=\"/radar/techniques/micro-frontends\">micro frontends</a> have grown in popularity and achieved mainstream acceptance. But like any new technique with an easy-to-remember name, it has occasionally been misused and abused. Particularly concerning is the tendency to use this architecture as an excuse to mix a range of competing technologies, tools or frameworks in a single page, leading to <strong>micro frontend anarchy</strong>. A particularly egregious form of this syndrome is using multiple frontend frameworks — for example, <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> and <a href=\"/radar/languages-and-frameworks/angular\">Angular</a> — in the same \"single-page\" application. Although this might be technically possible, it is far from advisable when not part of a deliberate transition strategy. Other properties that should be consistent from team to team include the styling technique (e.g., <a href=\"/radar/languages-and-frameworks/css-in-js\">CSS-in-JS</a> or <a href=\"/radar/languages-and-frameworks/css-modules\">CSS modules</a>) and the means by which the individual components are integrated (e.g., iFrames or <a href=\"/radar/platforms/web-components-standard\">web components</a>). Furthermore, organizations should decide whether to standardize on consistent approaches or to leave it up to their teams to decide on state management, data fetching, build tooling, analytics and a host of other choices in a micro frontend application.</p>",
                "radarId": 25,
                "id": "en_2020-10_202010014",
                "blip_selector": "micro-frontend-anarchy"
            },
            {
                "blip_id": 201904057,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Productionizing notebooks",
                "display_name": "Productionizing notebooks",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "105",
                "tag": "refresh_writeup",
                "description": "<p>Over the last few decades <a href=\"https://en.wikipedia.org/wiki/Notebook_interface\">computational notebooks</a>, first introduced by <a href=\"https://en.wikipedia.org/wiki/Wolfram_Mathematica\">Wolfram Mathematica</a>, have evolved to support scientific research, exploration and educational workflows. Naturally, in support of data science workflows and with the likes of <a href=\"https://jupyter.org/\">Jupyter notebooks</a> and <a href=\"https://docs.databricks.com/notebooks/index.html\">Databricks notebooks</a>, they've become a great companion by providing a simple and intuitive interactive computation environment for combining code to analyze data with rich text and visualization to tell a data story. Notebooks were designed to provide an ultimate medium for modern scientific communication and innovation. In recent years, however, we've seen a trend for notebooks to be the medium for running the type of production-quality code typically used to drive enterprise operations. We see notebook <a href=\"https://databricks.com/blog/2017/10/30/continuous-integration-continuous-delivery-databricks.html\">platform providers advertising</a> the use of their exploratory notebooks in production. This is a case of good intentions — democratizing programming for data scientists — implemented poorly and at the cost of scalability, maintainability, resiliency and all the other qualities that a long-lived production code needs to support. We don't recommend <strong>productionizing notebooks</strong> and instead encourage empowering data scientists to build production-ready code with the right programming frameworks, thus simplifying the <a href=\"/radar/techniques/continuous-delivery-for-machine-learning-cd4ml\">continuous delivery</a> tooling and abstracting complexity away through end-to-end ML platforms.</p>",
                "radarId": 26,
                "id": "en_2020-10_201904057",
                "blip_selector": "productionizing-notebooks"
            },
            {
                "blip_id": 1224,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "65",
                "name": "Dependabot",
                "display_name": "Dependabot",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "50",
                "tag": "move_in",
                "description": "<p>Among the available tools for keeping dependencies up to date, <strong><a href=\"http://dependabot.com/\">Dependabot</a></strong> is a solid default choice in our opinion. Dependabot's integration with <a href=\"/radar/tools/github\">GitHub</a> is smooth and automatically sends you pull requests to update your dependencies to their latest versions. It can be enabled at the organization level, so it's very easy for teams to receive these pull requests. If you're not using GitHub, you can still use the Dependabot libraries within your build pipeline. If you're interested in an alternative tool, also consider <a href=\"https://github.com/renovatebot/renovate\">Renovate</a>, which supports a wider range of services, including <a href=\"/radar/tools/gitlab\">GitLab</a>, Bitbucket and <a href=\"/radar/platforms/azure-devops\">Azure DevOps</a>.</p>",
                "radarId": 44,
                "id": "en_2020-10_1224",
                "blip_selector": "dependabot"
            },
            {
                "blip_id": 202010002,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Fastify",
                "display_name": "Fastify",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "281",
                "tag": "new",
                "description": "<p>In the case where implementation in <a href=\"/radar/platforms/node-js\">Node.js</a> is necessary, we see that <a href=\"https://www.fastify.io/\"><strong>Fastify</strong></a> is an option that our teams are very happy with. This web framework offers ease in handling request-response validations, support for <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> and a plugin ecosystem giving our teams an easier experience developing software. Although it's a good option in the Node.js ecosystem, we stand by our previous advice: don't fall into <a href=\"/radar/platforms/node-overload\">Node overload</a> scenarios.</p>",
                "radarId": 78,
                "id": "en_2020-10_202010002",
                "blip_selector": "fastify"
            },
            {
                "blip_id": 202010026,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Dash",
                "display_name": "Dash",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "71",
                "tag": "new",
                "description": "<p>This edition of the Radar introduces several new tools for creating web applications that help end users visualize and interact with data. These are more than simple visualization libraries such as <a href=\"/radar/tools/d3\">D3</a>. Instead, they reduce the effort necessary to build standalone analytic applications for manipulating existing data sets. <strong><a href=\"https://plotly.com/dash/\">Dash</a></strong> from Plotly is gaining popularity among data scientists for creating richly functional analytics applications in Python. Dash augments Python data libraries much like <a href=\"https://shiny.rstudio.com/\">Shiny</a> sits on top of R. These applications are sometimes referred to as dashboards, but the range of possible functionality is really much greater than the term implies. Dash is particularly suited to building scalable, production-ready applications, unlike <a href=\"/radar/languages-and-frameworks/streamlit\">Streamlit</a>, another tool in this class. Consider using Dash when you need to present more sophisticated analyses to business users than a low- or no-code solution such as Tableau can provide.</p>",
                "radarId": 49,
                "id": "en_2020-10_202010026",
                "blip_selector": "dash"
            },
            {
                "blip_id": 201904021,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Honeycomb",
                "display_name": "Honeycomb",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "234",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://www.honeycomb.io/\">Honeycomb</a></strong> is an observability service that ingests rich data from production systems and makes it manageable through dynamic sampling. Developers can log large amounts of rich events and later decide how to slice and correlate them. This interactive approach is useful when working with today's large distributed systems, because we've passed the point where we can reasonably anticipate which questions we might want to ask of production systems. The Honeycomb team is actively developing for a number of languages and frameworks with plugins now available for <a href=\"/radar/languages-and-frameworks/go-language\">Go</a>, <a href=\"/radar/platforms/node-js\">Node</a>, Java and Rails among others; other new features are being added at a rapid pace. The pricing model has also been simplified to make it more attractive. Our teams love it.</p>",
                "radarId": 29,
                "id": "en_2020-10_201904021",
                "blip_selector": "honeycomb"
            },
            {
                "blip_id": 202010075,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Flutter Driver",
                "display_name": "Flutter Driver",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "286",
                "tag": "new",
                "description": "<p><strong><a href=\"https://api.flutter.dev/flutter/flutter_driver/flutter_driver-library.html\">Flutter Driver</a></strong> is an integration testing library for <a href=\"https://flutter.dev/\">Flutter</a> applications. With Flutter Driver you can instrument and drive the test suite on either real devices or emulators. Our teams continue to write unit and widget tests to ensure most of the business functionality in Flutter apps is implemented. However, for testing the actual user interaction, we're assessing Flutter Driver, and you should too.</p>",
                "radarId": 87,
                "id": "en_2020-10_202010075",
                "blip_selector": "flutter-driver"
            },
            {
                "blip_id": 202010030,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "gossm",
                "display_name": "gossm",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "69",
                "tag": "new",
                "description": "<p>When connecting to server instances on <a href=\"/radar/platforms/aws\">AWS</a>, it is recommended to go through a bastion host instead of a direct connection. However, provisioning a bastion host just for that purpose can be frustrating, which is why <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager.html\">AWS Systems Manager’s Session Manager</a> provides tunneling to more comfortably connect to your servers. <strong><a href=\"https://github.com/gjbae1212/gossm\">gossm</a></strong> is an open-source CLI tool that makes the use of the Session Manager even more convenient. gossm lets you leverage the security provided by Session Manager and IAM policies from your terminal using tools such as <code>ssh</code> and <code>scp</code>. It also has some capabilities that the AWS CLI is missing, including server discovery and SSH integration.</p>",
                "radarId": 63,
                "id": "en_2020-10_202010030",
                "blip_selector": "gossm"
            },
            {
                "blip_id": 201904040,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "Arrow",
                "display_name": "Arrow",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2020-10",
                "theta": "300",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://arrow-kt.io/\">Arrow</a></strong> is promoted as the functional companion for <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin's standard library</a>. Indeed, the package of ready-to-use higher-level abstractions delivered by Arrow has proven so useful that our teams now consider Arrow a sensible default when working with Kotlin. Recently, in preparation for the 1.0 release, the Arrow team introduced several changes, including the addition of new modules but also some deprecations and removals.</p>",
                "radarId": 76,
                "id": "en_2020-10_201904040",
                "blip_selector": "arrow"
            },
            {
                "blip_id": 202005026,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Node overload",
                "display_name": "Node overload",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2020-10",
                "theta": "225",
                "tag": "stay",
                "description": "<p>Technologies, especially wildly popular ones, have a tendency to be overused. What we're seeing at the moment is <strong>Node overload</strong>, a tendency to use Node.js indiscriminately or for the wrong reasons. Among these, two stand out in our opinion. Firstly, we frequently hear that Node.js should be used so that all programming can be done in one programming language. Our view remains that <a href=\"/radar/techniques/polyglot-programming\">polyglot programming</a> is a better approach, and this still goes <a href=\"/radar/languages-and-frameworks/javascript-as-a-first-class-language\">both ways</a>. Secondly, we often hear teams cite performance as a reason to choose Node.js. Although there are myriads of more or less sensible benchmarks, this perception is rooted in history. When Node.js became popular, it was the first major framework to embrace a nonblocking programming model which made it very efficient for IO-heavy tasks. (We mentioned this in our write-up of Node.js in 2012.) Due to its single-threaded nature, Node.js was never a good choice for compute-heavy workloads, though, and now that capable nonblocking frameworks also exist on other platforms — some with elegant, modern APIs — performance is no longer a reason to choose Node.js.</p>",
                "radarId": 41,
                "id": "en_2020-10_202005026",
                "blip_selector": "node-overload"
            },
            {
                "blip_id": 202010076,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Great Expectations",
                "display_name": "Great Expectations",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2020-10",
                "theta": "64",
                "tag": "new",
                "description": "<p>With the rise of <a href=\"/radar/techniques/continuous-delivery-for-machine-learning-cd4ml\">CD4ML</a>, operational aspects of data engineering and data science have received more attention. Automated data governance is one aspect of this development. <strong><a href=\"https://docs.greatexpectations.io/en/latest/\">Great Expectations</a></strong> is a framework that enables you to craft built-in controls that flag anomalies or quality issues in data pipelines. Just as unit tests run in a build pipeline, Great Expectations makes assertions during execution of a data pipeline. This is useful not only for implementing a sort of <a href=\"https://en.wikipedia.org/wiki/Andon_(manufacturing)\">Andon</a> for data pipelines but also for ensuring that model-based algorithms remain within the operating range determined by their training data. Automated controls like these can help distribute and democratize data access and custodianship. Great Expectations also ships with a profiler tool to help understand the qualities of a particular data set and to set appropriate limits.</p>",
                "radarId": 64,
                "id": "en_2020-10_202010076",
                "blip_selector": "great-expectations"
            }
        ]
    },
    {
        "date": "2021-04",
        "blips": [
            {
                "blip_id": 202104042,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Kotlin Multiplatform Mobile",
                "display_name": "Kotlin Multiplatform Mobile",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "315",
                "tag": "new",
                "description": "<p>Following the trend of cross-platform mobile development, <strong><a href=\"https://kotlinlang.org/docs/mobile/home.html\">Kotlin Multiplatform Mobile</a></strong> (KMM) is a new entry in this space. KMM is an SDK provided by JetBrains that leverages the <a href=\"https://kotlinlang.org/docs/multiplatform.html\">multiplatform capabilities</a> in <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> and includes tools and features designed to make the end-to-end experience of building mobile cross-platform applications more enjoyable and efficient. With KMM you write code once for business logic and the app core in Kotlin and then  share it with both Android and iOS applications. Write platform-specific code only when necessary, for example, to take advantage of native UI elements; and the specific code is kept in different views for each platform. Although still in Alpha, Kotlin Multiplatform Mobile is <a href=\"https://kotlinlang.org/docs/mobile/kmm-evolution.html\">evolving rapidly</a>. We'll certainly keep an eye on it, and you should too.</p>",
                "radarId": 100,
                "id": "en_2021-04_202104042",
                "blip_selector": "kotlin-multiplatform-mobile"
            },
            {
                "blip_id": 201911007,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "AWS Cloud Development Kit",
                "display_name": "AWS Cloud Development Kit",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "192",
                "tag": "move_in",
                "description": "<p>Many of our teams who are already on AWS have found <strong><a href=\"https://docs.aws.amazon.com/cdk/latest/guide/home.html\">AWS Cloud Development Kit</a></strong> (AWS CDK) to be a sensible AWS default for enabling infrastructure provisioning. In particular, they like the use of first-class programming languages instead of configuration files which allows them to use existing tools, test approaches and skills. Like similar tools, care is still needed to ensure deployments remain easy to understand and maintain. The development kit currently supports <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>, JavaScript, Python, Java, C# and .NET. New providers are being added to the CDK core. We've also used both AWS Cloud Development Kit and HashiCorp's <a href=\"https://learn.hashicorp.com/tutorials/terraform/cdktf\">Cloud Development Kit for Terraform</a> to generate Terraform configurations and enable provisioning with the Terraform platform with success.</p>",
                "radarId": 34,
                "id": "en_2021-04_201911007",
                "blip_selector": "aws-cloud-development-kit"
            },
            {
                "blip_id": 202104021,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": ".NET 5",
                "display_name": ".NET 5",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "278",
                "tag": "new",
                "description": "<p>We don't call out every new .NET version in the Radar, but <strong>.NET 5</strong> represents a significant step forward in bringing .NET Core and .NET Framework into a single platform. Organizations should start to develop a strategy to migrate their development environments — a fragmented mix of frameworks depending on the deployment target — to a single version of .NET 5 or 6 when it becomes available. The advantage of this approach will be a common development platform regardless of the intended environment: Windows, Linux, cross-platform mobile devices (via <a href=\"/radar/tools/xamarin\">Xamarin</a>) or the browser (using <a href=\"/radar/languages-and-frameworks/blazor\">Blazor</a>). While polyglot development will remain the preferred approach for companies with the engineering culture to support it, others will find it more efficient to standardize on a single platform for .NET development. For now, we want to keep this in the Assess ring to see how well the final unified framework performs in .NET 6.</p>",
                "radarId": 95,
                "id": "en_2021-04_202104021",
                "blip_selector": "net-5"
            },
            {
                "blip_id": 202104117,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "205",
                "name": "Why Did You Render",
                "display_name": "Why Did You Render",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "7",
                "tag": "new",
                "description": "<p>When working with <a href=\"/radar/languages-and-frameworks/react-js\">React</a>, we often encounter situations where our page is very slow because some components are re-rendering when they shouldn't be. <strong><a href=\"https://github.com/welldone-software/why-did-you-render\">Why Did You Render</a></strong> is a library that helps detect why a component is re-rendering. It does this by monkey patching React. We've used it in a few of our projects to debug performance issues with great effect.</p>",
                "radarId": 67,
                "id": "en_2021-04_202104117",
                "blip_selector": "why-did-you-render"
            },
            {
                "blip_id": 202010091,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "SWR",
                "display_name": "SWR",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "346",
                "tag": "move_in",
                "description": "<p>When used in appropriate circumstances, our teams have found that the <a href=\"/radar/languages-and-frameworks/react-hooks\">React Hooks</a> library <strong><a href=\"https://github.com/vercel/swr\">SWR</a></strong> can result in cleaner code and much improved performance. SWR implements the <a href=\"https://tools.ietf.org/html/rfc5861\">stale-while-revalidate</a> HTTP caching strategy, first returning data from cache (stale), then sending the fetch request (revalidate) and finally refreshing the values with the up-to-date response. We caution teams to only use the SWR caching strategy when an application is supposed to return stale data. Note that <a href=\"https://tools.ietf.org/html/rfc2616\">HTTP</a> requires that caches respond to a request with the most up-to-date response; only in <em>carefully considered circumstances</em> is a stale response allowed to be returned.</p>",
                "radarId": 93,
                "id": "en_2021-04_202010091",
                "blip_selector": "swr"
            },
            {
                "blip_id": 202104012,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "SPA injection",
                "display_name": "SPA injection",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "120",
                "tag": "new",
                "description": "<p>The <a href=\"https://martinfowler.com/bliki/StranglerFigApplication.html\">strangler fig pattern</a> is often the default strategy for legacy modernization, where the new code wraps around the old and slowly absorbs the ability to handle all the needed functionality. That sort of \"outside-in\" approach works well for a number of legacy systems, but now that we've had enough experience with single-page applications (SPA) for them to become legacy systems themselves, we're seeing the opposite \"inside-out\" approach used to replace them. Instead of wrapping the legacy system, we instead embed the beginning of the new SPA into the HTML document containing the old one and let it slowly expand in functionality. The SPA frameworks don't even need to be the same as long as users can tolerate the performance hit of the increased page size (e.g., embedding a new <a href=\"/radar/languages-and-frameworks/react-js\">React</a> app inside an old <a href=\"/radar/languages-and-frameworks/angularjs\">AngularJS</a> one). <strong>SPA injection</strong> allows you to iteratively remove the old SPA until the new one completely takes over. Whereas a strangler fig can be viewed as a type of parasite that uses the host tree's stable external surface to support itself until it takes root and the host itself dies, this approach is more like injecting an outside agent into the host, relying on functionality of the original SPA until it can completely take over.</p>",
                "radarId": 13,
                "id": "en_2021-04_202104012",
                "blip_selector": "spa-injection"
            },
            {
                "blip_id": 202104118,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Angular Testing Library",
                "display_name": "Angular Testing Library",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "276",
                "tag": "new",
                "description": "<p>As we continue developing web applications in JavaScript, we continue enjoying the <a href=\"/radar/languages-and-frameworks/testing-library\">Testing Library</a> approach of testing applications; and carry on exploring and gaining experience with its packages — beyond that of <a href=\"/radar/languages-and-frameworks/react-testing-library\">React Testing Library</a>. <strong><a href=\"https://testing-library.com/docs/angular-testing-library/intro/\">Angular Testing Library</a></strong> brings all the benefits of its family when testing UI components in a user-centric way, pushing for more maintainable tests focused primarily on behavior rather than testing UI implementation details. Although it falls short in documentation, Angular Testing Library does provide <a href=\"https://github.com/testing-library/angular-testing-library/tree/main/apps/example-app/src/app/examples\">good sample tests</a> that helped us in getting started faster for various cases. We've had great success with this testing library in our <a href=\"/radar/languages-and-frameworks/angular\">Angular</a> projects and advise you to trial this solid testing approach.</p>",
                "radarId": 83,
                "id": "en_2021-04_202104118",
                "blip_selector": "angular-testing-library"
            },
            {
                "blip_id": 202104003,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Azure Machine Learning",
                "display_name": "Azure Machine Learning",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "210",
                "tag": "new",
                "description": "<p>We've observed before that the cloud providers push more and more services onto the market. We've also documented our concerns that sometimes the services are made available when they're not quite ready for prime time. Unfortunately, in our experience, <strong><a href=\"https://azure.microsoft.com/en-us/services/machine-learning/\">Azure Machine Learning</a></strong> falls into the latter category. One of several <a href=\"https://towardsdatascience.com/top-8-no-code-machine-learning-platforms-you-should-use-in-2020-1d1801300dd0\">recent entrants</a> in the field of <a href=\"/radar/techniques/bounded-low-code-platforms\">bounded low-code platforms</a>, Azure ML promises more convenience for data scientists. Ultimately, however, it doesn't live up to its promise; in fact, it still feels easier for our data scientists to work in Python. Despite significant efforts, we struggled to make it scale and lack of adequate documentation proved to be another issue which is why we moved it to the Hold ring.</p>",
                "radarId": 50,
                "id": "en_2021-04_202104003",
                "blip_selector": "azure-machine-learning"
            },
            {
                "blip_id": 202010088,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Streamlit",
                "display_name": "Streamlit",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "339",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://www.streamlit.io/\">Streamlit</a></strong> is an open-source application framework in Python used by data scientists for building interactive data applications. Tuning machine-learning models takes time; instead of going back and forth on the main application (the one that uses these models), we've found value in quickly building standalone prototypes in Streamlit and gathering feedback during experimentation cycles. Streamlit stands out from competitors such as <a href=\"/radar/tools/dash\">Dash</a> because of its focus on rapid prototyping and support for a wide range of visualization libraries, including <a href=\"https://plotly.com/\">Plotly</a> and <a href=\"/radar/tools/bokeh\">Bokeh</a>. We're using it in a few projects and like how we can put together interactive visualizations with very little effort.</p>",
                "radarId": 92,
                "id": "en_2021-04_202010088",
                "blip_selector": "streamlit"
            },
            {
                "blip_id": 202104089,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Flipper",
                "display_name": "Flipper",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "68",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/facebook/flipper\">Flipper</a></strong> is an extensible mobile application debugger. Out of the box it supports profiling, interactive layout inspection, log viewer and a network inspector for iOS, Android and <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> applications. Compared to other debugging tools for mobile apps, we find Flipper to be lightweight, feature rich and easy to set up.</p>",
                "radarId": 56,
                "id": "en_2021-04_202104089",
                "blip_selector": "flipper"
            },
            {
                "blip_id": 202104083,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Dagster",
                "display_name": "Dagster",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "294",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/dagster-io/dagster\">Dagster</a></strong> is an open-source data orchestration framework for machine learning, analytics and plain ETL data pipelines. Unlike other task-driven frameworks, Dagster is aware of data flowing through the pipeline and can provide type-safety. With this unified view of pipelines and assets produced, Dagster can schedule and orchestrate Pandas, <a href=\"/radar/platforms/apache-spark\">Spark</a>, SQL or anything else that Python can invoke. The framework is relatively new, and we recommend that you assess its capabilities for your data pipelines.</p>",
                "radarId": 97,
                "id": "en_2021-04_202104083",
                "blip_selector": "dagster"
            },
            {
                "blip_id": 202010078,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "k6",
                "display_name": "k6",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "55",
                "tag": "move_in",
                "description": "<p>We've had a bit more experience performance testing with <a href=\"https://k6.io/\"><strong>k6</strong></a> since we first covered it in the Radar, and with good results. Our teams have enjoyed the focus on the developer experience and flexibility of the tool. Although it's easy to get started with k6 all on its own, it really shines with its ease of integration into a developer ecosystem. For example, using the <a href=\"https://k6.io/docs/results-visualization/datadog\">Datadog adapter</a>, one team was quickly able to visualize performance in a distributed system and identify significant concerns before releasing the system to production. Another team, with the commercial version of k6, was able to use the <a href=\"https://marketplace.visualstudio.com/items?itemName=k6.k6-load-test&ssr=false\">Azure pipelines marketplace extension</a> to wire performance tests into their CD pipeline and get Azure DevOps reporting with little effort. Since k6 supports thresholds that allow for automated testing assertions out of the box, it's relatively easy to add a stage to your pipeline that detects performance degradation of new changes, adding a powerful feedback mechanism for developers.</p>",
                "radarId": 58,
                "id": "en_2021-04_202010078",
                "blip_selector": "k6"
            },
            {
                "blip_id": 202010032,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "330",
                "name": "Open Application Model (OAM)",
                "display_name": "Open Application Model (OAM)",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2021-04",
                "theta": "123",
                "tag": "refresh_writeup",
                "description": "<p>The <strong><a href=\"https://oam.dev/\">Open Application Model (OAM)</a></strong> is an attempt to bring some standardization to the space of shaping infrastructure platforms as products. Using the abstractions of components, application configurations, scopes and traits, developers can describe their applications in a platform-agnostic way, while platform implementers define their platform in terms of workload, trait and scope. Since we last talked about the OAM, we've followed one of its first implementations with interest, <a href=\"https://kubevela.io/\">KubeVela</a>. KubeVela is close to release 1.0, and we're curious to see if implementations like this can substantiate the promise of the OAM idea.</p>",
                "radarId": 23,
                "id": "en_2021-04_202010032",
                "blip_selector": "open-application-model-oam"
            },
            {
                "blip_id": 202104045,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "LVGL",
                "display_name": "LVGL",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "327",
                "tag": "new",
                "description": "<p>With the increasing popularity of smart home and wearable devices, demand for intuitive graphical user interfaces (GUIs)is increasing. However, if you're engaged in embedded device development, rather than Android/iOS, GUI development may take a lot of effort. As an open-source embedded graphics library, <strong><a href=\"https://github.com/lvgl/lvgl\">LVGL</a></strong> has become increasingly popular. LVGL has been adapted to mainstream embedded platforms such as NXP, STM32, PIC, Arduino, and ESP32. It has a very small memory footprint: 64 kB flash and 8 kB RAM is enough to make it work, and it can run smoothly on various Cortex-M0 low-power MCUs. LVGL supports input types such as touchscreen, mouse and buttons and contains more than 30 controls, including TileView suitable for smart watches. The MIT license it chose doesn’t restrict enterprise and commercial use. Our teams’ feedback on this tool has been positive and one of our projects using LVGL is already in production, more specifically in small batch manufacturing.</p>",
                "radarId": 101,
                "id": "en_2021-04_202104045",
                "blip_selector": "lvgl"
            },
            {
                "blip_id": 202104048,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Operator Framework",
                "display_name": "Operator Framework",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "42",
                "tag": "new",
                "description": "<p><strong><a href=\"https://operatorframework.io/\">Operator Framework</a></strong> is a set of open-source tools that simplifies building and managing the lifecycle of <a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\">Kubernetes operators</a>. The Kubernetes operator pattern, originally <a href=\"https://web.archive.org/web/20170129131616/https://coreos.com/blog/introducing-operators.html\">introduced by CoreOS</a>, is an approach to encapsulate the knowledge of operating an application using Kubernetes native capabilities; it includes <em>resources</em> to be managed and <em>controller code</em> that ensures the resources are matching their target state. This approach has been used to extend Kubernetes to manage <a href=\"https://operatorhub.io/\">many applications</a>, particularly the stateful ones, natively. Operator Framework has three components: <a href=\"https://sdk.operatorframework.io/\">Operator SDK</a>, which simplifies building, testing and packaging Kubernetes operators; <a href=\"https://github.com/operator-framework/operator-lifecycle-manager/\">Operator lifecycle manager</a> to install, manage and upgrade the operators; and a <a href=\"https://operatorhub.io/\">catalog</a> to publish and share third-party operators. Our teams have found Operator SDK particularly powerful in rapidly developing Kubernetes-native applications.</p>",
                "radarId": 74,
                "id": "en_2021-04_202104048",
                "blip_selector": "operator-framework"
            },
            {
                "blip_id": 202104116,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Webpack 5 Module Federation",
                "display_name": "Webpack 5 Module Federation",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "351",
                "tag": "new",
                "description": "<p>The release of the <strong><a href=\"https://webpack.js.org/concepts/module-federation/\">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=\"/radar/techniques/micro-frontends\">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=\"/radar/techniques/import-maps-for-micro-frontends\">import maps</a>, which might eventually become part of the W3C standard.</p>",
                "radarId": 104,
                "id": "en_2021-04_202104116",
                "blip_selector": "webpack-5-module-federation"
            },
            {
                "blip_id": 202104110,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Separate code and pipeline ownership",
                "display_name": "Separate code and pipeline ownership",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "113",
                "tag": "new",
                "description": "<p>Ideally, but especially when teams are practicing DevOps, the deployment pipeline and the code being deployed should be owned by the same team. Unfortunately, we still see organizations where there is <strong>separate code and pipeline ownership</strong>, with the deployment pipeline configuration owned by the infrastructure team; this results in delays to changes, barriers to improvements and a lack of development team ownership and involvement in deployments. One cause of this can clearly be the separate team, another can be the desire to retain “gatekeeper” processes and roles. Although there can be legitimate reasons for using this approach (e.g., regulatory control), in general we find it painful and unhelpful.</p>",
                "radarId": 32,
                "id": "en_2021-04_202104110",
                "blip_selector": "separate-code-and-pipeline-ownership"
            },
            {
                "blip_id": 202104126,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "307",
                "name": "Remote - WSL",
                "display_name": "Remote - WSL",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "28",
                "tag": "new",
                "description": "<p>Over the past few years <a href=\"https://docs.microsoft.com/en-us/windows/wsl/\">Windows Subsystem for Linux (WSL)</a> has come up a few times in our discussions. Although we liked what we saw, including the improvements in WSL 2, it never made it into the Radar. In this edition we want to highlight an extension for Visual Studio Code that greatly improves the experience working with WSL. Although Windows-based editors could always access files on a WSL file system, they were unaware of the isolated Linux environment. With the <strong><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl\">Remote - WSL</a></strong> extension, Visual Studio Code becomes aware of WSL, allowing developers to launch a Linux shell. This also enables debugging of binaries running inside WSL from Windows. Jetbrains' IntelliJ too has seen steady improvement in its <a href=\"https://youtrack.jetbrains.com/issue/IDEA-171510#focus=Comments-27-4155034.0-0\">support for WSL</a>.</p>",
                "radarId": 76,
                "id": "en_2021-04_202104126",
                "blip_selector": "remote-wsl"
            },
            {
                "blip_id": 202104007,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Homemade infrastructure-as-code (IaC) products",
                "display_name": "Homemade infrastructure-as-code (IaC) products",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "240",
                "tag": "new",
                "description": "<p>Products supported by companies or communities are in constant evolution, at least the ones that get traction in the industry. Sometimes organizations tend to build frameworks or abstractions on top of the existing external products to cover very specific needs, thinking that the adaptation will provide more benefits than the existing ones. We're seeing organizations trying to create <strong>homemade infrastructure-as-code (IaC) products</strong> on top of the existing ones; they underestimate the required effort to keep those solutions evolving according to their needs, and after a short period of time, they realize that the original version is in much better shape than their own; there are even cases where the abstraction on top of the external product reduces the original capabilities. Although we've seen success stories of organizations building homemade solutions, we want to caution about this approach as the effort required to do so isn't negligible, and a long-term product vision is required to have the expected outcomes.</p>",
                "radarId": 51,
                "id": "en_2021-04_202104007",
                "blip_selector": "homemade-infrastructure-as-code-iac-products"
            },
            {
                "blip_id": 202104026,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Deployment drift radiator",
                "display_name": "Deployment drift radiator",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "156",
                "tag": "new",
                "description": "<p>A <strong>deployment drift radiator</strong> makes version drift visible for deployed software across multiple environments. Organizations using automated deployments may require manual approvals for environments that get closer to production, meaning the code in these environments might well be lagging several versions behind current development. This technique makes this lag visible via a simple dashboard showing how far behind each deployed component is for each environment. This helps to highlight the opportunity cost of completed software not yet in production while drawing attention to related risks such as security fixes not yet deployed.</p>",
                "radarId": 19,
                "id": "en_2021-04_202104026",
                "blip_selector": "deployment-drift-radiator"
            },
            {
                "blip_id": 202104019,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Longhorn",
                "display_name": "Longhorn",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "49",
                "tag": "new",
                "description": "<p><strong><a href=\"https://longhorn.io/\">Longhorn</a></strong> is a distributed block storage system for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. There are many <a href=\"https://kubernetes-csi.github.io/docs/drivers.html\">persistent storage options</a> for Kubernetes; unlike most, however, Longhorn is built from the ground up to provide incremental snapshots and backups, thereby easing the pain of running a replicated storage for non–cloud-hosted Kubernetes. With the recent <a href=\"https://longhorn.io/blog/longhorn-v1.1.0/\">experimental support for ReadWriteMany (RWX)</a> you can even mount the same volume for read and write access across many nodes. Choosing the right storage system for Kubernetes is a nontrivial task, and we recommend you assess Longhorn based on your needs.</p>",
                "radarId": 73,
                "id": "en_2021-04_202104019",
                "blip_selector": "longhorn"
            },
            {
                "blip_id": 202104011,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "River",
                "display_name": "River",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "343",
                "tag": "new",
                "description": "<p>At the heart of many approaches to machine learning lies the creation of a model from a set of training data. Once a model is created, it can be used over and over again. However, the world isn't stationary, and often the model needs to change as new data becomes available. Simply re-running the model creation step can be slow and <a href=\"https://medium.com/syncedreview/the-staggering-cost-of-training-sota-ai-models-e329e80fa82\">costly</a>. Incremental learning addresses this issue, making it possible to learn from streams of data incrementally to react to change faster. As a bonus the compute and memory requirements are lower and predictable. In our implementations we've had good experience with the <strong><a href=\"https://riverml.xyz/dev/\">River</a></strong> framework, but so far we've added checks, sometimes manual, after updates to the model.</p>",
                "radarId": 103,
                "id": "en_2021-04_202104011",
                "blip_selector": "river"
            },
            {
                "blip_id": 202104057,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Yelp detect-secrets",
                "display_name": "Yelp detect-secrets",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "14",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/Yelp/detect-secrets\">Yelp detect-secrets</a></strong> is a Python module for detecting secrets within a codebase; it scans files within a directory looking for secrets. It can be used as a <a href=\"/radar/tools/git\">Git</a> pre-commit hook or to perform a scan in multiple places within the CI/CD pipeline. It comes with a default configuration that makes it very easy to use but can be modified to suit your needs. You can also install custom plugins to add to its default heuristic searches. Compared to similar offerings, we found that this tool detects more types of secrets with its out-of-the-box configuration.</p>",
                "radarId": 78,
                "id": "en_2021-04_202104057",
                "blip_selector": "yelp-detect-secrets"
            },
            {
                "blip_id": 202010048,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Materialize",
                "display_name": "Materialize",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "231",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://materialize.io/\">Materialize</a></strong> is a streaming database that enables you to do incremental computation without complicated data pipelines. Just describe your computations via standard SQL views and connect Materialize to the data stream. The underlying differential data flow engine performs incremental computation to provide consistent and correct output with minimal latency. Unlike traditional databases, there are no restrictions in defining these materialized views, and the computations are executed in real time. We've used Materialize, together with Spring Cloud Stream and Kafka, to query over streams of events for insights in a distributed event-driven system, and we quite like the setup.</p>",
                "radarId": 37,
                "id": "en_2021-04_202010048",
                "blip_selector": "materialize"
            },
            {
                "blip_id": 202104047,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "On-demand modules",
                "display_name": "On-demand modules",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "332",
                "tag": "new",
                "description": "<p><strong><a href=\"https://developer.android.com/codelabs/on-demand-dynamic-delivery#0\">On-demand modules</a></strong> for Android is a framework that allows tailored APKs containing only required functionality to be downloaded and installed for a suitably structured app. This could be worth trialing for larger apps where download speed might be an issue, or if a user is likely only to use some functionality on initial installation. It can also simplify the handling of multiple devices without requiring different APKs. A similar framework is available for <a href=\"https://developer.apple.com/app-clips/\">iOS</a>.</p>",
                "radarId": 91,
                "id": "en_2021-04_202104047",
                "blip_selector": "on-demand-modules"
            },
            {
                "blip_id": 201911008,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Delta Lake",
                "display_name": "Delta Lake",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "218",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://delta.io/\">Delta Lake</a></strong> is an <a href=\"https://github.com/delta-io/delta\">open-source storage layer</a>, implemented by Databricks, that attempts to bring ACID transactions to big data processing. In our Databricks-enabled <a href=\"/radar/techniques/data-lake\">data lake</a> or <a href=\"/radar/techniques/data-mesh\">data mesh</a> projects, our teams continue to prefer using Delta Lake storage over the direct use of file storage types such <a href=\"https://aws.amazon.com/s3/\">S3</a> or <a href=\"https://azure.microsoft.com/en-au/services/storage/data-lake-storage/\">ADLS</a>. Of course this is limited to projects that use storage platforms that support <a href=\"https://docs.delta.io/latest/delta-storage.html\">Delta Lake</a> when using <a href=\"https://parquet.apache.org/\">Parquet</a> file formats. Delta Lake facilitates concurrent data read/write use cases where file-level transactionality is required. We find Delta Lake's seamless integration with Apache Spark <a href=\"https://docs.databricks.com/delta/delta-batch.html\">batch</a> and <a href=\"https://docs.databricks.com/delta/delta-streaming.html\">micro-batch</a> APIs greatly helpful, particularly features such as <a href=\"https://databricks.com/blog/2019/02/04/introducing-delta-time-travel-for-large-scale-data-lakes.html\">time travel</a> — accessing data at a particular point in time or commit reversion — as well as <a href=\"https://databricks.com/blog/2019/09/24/diving-into-delta-lake-schema-enforcement-evolution.html\">schema evolution</a> support on write; though there are some limitations on these features.</p>",
                "radarId": 36,
                "id": "en_2021-04_201911008",
                "blip_selector": "delta-lake"
            },
            {
                "blip_id": 793,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "388",
                "name": "SAFe™",
                "display_name": "SAFe™",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2021-04",
                "theta": "124",
                "tag": "refresh_writeup",
                "description": "<p>Our positioning regarding \"being agile before doing agile\" and our opinions around this topic shouldn't come as a surprise; but since <strong><a href=\"http://www.scaledagileframework.com/\">SAFe™</a></strong> (Scaled Agile Framework®), per Gartner’s May 2019<a href=\"http://go.scaledagile.com/Gartner-a.html\"> report</a>, is the most considered and most used enterprise agile framework, and since we're seeing more and more enterprises going through organizational changes, we thought it was time to raise awareness on this topic again. We've come across organizations struggling with SAFe's over-standardized, phase-gated processes. Those processes create friction in the organizational structure and its operating model. It can also promote silos in the organization, preventing platforms from becoming real business capabilities enablers. The top-down control generates waste in the value stream and discourages engineering talent creativity, while limiting autonomy and experimentation in the teams. Rather than measuring effort and focusing on standardized ceremonies, we recommend a leaner, value-driven approach and governance to help eliminate organizational friction such as <a href=\"https://www.thoughtworks.com/books/edge\">EDGE</a>, as well as a <a href=\"/radar/techniques/team-cognitive-load\">team cognitive load</a> assessment to identify types of teams and determine how they should better interact with each other.</p>\n\n<p>Scaled Agile Framework® and SAFe™ are trademarks of Scaled Agile, Inc.</p>",
                "radarId": 31,
                "id": "en_2021-04_793",
                "blip_selector": "safe"
            },
            {
                "blip_id": 202104058,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Zally",
                "display_name": "Zally",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "7",
                "tag": "new",
                "description": "<p>As the API specification ecosystem matures, we're seeing more tools built to automate style checks. <strong><a href=\"https://github.com/zalando/zally\">Zally</a></strong> is a minimalist OpenAPI linter that helps to ensure an API conforms to the team's API style guide. Out of the box, it will validate against a rule set developed for <a href=\"https://opensource.zalando.com/restful-api-guidelines/\">Zalando's API style guide</a>, but it also supports a Kotlin extension mechanism to develop custom rules. Zally includes a web UI that provides an intuitive interface for understanding style violations and includes a CLI that makes it easy to plug into your CD pipeline.</p>",
                "radarId": 79,
                "id": "en_2021-04_202104058",
                "blip_selector": "zally"
            },
            {
                "blip_id": 1330,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Distroless Docker images",
                "display_name": "Distroless Docker images",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2021-04",
                "theta": "158",
                "tag": "refresh_writeup",
                "description": "<p>When building <a href=\"/radar/platforms/docker\">Docker</a> images for our applications, we're often concerned with two things: the security and the size of the image. Traditionally, we've used <a href=\"/radar/techniques/container-security-scanning\">container security scanning</a> tools to detect and patch <a href=\"https://cve.mitre.org/\">common vulnerabilities and exposures</a> and small distributions such as <a href=\"https://alpinelinux.org/\">Alpine Linux</a> to address the image size and distribution performance. But with rising security threats, eliminating all possible attack vectors is more important than ever. That's why <strong>distroless Docker images</strong> are becoming the default choice for deployment containers. Distroless Docker images reduce the footprint and dependencies by doing away with a full operating system distribution. This technique reduces security scan noise and the application attack surface. Moreover, fewer vulnerabilities need to be patched and as a bonus, these smaller images are more efficient. Google has published a set of <a href=\"https://github.com/GoogleContainerTools/distroless\">distroless container images</a> for different languages. You can create distroless application images using the Google build tool <a href=\"https://bazel.build/\">Bazel</a> or simply use multistage Dockerfiles. Note that distroless containers by default don't have a shell for debugging. However, you can easily find debug versions of distroless containers online, including a <a href=\"https://busybox.net/downloads/BusyBox.html\">BusyBox shell</a>. Distroless Docker images is a technique pioneered by Google and, in our experience, is still largely confined to Google-generated images. We would be more comfortable if there were more than one provider to choose from. Also, use caution when applying  <a href=\"/radar/tools/trivy\">Trivy</a> or similar vulnerability scanners since distroless containers are only supported in more recent versions.</p>",
                "radarId": 8,
                "id": "en_2021-04_1330",
                "blip_selector": "distroless-docker-images"
            },
            {
                "blip_id": 202104127,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Team cognitive load",
                "display_name": "Team cognitive load",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "113",
                "tag": "new",
                "description": "<p>A system's architecture mimics organizational structure and its communication. It's not big news that we should be intentional about how teams interact — see, for instance, the <a href=\"/radar/techniques/inverse-conway-maneuver\">Inverse Conway Maneuver</a>. Team interaction is one of the variables for how fast and how easily teams can deliver value to their customers. We were happy to find a way to measure these interactions; we used the <a href=\"https://teamtopologies.com/book\">Team Topologies</a> author's <a href=\"https://github.com/TeamTopologies/Team-Cognitive-Load-Assessment\">assessment</a> which gives you an understanding of how easy or difficult the teams find it to build, test and maintain their services. By measuring <strong>team cognitive load</strong>, we could better advise our clients on how to change their teams' structure and evolve their interactions.</p>",
                "radarId": 14,
                "id": "en_2021-04_202104127",
                "blip_selector": "team-cognitive-load"
            },
            {
                "blip_id": 202104075,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Apache Pinot",
                "display_name": "Apache Pinot",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "188",
                "tag": "new",
                "description": "<p><strong><a href=\"https://pinot.apache.org/\">Apache Pinot</a></strong> is a distributed OLAP data store, built to deliver real-time analytics with low latency. It can ingest from batch data sources (such as Hadoop HDFS, Amazon S3, Azure ADLS or Google Cloud Storage) as well as stream data sources (such as Apache Kafka). If the need is user-facing, low-latency analytics, SQL-on-Hadoop solutions don't offer the low latency that is needed. Modern OLAP engines like Apache Pinot (or <a href=\"https://druid.apache.org/\">Apache Druid</a> and <a href=\"https://clickhouse.tech/\">Clickhouse</a> among others) can achieve much lower latency and are particularly suited in contexts where fast analytics, such as aggregations, are needed on immutable data, possibly, with real-time data ingestion. Originally built by LinkedIn, Apache Pinot entered Apache incubation in late 2018 and has since added a plugin architecture and SQL support among other key capabilities. Apache Pinot can be fairly complex to operate and has many moving parts, but if your data volumes are large enough and you need low-latency query capability, we recommend you assess Apache Pinot.</p>",
                "radarId": 40,
                "id": "en_2021-04_202104075",
                "blip_selector": "apache-pinot"
            },
            {
                "blip_id": 202104014,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Variable fonts",
                "display_name": "Variable fonts",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "257",
                "tag": "new",
                "description": "<p><strong>Variable fonts</strong> are a way of avoiding the need to find and include separate font files for different weights and styles. Everything is in one font file, and you can use properties to select which style and weight you need. While not new, we still see sites and projects that could benefit from this simple approach. If you have pages that are including many variations of the same font, we suggest trying out variable fonts.</p>",
                "radarId": 39,
                "id": "en_2021-04_202104014",
                "blip_selector": "variable-fonts"
            },
            {
                "blip_id": 202104015,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "205",
                "name": "axe-core",
                "display_name": "axe-core",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "85",
                "tag": "new",
                "description": "<p>Making the web inclusive requires serious attention to ensure accessibility is considered <em>and</em> validated at all stages of software delivery. Many of the popular accessibility testing tools are designed for testing after a web application is complete; as a result, issues are detected late and often are harder to fix, accumulating as debt. In our recent internal work on ThoughtWorks websites, we included the open-source accessibility (a11y) testing engine <strong><a href=\"https://github.com/dequelabs/axe-core\">axe-core</a></strong> as part of our build processes. It provided team members with early feedback on adherence to accessibility rules, even during early increments. Not every issue can be found through automated inspection, though. Extending the functionality of axe-core is the commercially available <a href=\"https://www.deque.com/axe/devtools/\">axe DevTools</a>, including functionality that guides team members through exploratory testing for a majority of accessibility issues.</p>",
                "radarId": 53,
                "id": "en_2021-04_202104015",
                "blip_selector": "axe-core"
            },
            {
                "blip_id": 202104100,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "NATS",
                "display_name": "NATS",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "237",
                "tag": "new",
                "description": "<p><a href=\"https://nats.io/about/\"><strong>NATS</strong></a> is a fast, secure message queueing system with an unusually wide range of features and potential deployment targets. At first glance, you would be forgiven for asking why the world needs another message queueing system. Message queues have been around in various forms for nearly as long as businesses have been using computers and have undergone years of refinement and optimization for various tasks. But NATS has several interesting characteristics and is unique in its ability to scale from embedded controllers to global, cloud-hosted superclusters. We're particularly intrigued by NATS's intent to support a continuous streaming flow of data from mobile devices and IoT and through a network of interconnected systems. However, some tricky issues need to be addressed, not the least of which is ensuring consumers see only the messages and topics to which they're allowed access, especially when the network spans organizational boundaries. NATS 2.0 introduced a security and access control framework that supports multitenant clusters where accounts restrict a user's access to queues and topics. Written in Go, NATS has primarily been embraced by the Go language community. Although clients exist for pretty much all widely used programming languages, the Go client is by far the most popular. However, some of our developers have found that all the language client libraries tend to reflect the Go origins of codebase. Increasing bandwidth and processing power on small, wireless devices means that the volume of data businesses must consume in real time will only increase. Assess NATS as a possible platform for streaming that data within and among businesses.</p>",
                "radarId": 46,
                "id": "en_2021-04_202104100",
                "blip_selector": "nats"
            },
            {
                "blip_id": 202104107,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Prowler",
                "display_name": "Prowler",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "34",
                "tag": "new",
                "description": "<p>We welcome the increased availability and maturity of <a href=\"/radar/techniques/infrastructure-configuration-scanner\">infrastructure configuration scanning</a> tools: <strong><a href=\"https://github.com/toniblyx/prowler\">Prowler</a></strong> helps teams scan their AWS infrastructure setups and improve security based on the results. Although Prowler has been around for a while, it has evolved a lot over the past few years, and we've found it very valuable to enable teams to take responsibility for proper security with a short feedback loop. Prowler categorizes <a href=\"https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf\">AWS CIS benchmarking</a> checks into different groups (Identity and Access Management, Logging, Monitoring, Networking, CIS Level 1, CIS Level 2, EKS-CIS), and it includes many checks that help you gain insights into your PCI DSS and GDPR compliance.</p>",
                "radarId": 62,
                "id": "en_2021-04_202104107",
                "blip_selector": "prowler"
            },
            {
                "blip_id": 202104050,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "React Hook Form",
                "display_name": "React Hook Form",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "335",
                "tag": "new",
                "description": "<p>Building forms for the web remains one of the perennial challenges of front-end development, in particular with <a href=\"/radar/languages-and-frameworks/react-js\">React</a>. Many of our teams working with React have been using <a href=\"/radar/languages-and-frameworks/formik\">Formik</a> to make this easier, but some are now assessing <strong><a href=\"https://react-hook-form.com/\">React Hook Form</a></strong> as a potential alternative. <a href=\"/radar/languages-and-frameworks/react-hooks\">React Hooks</a> already existed when React Hook Form was created, so it could use them as a first-class concept: the framework is registering and tracking form elements as uncontrolled components via a hook, thereby significantly reducing the need for re-rendering. It's also quite lightweight in size and in the amount of boilerplate code needed.</p>",
                "radarId": 102,
                "id": "en_2021-04_202104050",
                "blip_selector": "react-hook-form"
            },
            {
                "blip_id": 202104044,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Lightweight approach to RFCs",
                "display_name": "Lightweight approach to RFCs",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "135",
                "tag": "new",
                "description": "<p>As organizations drive toward <a href=\"/radar/techniques/evolutionary-architecture\">evolutionary architecture</a>, it's important to capture decisions around design, architecture, techniques and teams' ways of workings. The process of collecting and aggregating feedback that will lead to these decisions begin with Request for Comments (RfCs). RfCs are a technique for collecting context, design and architectural ideas and collaborating with teams to ultimately come to decisions along with their context and consequences. We recommend that organizations take a <strong>lightweight approach to RFCs</strong> by using a simple standardized template across many teams as well as version control to capture RfCs.</p>\n\n<p>It's important to capture these in an audit of these decisions to benefit future team members and to capture the technical and business evolution of an organization. Mature organizations have used RfCs in autonomous teams to drive better communication and collaboration especially in cross-team relevant decisions.</p>",
                "radarId": 11,
                "id": "en_2021-04_202104044",
                "blip_selector": "lightweight-approach-to-rfcs"
            },
            {
                "blip_id": 202104122,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Graal Native Image",
                "display_name": "Graal Native Image",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "70",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.graalvm.org/reference-manual/native-image/\">Graal Native Image</a></strong> is a technology that compiles Java code into an operating system's native binary — in the form of a statically linked executable or a shared library. A native image is optimized to reduce the memory footprint and startup time of an application. Our teams have successfully used Graal native images, executed as small Docker containers, in the <a href=\"/radar/techniques/serverless-architecture\">serverless architecture</a> where reducing start time matters. Although designed for use with programming languages such as <a href=\"/radar/languages-and-frameworks/go-language\">Go</a> or <a href=\"/radar/languages-and-frameworks/rust\">Rust</a> that natively compile and require smaller binary sizes and shorter start times, Graal Native Image can be equally useful to teams that have other requirements and want to use JVM-based languages.</p>\n\n<p>Graal Native Image Builder, <em>native-image</em>, supports JVM-based languages — such as Java, Scala, Clojure and Kotlin — and builds executables on multiple operating systems including Mac OS, Windows and multiple distributions of Linux. Since it requires a closed-world assumption, where all code is known at compile time, additional configuration is needed for features such as <em>reflection</em> or <em>dynamic class loading</em> where types can't be deduced at build time from the code alone.</p>",
                "radarId": 70,
                "id": "en_2021-04_202104122",
                "blip_selector": "graal-native-image"
            },
            {
                "blip_id": 202104013,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "UI/BFF shared types",
                "display_name": "UI/BFF shared types",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "98",
                "tag": "new",
                "description": "<p>With <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> becoming a common language for front-end development and <a href=\"/radar/platforms/node-js\">Node.js</a> becoming the preferred <a href=\"/radar/techniques/bff-backend-for-frontends\">BFF</a> technology, we're seeing increasing use of <strong>UI/BFF shared types</strong>. In this technique, a single set of type definitions is used to define both the data objects returned by front-end queries and the data served to satisfy those queries by the back-end server. Ordinarily, we would be cautious about this practice because of the unnecessarily tight coupling it creates across process boundaries. However, many teams are finding that the benefits of this approach outweigh any risks of tight coupling. Since the BFF pattern works best when the same team owns both the UI code and the BFF, often storing both components in the same repository, the UI/BFF pair can be viewed as a single cohesive system. When the BFF offers strongly typed queries, the results can be tailored to the specific needs of the frontend rather than reusing a single, general-purpose entity that must serve the needs of many consumers and contain more fields than actually required. This reduces the risk of accidentally exposing data that the user shouldn't see, prevents incorrect interpretation of the returned data object and makes the query more expressive. This practice is particularly useful when implemented with <a href=\"/radar/languages-and-frameworks/io-ts\">io-ts</a> to enforce the run-time type safety.</p>",
                "radarId": 16,
                "id": "en_2021-04_202104013",
                "blip_selector": "ui-bff-shared-types"
            },
            {
                "blip_id": 202010046,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "LitElement",
                "display_name": "LitElement",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "318",
                "tag": "move_in",
                "description": "<p>Steady progress has been made since we first wrote about <a href=\"/radar/platforms/web-components-standard\">Web Components</a> in 2014. <strong><a href=\"https://lit-element.polymer-project.org/\">LitElement</a></strong>, part of the <a href=\"https://www.polymer-project.org/\">Polymer Project</a>, is a simple library that you can use to create lightweight web components. It's really just a base class that removes the need for a lot of the common boilerplate, making writing web components a lot easier. We've had success using it on projects, and as we see the technology maturing and the library being well liked, LitElement is becoming more commonly used in our Web Components-based projects.</p>",
                "radarId": 89,
                "id": "en_2021-04_202010046",
                "blip_selector": "litelement"
            },
            {
                "blip_id": 202104023,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Import maps for micro frontends",
                "display_name": "Import maps for micro frontends",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "131",
                "tag": "new",
                "description": "<p>When composing an application out of several <a href=\"/radar/techniques/micro-frontends\">micro frontends</a>, some part of the system needs to decide which micro frontends to load and where to load them from. So far, we've either built custom solutions or relied on a broader framework like <a href=\"/radar/languages-and-frameworks/single-spa\">single-spa</a>. Now there is a new standard, <a href=\"https://github.com/WICG/import-maps\">import maps</a>, that helps in both cases. Our first experiences show that using <strong>import maps for micro frontends</strong> allows for a neat separation of concerns. The JavaScript code states what to import and a small script tag in the initial HTML response specifies where to load the frontends from. That HTML is obviously generated on the server side, which makes it possible to use some dynamic configuration during its rendering. In many ways this technique reminds us of linker/loader paths for dynamic Unix libraries. At the moment import maps are only supported by Chrome, but with the <a href=\"https://github.com/systemjs/systemjs\">SystemJS</a> polyfill they're ready for wider use.</p>",
                "radarId": 22,
                "id": "en_2021-04_202104023",
                "blip_selector": "import-maps-for-micro-frontends"
            },
            {
                "blip_id": 202104025,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "380",
                "name": "Ticket-driven platform operating models",
                "display_name": "Ticket-driven platform operating models",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "102",
                "tag": "new",
                "description": "<p>One of the ultimate goals of a platform should be to reduce ticket-based processes to an absolute minimum, as they create queues in the value stream. Sadly, we still see organizations not pushing forcefully enough toward this important goal, resulting in a <strong>ticket-driven platform operating model</strong>. This is particularly frustrating when ticket-based processes are put in front of platforms that are built on top of the self-service and API-driven features of public cloud vendors. It's hard and not necessary to achieve self-service with very few tickets right from the start, but it needs to be the destination.</p>\n\n<p>Over-reliance on bureaucracy and lack of trust are among the causes of this reluctance to move away from ticket-based processes. Baking more automated checks and alerts into your platform is one way to help cut the cord from approval processes with tickets. For example, <a href=\"/radar/techniques/run-cost-as-architecture-fitness-function\">provide teams with visibility into their run costs</a> and put in automated guardrails to avoid accidental explosion of costs. Implement <a href=\"/radar/techniques/security-policy-as-code\">security policy as code</a> and use <a href=\"/radar/techniques/infrastructure-configuration-scanner\">configuration scanners</a> or analyzers like <a href=\"/radar/tools/recommender\">Recommender</a> to help teams do the right thing.</p>",
                "radarId": 33,
                "id": "en_2021-04_202104025",
                "blip_selector": "ticket-driven-platform-operating-models"
            },
            {
                "blip_id": 1101,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "Platform engineering product teams",
                "display_name": "Platform engineering product teams",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "120",
                "tag": "move_in",
                "description": "<p>As noted in one of the themes for this edition, the industry is increasingly gaining experience with <strong>platform engineering product teams</strong> that create and support internal platforms. These platforms are used by teams across an organization and accelerate application development, reduce operational complexity and improve time to market. With increasing adoption we're also clearer on both good and bad patterns for this approach. When creating a platform, it’s critical to have clearly defined customers and products that will benefit from it rather than building in a vacuum. We caution against <a href=\"/radar/techniques/layered-platform-teams\">layered platform teams</a> that simply preserve existing technology silos but apply the \"platform team\" label as well as against ticket-driven platform operating models. We're still big fans of using concepts from <a href=\"https://teamtopologies.com/\">Team Topologies</a> as we think about how best to organize platform teams. We consider platform engineering product teams to be a standard approach and a significant enabler for high-performing IT.</p>",
                "radarId": 4,
                "id": "en_2021-04_1101",
                "blip_selector": "platform-engineering-product-teams"
            },
            {
                "blip_id": 201904011,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "Terratest",
                "display_name": "Terratest",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "17",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://github.com/gruntwork-io/terratest\">Terratest</a></strong> caught our attention in the past as an interesting option for infrastructure testing. Since then, our teams have been using it, and they're very excited about it because of its stability and the experience it provides. Terratest is a Golang library that makes it easier to write automated tests for infrastructure code. Using infrastructure-as-code tools such as <a href=\"/radar/tools/terraform\">Terraform</a>, you can create real infrastructure components (such as servers, firewalls, or load balancers) to deploy applications on them and then validate the expected behavior using Terratest. At the end of the test, Terratest can undeploy the apps and clean up resources. This makes it largely useful for end-to-end tests of your infrastructure in a real environment.</p>",
                "radarId": 65,
                "id": "en_2021-04_201904011",
                "blip_selector": "terratest"
            },
            {
                "blip_id": 202104093,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Contextual bandits",
                "display_name": "Contextual bandits",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "165",
                "tag": "new",
                "description": "<p><a href=\"https://towardsdatascience.com/contextual-bandits-and-reinforcement-learning-6bdfeaece72a\"><strong>Contextual bandits</strong></a> is a type of reinforcement learning that is well suited for problems with exploration/exploitation trade-offs. Named after \"bandits,\" or slot machines, in casinos, the algorithm explores different options to learn more about expected outcomes and balances it by exploiting the options that perform well. We've successfully used this technique in scenarios where we've had little data to train and deploy other machine-learning models. The fact that we can add context to this explore/exploit trade-off makes it suitable for a wide variety of use cases including A/B testing, recommendations and layout optimizations.</p>",
                "radarId": 7,
                "id": "en_2021-04_202104093",
                "blip_selector": "contextual-bandits"
            },
            {
                "blip_id": 202104052,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Remote mob programming",
                "display_name": "Remote mob programming",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "107",
                "tag": "new",
                "description": "<p>Mob programming is one of those techniques that our teams have found to be easier when done remotely. <strong>Remote mob programming</strong> is allowing teams to quickly \"mob\" around an issue or piece of code without the physical constraints of only being able to fit so many people around a pairing station. Teams can quickly collaborate on an issue or piece of code without having to connect to a big display, book a physical meeting room or find a whiteboard.</p>",
                "radarId": 25,
                "id": "en_2021-04_202104052",
                "blip_selector": "remote-mob-programming"
            },
            {
                "blip_id": 202005083,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Decentralized identity",
                "display_name": "Decentralized identity",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2021-04",
                "theta": "164",
                "tag": "stay",
                "description": "<p>In 2016, Christopher Allen, a key contributor to <a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security\">SSL/TLS</a>, inspired us with an introduction of 10 principles underpinning a new form of digital identity and a path to get there, <a href=\"http://www.lifewithalacrity.com/2016/04/the-path-to-self-soverereign-identity.html\">the path to self-sovereign identity</a>. Self-sovereign identity, also known as <strong>decentralized identity</strong>, is a “lifetime portable identity for any person, organization, or thing that does not depend on any centralized authority and can never be taken away,” according to the <a href=\"/radar/platforms/trust-over-ip-stack\">Trust over IP</a> standard. Adopting and implementing decentralized identity is gaining momentum and becoming attainable. We see its adoption in privacy-respecting <a href=\"https://www.civic.com/healthkey/\">customer health applications</a>, <a href=\"https://www.truu.id/\">government healthcare infrastructure</a> and <a href=\"https://id-bulletin.com/2020/06/04/news-gleif-and-evernym-demo-organization-wallets-to-deliver-trust-and-transparency-in-digital-business/\">corporate legal identity</a>. If you want to rapidly get started with decentralized identity, you can assess <a href=\"https://sovrin.org/\">Sovrin Network</a>, <a href=\"https://github.com/hyperledger/aries\">Hyperledger Aries</a> and <a href=\"https://github.com/hyperledger/indy-node\">Indy</a> OSS, as well as <a href=\"https://www.w3.org/TR/did-core/\">decentralized identifiers</a> and <a href=\"/radar/techniques/verifiable-credentials\">verifiable credentials</a> standards. We're watching this space closely as we help our clients with their strategic positioning in the new era of digital trust.</p>",
                "radarId": 18,
                "id": "en_2021-04_202005083",
                "blip_selector": "decentralized-identity"
            },
            {
                "blip_id": 202104041,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Kotlin Flow",
                "display_name": "Kotlin Flow",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "318",
                "tag": "new",
                "description": "<p>The introduction of <a href=\"https://kotlinlang.org/docs/coroutines-overview.html\">coroutines to Kotlin</a> opened the door for several innovations — <strong><a href=\"https://kotlinlang.org/docs/flow.html\">Kotlin Flow</a></strong> is one of them, directly integrated into the coroutines library. It's an implementation of Reactive Streams on top of coroutines. Unlike <a href=\"https://github.com/ReactiveX/RxJava\">RxJava</a>, flows are a native Kotlin API similar to the familiar sequence API with methods that include <code>map</code> and <code>filter</code>. Like sequences, flows are <em>cold</em>, meaning that the values of the sequence are only constructed when needed. All of this makes writing multithreaded code much simpler and easier to understand than other approaches. The <code>toList</code> method, predictably, converts a flow into a list which is a common pattern in tests.</p>",
                "radarId": 88,
                "id": "en_2021-04_202104041",
                "blip_selector": "kotlin-flow"
            },
            {
                "blip_id": 202010022,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Blazor",
                "display_name": "Blazor",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "290",
                "tag": "move_in",
                "description": "<p>Although JavaScript and its ecosystem is dominant in the web UI development space, new opportunities are opening up with the emergence of <a href=\"/radar/languages-and-frameworks/webassembly\">WebAssembly</a>. <strong><a href=\"https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor\">Blazor</a></strong> continues to demand our attention; it's producing good results with our teams building interactive rich user interfaces using C# on top of WebAssembly. The fact that our teams can use C# on the frontend too allows them to share code and reuse existing libraries. That, along with the existing tooling for debugging and testing, such as <a href=\"/radar/languages-and-frameworks/bunit\">bUnit</a>, make this open-source framework worth trying.</p>",
                "radarId": 85,
                "id": "en_2021-04_202010022",
                "blip_selector": "blazor"
            },
            {
                "blip_id": 202010082,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "195",
                "name": "MLflow",
                "display_name": "MLflow",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2021-04",
                "theta": "54",
                "tag": "stay",
                "description": "<p><strong><a href=\"https://mlflow.org/\">MLflow</a></strong> is an open-source tool for <a href=\"/radar/tools/experiment-tracking-tools-for-machine-learning\">machine-learning experiment tracking</a> and lifecycle management. The workflow to develop and continuously evolve a machine-learning model includes a series of experiments (a collection of runs), tracking the performance of these experiments (a collection of metrics) and tracking and tweaking models (projects). MLflow facilitates this workflow nicely by supporting existing open standards and integrates well with many other tools in the ecosystem. <a href=\"https://databricks.com/product/managed-mlflow\">MLflow as a managed service by Databricks</a> on the cloud, available in <a href=\"/radar/platforms/aws\">AWS</a> and <a href=\"/radar/platforms/azure\">Azure</a>, is rapidly maturing, and we've used it successfully in our projects. We find MLflow a great tool for model management and tracking, supporting both UI-based and API-based interaction models. Our only growing concern is that MLflow is attempting to deliver too many conflating concerns as a single platform, such as model serving and scoring.</p>",
                "radarId": 59,
                "id": "en_2021-04_202010082",
                "blip_selector": "mlflow"
            },
            {
                "blip_id": 202104006,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "GitOps",
                "display_name": "GitOps",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "169",
                "tag": "new",
                "description": "<p>We suggest approaching <strong>GitOps</strong> with a degree of care, especially with regard to branching strategies. GitOps can be seen as a way of implementing <a href=\"/radar/techniques/infrastructure-as-code\">infrastructure as code</a> that involves continuously synchronizing and applying infrastructure code from <a href=\"/radar/tools/git\">Git</a> into various environments. When used with a \"branch per environment\" infrastructure, changes are promoted from one environment to the next by merging code. While treating code as the single source of truth is clearly a sound approach, we're seeing branch per environment lead to environmental drift and eventually environment-specific configs as code merges become problematic or even stop entirely. This is very similar to what we've seen in the past with <a href=\"/radar/techniques/long-lived-branches-with-gitflow\">long-lived branches with GitFlow</a>.</p>",
                "radarId": 27,
                "id": "en_2021-04_202104006",
                "blip_selector": "gitops"
            },
            {
                "blip_id": 202104068,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Peer review equals pull request",
                "display_name": "Peer review equals pull request",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "135",
                "tag": "new",
                "description": "<p>Some organizations seem to think <strong>peer review equals pull request</strong>; they've taken the view that the only way to achieve a peer review of code is via a pull request. We've seen this approach create significant team bottlenecks as well as significantly degrade the quality of feedback as overloaded reviewers begin to simply reject requests. Although the argument could be made that this is one way to demonstrate code review \"regulatory compliance\" one of our clients was told this was invalid since there was no evidence the code was actually read by anyone prior to acceptance. Pull requests are only one way to manage the code review workflow; we urge people to consider other approaches, especially where there is a need to coach and pass on feedback carefully.</p>",
                "radarId": 30,
                "id": "en_2021-04_202104068",
                "blip_selector": "peer-review-equals-pull-request"
            },
            {
                "blip_id": 202104031,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Combine",
                "display_name": "Combine",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "300",
                "tag": "new",
                "description": "<p>A long time ago we placed <a href=\"/radar/languages-and-frameworks/reactivex\">ReactiveX</a> — a family of open-source frameworks for reactive programming — into the Adopt ring of the Radar. In 2017, we mentioned the addition of <a href=\"https://github.com/ReactiveX/RxSwift\">RxSwift</a>, which brought reactive programming to iOS development using Swift. Since then, Apple has introduced its own take on reactive programming in the form of the <a href=\"https://developer.apple.com/documentation/combine\"><strong>Combine</strong></a> framework. Combine has become our default choice for apps that support iOS 13 as an acceptable deployment target. It's easier to learn than RxSwift and integrates really well with <a href=\"/radar/languages-and-frameworks/swiftui\">SwiftUI</a>. If you're planning to convert an existing application from RxSwift to Combine or work with both in the same project, you might want to look at <a href=\"https://github.com/CombineCommunity/RxCombine\">RxCombine</a>.</p>",
                "radarId": 81,
                "id": "en_2021-04_202104031",
                "blip_selector": "combine"
            },
            {
                "blip_id": 202104017,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "imgcook",
                "display_name": "imgcook",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "56",
                "tag": "new",
                "description": "<p>Remember the research project <a href=\"https://github.com/tonybeltramelli/pix2code\">pix2code</a> that showed how to automatically generate code from GUI screenshots? Now there is a productized version of this technique — <strong><a href=\"https://www.imgcook.com/\">imgcook</a></strong> is a SaaS product from Alibaba that can intelligently transform various design files (Sketch/PSD/static images) into front-end code. Alibaba needs to customize a large number of campaign pages during the Double Eleven shopping festival. These are usually one-time pages that need to be developed quickly. Through the deep-learning method, the UX's design is initially processed into front-end code and then adjusted by the developer. Our team is evaluating this tech: although the image processing takes place on the server side while the main interface is on the web, imgcook provides <a href=\"https://github.com/imgcook\">tools</a> that could integrate with the software design and development lifecycle. imgcook can generate static code as well as some data-binding component code if you define a DSL. The technology is not perfect yet; designers need to refer to certain specifications to improve the accuracy of code generation (which still needs to be adjusted by developers afterward). We've always been cautious about magic code generation, because the generated code is usually difficult to maintain in the long run, and imgcook is no exception. But if you limit the usage to a specific context, such as one-time campaign pages, it's worth a try.</p>",
                "radarId": 72,
                "id": "en_2021-04_202104017",
                "blip_selector": "imgcook"
            },
            {
                "blip_id": 202010076,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Great Expectations",
                "display_name": "Great Expectations",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "62",
                "tag": "move_in",
                "description": "<p>We wrote about <strong><a href=\"https://docs.greatexpectations.io/en/latest/\">Great Expectations</a></strong> in the previous edition of the Radar. We continue to like it and have moved it to Trial in this edition. Great Expectations is a framework that enables you to craft built-in controls that flag anomalies or quality issues in data pipelines. Just as unit tests run in a build pipeline, Great Expectations makes assertions during execution of a data pipeline. We like its simplicity and ease of use — the rules stored in JSON can be modified by our data domain experts without necessarily needing data engineering skills.</p>",
                "radarId": 57,
                "id": "en_2021-04_202010076",
                "blip_selector": "great-expectations"
            },
            {
                "blip_id": 202104002,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "AWS CodePipeline",
                "display_name": "AWS CodePipeline",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "45",
                "tag": "new",
                "description": "<p>Based on the experiences of multiple ThoughtWorks teams we suggest approaching <strong><a href=\"https://aws.amazon.com/codepipeline/\">AWS CodePipeline</a></strong> with caution. Specifically, we've found that once teams move beyond simple pipelines, this tool can become hard to work with. While it may seem like a \"quick win\" when first starting out with <a href=\"/radar/platforms/aws\">AWS</a>, we suggest taking a step back and checking whether AWS CodePipeline will meet your longer-term needs, for example, pipeline fan-out and fan-in or more complex deployment and testing scenarios featuring nontrivial dependencies and triggers.</p>",
                "radarId": 80,
                "id": "en_2021-04_202104002",
                "blip_selector": "aws-codepipeline"
            },
            {
                "blip_id": 1173,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "LeakCanary",
                "display_name": "LeakCanary",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "330",
                "tag": "move_in",
                "description": "<p>Our mobile teams now view <strong><a href=\"http://github.com/square/leakcanary\">LeakCanary</a></strong> as a good default choice for Android development. It detects annoying memory leaks in Android apps, is extremely simple to hook up and provides notifications with a clear trace-back to the cause of the leak. LeakCanary can save you tedious hours troubleshooting out-of-memory errors on multiple devices, and we recommend you add it to your toolkit.</p>",
                "radarId": 82,
                "id": "en_2021-04_1173",
                "blip_selector": "leakcanary"
            },
            {
                "blip_id": 202104115,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "TrustKit",
                "display_name": "TrustKit",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "353",
                "tag": "new",
                "description": "<p><a href=\"https://owasp.org/www-community/controls/Certificate_and_Public_Key_Pinning\">SSL public key pinning</a> is tricky. If you select the wrong policy or don't have a backup pin, your application will stop working unexpectedly. This is where <strong><a href=\"https://github.com/datatheorem/TrustKit\">TrustKit</a></strong> is useful — it's an open-source framework that makes SSL public key pinning easier for iOS applications. There is an equivalent <a href=\"https://github.com/datatheorem/TrustKit-Android\">framework for Android</a> as well. Picking the correct pinning strategy is a nuanced topic, and you can find more details about it in the TrustKit <a href=\"https://github.com/datatheorem/TrustKit/blob/master/docs/getting-started.md\">Getting Started guide</a>. We've used TrustKit in several projects in production, and it has worked out well.</p>",
                "radarId": 94,
                "id": "en_2021-04_202104115",
                "blip_selector": "trustkit"
            },
            {
                "blip_id": 202104060,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Tool-managed Xcodeproj",
                "display_name": "Tool-managed Xcodeproj",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "105",
                "tag": "new",
                "description": "<p>Many of our developers coding iOS in Xcode often get headaches because the Xcodeproj file changes with every project change. The Xcodeproj file format is not human-readable, hence trying to handle merge conflicts is quite complicated and can lead to productivity loss and risk of messing up the entire project — if anything goes wrong with the file, Xcode won't work properly and developers will very likely be blocked. Instead of trying to merge and fix the file manually or version it, we recommend you use a <strong>tool-managed Xcodeproj</strong> approach: Define your Xcode project configuration in YAML (<a href=\"https://github.com/yonaskolb/XcodeGen\">XcodeGen</a>, <a href=\"https://github.com/lyptt/struct\">Struct</a>), Ruby (<a href=\"https://github.com/igor-makarov/xcake\">Xcake</a>) or Swift (<a href=\"https://github.com/tuist/tuist\">Tuist</a>). These tools generate the Xcodeproj file based on a configuration file and the project structure. As a result, merge conflicts in the Xcodeproj file will be a thing of the past, and when they do happen in the configuration file, they're much easier to handle.</p>",
                "radarId": 15,
                "id": "en_2021-04_202104060",
                "blip_selector": "tool-managed-xcodeproj"
            },
            {
                "blip_id": 202104086,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Ethical Explorer",
                "display_name": "Ethical Explorer",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "150",
                "tag": "new",
                "description": "<p>The group behind <a href=\"/radar/techniques/ethical-os\">Ethical OS</a> — the Omidyar Network, a self-described social change venture created by eBay founder Pierre Omidyar — has released a new iteration called <strong><a href=\"https://ethicalexplorer.org/\">Ethical Explorer</a></strong>. The new Ethical Explorer pack draws on lessons learned from using Ethical OS and adds further questions for product teams to consider. The kit, which can be <a href=\"https://ethicalexplorer.org/download/\">downloaded for free</a> and folded into cards to trigger discussion, has open-ended question prompts for several technical \"risk zones,\" including surveillance (\"can someone use our product or service to track or identify other users?\"), disinformation, exclusion, algorithmic bias, addiction, data control, bad actors and outsized power. The included field guide has activities and workshops, ideas for starting conversations and tips for gaining organizational buy-in. While we've a long way to go as an industry to better represent the ethical externalities of our digital society, we've had some productive conversations using Ethical Explorer, and we're encouraged by the broadening awareness of the importance of product decisions in addressing societal issues.</p>",
                "radarId": 9,
                "id": "en_2021-04_202104086",
                "blip_selector": "ethical-explorer"
            },
            {
                "blip_id": 201904066,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "Continuous delivery for machine learning (CD4ML)",
                "display_name": "Continuous delivery for machine learning (CD4ML)",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "150",
                "tag": "move_in",
                "description": "<p>We see <strong><a href=\"https://martinfowler.com/articles/cd4ml.html\">continuous delivery for machine learning (CD4ML)</a></strong> as a good default starting point for any ML solution that is being deployed into production. Many organizations are becoming more reliant on ML solutions for both customer offerings and internal operations so it makes sound business sense to apply the lessons and good practice captured by <a href=\"/radar/techniques/continuous-delivery-cd\">continuous delivery (CD)</a> to ML solutions.</p>",
                "radarId": 2,
                "id": "en_2021-04_201904066",
                "blip_selector": "continuous-delivery-for-machine-learning-cd4ml"
            },
            {
                "blip_id": 202104035,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Homomorphic encryption",
                "display_name": "Homomorphic encryption",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "148",
                "tag": "new",
                "description": "<p>Fully <strong><a href=\"https://en.wikipedia.org/wiki/Homomorphic_encryption\">homomorphic encryption</a></strong> (HE) refers to a class of encryption methods that allow computations (such as search and arithmetic) to be performed directly on encrypted data. The result of such a computation remains in encrypted form, which at a later point can be decrypted and revealed. Although the HE problem was first proposed in 1978, a solution wasn't constructed until 2009. With advances in computing power and the availability of easy-to-use open-source libraries — including <a href=\"https://github.com/microsoft/SEAL#introduction\">SEAL</a>, <a href=\"https://github.com/ldsec/lattigo\">Lattigo</a>, <a href=\"https://github.com/homenc/HElib\">HElib</a> and <a href=\"https://github.com/data61/python-paillier\">partially homomorphic encryption in Python</a> — HE is becoming feasible in real-world applications. The motivating scenarios include privacy-preserving use cases, where computation can be outsourced to an untrusted party, for example, running computation on encrypted data in the cloud, or enabling a third party to aggregate homomorphically encrypted intermediate <a href=\"https://en.wikipedia.org/wiki/Federated_learning\">federated machine learning</a> results. Moreover, most HE schemes are considered to be <a href=\"https://csrc.nist.gov/Projects/Post-Quantum-Cryptography\">secure against quantum computers</a>, and efforts are underway to <a href=\"https://homomorphicencryption.org/standard/\">standardize</a> HE. Despite its current limitations, namely performance and feasibility of the types of computations, HE is worth your attention.</p>",
                "radarId": 20,
                "id": "en_2021-04_202104035",
                "blip_selector": "homomorphic-encryption"
            },
            {
                "blip_id": 202104066,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Hotwire",
                "display_name": "Hotwire",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "140",
                "tag": "new",
                "description": "<p><strong><a href=\"https://hotwire.dev/\">Hotwire</a></strong> (HTML over the wire) is a technique to build web applications. Pages are constructed out of components, but unlike modern SPAs the HTML for the components is generated on the server side and then sent \"over the wire\" to the browser. The application has only a small amount of JavaScript code in the browser to stitch the HTML fragments together. Our teams, and doubtlessly others too, experimented with this technique after asynchronous web requests gained cross-browser support around 2005, but for various reasons it never gained much traction.</p>\n\n<p>Today, Hotwire uses modern web browser and HTTP capabilities to achieve the speed, responsiveness and dynamic nature of single-page apps (SPAs). It embraces simpler web application design by localizing the logic to the server and keeping the client-side code simple. The team at Basecamp has released a few Hotwire frameworks that power their own <a href=\"https://hey.com/\">application</a>, including <a href=\"https://turbo.hotwired.dev/\">Turbo</a> and <a href=\"https://stimulus.hotwire.dev/\">Stimulus</a>. Turbo includes a set of techniques and frameworks to speed up the application responsiveness by preventing whole page reloading, page preview from cache and decomposing the page into fragments with progressive enhancements on request. Stimulus is designed to enhance static HTML in the browser by connecting JavaScript objects to the page elements on the HTML.</p>",
                "radarId": 21,
                "id": "en_2021-04_202104066",
                "blip_selector": "hotwire"
            },
            {
                "blip_id": 1232,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "80",
                "name": "Sentry",
                "display_name": "Sentry",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "45",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://sentry.io/\">Sentry</a></strong> has become the default choice for many of our teams when it comes to front-end error reporting. The convenience of features like the grouping of errors or defining patterns for discarding errors with certain parameters helps deal with the flood of errors coming from many end user devices. Integrating Sentry in your CD pipeline allows you to upload source maps for more efficient error debugging, and it helps easily trace back which errors occurred in which version of the software. We also appreciate that while Sentry is primarily a SaaS offering, its source code is publicly available and it can be used for free for smaller use cases and <a href=\"https://develop.sentry.dev/self-hosted/\">self-hosting</a>.</p>",
                "radarId": 52,
                "id": "en_2021-04_1232",
                "blip_selector": "sentry"
            },
            {
                "blip_id": 202104087,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "FastAPI",
                "display_name": "FastAPI",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "297",
                "tag": "new",
                "description": "<p>We're seeing more teams adopting Python as the preferred language to build solutions, not just for data science but for back-end services too. In these scenarios, we're having good experiences with <strong><a href=\"https://fastapi.tiangolo.com/\">FastAPI</a></strong> — a modern, fast (high-performance), web framework for building APIs with Python 3.6 or later. Additionally, this framework and its ecosystem include features such as API documentation using OpenAPI that allow our teams to focus on the business functionalities and quickly create REST APIs, which makes FastAPI a good alternative to existing solutions in this space.</p>",
                "radarId": 86,
                "id": "en_2021-04_202104087",
                "blip_selector": "fastapi"
            },
            {
                "blip_id": 202010066,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Backstage",
                "display_name": "Backstage",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "205",
                "tag": "move_in",
                "description": "<p>We continue to see interest in and use of <strong><a href=\"https://backstage.io/\">Backstage</a></strong> grow, alongside the adoption of developer portals, as organizations look to support and streamline their development environments. As the number of tools and technologies increases, some form of standardization is becoming increasingly important for consistency so that developers are able to focus on innovation and product development instead of getting bogged down with reinventing the wheel. Backstage is an open-source developer portal platform created by Spotify, it's based upon software templates, unifying infrastructure tooling and consistent and centralized technical documentation. The plugin architecture allows for extensibility and adaptability into an organization’s infrastructure ecosystem.</p>",
                "radarId": 35,
                "id": "en_2021-04_202010066",
                "blip_selector": "backstage"
            },
            {
                "blip_id": 202104029,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "bUnit",
                "display_name": "bUnit",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "286",
                "tag": "new",
                "description": "<p><strong><a href=\"https://bunit.egilhansen.com/\">bUnit</a></strong> is a testing library for <a href=\"/radar/languages-and-frameworks/blazor\">Blazor</a> that makes it easy to create tests for Blazor components in existing unit testing frameworks such as NUnit, xUnit or MSUnit. It provides a facade around the component allowing it to be run and tested within the familiar unit test paradigm, thus allowing very fast feedback and testing of the component in isolation. If you're developing for Blazor, we recommend that you add bUnit to your list of tools to try out.</p>",
                "radarId": 96,
                "id": "en_2021-04_202104029",
                "blip_selector": "bunit"
            },
            {
                "blip_id": 202104022,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "70",
                "name": "API expand-contract",
                "display_name": "API expand-contract",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "160",
                "tag": "new",
                "description": "<p>The <strong>API expand-contract</strong> pattern, sometimes called <a href=\"https://www.martinfowler.com/bliki/ParallelChange.html\">parallel change</a>, will be familiar to many, especially when used with databases or code; however, we only see low levels of adoption with APIs. Specifically, we're seeing complex versioning schemes and breaking changes used in scenarios where a simple expand and then contract would suffice. For example, first adding to an API while deprecating an existing element, and then only later removing the deprecated elements once consumers are switched to the newer schema. This approach does require some coordination and visibility of the API consumers, perhaps through a technique such as <a href=\"https://martinfowler.com/articles/consumerDrivenContracts.html\">consumer-driven contract</a> testing.</p>",
                "radarId": 1,
                "id": "en_2021-04_202104022",
                "blip_selector": "api-expand-contract"
            },
            {
                "blip_id": 202104088,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Feature Store",
                "display_name": "Feature Store",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "212",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.featurestore.org/\">Feature Store</a></strong> is an ML-specific data platform that addresses some of the key challenges we face today in feature engineering with three fundamental capabilities: (1) it uses managed data pipelines to remove struggles with pipelines as new data arrives; (2) catalogs and stores feature data to promote discoverability and collaboration of features across models; and (3) consistently serves feature data during training and interference. </p>\n\n<p>Since Uber revealed their <a href=\"https://eng.uber.com/michelangelo-machine-learning-platform/\">Michelangelo platform</a>, many organizations and startups have built their own versions of a feature store; examples include <a href=\"https://github.com/logicalclocks/hopsworks\">Hopsworks</a>, <a href=\"https://github.com/feast-dev/feast\">Feast</a> and <a href=\"https://www.tecton.ai/\">Tecton</a>. We see potential in Feature Store and recommend you carefully assess it.</p>",
                "radarId": 43,
                "id": "en_2021-04_202104088",
                "blip_selector": "feature-store"
            },
            {
                "blip_id": 201904030,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Next.js",
                "display_name": "Next.js",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "325",
                "tag": "move_in",
                "description": "<p>We've had a bit more experience using <strong><a href=\"https://nextjs.org/\">Next.js</a></strong> for <a href=\"/radar/languages-and-frameworks/react-js\">React</a> codebases since the last time we wrote about it. Next.js is an opinionated, zero-configuration framework that includes simplified routing, automatic compilation and bundling with <a href=\"/radar/tools/webpack\">Webpack</a> and <a href=\"/radar/tools/babel\">Babel</a>, fast hot reloading for a convenient developer workflow among other features. It provides server-side rendering by default, improves search engine optimization and the initial load time and supports incremental static generation. We've had positive experience reports from teams using Next.js and, given its large community, continue to be excited about the evolution of the framework.</p>",
                "radarId": 90,
                "id": "en_2021-04_201904030",
                "blip_selector": "next-js"
            },
            {
                "blip_id": 202104104,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Opstrace",
                "display_name": "Opstrace",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "245",
                "tag": "new",
                "description": "<p><strong><a href=\"https://opstrace.com/\">Opstrace</a></strong> is an open-source observability platform intended to be deployed in the user's own network. If we don't use commercial solutions like Datadog (for example, because of cost or data residency concerns), the only solution is to build your own platform composed of open-source tools. This can take a lot of effort — Opstrace is intended to fill this gap. It uses open-source APIs and interfaces such as <a href=\"/radar/tools/prometheus\">Prometheus</a> and <a href=\"/radar/tools/grafana\">Grafana</a> and adds additional features on top like TLS and authentication. At the heart of Opstrace runs a <a href=\"https://github.com/cortexproject/cortex\">Cortex</a> cluster to provide the scalable Prometheus API as well as a <a href=\"https://github.com/grafana/loki\">Loki</a> cluster for the logs. It's fairly new and <a href=\"https://opstrace.com/docs/references/roadmap#opstrace-roadmap\">still misses features</a> when compared to solutions like Datadog or SignalFX. Still, it's a promising addition to this space and worth keeping an eye on.</p>",
                "radarId": 47,
                "id": "en_2021-04_202104104",
                "blip_selector": "opstrace"
            },
            {
                "blip_id": 202104008,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Hypothesis-driven legacy renovation",
                "display_name": "Hypothesis-driven legacy renovation",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "143",
                "tag": "new",
                "description": "<p>We're often asked to refresh, update or remediate legacy systems that we didn't originally build. Sometimes, technical issues need our attention such as improving performance or reliability. One common approach to address these issues is to create \"technical stories\" using the same format as a user story but with a technical outcome rather than a business one. But these technical tasks are often difficult to estimate, take longer than anticipated or don't end up having the desired outcome. An alternative, more successful method is to apply <strong>hypothesis-driven legacy renovation</strong>. Rather than working toward a standard backlog, the team takes ownership of a measurable technical outcome and collectively establishes a set of hypotheses about the problem. They then conduct iterative, time-boxed experiments to verify or disprove each hypothesis in order of priority. The resulting workflow is optimized for reducing uncertainty rather than following a plan toward a predictable outcome.</p>",
                "radarId": 10,
                "id": "en_2021-04_202104008",
                "blip_selector": "hypothesis-driven-legacy-renovation"
            },
            {
                "blip_id": 202104009,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Cloud sandboxes",
                "display_name": "Cloud sandboxes",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "173",
                "tag": "new",
                "description": "<p>As the cloud is becoming more and more a commodity and being able to spin up <strong>cloud sandboxes</strong> is easier and available at scale, our teams prefer cloud-only (as opposed to local) development environments to reduce maintenance complexity. We're seeing that the tooling to do local simulation of cloud-native services limits the confidence in developer build and test cycles; therefore, we're looking to focus on standardizing cloud sandboxes over running cloud-native components on a developer machine. This will drive good <a href=\"/radar/techniques/infrastructure-as-code\">infrastructure-as-code</a> practices as a forcing function and good onboarding processes for provisioning sandbox environments for developers. There are risks associated with this transition, as it assumes that developers will have an absolute dependency on cloud environment availability, and it may slow down the developer feedback loop. We strongly recommend you adopt some lean governance practices regarding standardization of these sandbox environments, especially with regard to security, IAM and regional deployments.</p>",
                "radarId": 6,
                "id": "en_2021-04_202104009",
                "blip_selector": "cloud-sandboxes"
            },
            {
                "blip_id": 1283,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Pulumi",
                "display_name": "Pulumi",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2021-04",
                "theta": "253",
                "tag": "stay",
                "description": "<p>We've seen interest in <strong><a href=\"https://pulumi.io/\">Pulumi</a></strong> slowly but steadily rising. Pulumi fills a gaping hole in the infrastructure coding world where <a href=\"/radar/tools/terraform\">Terraform</a> maintains a firm hold. While Terraform is a tried-and-true standby, its declarative nature suffers from inadequate abstraction facilities and limited testability. Terraform is adequate when the infrastructure is entirely static, but dynamic infrastructure definitions call for a real programming language. Pulumi distinguishes itself by allowing configurations to be written in <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>/JavaScript, <a href=\"/radar/languages-and-frameworks/python-3\">Python</a> and <a href=\"/radar/languages-and-frameworks/go-language\">Go</a> — no markup language or templating required. Pulumi is tightly focused on cloud-native architectures — including containers, serverless functions and data services — and provides good support for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Recently, <a href=\"/radar/platforms/aws-cloud-development-kit\">AWS CDK</a> has mounted a challenge, but Pulumi remains the only cloud-neutral tool in this area. We're anticipating wider Pulumi adoption in the future and looking forward to a viable tool and knowledge ecosystem emerging to support it.</p>",
                "radarId": 48,
                "id": "en_2021-04_1283",
                "blip_selector": "pulumi"
            },
            {
                "blip_id": 201911005,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "210",
                "name": "Snowflake",
                "display_name": "Snowflake",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2021-04",
                "theta": "244",
                "tag": "refresh_writeup",
                "description": "<p>Since we last mentioned <strong><a href=\"https://www.snowflake.com/\">Snowflake</a></strong> in the Radar, we've gained more experience with it as well as with <a href=\"/radar/techniques/data-mesh\">data mesh</a> as an alternative to data warehouses and lakes. Snowflake continues to impress with features like time travel, zero-copy cloning, data sharing and its marketplace. We also haven't found anything we don't like about it, all of which has led to our consultants generally preferring it over the alternatives. Redshift is moving toward storage and compute separation, which has been a strong point of Snowflake, but even with Redshift Spectrum it isn't as convenient and flexible to use, partly because it is bound by its Postgres heritage (we do still like <a href=\"/radar/platforms/postgresql-for-nosql\">Postgres</a>, by the way). Federated queries can be a reason to go with Redshift. When it comes to operations, Snowflake is much simpler to run. <a href=\"/radar/platforms/bigquery\">BigQuery</a>, which is another alternative, is very easy to operate, but in a multicloud setup Snowflake is a better choice. We can also report that we've used Snowflake successfully with <a href=\"/radar/platforms/google-cloud-platform\">GCP</a>, <a href=\"/radar/platforms/aws\">AWS</a>, and <a href=\"/radar/platforms/azure\">Azure</a>.</p>",
                "radarId": 38,
                "id": "en_2021-04_201911005",
                "blip_selector": "snowflake"
            },
            {
                "blip_id": 202104084,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "DataHub",
                "display_name": "DataHub",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "204",
                "tag": "new",
                "description": "<p>Since we first mentioned <a href=\"/radar/techniques/data-discoverability\">data discoverability</a> in the Radar, LinkedIn has evolved <a href=\"https://engineering.linkedin.com/blog/2016/03/open-sourcing-wherehows--a-data-discovery-and-lineage-portal\">WhereHows</a> to <strong><a href=\"https://github.com/linkedin/datahub\">DataHub</a></strong>, the next generation platform that addresses data discoverability via an extensible metadata system. Instead of crawling and pulling metadata, DataHub adopts a push-based model where individual components of the data ecosystem publish metadata via an API or a stream to the central platform. This push-based integration shifts the ownership from the central entity to individual teams making them accountable for their metadata. As more and more companies are trying to become data driven, having a system that helps with data discovery and understanding data quality and lineage is critical, and we recommend you assess DataHub in that capacity.</p>",
                "radarId": 42,
                "id": "en_2021-04_202104084",
                "blip_selector": "datahub"
            },
            {
                "blip_id": 202104064,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Buildah and Podman",
                "display_name": "Buildah and Podman",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "84",
                "tag": "new",
                "description": "<p>Even though <a href=\"/radar/platforms/docker\">Docker</a> has become the sensible default for containerization, we're seeing new players in this space that are catching our attention. That is the case for <strong><a href=\"https://github.com/containers/buildah\">Buildah</a> and <a href=\"https://github.com/containers/podman\">Podman</a></strong>, which are complementary projects to build images (Buildah) and run containers (Podman) using a <a href=\"/radar/platforms/rootless-containers\">rootless</a> approach in multiple Linux distributions. Podman introduces a daemonless engine for managing and running containers which is an interesting approach in comparison to what Docker does. The fact that Podman can use either <a href=\"https://opencontainers.org/\">Open Container Initiative (OCI)</a> images built by Buildah or Docker images makes this tool even more attractive and easy to use.</p>",
                "radarId": 68,
                "id": "en_2021-04_202104064",
                "blip_selector": "buildah-and-podman"
            },
            {
                "blip_id": 202104053,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Secure multiparty computing",
                "display_name": "Secure multiparty computing",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "99",
                "tag": "new",
                "description": "<p><strong><a href=\"https://en.wikipedia.org/wiki/Secure_multi-party_computation\">Secure multiparty computing</a></strong> (MPC) solves the problem of collaborative computing that protects privacy between parties that do not trust each other. It's aim is to safely calculate an agreed-upon problem without a trusted third party, while each participant is required to partake in the calculation result and can't be obtained by other entities. A simple illustration for MPC is the <a href=\"https://en.wikipedia.org/wiki/Yao%27s_Millionaires%27_problem\">millionaires' problem</a>: two millionaires want to understand who is the richest, but neither want to share their actual net worth with each other nor trust a third party. The implementation approaches of MPC vary; scenarios may include secret sharing, oblivious transfer, garbled circuits or <a href=\"/radar/techniques/homomorphic-encryption\">homomorphic encryption</a>. Some commercial MPC solutions that have recently appeared (e.g., <a href=\"https://www.antchain.net/solutions/morse\">Antchain Morse</a>) claim to help solve the problems of secret sharing and secure machine learning in scenarios such as multiparty joint credit investigation and medical records data exchange. Although these platforms are attractive from a marketing perspective, we've yet to see whether they're really useful.</p>",
                "radarId": 26,
                "id": "en_2021-04_202104053",
                "blip_selector": "secure-multiparty-computing"
            },
            {
                "blip_id": 202104073,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Recommender",
                "display_name": "Recommender",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "35",
                "tag": "new",
                "description": "<p>The number of services offered by the big cloud providers keeps growing, but so does the convenience and maturity of tools that help you use them securely and efficiently. <a href=\"https://cloud.google.com/recommender\"><strong>Recommender</strong></a> is a service on Google Cloud that analyzes your resources and gives you recommendations on how to optimize them based on your actual usage. The service consists of a range of \"recommenders\" in areas such as security, compute usage or cost savings. For example, the <a href=\"https://cloud.google.com/iam/docs/role-recommendations\">IAM Recommender</a> helps you better implement the principle of least privilege by pointing out permissions that are never actually used and therefore are potentially too broad.</p>",
                "radarId": 75,
                "id": "en_2021-04_202104073",
                "blip_selector": "recommender"
            },
            {
                "blip_id": 202104039,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "JuiceFS",
                "display_name": "JuiceFS",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "220",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/juicedata/juicefs\">JuiceFS</a></strong> is an open-source, distributed POSIX file system built on top of <a href=\"https://www.thoughtworks.com/radar/platforms/redis\">Redis</a> and an object store service (for example, Amazon S3). If you're building new applications, then our recommendation has always been to interact directly with the object store without going through another abstraction layer. However, JuiceFS can be an option if you're migrating legacy applications that depend on traditional POSIX file systems to the cloud.</p>",
                "radarId": 44,
                "id": "en_2021-04_202104039",
                "blip_selector": "juicefs"
            },
            {
                "blip_id": 202104005,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "GitHub Actions",
                "display_name": "GitHub Actions",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "77",
                "tag": "new",
                "description": "<p>CI servers and build tools are some of the oldest and most widely used in our kit. They run the gamut from simple cloud-hosted services to complex, code-defined pipeline servers that support fleets of build machines. Given our experience and the wide range of options already available, we were initially skeptical when <strong><a href=\"https://docs.github.com/en/actions\">GitHub Actions</a></strong> were introduced as another mechanism to manage the build and integration workflow. But the opportunity for developers to start small and easily customize behavior means that GitHub Actions are moving toward the default category for smaller projects. It's hard to argue with the convenience of having the build tool integrated directly into the source code repository. An enthusiastic community has emerged around this feature and that means a wide range of user-contributed tools and workflows are available to get started. Tools vendors are also getting on board via the <a href=\"https://github.com/marketplace?type=actions\">GitHub Marketplace</a>. However, we still recommend you proceed with caution. Although code and <a href=\"/radar/tools/git\">Git</a> history can be exported into alternative hosts, a development workflow based on GitHub Actions can't. Also, use your best judgment to determine when a project is large or complex enough to warrant an independently supported pipeline tool. But for getting up and running quickly on smaller projects, it's worth considering GitHub Actions and the ecosystem that is growing around them.</p>",
                "radarId": 69,
                "id": "en_2021-04_202104005",
                "blip_selector": "github-actions"
            },
            {
                "blip_id": 202104070,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Simplest possible ML",
                "display_name": "Simplest possible ML",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "128",
                "tag": "new",
                "description": "<p>All major cloud providers offer a dazzling array of machine-learning (ML) solutions. These powerful tools can provide a lot of value, but come at a cost. There is the pure run cost for these services charged by the cloud provider. In addition, there is a kind of operations tax. These complex tools need to be understood and operated, and with each new tool added to the architecture this tax burden increases. In our experience, teams often choose complex tools because they underestimate the power of simpler tools such as linear regression. Many ML problems don't require a GPU or neural networks. For that reason we advocate for the <strong>simplest possible ML</strong>, using simple tools and models and a few hundred lines of Python on the compute platform you have at hand. Only reach for the complex tools when you can demonstrate the need for them.</p>",
                "radarId": 12,
                "id": "en_2021-04_202104070",
                "blip_selector": "simplest-possible-ml"
            },
            {
                "blip_id": 202104109,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "215",
                "name": "OR-Tools",
                "display_name": "OR-Tools",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "47",
                "tag": "new",
                "description": "<p><strong><a href=\"https://developers.google.com/optimization\">OR-Tools</a></strong> is an open-source software suite for solving combinatorial optimization problems. These optimization problems have a very large set of possible solutions, and tools like OR-Tools are quite helpful in seeking the best solution. You can model the problem in any one of the supported languages — Python, Java, C# or C++ — and choose the solvers from several supported open-source or commercial solvers. We've successfully used OR-Tools in multiple optimization projects with integer and mixed-integer programming.</p>",
                "radarId": 60,
                "id": "en_2021-04_202104109",
                "blip_selector": "or-tools"
            },
            {
                "blip_id": 202010056,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Playwright",
                "display_name": "Playwright",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "39",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://playwright.dev/\">Playwright</a></strong> allows you to write Web UI tests for Chromium and Firefox as well as WebKit, all through the same API. The tool has gained some attention for its support of all the major browser engines which it achieves by including patched versions of Firefox and Webkit. We continue to hear positive experience reports with Playwright, in particular its stability. Teams have also found it easy to migrate from <a href=\"/radar/languages-and-frameworks/puppeteer\">Puppeteer</a>, which has a very similar API.</p>",
                "radarId": 61,
                "id": "en_2021-04_202010056",
                "blip_selector": "playwright"
            },
            {
                "blip_id": 202010004,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Bounded low-code platforms",
                "display_name": "Bounded low-code platforms",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2021-04",
                "theta": "172",
                "tag": "stay",
                "description": "<p>One of the most nuanced decisions facing companies at the moment is the adoption of low-code or no-code platforms, that is, platforms that solve very specific problems in very limited domains. Many vendors are pushing aggressively into this space. The problems we see with these platforms typically relate to an inability to apply good engineering practices such as versioning. Testing too is typically really hard. However, we noticed some interesting new entrants to the market — including <a href=\"https://www.honeycode.aws/\">Amazon Honeycode</a>, which makes it easy to create simple task or event management apps, and <a href=\"https://parabola.io/\">Parabola</a> for IFTTT-like cloud workflows — which is why we're once again including <strong>bounded low-code platforms</strong> in this volume. Nevertheless, we remain deeply skeptical about their wider applicability since these tools, like Japanese Knotweed, have a knack of escaping their bounds and tangling everything together. That's why we still strongly advise caution in their adoption.</p>",
                "radarId": 17,
                "id": "en_2021-04_202010004",
                "blip_selector": "bounded-low-code-platforms"
            },
            {
                "blip_id": 202104128,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Flutter for Web",
                "display_name": "Flutter for Web",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "302",
                "tag": "new",
                "description": "<p>So far, <a href=\"/radar/languages-and-frameworks/flutter\">Flutter</a> has primarily supported native iOS and Android applications. However, the Flutter team's vision is to support building applications on every platform. <strong>Flutter for Web</strong> is one step in that direction — it allows us to build apps for iOS, Android and the browser from the same codebase. It has been available for over a year now on the \"Beta\" channel, but with the recent Flutter 2.0 release, Flutter for Web has hit the stable milestone. In the initial release of web support, the Flutter team is focusing on <a href=\"https://web.dev/what-are-pwas/\">progressive web apps</a>, <a href=\"https://en.wikipedia.org/wiki/Single-page_application\">single-page apps</a> and expanding existing mobile apps to the web. The application and framework code (all in <a href=\"/radar/languages-and-frameworks/google-dart\">Dart</a>) are compiled to JavaScript instead of ARM machine code, which is used for mobile applications. Flutter’s web engine offers a choice of two renderers: an HTML renderer, which uses HTML, CSS, Canvas and SVG, and a CanvasKit renderer that uses <a href=\"/radar/languages-and-frameworks/webassembly\">WebAssembly</a> and WebGL to render Skia paint commands to the browser canvas. A few of our teams have started using Flutter for Web and like the initial results.</p>",
                "radarId": 98,
                "id": "en_2021-04_202104128",
                "blip_selector": "flutter-for-web"
            },
            {
                "blip_id": 202104096,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Kafka API without Kafka",
                "display_name": "Kafka API without Kafka",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "229",
                "tag": "new",
                "description": "<p>As more businesses turn to events as a way to share data among microservices, collect analytics or feed data lakes, <a href=\"/radar/tools/apache-kafka\">Apache Kafka</a> has become a favorite platform to support an event-driven architectural style. Although Kafka was a revolutionary concept in scalable persistent messaging, a lot of moving parts are required to make it work, including ZooKeeper, brokers, partitions, and mirrors. While these can be particularly tricky to implement and operate, they do offer great flexibility and power when needed, especially at an industrial enterprise scale. Because of the high barrier to entry presented by the full Kafka ecosystem, we welcome the recent explosion of platforms offering the <strong>Kafka API without Kafka</strong>. Recent entries such as <a href=\"https://github.com/streamnative/kop\">Kafka on Pulsar</a> and <a href=\"/radar/platforms/redpanda\">Redpanda</a> offer alternative architectures, and <a href=\"https://github.com/Azure/azure-event-hubs-for-kafka\">Azure Event Hubs for Kafka</a> provides some compatibility with Kafka producer and consumer APIs. Some features of Kafka, like the streams client library, are not compatible with these alternative brokers, so there are still reasons to choose Kafka over alternative brokers. It remains to be seen, however, if developers actually adopt this strategy or if it is merely an attempt by competitors to lure users away from the Kafka platform. Ultimately, perhaps Kafka's most enduring impact could be the convenient protocol and API provided to clients.</p>",
                "radarId": 45,
                "id": "en_2021-04_202104096",
                "blip_selector": "kafka-api-without-kafka"
            },
            {
                "blip_id": 202104055,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Spectral",
                "display_name": "Spectral",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "21",
                "tag": "new",
                "description": "<p>One of the patterns we've seen repeat itself in this publication is that static error- and style-checking tools emerge quickly after a new language gains popularity. These tools are generically known as linters — after the classic and beloved Unix utility <em>lint</em>, which statically analyzes C code. We like these tools because they catch errors early, before code even gets compiled. The latest instance of this pattern is <strong><a href=\"https://stoplight.io/open-source/spectral/\">Spectral</a></strong>, a linter for YAML and JSON. Although Spectral is a generic tool for these formats, its main target is OpenAPI (the evolution of <a href=\"/radar/tools/swagger\">Swagger</a>) and <a href=\"/radar/tools/asyncapi\">AsyncAPI</a>. Spectral ships with a comprehensive set of out-of-the-box rules for these specs that can save developers headaches when designing and implementing APIs or event-driven collaboration. These rules check for proper API parameter specifications or the existence of a license statement in the spec, among other things. While this tool is a welcome addition to the API development workflow, it does raise the question of whether a non-executable specification should be so complex as to require an error-checking technique designed for programming languages. Perhaps developers should be writing code instead of specs?</p>",
                "radarId": 77,
                "id": "en_2021-04_202104055",
                "blip_selector": "spectral"
            },
            {
                "blip_id": 202104043,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "Layered platform teams",
                "display_name": "Layered platform teams",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "158",
                "tag": "new",
                "description": "<p>The explosion of interest around software platforms has created a lot of value for organizations, but the path to building a platform-based delivery model is fraught with potential dead ends. It's common in the excitement of new paradigms to see a resurgence of older techniques rebranded with the new vernacular, making it easy to lose sight of the reasons we moved past those techniques in the first place. For an example of this rebranding, see our blip on traditional <a href=\"/radar/techniques/esbs-in-api-gateway-s-clothing\">ESBs make a comeback as API gateways</a> in the previous Radar. Another example we're seeing is rehashing the approach of dividing teams by technology layer but calling them platforms. In the context of building an application, it used to be common to have a front-end team separate from the business logic team separate from the data team, and we see analogs to that model when organizations segregate platform capabilities among teams dedicated to a business or data layer. Thanks to <a href=\"https://www.thoughtworks.com/insights/articles/demystifying-conways-law\">Conway's Law</a>, we know that organizing platform capability teams around <a href=\"https://martinfowler.com/articles/microservices.html#OrganizedAroundBusinessCapabilities\">business capabilities</a> is a more effective model, giving the team end-to-end ownership of the capability, including data ownership. This helps to avoid the dependency management headaches of <strong>layered platform teams</strong>, with the front-end team waiting on the business logic team waiting on the data team to get anything done.</p>",
                "radarId": 28,
                "id": "en_2021-04_202104043",
                "blip_selector": "layered-platform-teams"
            },
            {
                "blip_id": 202104028,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Bit.dev",
                "display_name": "Bit.dev",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "196",
                "tag": "new",
                "description": "<p><strong><a href=\"https://bit.dev/\">Bit.dev</a></strong> is a cloud-hosted collaborative platform for UI components extracted, modularized and reused with <a href=\"https://github.com/teambit/bit\">Bit</a>. <a href=\"/radar/platforms/web-components-standard\">Web components</a> have been around for a while, but building a modern front-end application by assembling small, independent components extracted from other projects has never been easy. Bit was designed to let you do exactly that: extract a component from an existing library or project. You can either build your own service on top of Bit for component collaboration or use Bit.dev.</p>",
                "radarId": 41,
                "id": "en_2021-04_202104028",
                "blip_selector": "bit-dev"
            },
            {
                "blip_id": 202104092,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "HashiCorp Boundary",
                "display_name": "HashiCorp Boundary",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "63",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.boundaryproject.io/\">HashiCorp Boundary</a></strong> combines the secure networking and identity management capabilities needed for brokering access to your hosts and services in one place and across a mix of cloud and on-premise resources if needed. Key management can be done by integrating the key management service of your choice, be it from a cloud vendor or something like <a href=\"/radar/tools/hashicorp-vault\">HashiCorp Vault</a>. HashiCorp Boundary supports a growing number of identity providers and can be integrated with parts of your service landscape to help define permissions, not just on host but also on a service level. For example, it enables you to control fine-grained access to a Kubernetes cluster, and dynamically pulling in service catalogs from various sources is on the roadmap. All of this stays out of the way of the engineering end users who get the shell experience they're used to, securely connected through Boundary's network management layer.</p>",
                "radarId": 71,
                "id": "en_2021-04_202104092",
                "blip_selector": "hashicorp-boundary"
            },
            {
                "blip_id": 201911076,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "225",
                "name": "dbt",
                "display_name": "dbt",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "79",
                "tag": "move_in",
                "description": "<p>Since we last wrote about <strong><a href=\"https://www.getdbt.com/\">dbt</a></strong>, we've used it in a few projects and like what we've seen. For example, we like that dbt makes the transformation part of ELT pipelines more accessible to consumers of the data as opposed to just the data engineers building the pipelines. It does this while encouraging good engineering practices such as versioning, automated testing and deployment. SQL continues to be the lingua franca of the data world (including databases, warehouses, query engines, data lakes and analytical platforms) and most of these systems support it to some extent. This allows dbt to be used against these systems for transformations by just building adaptors. The number of native connectors has grown to include <a href=\"/radar/platforms/snowflake\">Snowflake</a>, <a href=\"/radar/platforms/bigquery\">BigQuery</a>, Redshift and Postgres, as has the range of <a href=\"https://docs.getdbt.com/docs/available-adapters\">community plugins</a>. We see tools like dbt helping data platforms become more \"self service\" capable.</p>",
                "radarId": 54,
                "id": "en_2021-04_201911076",
                "blip_selector": "dbt"
            },
            {
                "blip_id": 202104108,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Redpanda",
                "display_name": "Redpanda",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "261",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/vectorizedio/redpanda\">Redpanda</a></strong> is a streaming data platform for developers. It is API-compatible with <a href=\"/radar/tools/apache-kafka\">Apache Kafka</a>, allowing architectures already running in the Kafka ecosystem to benefit from Redpanda’s improved simplicity, performance and hardware efficiency <a href=\"https://redpanda.com/blog/redpanda-vs-kafka-faster-safer\">over Kafka</a>. Redpanda is free from external dependencies such as ZooKeeper, and written in C++, eliminating the need for JVM management. It leverages the Raft protocol for data replication and is <a href=\"https://redpanda.com/blog/redpanda-official-jepsen-report-and-analysis\">Jepsen-tested</a> to validate for correctness. Redpanda also offers much-reduced tail latencies and increased throughput due to a <a href=\"https://redpanda.com/blog/tpc-buffers\">series of optimizations</a>. Some advanced capabilities available for enterprise customers include <a href=\"https://docs.redpanda.com/docs/data-management/tiered-storage/\">tiered storage</a> and inline <a href=\"/radar/languages-and-frameworks/webassembly\">WebAssembly (WASM)</a> transformations.</p>",
                "radarId": 49,
                "id": "en_2021-04_202104108",
                "blip_selector": "redpanda"
            },
            {
                "blip_id": 202104069,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "222",
                "name": "Pyright",
                "display_name": "Pyright",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "29",
                "tag": "new",
                "description": "<p>While <a href=\"https://en.wikipedia.org/wiki/Duck_typing\">duck typing</a> is certainly seen as a feature by many Python programmers, sometimes — especially for larger codebases — type checking can be useful, too. For that reason a number of type annotations are proposed as Python Enhancement Proposals (PEPs), and <strong><a href=\"https://github.com/Microsoft/pyright\">Pyright</a></strong> is a type checker that works with these annotations. In addition, it provides some type inference and guards that understand conditional code flow constructs. Designed with large codebases in mind, Pyright is fast, and its watch mode checks happen incrementally as files are changed to further shorten the feedback cycle. Pyright can be used directly on the command line, but integrations for VS Code, Emacs, vim, Sublime, and possibly other editors are available, too. In our experience, Pyright is preferable to alternatives like mypy.</p>",
                "radarId": 63,
                "id": "en_2021-04_202104069",
                "blip_selector": "pyright"
            },
            {
                "blip_id": 202104120,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Privacy-focused web analytics",
                "display_name": "Privacy-focused web analytics",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "115",
                "tag": "new",
                "description": "<p><strong>Privacy-focused web analytics</strong> is a technique for gathering web analytics without compromising end user privacy by keeping the end users truly anonymous. One surprising consequence of General Data Protection Regulation (GDPR) compliance is the decision taken by many organizations to degrade the user experience with complex cookie consent processes, especially when the user doesn't immediately consent to the \"all the cookies\" default settings. Privacy-focused web analytics has the dual benefit of both observing the spirit and letter of GDPR while also avoiding the need to introduce intrusive cookie consent forms. One implementation of this approach is <a href=\"https://plausible.io/\">Plausible</a>.</p>",
                "radarId": 24,
                "id": "en_2021-04_202104120",
                "blip_selector": "privacy-focused-web-analytics"
            },
            {
                "blip_id": 202104119,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "340",
                "name": "Jotai and Zustand",
                "display_name": "Jotai and Zustand",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "310",
                "tag": "new",
                "description": "<p>In the previous Radar, we commented on the beginning of a phase of experimentation with state management in <a href=\"/radar/languages-and-frameworks/react-js\">React</a> applications. We moved <a href=\"/radar/languages-and-frameworks/redux\">Redux</a> back into the Trial ring, documenting that it is no longer our default choice, and we mentioned Facebook's <a href=\"/radar/languages-and-frameworks/recoil\">Recoil</a>. In this volume we want to highlight <strong><a href=\"https://github.com/pmndrs/jotai\">Jotai</a> and <a href=\"https://github.com/pmndrs/zustand\">Zustand</a></strong>: Both are state management libraries for React; both aim to be small and simple to use; and, perhaps not by complete coincidence, both names are translations of the word <em>state</em> into Japanese and German, respectively. Beyond these similarities, however, they differ in their design. Jotai's design is closer to that of Recoil in that state consists of atoms stored within the React component tree, whereas Zustand stores the state outside of React in a single state object, much like the approach taken by Redux. The authors of Jotai provide a helpful <a href=\"https://github.com/pmndrs/jotai/blob/master/docs/introduction/comparison.md\">checklist</a> to decide when to use which.</p>",
                "radarId": 99,
                "id": "en_2021-04_202104119",
                "blip_selector": "jotai-and-zustand"
            },
            {
                "blip_id": 202104105,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Naive password complexity requirements",
                "display_name": "Naive password complexity requirements",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "147",
                "tag": "new",
                "description": "<p>Password policies are a standard default for many organizations today. However, we're still seeing organizations requiring passwords to include a variety of symbols, numbers, uppercase and lowercase letters as well as inclusion of special characters. These are <strong>naive password complexity requirements</strong> that lead to a false sense of security as users will opt for more insecure passwords because the alternative is difficult to remember and type. According to <a href=\"https://pages.nist.gov/800-63-3/sp800-63b.html\">NIST recommendations</a>, the primary factor in password strength is password length, and therefore users should choose long passphrases with a maximum requirement of 64 characters (including spaces). These passphrases are more secure and memorable.</p>",
                "radarId": 29,
                "id": "en_2021-04_202104105",
                "blip_selector": "naive-password-complexity-requirements"
            },
            {
                "blip_id": 202104077,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "AWS Data Wrangler",
                "display_name": "AWS Data Wrangler",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "283",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/awslabs/aws-data-wrangler\">AWS Data Wrangler</a></strong> is an open-source library that extends the capabilities of <a href=\"https://github.com/pandas-dev/pandas\">Pandas</a> to AWS by connecting data frames to AWS data-related services. In addition to Pandas, this library leverages <a href=\"https://github.com/apache/arrow\">Apache Arrow</a> and <a href=\"https://github.com/boto/boto3\">Boto3</a> to expose <a href=\"https://aws-data-wrangler.readthedocs.io/en/2.5.0/api.html\">several APIs</a> to load, transform and save data from data lakes and data warehouses. An important limitation is that you can't do large distributed data pipelines with this library. However, you can leverage the native data services — like Athena, Redshift and Timestream — to do the heavy lifting and pull data in order to express complex transformations that are well suited for data frames. We've used AWS Data Wrangler in production and like that it lets you focus on writing transformations without spending too much time on the connectivity to AWS data services.</p>",
                "radarId": 84,
                "id": "en_2021-04_202104077",
                "blip_selector": "aws-data-wrangler"
            },
            {
                "blip_id": 202104051,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "215",
                "name": "Redash",
                "display_name": "Redash",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "22",
                "tag": "new",
                "description": "<p>Adopting a \"you build it, you run it\" DevOps philosophy means teams have increased attention on both technical and business metrics that can be extracted from the systems they deploy. Often we find that analytics tooling is difficult to access for most developers, so the work to capture and present metrics is left to other teams — long after features are shipped to end users. Our teams have found <strong><a href=\"https://redash.io/\">Redash</a></strong> to be very useful for querying product metrics and creating dashboards in a way that can be self-served by general developers, shortening feedback cycles and focusing the whole team on the business outcomes.</p>",
                "radarId": 64,
                "id": "en_2021-04_202104051",
                "blip_selector": "redash"
            },
            {
                "blip_id": 202104054,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "108",
                "name": "Service account rotation approach",
                "display_name": "Service account rotation approach",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "105",
                "tag": "new",
                "description": "<p>We strongly advise organizations to make sure, when they really need to use cloud service accounts, that they are rotating the credentials. Rotation is one of <a href=\"/radar/techniques/the-three-rs-of-security\">the three R's of security</a>. It is far too easy for organizations to forget about these accounts unless an incident occurs. This is leading to accounts with unnecessarily broad permissions remaining in use for long periods alongside a lack of planning for how to replace or rotate them. Regularly applying a cloud <strong>service account rotation approach</strong> also provides a chance to exercise the principle of least privilege.</p>",
                "radarId": 5,
                "id": "en_2021-04_202104054",
                "blip_selector": "service-account-rotation-approach"
            },
            {
                "blip_id": 202010103,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "185",
                "name": "io-ts",
                "display_name": "io-ts",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "306",
                "tag": "move_in",
                "description": "<p>We've really enjoyed using <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> for a while now and love the safety that the strong typing provides. However, getting data into the bounds of the type system — from, for example, a call to a back-end service — can lead to run-time errors. One library that helps solve this problem is <strong><a href=\"https://gcanti.github.io/io-ts/\">io-ts</a></strong>. It bridges the gap between compile-time type-checking and run-time consumption of external data by providing encode and decode functions. It can also be used as a custom type guard. As we gain more experience with io-ts in our work, our initially positive impressions are confirmed, and we still like the elegance of its approach.</p>",
                "radarId": 87,
                "id": "en_2021-04_202010103",
                "blip_selector": "io-ts"
            },
            {
                "blip_id": 202104033,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "esbuild",
                "display_name": "esbuild",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "74",
                "tag": "new",
                "description": "<p>We've always been keen to find tools that can shorten the software development feedback cycle; <strong><a href=\"https://github.com/evanw/esbuild\">esbuild</a></strong> is such an example. As the front-end codebase grows larger, we usually face a packaging time of minutes. As a JavaScript bundler optimized for speed, esbuild can reduce this time by a factor of 10 to 100. It is written in Golang and uses a more efficient approach in the process of parsing, printing and source map generation which significantly surpasses build tools such as <a href=\"/radar/tools/webpack\">Webpack</a> and <a href=\"/radar/tools/parcel\">Parcel</a> in building time. esbuild may not be as comprehensive as those tools in JavaScript syntax transformation; however, this doesn't stop many of our teams from switching to esbuild as their default.</p>",
                "radarId": 55,
                "id": "en_2021-04_202104033",
                "blip_selector": "esbuild"
            },
            {
                "blip_id": 201911040,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "125",
                "name": "Design systems",
                "display_name": "Design systems",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2021-04",
                "theta": "135",
                "tag": "move_in",
                "description": "<p>As application development becomes increasingly dynamic and complex, it's a challenge to deliver accessible and usable products with consistent style. This is particularly true in larger organizations with multiple teams working on different products. <strong>Design systems</strong> define a collection of design patterns, component libraries and good design and engineering practices that ensure consistent digital products. Built on the corporate style guides of the past, design systems offer shared libraries and documents that are easy to find and use. Generally, guidance is written down as code and kept under version control so that the guide is less ambiguous and easier to maintain than simple documents. Design systems have become a standard approach when working across teams and disciplines in product development because they allow teams to focus. They can address strategic challenges around the product itself without reinventing the wheel every time a new visual component is needed.</p>",
                "radarId": 3,
                "id": "en_2021-04_201911040",
                "blip_selector": "design-systems"
            },
            {
                "blip_id": 202104027,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "215",
                "name": "Tuple",
                "display_name": "Tuple",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-04",
                "theta": "14",
                "tag": "new",
                "description": "<p><strong><a href=\"https://tuple.app/\">Tuple</a></strong> is a relatively new tool optimized for remote paired programming, designed to fill the gap Slack left in the marketplace after abandoning Screenhero. Although it still exhibits some growing pains — platform availability is limited to Mac OS for now (with Linux support coming soon), and it has some UI quirks to work through — we've had good experience using it within those constraints. Unlike general-purpose video- and screen-sharing tools like Zoom, Tuple supports dual control with two mouse cursors, and unlike options such as <a href=\"/radar/tools/visual-studio-live-share\">Visual Studio Live Share</a>, it isn't tied to an IDE. Tuple supports voice and video calls, clipboard sharing, and lower latency than general-purpose tools; and its ability to let you draw and erase in your pair's screen with ease makes Tuple a very intuitive and developer-friendly tool.</p>",
                "radarId": 66,
                "id": "en_2021-04_202104027",
                "blip_selector": "tuple"
            }
        ]
    },
    {
        "date": "2021-10",
        "blips": [
            {
                "blip_id": 202110034,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "NgRx",
                "display_name": "NgRx",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "309",
                "tag": "new",
                "description": "<p>State management in React applications has been a recurring topic in the Radar, and we've recently clarified our position on <a href=\"/radar/languages-and-frameworks/redux\">Redux</a>, a popular framework in this space. <a href=\"https://ngrx.io/\"><strong>NgRx</strong></a> is, in essence, Redux for <a href=\"/radar/languages-and-frameworks/angular\">Angular</a>. It's a framework for building reactive applications with Angular, providing ways to manage state and to isolate side effects. Our teams report that picking up NgRx was straightforward, not the least because it is built with <a href=\"https://rxjs.dev/\">RxJS</a>, and they highlight a trade-off similar to the one we know from Redux: adding reactive state management comes with added complexity that only pays off in larger applications. The developer experience is enhanced by schematics, a scaffolding library and a set of tools that enable visual tracking of state and time-travel debugging.</p>",
                "radarId": 76,
                "id": "en_2021-10_202110034",
                "blip_selector": "ngrx"
            },
            {
                "blip_id": 202110006,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "ksqlDB",
                "display_name": "ksqlDB",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "302",
                "tag": "new",
                "description": "<p>If you're using <a href=\"/radar/tools/apache-kafka\">Apache Kafka</a> and building stream-processing applications, <a href=\"https://ksqldb.io/\"><strong>ksqlDB</strong></a> is a great framework for writing simple applications using SQL-like statements. ksqlDB is not a traditional SQL database. However, it allows you to use lightweight SQL-like statements to build new Kafka <a href=\"https://docs.ksqldb.io/en/latest/concepts/streams/\">streams</a> or <a href=\"https://docs.ksqldb.io/en/latest/concepts/tables/\">tables</a> on top of the existing Kafka topics. The queries can pull data, similar to reading from a traditional database, or push results to the application when incremental changes occur. You can choose to run it as a <a href=\"https://ksqldb.io/quickstart.html#quickstart-content\">standalone server</a> natively as part of your existing Apache Kafka installation or as a fully managed service on Confluent Cloud. We're using ksqlDB in simple data-processing use cases. In more complex use cases, where an application requires programming code beyond algebraic SQL queries, we continue to use data-processing frameworks such as <a href=\"/radar/platforms/apache-spark\">Apache Spark</a> or <a href=\"/radar/platforms/apache-flink\">Apache Flink</a> on top of Kafka. We recommend experimenting with ksqlDB in scenarios where the simplicity of the application allows it.</p>",
                "radarId": 90,
                "id": "en_2021-10_202110006",
                "blip_selector": "ksqldb"
            },
            {
                "blip_id": 202104005,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "GitHub Actions",
                "display_name": "GitHub Actions",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "207",
                "tag": "move_in",
                "description": "<p>Despite our cautionary advice when we last blipped it, we've seen continued enthusiasm for <strong><a href=\"https://docs.github.com/en/actions\">GitHub Actions</a></strong>. What we said before still holds true: GitHub Actions is not yet a full-fledged CI/CD replacement for complex workflows. It cannot, for example, re-trigger a single job of a workflow, call other actions inside a composite action or support a shared library. Furthermore, while the ecosystem in the <a href=\"https://github.com/marketplace?type=actions\">GitHub Marketplace</a> offers obvious advantages, giving third-party GitHub Actions access to your build pipeline risks sharing secrets in insecure ways (we recommend following GitHub's advice on <a href=\"https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions\">security hardening</a>). Despite those concerns, the convenience of creating your build workflow directly in GitHub next to your source code is a compelling option for some teams, and <a href=\"https://github.com/nektos/act\">act</a> helps you run GitHub Actions locally. As always, we recommend a clear-eyed assessment of the trade-offs, but some of our teams are happy with the simplicity of GitHub Actions.</p>",
                "radarId": 21,
                "id": "en_2021-10_202104005",
                "blip_selector": "github-actions"
            },
            {
                "blip_id": 202110014,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Conftest",
                "display_name": "Conftest",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "68",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/open-policy-agent/conftest\"><strong>Conftest</strong></a> is a tool for writing tests against structured configuration data. It relies on the <a href=\"https://www.openpolicyagent.org/docs/latest/policy-language/#what-is-rego\">Rego language</a> from <a href=\"/radar/tools/open-policy-agent-opa\">Open Policy Agent</a> to write tests for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> configurations, <a href=\"/radar/platforms/tekton\">Tekton</a> pipeline definitions or even <a href=\"/radar/tools/terraform\">Terraform</a> plans. Configurations are a critical part of the infrastructure, and we encourage you to assess Conftest to verify assumptions and get quick feedback.</p>",
                "radarId": 50,
                "id": "en_2021-10_202110014",
                "blip_selector": "conftest"
            },
            {
                "blip_id": 202110044,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "cert-manager",
                "display_name": "cert-manager",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "86",
                "tag": "new",
                "description": "<p><strong><a href=\"https://cert-manager.io/\">cert-manager</a></strong> is a tool to manage your X.509 certificates within your <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> cluster. It models certificates and issuers as first-class resource types and provides certificates as a service securely to developers and applications working within the Kubernetes cluster. With built-in support for <a href=\"/radar/tools/let-s-encrypt\">Let's Encrypt</a>, <a href=\"/radar/tools/hashicorp-vault\">HashiCorp Vault</a> and Venafi, cert-manager is an interesting tool to assess for certificate management.</p>",
                "radarId": 46,
                "id": "en_2021-10_202110044",
                "blip_selector": "cert-manager"
            },
            {
                "blip_id": 202110020,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Living documentation in legacy systems",
                "display_name": "Living documentation in legacy systems",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "147",
                "tag": "new",
                "description": "<p><a href=\"https://livebook.manning.com/book/specification-by-example/chapter-3/\">Living documentation</a>, which comes from the behavior-driven development (BDD) community, is often considered a privilege for those well-maintained codebases with executable specifications. We found that this technique can also be applied to legacy systems. Lack of business knowledge is a common obstacle encountered by teams when doing system modernization. Code is usually the only trustworthy source of truth because staff turnover and existing documentation are outdated. Therefore it's very important to reestablish the association between the documentation and the code and spread the business knowledge among the team when we take over a legacy system. In practice, we would first try to go to the codebase and deepen our understanding of the business through simple cleanup and safe refactoring. During the process, we'll need to add annotations to the code so that we're able to automatically generate living documentation later. This is very different from doing BDD in green-field projects, but it's a good start in legacy systems. Based on the generated documentation, we would try to convert some of the specs into executable high-level automation tests. Do this iteratively, and eventually you could get <strong>living documentation in legacy systems</strong> that is closely associated with the code and partially executable.</p>",
                "radarId": 6,
                "id": "en_2021-10_202110020",
                "blip_selector": "living-documentation-in-legacy-systems"
            },
            {
                "blip_id": 202110039,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "React Native Reanimated 2.0",
                "display_name": "React Native Reanimated 2.0",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "324",
                "tag": "new",
                "description": "<p>If we want animations in <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> applications, <strong><a href=\"https://docs.swmansion.com/react-native-reanimated/\">React Native Reanimated 2.0</a></strong> is the way to go. We previously had Reanimated 1.x, but it had issues related to the complexity of the Reanimated declarative language and also had some additional performance costs related to initialization and communication between the React Native JavaScript thread and the UI thread. Reanimated 2.0 is an attempt at reimagining how to run animations in the UI thread; it allows us to code the animations in JavaScript and run them on the UI thread using a new API called <a href=\"https://docs.swmansion.com/react-native-reanimated/docs/2.2.0/worklets/\">animation worklets</a>. It does this by spawning a secondary JavaScript context on the UI thread that then is able to run JavaScript functions. We're using it in our React Native projects which need animations and like it a lot.</p>",
                "radarId": 79,
                "id": "en_2021-10_202110039",
                "blip_selector": "react-native-reanimated-2-0"
            },
            {
                "blip_id": 202005050,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Lens",
                "display_name": "Lens",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "30",
                "tag": "move_in",
                "description": "<p>Our teams continue to report good results when using <strong><a href=\"https://k8slens.dev/\">Lens</a></strong> to visualize and manage their <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> clusters. Billed as an \"IDE for Kubernetes,\" Lens makes it possible to interact with the cluster without having to memorize commands or manifest file structures. Kubernetes can be complex, and we understand that a tool for visualizing cluster metrics and deployed workloads can save time and reduce some of the toil involved in maintaining a Kubernetes cluster. Instead of hiding complexity behind a simple point-and-click interface, Lens brings together the tools an administrator would run from the command line. But be cautious about interactively making changes to a running cluster via any mechanism. We generally prefer that infrastructure changes be <a href=\"/radar/techniques/infrastructure-as-code\">implemented in code</a> so they are repeatable, testable and less prone to human error. However, Lens does excel as a one-stop tool to interactively navigate through and comprehend your cluster status.</p>",
                "radarId": 43,
                "id": "en_2021-10_202005050",
                "blip_selector": "lens"
            },
            {
                "blip_id": 202110091,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Regula",
                "display_name": "Regula",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "19",
                "tag": "new",
                "description": "<p>One of the key tenets of infrastructure as code (IaC) is automated testing. If we have a solid test pyramid with good code-level coverage at the bottom, we can produce a better and more secure infrastructure. Unfortunately, tools to assist in this space have been sparse. <a href=\"/radar/tools/conftest\">Conftest</a> is frequently used to test Terraform JSON and HCL code, but it is a general-purpose tool. <strong><a href=\"https://regula.dev/\">Regula</a></strong> is an attractive alternative. Similar to Conftest, Regula checks for compliance of infrastructure code by applying rules written in Open Policy Agent's Rego language, but it also provides a set of primitives specifically for validating infrastructure configurations. Because both tools are based on the Rego language, Regula rules can be run by Conftest. However, Regula comes with its own command-line tool for running tests as part of a pipeline with no dependence on Conftest or OPA. Our developers have found that Regula saves time and produces much more readable, maintainable and succinct test code. Still, both tools only validate the infrastructure code. A complete suite should also test the infrastructure to ensure the code is being accurately interpreted.</p>",
                "radarId": 62,
                "id": "en_2021-10_202110091",
                "blip_selector": "regula"
            },
            {
                "blip_id": 202110095,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "322",
                "name": "Telepresence",
                "display_name": "Telepresence",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "9",
                "tag": "new",
                "description": "<p><a href=\"https://www.telepresence.io/\"><strong>Telepresence</strong></a> is a tool that helps shorten the feedback loop of changes that usually require a deployment for proper testing. Developers can use it to plug a process that is running on their local machines into a remote Kubernetes cluster. This gives the local process access to the remote cluster's services and features, and the local service can also temporarily replace one of the cluster services.</p>\n\n<p>In situations where the service integration setup has become somewhat unwieldy, Telepresence can boost developer productivity and enable more effective local testing. However, if you get into the habit of using a clever tool like this, you may have bigger problems. For example, if you use Telepresence because it has become impossible to set up all necessary dependencies for local development, you may want to investigate the complexity of your setup and architecture. If it becomes the only way for you to do service integration tests, consider looking into <a href=\"/radar/techniques/consumer-driven-contract-testing\">consumer-driven contract testing</a> or other automated ways of integration testing.</p>",
                "radarId": 64,
                "id": "en_2021-10_202110095",
                "blip_selector": "telepresence"
            },
            {
                "blip_id": 1018,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "85",
                "name": "fastlane",
                "display_name": "fastlane",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "45",
                "tag": "refresh_writeup",
                "description": "<p>Releasing applications for iOS involves a code-signing step. Although supported by Apple's toolchain, the process can be cumbersome, error prone and full of unexpected surprises. We're happy to report that <a href=\"https://fastlane.tools/\"><strong>fastlane</strong></a>, already our tool of choice for automating the release process of mobile applications, provides a better solution: <a href=\"https://docs.fastlane.tools/actions/match\">match</a> is integrated into fastlane's smooth process, and it implements a <a href=\"https://codesigning.guide/\">new approach</a> to manage code signing for teams. Instead of storing the signing keys in the developer's macOS keychain — the default approach — the new approach revolves around storing the keys and certificates in a Git repository. This not only makes it easier to on-board new team members and set up new development machines; in our experience, it also is the easiest method to integrate signing into continuous delivery pipelines.</p>",
                "radarId": 37,
                "id": "en_2021-10_1018",
                "blip_selector": "fastlane"
            },
            {
                "blip_id": 202110088,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "PyTorch Geometric",
                "display_name": "PyTorch Geometric",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "319",
                "tag": "new",
                "description": "<p><strong><a href=\"https://pytorch-geometric.readthedocs.io/en/latest/\">PyTorch Geometric</a></strong> is a geometric deep learning extension library for <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a>. Geometric deep learning aims to build neural networks that can learn from non-Euclidean data like graphs. Graph network-based machine-learning approaches have been of increasing interest in social network modeling and in biomedical fields, specifically in drug discovery. PyTorch Geometric provides an easy-to-use library to design complicated graph network problems like protein structure representation. It has GPU and CPU support and includes a good collection of graph-based machine-learning algorithms based on recent research.</p>",
                "radarId": 92,
                "id": "en_2021-10_202110088",
                "blip_selector": "pytorch-geometric"
            },
            {
                "blip_id": 202110100,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Wav2Vec 2.0",
                "display_name": "Wav2Vec 2.0",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "10",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/pytorch/fairseq/tree/main/examples/wav2vec\"><strong>Wav2Vec 2.0</strong></a> is a self-supervised learning framework for speech recognition. With this framework the model is trained in two phases. First, it begins in self-supervised mode using unlabeled data and tries to achieve the best possible speech representation. Then it uses supervised fine-tuning, during which labeled data teaches the model to predict particular words or phonemes. We've used Wav2Vec and find its approach quite powerful for building automatic speech recognition models for regional languages with limited availability of labeled data.</p>",
                "radarId": 45,
                "id": "en_2021-10_202110100",
                "blip_selector": "wav2vec-2-0"
            },
            {
                "blip_id": 202110080,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Babashka",
                "display_name": "Babashka",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "202",
                "tag": "new",
                "description": "<p>Even today, considering all the development and infrastructure tools at our disposal, we often reach a point where we need a script to glue several things together or to automate a recurring task. Current favorites for writing these scripts are bash and Python, but we're happy to report that there's a new, exciting option: Clojure. This is made possible with <strong><a href=\"https://babashka.org/\">Babashka</a></strong>, a complete Clojure run time implemented with <a href=\"/radar/platforms/graalvm\">GraalVM</a>. Babashka ships with libraries that cover most of the use cases for which you'd use a scripting tool, and loading of further libraries is possible, too. The use of GraalVM brings startup times within range of native tools, and it also makes Babashka one of the few options for a multithreaded scripting environment, for those rare cases when it's needed.</p>",
                "radarId": 31,
                "id": "en_2021-10_202110080",
                "blip_selector": "babashka"
            },
            {
                "blip_id": 202110087,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "Polars",
                "display_name": "Polars",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "310",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/pola-rs/polars\"><strong>Polars</strong></a> is an in-memory data frame library implemented in <a href=\"/radar/languages-and-frameworks/rust\">Rust</a>. Unlike other data frames (such as Pandas), Polars is multithreaded and safe for parallel operations. The in-memory data is organized in the <a href=\"https://arrow.apache.org/\">Apache Arrow</a> format for efficient analytic operations and to enable interoperability with other tools. If you're familiar with Pandas, you can quickly get started with Polars' Python bindings. We believe Polars, with Rust implementation and Python bindings, is a performant in-memory data frame to assess for your analytical needs.</p>",
                "radarId": 91,
                "id": "en_2021-10_202110087",
                "blip_selector": "polars"
            },
            {
                "blip_id": 202110045,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "ExternalDNS",
                "display_name": "ExternalDNS",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "213",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/kubernetes-sigs/external-dns\">ExternalDNS</a></strong> synchronizes Kubernetes ingresses and services with external DNS providers, filling a hole previously filled by <a href=\"https://github.com/kubernetes/kops/tree/HEAD/dns-controller\">kops dns-controller</a>, <a href=\"https://github.com/linki/mate\">Zalando's Mate</a> or <a href=\"https://github.com/wearemolecule/route53-kubernetes\">route53-kubernetes</a> — the last two of which have been deprecated in favor of ExternalDNS. The tool makes internal Kubernetes resources discoverable via public DNS servers, removing a sometimes manual step to update DNS records when an ingress host or service's IP address changes. It supports a huge list of DNS service providers out of the box with more being added via community support. As the old joke goes, <a href=\"https://imgur.com/YKvOiA4\">it's always DNS</a>.</p>",
                "radarId": 32,
                "id": "en_2021-10_202110045",
                "blip_selector": "externaldns"
            },
            {
                "blip_id": 202104052,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Remote mob programming",
                "display_name": "Remote mob programming",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "124",
                "tag": "move_in",
                "description": "<p>We continue to see many teams working and collaborating remotely; for these teams <strong>remote mob programming</strong> is a technique that is well worth trying. Remote mob programming allows teams to quickly \"mob\" around an issue or piece of code without the physical constraints of only being able to fit so many people around a pairing station. Teams can quickly collaborate on an issue or piece of code using their video conferencing tool of choice without having to connect to a big display, book a physical meeting room or find a whiteboard.</p>",
                "radarId": 8,
                "id": "en_2021-10_202104052",
                "blip_selector": "remote-mob-programming"
            },
            {
                "blip_id": 202110078,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Thought Machine Vault",
                "display_name": "Thought Machine Vault",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "247",
                "tag": "new",
                "description": "<p>It's rare for us to feature commercial, off-the-shelf software in the Radar, much less a core banking platform. However, <strong><a href=\"https://thoughtmachine.net/vault\">Thought Machine Vault</a></strong> (no connection to Thoughtworks) is an example of a product in this class designed to support good software engineering practices such as test-driven development, continuous delivery and infrastructure as code. Developers define banking products in Vault by writing smart contracts in Python code. This is distinctly different from the standard no-code approach where customization is done through graphical interfaces or proprietary configuration files or both. Because products are defined in regular Python code, developers have access to a range of tools such as test frameworks and version control to ensure that their work is safe and accurate. We wish more financial services platforms were designed with developer effectiveness in mind.</p>",
                "radarId": 35,
                "id": "en_2021-10_202110078",
                "blip_selector": "thought-machine-vault"
            },
            {
                "blip_id": 202104127,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "Team cognitive load",
                "display_name": "Team cognitive load",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "102",
                "tag": "stay",
                "description": "<p>A system's architecture mimics organizational structure and its communication. It's not big news that we should be intentional about how teams interact — see, for instance, the <a href=\"/radar/techniques/inverse-conway-maneuver\">Inverse Conway Maneuver</a>. Team interaction is one of the variables for how fast and how easily teams can deliver value to their customers. We were happy to find a way to measure these interactions; we used the <a href=\"https://teamtopologies.com/book\">Team Topologies</a> author's <a href=\"https://github.com/TeamTopologies/Team-Cognitive-Load-Assessment\">assessment</a> which gives you an understanding of how easy or difficult the teams find it to build, test and maintain their services. By measuring <strong>team cognitive load</strong>, we could better advise our clients on how to change their teams' structure and evolve their interactions.</p>",
                "radarId": 10,
                "id": "en_2021-10_202104127",
                "blip_selector": "team-cognitive-load"
            },
            {
                "blip_id": 202110032,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Modern Unix commands",
                "display_name": "Modern Unix commands",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "43",
                "tag": "new",
                "description": "<p>There are many reasons to love Unix, but the one that has profoundly affected our industry is the Unix philosophy of building applications that \"do one thing and do it well.\" Unix commands embody this philosophy. A set of small functions that can be piped together to create more complex solutions. In recent years, programmers have contributed to a growing set of <strong>modern Unix commands</strong>. These modern versions attempt to be smaller and faster, often written in <a href=\"/radar/languages-and-frameworks/rust\">Rust</a>. They include additional features such as syntax highlighting and utilize features of modern terminals. They aim to support programmers natively by integrating nicely with <code>git</code> and recognizing source code files. For example, <code><a href=\"https://github.com/sharkdp/bat\">bat</a></code> is a replacement for <code>cat</code> with paging and syntax highlighting; <code><a href=\"https://github.com/ogham/exa\">exa</a></code> is a replacement for <code>ls</code> with extended file information and <code><a href=\"https://github.com/BurntSushi/ripgrep#quick-examples-comparing-tools\">ripgrep</a></code> is a faster <code>grep</code> replacement that by default ignores gitignore, binary and hidden files. The <a href=\"https://github.com/ibraheemdev/modern-Unix\">Modern Unix</a> repository has a reference to some of these commands. We've been enjoying using these Unix commands. You should try them in improving your command-line experience. However, we caution against using them in scripts as replacements for the standard command-line utilities that are shipped in default OS distributions, because they reduce the scripts' portability running on other machines.</p>",
                "radarId": 56,
                "id": "en_2021-10_202110032",
                "blip_selector": "modern-unix-commands"
            },
            {
                "blip_id": 202110038,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Qiankun",
                "display_name": "Qiankun",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "327",
                "tag": "new",
                "description": "<p><a href=\"/radar/techniques/micro-frontends\">Micro frontends</a> have continued to gain in popularity since they were first introduced. However, it's easy to fall into <a href=\"/radar/techniques/micro-frontend-anarchy\">micro frontend anarchy</a> if teams fail to maintain consistency across an application, from styling technique to state management. <a href=\"https://github.com/umijs/qiankun\"><strong>Qiankun</strong></a>, which means heaven and earth in Chinese, is a JavaScript library built to provide an out-of-the-box solution for this. Qiankun is based on <a href=\"/radar/languages-and-frameworks/single-spa\">single-spa</a>, so it allows different frameworks to coexist in a single application. It also provides style isolation and JavaScript sandbox to ensure the style or state of microapplications do not interfere with each other. Qiankun has received some attention in the community; our teams are also assessing it, hoping that it can support more friendly debugging.</p>",
                "radarId": 93,
                "id": "en_2021-10_202110038",
                "blip_selector": "qiankun"
            },
            {
                "blip_id": 202005054,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "225",
                "name": "Tailwind CSS",
                "display_name": "Tailwind CSS",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "333",
                "tag": "move_in",
                "description": "<p>Our developers have continued to be productive with <strong><a href=\"https://tailwindcss.com/\">Tailwind CSS</a></strong> and are impressed with its ability to scale with large teams and codebases. Tailwind CSS offers an alternative approach to CSS tools and frameworks that reduces complexity through lower-level utility CSS classes. The Tailwind CSS classes can easily be customized to suit any customer's visual identity. We've also found that it pairs particularly well with <a href=\"/radar/languages-and-frameworks/headless-ui\">Headless UI</a>. Tailwind CSS allows you to avoid writing any classes or CSS on your own which leads to a more maintainable codebase in the long term. It seems that Tailwind CSS offers the right balance between reusability and customization to create visual components.</p>",
                "radarId": 81,
                "id": "en_2021-10_202005054",
                "blip_selector": "tailwind-css"
            },
            {
                "blip_id": 202110084,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Headless UI",
                "display_name": "Headless UI",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "278",
                "tag": "new",
                "description": "<p><strong><a href=\"https://headlessui.dev/\">Headless UI</a></strong> is an unstyled component library for either <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> or <a href=\"/radar/languages-and-frameworks/vue-js\">Vue.js</a> from the same people that created <a href=\"/radar/languages-and-frameworks/tailwind-css\">Tailwind CSS</a>. Our developers like that they don't have to customize or work around the default styles that other component libraries come with. The components' rich functionality and full accessibility, combined with the frictionless styling, allows developers to focus more productively on the business problem and user experience. Unsurprisingly, Headless UI also pairs well with Tailwind CSS classes.</p>",
                "radarId": 87,
                "id": "en_2021-10_202110084",
                "blip_selector": "headless-ui"
            },
            {
                "blip_id": 202110040,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Single team remote wall",
                "display_name": "Single team remote wall",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "113",
                "tag": "new",
                "description": "<p>With the increased use of remote distributed teams, one of the things we hear people have missed having is the physical team wall. This is a single place where all the various story cards, tasks, status and progress can be displayed, acting as an information radiator and hub for the team. Often the wall was an integration point with the actual data being stored in different systems. As teams have become remote, they've had to revert to looking into the individual source systems and getting an \"at a glance\" view of a project has become very difficult. A <strong>single team remote wall</strong> is a simple technique to reintroduce the team wall virtually. While there might be some overhead in keeping this up-to-date, we feel the benefits to the team are worth it. For some teams, updating the physical wall formed part of the daily \"ceremonies\" the team did together, and the same can be done with a remote wall.</p>",
                "radarId": 9,
                "id": "en_2021-10_202110040",
                "blip_selector": "single-team-remote-wall"
            },
            {
                "blip_id": 202110090,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "React Three Fiber",
                "display_name": "React Three Fiber",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "335",
                "tag": "new",
                "description": "<p>With the rising interest in — and viability of — 3D and extended reality (XR) applications in web browsers, our teams have been experimenting with <a href=\"https://github.com/pmndrs/react-three-fiber\"><strong>React Three Fiber</strong></a> for developing 3D experiences on the web. React Three Fiber is a library that takes the React.js component and state model and translates it to 3D objects rendered with the <a href=\"/radar/languages-and-frameworks/three-js\">Three.js</a> library. This approach opens up 3D web programming to the wider group of developers already familiar with React.js and the rich ecosystem of tools and libraries surrounding it. However, when developing applications with React Three Fiber, our teams often have to manipulate the 3D scene imperatively. This doesn't mix well with the reactive component paradigm provided by React. There is no escaping the need to understand the basic 3D rendering mechanisms. The jury is still out on whether React Three Fiber offers enough abstraction to warrant learning its idiosyncrasies or if it's better just to work with Three.js directly.</p>",
                "radarId": 94,
                "id": "en_2021-10_202110090",
                "blip_selector": "react-three-fiber"
            },
            {
                "blip_id": 201904061,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Batect",
                "display_name": "Batect",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "70",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://batect.dev/\">Batect</a></strong> continues to gain traction among our developers and is considered by many to be a default approach for configuring local development and test environments. This open-source tool (which happens to be developed by a Thoughtworker) makes it easy to set up and share a build environment based on <a href=\"/radar/techniques/docker-for-builds\">Docker</a>. Batect then becomes the entry point for your build system, replacing the ubiquitous go script as the basis for a “<a href=\"https://www.thoughtworks.com/insights/blog/praise-go-script-part-i\">check out and go</a>” approach. Batect continues to evolve in response to developer feedback and recently added support for Docker's BuildKit and shell tab completion.</p>",
                "radarId": 39,
                "id": "en_2021-10_201904061",
                "blip_selector": "batect"
            },
            {
                "blip_id": 202110021,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Remote spontaneous huddling",
                "display_name": "Remote spontaneous huddling",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "120",
                "tag": "new",
                "description": "<p>We're seeing continued innovation in remote collaboration tools. The new <a href=\"https://slack.com/help/articles/4402059015315-Start-a-huddle-in-a-channel-or-direct-message\">Huddles</a> feature in Slack provides a Discord-like experience of persistent audio calls that users can jump in and out of at any time. <a href=\"https://www.gather.town/\">Gather</a> provides a creative way to emulate a virtual office with avatars and video. IDEs provide direct collaboration features for pairing and debugging: we've previously blipped <a href=\"/radar/tools/visual-studio-live-share\">Visual Studio Live Share</a> and included <a href=\"/radar/tools/code-with-me\">JetBrains Code With Me</a> to the list in this edition. As tools continue to evolve modalities for collaboration in addition to video conferencing, we're increasingly seeing teams participating in <strong>remote spontaneous huddling</strong>, recreating the spontaneity of informal conversations over the intentionality of scheduling a Zoom or Microsoft Teams meeting. We don't expect to ever fully recreate the richness of face-to-face communication through digital tools, but we do see improved remote team effectiveness by giving teams multiple channels of collaboration rather than relying on one toolchain for everything.</p>",
                "radarId": 14,
                "id": "en_2021-10_202110021",
                "blip_selector": "remote-spontaneous-huddling"
            },
            {
                "blip_id": 201911025,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Gatsby.js",
                "display_name": "Gatsby.js",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "291",
                "tag": "move_in",
                "description": "<p>Although several frameworks promise the same ease of development and scalability typical of static site generators, we continue to have good experiences with <a href=\"https://www.gatsbyjs.org/\"><strong>Gatsby.js</strong></a>. In particular we've used it to build and deploy websites that scale to very large numbers of users without having to worry about capacity planning or deployment infrastructure. Our developers have also been impressed by the focus on accessibility and support for old browsers and that they could reuse their <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> experience. All in all, we feel Gatsby has matured well and is a solid choice in this space.</p>",
                "radarId": 71,
                "id": "en_2021-10_201911025",
                "blip_selector": "gatsby-js"
            },
            {
                "blip_id": 202005092,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Zero trust architecture",
                "display_name": "Zero trust architecture",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "113",
                "tag": "move_in",
                "description": "<p>We keep hearing about enterprises finding their security badly compromised due to an overreliance on the \"secure\" network perimeter. Once this external perimeter is breached, internal systems prove to be poorly protected with attackers quickly and easily able to deploy automated data extraction tools and ransomware attacks that all too often remain undetected for long periods. This leads us to recommend <strong>zero trust architecture</strong> (ZTA) as a now sensible default.</p>\n\n<p>ZTA is a paradigm shift in security architecture and strategy. It’s based on the assumption that a network perimeter is no longer representative of a secure boundary and no implicit trust should be granted to users or services based solely on their physical or network location. The number of resources, tools and platforms available to implement aspects of ZTA keeps growing and includes enforcing <a href=\"/radar/techniques/security-policy-as-code\">policies as code</a> based on the least privilege and as-granular-as-possible principles and continuous monitoring and automated mitigation of threats; using <a href=\"/radar/techniques/service-mesh\">service mesh</a> to enforce security control application-to-service and service-to-service; implementing <a href=\"/radar/techniques/binary-attestation\">binary attestation</a> to verify the origin of the binaries; and including <a href=\"/radar/techniques/secure-enclaves\">secure enclaves</a> in addition to traditional encryption to enforce the three pillars of data security: in transit, at rest and in memory. For introductions to the topic, consult the <a href=\"https://csrc.nist.gov/publications/detail/sp/800-207/final\">NIST ZTA</a> publication and Google's white paper on <a href=\"https://cloud.google.com/security/beyondprod\">BeyondProd</a>.</p>",
                "radarId": 3,
                "id": "en_2021-10_202005092",
                "blip_selector": "zero-trust-architecture"
            },
            {
                "blip_id": 1101,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Platform engineering product teams",
                "display_name": "Platform engineering product teams",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "135",
                "tag": "refresh_writeup",
                "description": "<p>We continue to see <strong>platform engineering product teams</strong> as a sensible default with the key insight being that they're just another <a href=\"https://martinfowler.com/articles/products-over-projects.html\">product team</a>, albeit one focused on internal platform customers. Thus it is critical to have clearly defined customers and products while using the same engineering disciplines and ways of working as any other (externally focused) product team; platform teams aren't special in this regard. We strongly caution against just renaming existing internal teams \"platform teams\" while leaving ways of working and organizational structures unchanged. We're still big fans of using concepts from <a href=\"https://teamtopologies.com/\">Team Topologies</a> as we think about how best to organize platform teams. We consider platform engineering product teams to be a standard approach and a significant enabler for high-performing IT.</p>",
                "radarId": 2,
                "id": "en_2021-10_1101",
                "blip_selector": "platform-engineering-product-teams"
            },
            {
                "blip_id": 202110018,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "MirrorMaker 2.0",
                "display_name": "MirrorMaker 2.0",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "228",
                "tag": "new",
                "description": "<p><strong><a href=\"https://cwiki.apache.org/confluence/display/KAFKA/KIP-382%3A+MirrorMaker+2.0\">MirrorMaker 2.0</a></strong> (also known as MM2), built using the Kafka Connect framework, solves many tool shortcomings of previous Kafka replication approaches. It can successfully <a href=\"https://kafka.apache.org/documentation/#georeplication\">geo-replicate</a> topic data and metadata across clusters, including offsets, consumer groups and authorization command lines (ACLs). MM2 preserves partitioning and detects new topics and partitions. We appreciated the ability to stage a cluster migration over time, an approach that can be useful in migrating from an on-prem cluster to a cloud cluster. After synchronizing the topics and consumer groups, we first migrated the clients to the new cluster location, then we migrated the producers to the new location and finally turned off MM2 and decommissioned the old cluster. We've also seen MM2 used in disaster recovery and high-availability scenarios.</p>",
                "radarId": 24,
                "id": "en_2021-10_202110018",
                "blip_selector": "mirrormaker-2-0"
            },
            {
                "blip_id": 202110092,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Sealed Secrets",
                "display_name": "Sealed Secrets",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "249",
                "tag": "new",
                "description": "<p><a href=\"/radar/platforms/kubernetes\">Kubernetes</a> natively supports a key-value object known as a secret. However, by default, Kubernetes secrets aren't really secret. They're handled separately from other key-value data so that precautions or access control can be applied separately. There is support for encrypting secrets before they are stored in <a href=\"https://etcd.io/\">etcd</a>, but the secrets start out as plain text fields in configuration files. <strong><a href=\"https://github.com/bitnami-labs/sealed-secrets\">Sealed Secrets</a></strong> is a combination operator and command-line utility that uses asymmetric keys to encrypt secrets so that they can only be decrypted by the controller in the cluster. This process ensures that the secrets won't be compromised while they sit in the configuration files that define a Kubernetes deployment. Once encrypted, these files can be safely shared or stored alongside other deployment artifacts.</p>",
                "radarId": 27,
                "id": "en_2021-10_202110092",
                "blip_selector": "sealed-secrets"
            },
            {
                "blip_id": 202110024,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Azure Cognitive Search",
                "display_name": "Azure Cognitive Search",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "191",
                "tag": "new",
                "description": "<p><strong><a href=\"https://docs.microsoft.com/en-us/azure/search/\">Azure Cognitive Search</a></strong> provides search as a service for applications that require text search over heterogeneous content. It provides push or pull-based APIs to upload and index images, unstructured text or structured document content, with <a href=\"https://docs.microsoft.com/en-us/rest/api/searchservice/create-data-source\">limitations on supported pull-based data source types</a>. It provides APIs over REST and .NET SDK to execute search queries, either using a simple query language or more powerful <a href=\"https://lucene.apache.org/\">Apache Lucene</a> queries with field-scoped queries, fuzzy search, infix and suffix wildcard search and regular expression search, among other features. We've successfully used Azure Cognitive Search alongside other Azure services, including searching content uploaded from <a href=\"https://azure.microsoft.com/en-us/services/cosmos-db/\">Cosmos DB</a>.</p>",
                "radarId": 30,
                "id": "en_2021-10_202110024",
                "blip_selector": "azure-cognitive-search"
            },
            {
                "blip_id": 202110010,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "256",
                "name": "Vowpal Wabbit",
                "display_name": "Vowpal Wabbit",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "351",
                "tag": "new",
                "description": "<p><strong><a href=\"https://vowpalwabbit.org/\">Vowpal Wabbit</a></strong> is a general-purpose machine-learning library. Even though it was originally created at Yahoo! Research over a decade ago, we still want to mention it to highlight that it continues to be the place where many of the newest machine-learning techniques get added first. If you're interested in machine learning, you may want to keep an eye on the innovations in Vowpal Wabbit. Note also that Microsoft has shown a deeper interest in Vowpal Wabbit in recent years, employing a main contributor and integrating it into their Azure offerings, for example in their <a href=\"https://docs.microsoft.com/en-us/azure/machine-learning/algorithm-module-reference/train-vowpal-wabbit-model\">machine-learning designer</a> and in <a href=\"https://azure.microsoft.com/en-us/services/cognitive-services/personalizer/\">Personalizer</a>.</p>",
                "radarId": 85,
                "id": "en_2021-10_202110010",
                "blip_selector": "vowpal-wabbit"
            },
            {
                "blip_id": 202110083,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "185",
                "name": "DoWhy",
                "display_name": "DoWhy",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "283",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/Microsoft/dowhy\">DoWhy</a></strong> is a Python library to perform end-to-end causal inference and analysis. Although machine-learning models can make predictions based on factual data, exploiting the correlation of variables that were present at the time, they're insufficient in scenarios where we need to ask <em>What if</em> and <em>Why</em> questions: <em>What if a variable changed? What would be the impact on the outcome?</em> Causal inference is an approach to answer such questions. It estimates the causal effect, that is, the magnitude by which an outcome would change, if we changed one of the causal variables. This approach is applied when we can't arrive at the answer through observations and collecting data from A/B testing — due to the cost of experiments or limitations. The DoWhy library estimates the causal effect based on a process that uses the past collected facts and data as well as assumptions one can make knowing the domain. It uses a four-step process of modeling the causal relationships graph based on assumptions, identifying a cause for an outcome, estimating the causal effect and finally challenging those assumptions by refuting the result. We've used this library successfully in production, and it's one of the commonly used libraries in causal estimation use cases.</p>",
                "radarId": 70,
                "id": "en_2021-10_202110083",
                "blip_selector": "dowhy"
            },
            {
                "blip_id": 202110072,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "Jetpack Compose",
                "display_name": "Jetpack Compose",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "300",
                "tag": "new",
                "description": "<p>In a move that mirrors Apple's introduction of <a href=\"/radar/languages-and-frameworks/swiftui\">SwiftUI</a>, Google introduced <a href=\"https://developer.android.com/jetpack/compose\"><strong>Jetpack Compose</strong></a> as a new and quite different approach to building user interfaces for modern Android applications. Compose brings more powerful tools and an intuitive Kotlin API. In most cases less code is needed, and it has become easier to create user interfaces at runtime rather than defining a static UI that can be filled with data. With <a href=\"https://blog.jetbrains.com/kotlin/2021/08/compose-multiplatform-goes-alpha\">Compose Multiplatform</a> and <a href=\"https://kotlinlang.org/docs/multiplatform.html\">Kotlin Multiplatform</a> developers now have a unified toolkit to build desktop, web and native Android apps. Wear OS 3.0+ is included, too, and with support for iOS already present in <a href=\"/radar/languages-and-frameworks/kotlin-multiplatform-mobile\">Kotlin Multiplatform Mobile</a>, it's likely that iOS will be supported by Compose in the future.</p>",
                "radarId": 66,
                "id": "en_2021-10_202110072",
                "blip_selector": "jetpack-compose"
            },
            {
                "blip_id": 1244,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "TensorFlow Lite",
                "display_name": "TensorFlow Lite",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "337",
                "tag": "move_in",
                "description": "<p>Since we first mentioned <a href=\"https://www.tensorflow.org/lite/\"><strong>TensorFlow Lite</strong></a> in the Radar in 2018, we've used it in several products and are happy to report that it works as advertised. The standard use case is to integrate pretrained models into mobile apps, but TensorFlow Lite also supports on-device learning which opens further areas of application. Numerous examples on the website showcase many common areas of application, such as image classification and object detection, but also hint at new ways of interaction using, for example, pose estimation and gesture recognition.</p>",
                "radarId": 82,
                "id": "en_2021-10_1244",
                "blip_selector": "tensorflow-lite"
            },
            {
                "blip_id": 202110028,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Mambu",
                "display_name": "Mambu",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "221",
                "tag": "new",
                "description": "<p><a href=\"https://www.mambu.com/\"><strong>Mambu</strong></a> is a SaaS cloud banking platform. It empowers customers to easily and flexibly build and change their banking and lending products. Unlike other out-of-box core banking platforms that you can only adapt with hard-coded integration, Mambu is designed for constantly changing financial offerings. It comes with an opinionated workflow, while also providing an API-driven approach to customize business logic, process and integrations. We currently have several projects using Mambu. With its cloud-based scalability and highly customizable capabilities, it's becoming one of the sensible default domain systems when building financial products.</p>",
                "radarId": 23,
                "id": "en_2021-10_202110028",
                "blip_selector": "mambu"
            },
            {
                "blip_id": 202110043,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Zap",
                "display_name": "Zap",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "353",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/uber-go/zap\">Zap</a></strong> is a super performant structured logging library for GoLang which is faster than the standard Log implementation and other logging libraries. Zap has both a \"pretty\" logger, providing a structured and <code>printf</code>-style interface, as well as an (even) faster implementation with just the structured interface. Our teams have used it extensively at scale and are happy to recommend it as their go-to solution.</p>",
                "radarId": 86,
                "id": "en_2021-10_202110043",
                "blip_selector": "zap"
            },
            {
                "blip_id": 202110042,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Weights & Biases",
                "display_name": "Weights & Biases",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "263",
                "tag": "new",
                "description": "<p><a href=\"https://wandb.ai/\"><strong>Weights & Biases</strong></a> is a machine learning (ML) platform for building models faster through experiment tracking, data set versioning, visualizing model performance and model management. You can integrate it with existing ML code and quickly get live metrics, terminal logs and system statistics streamed to the dashboard for further analysis. Our teams have used Weights & Biases, and we like its collaborative approach to model building.</p>",
                "radarId": 29,
                "id": "en_2021-10_202110042",
                "blip_selector": "weights-biases"
            },
            {
                "blip_id": 202110030,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Micoo",
                "display_name": "Micoo",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "53",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/Mikuu/Micoo\">Micoo</a></strong> is a new entrant into the crowded space of <a href=\"/radar/tools/visual-regression-testing-tools\">visual regression tools</a>; it's an open-source solution and is self-contained, providing Docker images to enable an easy and quick environment setup. It also provides different clients for Node.js, Java and Python as well as a Cypress plugin so it can be easily integrated with most of the common frontend UI automation testing frameworks or solutions. Although Micoo doesn't provide all the functionality of some of the SaaS-based or other commercial solutions, our teams have been using it extensively and have had positive experiences. They've especially called out that it works for mobile and desktop apps as well as the web.</p>",
                "radarId": 54,
                "id": "en_2021-10_202110030",
                "blip_selector": "micoo"
            },
            {
                "blip_id": 202110082,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Dive",
                "display_name": "Dive",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "40",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/wagoodman/dive\"><strong>Dive</strong></a> is a tool for analyzing Docker images; it helps explore each layer in the image and identify what's changed in each layer. Dive estimates <em>image efficiency</em> and <em>wasted space</em> in an image and can be integrated into the continuous integration (CI) pipeline to fail the build based on the efficiency score or amount of wasted space. We've used it in a few projects, and it has proven to be a useful tool — particularly if you're building images with a very low tolerance for additional tools or space consumption.</p>",
                "radarId": 42,
                "id": "en_2021-10_202110082",
                "blip_selector": "dive"
            },
            {
                "blip_id": 202104068,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "385",
                "name": "Peer review equals pull request",
                "display_name": "Peer review equals pull request",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "150",
                "tag": "stay",
                "description": "<p>Some organizations seem to think <strong>peer review equals pull request</strong>; they've taken the view that the only way to achieve a peer review of code is via a pull request. We've seen this approach create significant team bottlenecks as well as significantly degrade the quality of feedback as overloaded reviewers begin to simply reject requests. Although the argument could be made that this is one way to demonstrate code review \"regulatory compliance,\" one of our clients was told this was invalid since there was no evidence the code was actually read by anyone prior to acceptance. Pull requests are only one way to manage the code review workflow; we urge people to consider other approaches, especially where there is a need to coach and pass on feedback carefully.</p>",
                "radarId": 16,
                "id": "en_2021-10_202104068",
                "blip_selector": "peer-review-equals-pull-request"
            },
            {
                "blip_id": 201911026,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "165",
                "name": "Quarkus",
                "display_name": "Quarkus",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "319",
                "tag": "move_in",
                "description": "<p>We assessed <strong><a href=\"https://quarkus.io/\">Quarkus</a></strong> two years ago, and now our teams have more experience with it. Quarkus is a Kubernetes-native Java stack tailored for OpenJDK HotSpot and <a href=\"/radar/platforms/graalvm\">GraalVM</a>. Over the past two years, Quarkus has wired those best-of-breed libraries in the Java world and streamlined the code configuration, giving our teams a pretty good developer experience. Quarkus has a very fast boot time (tens of milliseconds) and a low RSS memory footprint; this is because of its <a href=\"https://quarkus.io/vision/container-first\">container-first</a> building approach: it uses ahead-of-time compilation techniques to do dependency injection at compile time and thus avoids the run-time costs of reflection. Our team has also had to endure the trade-offs: it takes nearly 10 minutes for Quarkus to build on our pipeline; some features that rely on annotations and reflection (such as ORM and serializer) are also limited. Part of these trade-offs are the result of using GraalVM. So if your application is not running for FaaS, using Quarkus with HotSpot is also a good choice.</p>",
                "radarId": 78,
                "id": "en_2021-10_201911026",
                "blip_selector": "quarkus"
            },
            {
                "blip_id": 202110003,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Confluent Kafka REST Proxy",
                "display_name": "Confluent Kafka REST Proxy",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "200",
                "tag": "new",
                "description": "<p>Kafka is a common default for event-driven architectures, but adapting it to legacy environments introduces an impedance mismatch. In a few cases, we've had success minimizing the legacy complexity using <a href=\"https://docs.confluent.io/3.0.0/kafka-rest/docs/index.html\"><strong>Confluent Kafka REST Proxy</strong></a>. The proxy allows developers to access Kafka through an HTTP interface, which is useful in environments that make using the native Kafka protocol difficult. For example, we were able to consume events emitted through SAP simply by having the SAP team invoke an HTTP POST command through a preconfigured SAP remote function call, avoiding the need to spin up a Java abstraction around SAP (and a team to manage it). The proxy is quite full-featured, although, as with any such adapter tool, we recommend caution and a clear-eyed view of the trade-offs involved. We believe the proxy is valuable when it enables legacy producers to send events, but would be careful creating event consumers through the proxy as the abstraction gets more complex. The proxy doesn't change the fact that Kafka consumers are stateful, which means that consumer instances created through the REST API are tied to a specific proxy, and the need to make an HTTP call to consume messages from a topic changes the standard semantics of Kafka eventing.</p>",
                "radarId": 20,
                "id": "en_2021-10_202110003",
                "blip_selector": "confluent-kafka-rest-proxy"
            },
            {
                "blip_id": 202110012,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "CBOR/JSON bilingual protocols",
                "display_name": "CBOR/JSON bilingual protocols",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "169",
                "tag": "new",
                "description": "<p>Although it’s been around for a while, we're seeing more and more use cases where using the <a href=\"http://cbor.io/\">CBOR</a> specification for data interchange makes sense — especially in environments containing multiple types of applications communicating with one another: service to service, browser to service, and so on. One thing we've found useful with <a href=\"https://github.com/sirthias/borer\">Borer</a>, a Scala implementation of a CBOR encoder/decoder, is the ability for clients to negotiate content between the binary representation and plain old JSON format. It's quite useful to have a text version viewable in a browser as well as the concise binary format. We foresee <strong>CBOR/JSON bilingual protocols</strong> picking up in popularity with the continuing rise of IoT and edge computing and other situations where the environment is tightly constrained.</p>",
                "radarId": 4,
                "id": "en_2021-10_202110012",
                "blip_selector": "cbor-json-bilingual-protocols"
            },
            {
                "blip_id": 1283,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Pulumi",
                "display_name": "Pulumi",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "242",
                "tag": "move_in",
                "description": "<p>We've been seeing an increase in teams using <strong><a href=\"https://pulumi.io/\">Pulumi</a></strong> in various organizations. Pulumi fills a gaping hole in the infrastructure coding world where <a href=\"/radar/tools/terraform\">Terraform</a> maintains a firm hold. While Terraform is a tried-and-true standby, its declarative nature suffers from inadequate abstraction facilities and limited testability. Terraform is adequate when the infrastructure is entirely static, but dynamic infrastructure definitions call for a real programming language. Pulumi distinguishes itself by allowing configurations to be written in <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>/JavaScript, <a href=\"/radar/languages-and-frameworks/python-3\">Python</a> and <a href=\"/radar/languages-and-frameworks/go-language\">Go</a> — no markup language or templating required. Pulumi is tightly focused on cloud-native architectures — including containers, serverless functions and data services — and provides good support for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Recently, <a href=\"/radar/platforms/aws-cloud-development-kit\">AWS CDK</a> has mounted a challenge, but Pulumi remains the only cloud-neutral tool in this area.</p>",
                "radarId": 26,
                "id": "en_2021-10_1283",
                "blip_selector": "pulumi"
            },
            {
                "blip_id": 201911051,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "Data mesh",
                "display_name": "Data mesh",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "158",
                "tag": "refresh_writeup",
                "description": "<p>Increasingly, we see a mismatch between what data-driven organizations want to achieve and what the current data architectures and organizational structures allow. Organizations want to embed data-driven decision-making, machine learning and analytics into many aspects of their products and services and how they operate internally; essentially they want to augment every aspect of their operational landscape with data-driven intelligence. Yet, we still have a ways to go before we can embed analytical data, access to it and how it is managed into the business domains and operations. Today, every aspect of managing analytical data is externalized outside of the operational business domains to the data team and to the data management monoliths: data lakes and data warehouses. <strong><a href=\"https://martinfowler.com/articles/data-monolith-to-mesh.html\">Data mesh</a></strong> is a decentralized sociotechnical approach to remove the dichotomy of analytical data and business operation. Its objective is to embed sharing and using analytical data into each operational business domain and close the gap between the operational and analytical planes. It's founded on four principles: domain data ownership, data as a product, self-serve data platform and computational federated governance.</p>\n\n<p>Our teams have been implementing the <a href=\"https://martinfowler.com/articles/data-mesh-principles.html\">data mesh architecture</a>; they've created new architectural abstractions such as the data product quantum to encapsulate the code, data and policy as an autonomous unit of analytical data sharing embedded into operational domains; and they've built self-serve data platform capabilities to manage the lifecycle of data product quanta in a declarative manner as described in <em><a href=\"https://www.oreilly.com/library/view/data-mesh/9781492092384/\">Data Mesh</a></em>. Despite our technical advances, we're still experiencing friction using the existing technologies in a data mesh topology, not to mention the resistance of business domains to embrace sharing and using data as a first-class responsibility in some organizations.</p>",
                "radarId": 5,
                "id": "en_2021-10_201911051",
                "blip_selector": "data-mesh"
            },
            {
                "blip_id": 202110093,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "318",
                "name": "Cosign",
                "display_name": "Cosign",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "64",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/sigstore/cosign\">Cosign</a></strong> is a container signing and verification tool. Part of Sigstore — a project under the Cloud Native Computing Foundation (CNCF) umbrella aimed at simplifying software signing and transparency — Cosign supports not only Docker and Open Container Initiative (OCI) images but also other artifacts that can be stored in a container registry. We previously talked about <a href=\"/radar/tools/docker-notary\">Docker Notary</a>, which also operates in this space; Notary v1, however, has some disadvantages: it's not registry native and needs a separate Notary server. Cosign avoids this problem and stores the signatures in the registry next to an image. It currently has integrations with <a href=\"https://github.com/marketplace/actions/install-cosign\">GitHub actions</a> and <a href=\"https://github.com/sigstore/helm-charts/tree/main/charts/cosigned\">Kubernetes</a> using a Webhook with further integrations in the pipeline. We've used Cosign in some of our projects and it looks quite promising.</p>",
                "radarId": 51,
                "id": "en_2021-10_202110093",
                "blip_selector": "cosign"
            },
            {
                "blip_id": 202110002,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "ClickHouse",
                "display_name": "ClickHouse",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "193",
                "tag": "new",
                "description": "<p><strong><a href=\"https://clickhouse.com/\">ClickHouse</a></strong> is an open-source, columnar online analytical processing (OLAP) database for real-time analytics. It started as an experimental project in 2009 and since has matured into a highly performant and linearly scalable analytical database. It's efficient query processing engine together with data compression makes it suitable to run interactive queries without pre-aggregation. We've used ClickHouse and are quite impressed with its performance.</p>",
                "radarId": 19,
                "id": "en_2021-10_202110002",
                "blip_selector": "clickhouse"
            },
            {
                "blip_id": 1060,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Three.js",
                "display_name": "Three.js",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "342",
                "tag": "move_in",
                "description": "<p>We first mentioned <strong><a href=\"https://threejs.org/\">Three.js</a></strong> in the Radar in Assess back in 2017. Since then, this 3D rendering library for the web has evolved and improved rapidly. The standard WebGL APIs have improved, and Three.js has added support for WebXR, turning it into a viable tool for creating immersive experiences. At the same time, browser support for 3D rendering and WebXR device APIs has improved, making the web an increasingly attractive platform for 3D content. Although there are other 3D rendering libraries, our teams have come to prefer Three.js, especially when paired with <a href=\"/radar/languages-and-frameworks/react-three-fiber\">React Three Fiber</a> to abstract away some of the low-level details. We've found that developers still need to be conscious of performance issues and will sometimes need to restructure data to optimize rendering speed.</p>",
                "radarId": 83,
                "id": "en_2021-10_1060",
                "blip_selector": "three-js"
            },
            {
                "blip_id": 202110070,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "AR spatial anchors",
                "display_name": "AR spatial anchors",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "165",
                "tag": "new",
                "description": "<p>Many augmented reality (AR) applications depend on knowing the location and orientation of the user's device. The default is to use GPS-based solutions, but <strong>spatial anchors</strong>, a newer technique to address this requirement, are also worth considering. Spatial anchors work with the image recorded by the device's camera, using image features and their relative position in 3D space to recognize a real-world location. For this location a corresponding anchor is created in the AR space. Although spatial anchors can't replace all GPS and marker-based anchors, they do provide more accuracy than most GPS-based solutions and are more resilient to different viewing angles than marker-based anchors. Our experience is currently limited to Google's <a href=\"https://developers.google.com/ar/develop/java/cloud-anchors/overview-android\">Cloud Anchors for Android</a>, which worked well for us. Somewhat uncharacteristically Google also offers <a href=\"https://developers.google.com/ar/develop/ios/cloud-anchors/quickstart\">Cloud Anchors for iOS</a> and with <a href=\"https://docs.microsoft.com/en-us/azure/spatial-anchors/overview\">Azure Spatial Anchors</a> Microsoft supports even more platforms.</p>",
                "radarId": 11,
                "id": "en_2021-10_202110070",
                "blip_selector": "ar-spatial-anchors"
            },
            {
                "blip_id": 202110011,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Berglas",
                "display_name": "Berglas",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "60",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/GoogleCloudPlatform/berglas\">Berglas</a></strong> is a tool for managing secrets on <a href=\"/radar/platforms/google-cloud-platform\">Google Cloud Platform (GCP)</a>. We've recommended <a href=\"/radar/techniques/secrets-as-a-service\">secrets as a service</a> as a technique to store and share secrets in modern distributed architectures in the past, and GCP offers <a href=\"https://cloud.google.com/secret-manager\">Secret Manager</a> for that purpose, and Berglas works well with Secret Manager. This is especially useful for those GCP services that don't have direct integration with Secret Manager yet; the alternative in such cases would be to write custom code or scripts. Berglas ships as a command-line tool and as a library, and both also come in handy in use cases beyond secrets as a service. The author of Berglas, who also happens to be the original author of <a href=\"/radar/tools/hashicorp-vault\">HashiCorp Vault</a>, now works at Google; however, Berglass is not an official Google product.</p>",
                "radarId": 40,
                "id": "en_2021-10_202110011",
                "blip_selector": "berglas"
            },
            {
                "blip_id": 202110098,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "ViewInspector",
                "display_name": "ViewInspector",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "344",
                "tag": "new",
                "description": "<p>When creating a user interface with <a href=\"/radar/languages-and-frameworks/swiftui\">SwiftUI</a>, the idea is to build a view model that can be mapped easily to the elements of the user interface. In such cases, most of the testing can be done on the model, using the standard unit testing frameworks which makes these tests straightforward to write and fast to run. To test the bindings between the model and the views, developers usually reach for <a href=\"https://developer.apple.com/documentation/xctest/user_interface_tests\">XCUITest</a>, a test automation framework that launches the full application and remote controls the interface. It works, tests are reasonably stable, but they take a long time to run.</p>\n\n<p>For a faster approach to writing unit tests for SwiftUI, try <a href=\"https://github.com/nalexn/ViewInspector\"><strong>ViewInspector</strong></a>, an open-source framework that uses Swift's public reflection API to access the underlying views created by SwiftUI. With ViewInspector, a test simply instantiates a SwiftUI view, locates the interface elements that need to be tested and then makes assertions against them. Basic interactions such as taps can be tested, too. Like many UI testing frameworks, it provides an API to locate interface elements, either by specifying a path through the view hierarchy or by using a set of finder methods. These tests are usually simpler than XCUITests, and they run much faster. As a word of caution, though, given the ease with which tests can be written using ViewInspector, you might be tempted to over-test the interface. Testing simple one-to-one mappings is just double-entry bookkeeping. And even though ViewInspector makes it easier to test the SwiftUI code, remember to keep most of the logic in the model.</p>",
                "radarId": 84,
                "id": "en_2021-10_202110098",
                "blip_selector": "viewinspector"
            },
            {
                "blip_id": 202005013,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Micro frontends for mobile",
                "display_name": "Micro frontends for mobile",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "135",
                "tag": "refresh_writeup",
                "description": "<p>Since introducing them in the Radar in 2016, we've seen widespread adoption of <a href=\"/radar/techniques/micro-frontends\">micro frontends</a> for web UIs. Recently, however, we've seen projects extend this architectural style to include <strong>micro frontends for mobile</strong> applications as well. When the application becomes sufficiently large and complex, it becomes necessary to distribute the development over multiple teams. This presents the challenge of maintaining team autonomy while integrating their work into a single app. Some teams write their own frameworks to enable this development style, and in the past we've mentioned <a href=\"/radar/languages-and-frameworks/atlas-and-beehive\">Atlas and Beehive</a> as possible ways to simplify the problem of integrating multiteam app development. More recently, we've seen teams using <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> to accomplish the same thing. Each React Native micro frontend is kept in its own repository where it can be built, tested and deployed separately. The team responsible for the overall application can then aggregate those micro frontends built by different teams into a single released app.</p>",
                "radarId": 7,
                "id": "en_2021-10_202005013",
                "blip_selector": "micro-frontends-for-mobile"
            },
            {
                "blip_id": 202110008,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Operator pattern for nonclustered resources",
                "display_name": "Operator pattern for nonclustered resources",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "135",
                "tag": "new",
                "description": "<p>We're seeing increasing use of the <a href=\"/radar/tools/kubernetes-operators\">Kubernetes Operator</a> pattern for purposes other than managing applications deployed on the cluster. Using the <strong>operator pattern for nonclustered resources</strong> takes advantage of custom resource definitions and the event-driven scheduling mechanism implemented in the Kubernetes control plane to manage activities that are related to yet outside of the cluster. This technique builds on the idea of <a href=\"/radar/techniques/kube-managed-cloud-services\">Kube-managed cloud services</a> and extends it to other activities, such as continuous deployment or reacting to changes in external repositories. One advantage of this technique over a purpose-built tool is that it opens up a wide range of tools that either come with Kubernetes or are part of the wider ecosystem. You can use commands such as <code>diff</code>, <code>dry-run</code> or <code>apply</code> to interact with the operator's custom resources. Kube's scheduling mechanism makes development easier by eliminating the need to orchestrate activities in the proper order. Open-source tools such as <a href=\"/radar/tools/crossplane\">Crossplane</a>, <a href=\"https://fluxcd.io/\">Flux</a> and <a href=\"/radar/platforms/argo-cd\">ArgoCD</a> take advantage of this technique and we expect to see more of these emerge over time.</p>",
                "radarId": 13,
                "id": "en_2021-10_202110008",
                "blip_selector": "operator-pattern-for-nonclustered-resources"
            },
            {
                "blip_id": 202110086,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Milvus 2.0",
                "display_name": "Milvus 2.0",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "236",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/milvus-io/milvus\"><strong>Milvus 2.0</strong></a> is a cloud-native, open-source vector database built to search and manage embedding vectors generated by machine-learning models and neural networks. It supports several <a href=\"https://milvus.io/docs/index_selection.md\">vector indexes</a> for approximate nearest neighbors (ANN) search across embedding vectors of audio, video, image or any unstructured data. Milvus 2.0 is a relatively new database, and we recommend you assess it for your similarity search needs.</p>",
                "radarId": 34,
                "id": "en_2021-10_202110086",
                "blip_selector": "milvus-2-0"
            },
            {
                "blip_id": 202110085,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Kats",
                "display_name": "Kats",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "294",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/facebookresearch/Kats\">Kats</a></strong> is a lightweight framework for performing time series analyses, recently released by Facebook Research. Time series analysis is an important area in data science; it encompasses the problem domains of forecasting, detection (including the detection of seasonalities, outliers and change points), feature extraction and multivariate analysis. Typically we tend to have different libraries for different techniques in a time series analysis. Kats though aims to be a one-stop shop for time series analyses and provides a set of algorithms and models for all the time series analysis problem domains. Previously we mentioned <a href=\"/radar/platforms/prophet\">Prophet</a>, also by Facebook Research,  which is one of the models Kats implements for forecasting. We're looking forward to trying Kats in problems involving time series analyses.</p>",
                "radarId": 89,
                "id": "en_2021-10_202110085",
                "blip_selector": "kats"
            },
            {
                "blip_id": 202110094,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Tauri",
                "display_name": "Tauri",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "343",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/tauri-apps/tauri\"><strong>Tauri</strong></a> is an <a href=\"https://www.electronjs.org/\">Electron</a> alternative for building desktop applications using a combination of <a href=\"/radar/languages-and-frameworks/rust\">Rust</a> tools and HTML, CSS, and JavaScript rendered in System's WebView. Unlike Electron which bundles Chromium, the applications built with Tauri leverage the underlying WebView, that is, WebKit on macOS, WebView2 on Windows and WebKitGTK on Linux. This approach has interesting trade-offs — on one hand you get small and fast application binaries; on the other hand, you need to verify compatibility quirks across WebViews of different systems.</p>",
                "radarId": 95,
                "id": "en_2021-10_202110094",
                "blip_selector": "tauri"
            },
            {
                "blip_id": 202110079,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "InsightFace",
                "display_name": "InsightFace",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "286",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/deepinsight/insightface\">InsightFace</a></strong> is an open source 2D and 3D deep face analysis toolbox, mainly based on <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a> and MXNet. InsightFace uses some of the most recent and accurate methods for face detection, face recognition and face alignment. We're particularly interested in it, because it has one of the best implementations for ArcFace, a cutting-edge machine-learning model that detects the similarities of two images. InsightFace with ArcFace received a 99.83% accuracy score on the <a href=\"http://vis-www.cs.umass.edu/lfw/\">Labeled Faces in the Wild (LFW)</a> data set. We're experimenting with it in the context of facial deduplication and have seen promising results.</p>",
                "radarId": 88,
                "id": "en_2021-10_202110079",
                "blip_selector": "insightface"
            },
            {
                "blip_id": 202110025,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "OPA Gatekeeper for Kubernetes",
                "display_name": "OPA Gatekeeper for Kubernetes",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "233",
                "tag": "new",
                "description": "<p><strong><a href=\"https://kubernetes.io/blog/2019/08/06/opa-gatekeeper-policy-and-governance-for-kubernetes/\">OPA Gatekeeper for Kubernetes</a></strong> is a customizable admission webhook for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> that enforces policies executed by the <a href=\"/radar/tools/open-policy-agent-opa\">Open Policy Agent (OPA)</a>. We're using this extension of the Kubernetes platform to add a security layer to clusters, providing automated governance mechanisms that ensure applications are compliant with defined policies. Our teams like it because of its customization capability; using CustomResourceDefinitions (CRD) allows us to define ConstraintTemplates and Constraints which make defining rules and the objects (e.g., deployments, jobs, cron jobs) and namespaces under evaluation an easy task.</p>",
                "radarId": 25,
                "id": "en_2021-10_202110025",
                "blip_selector": "opa-gatekeeper-for-kubernetes"
            },
            {
                "blip_id": 202110035,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Prefect",
                "display_name": "Prefect",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "28",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/prefecthq/prefect\"><strong>Prefect</strong></a> is a data workflow management tool that makes it easy to add semantics such as retries, dynamic mapping, caching and failure notifications to data pipelines. You can mark Python functions as tasks and chain them together through function calls to build the data flow. The Python API combined with a collection of predefined tasks for common data operations makes Prefect a noteworthy option to assess for your data pipeline needs.</p>",
                "radarId": 60,
                "id": "en_2021-10_202110035",
                "blip_selector": "prefect"
            },
            {
                "blip_id": 202104066,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "320",
                "name": "Hotwire",
                "display_name": "Hotwire",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "150",
                "tag": "refresh_writeup",
                "description": "<p>After successfully launching their email application <a href=\"https://hey.com/\">HEY</a> as a server-side application, Basecamp <a href=\"https://world.hey.com/dhh/bringing-hotwire-to-basecamp-91a442d6\">reported</a> migrating its flagship product, <a href=\"https://basecamp.com/\">Basecamp 3</a>, to <strong><a href=\"https://hotwire.dev/\">Hotwire</a></strong> this summer. As organizations increasingly default to single-page applications (SPAs) for new web development, we continue to be excited by Hotwire swimming against the stream. Unlike SPAs, Hotwire applications keep most of the logic and navigation on the server, relying on a minimal amount of browser JavaScript. Hotwire modularizes HTML pages into a set of components (called <a href=\"https://turbo.hotwired.dev/\">Turbo Frames</a>) that can be lazy loaded, provide independent contexts and send HTML updates to those contexts based on user actions. SPAs offer undeniable user responsiveness, but the simplicity of traditional server-side web programming combined with modern browser tooling provides a refreshing take on balancing developer effectiveness and user responsiveness.</p>",
                "radarId": 12,
                "id": "en_2021-10_202104066",
                "blip_selector": "hotwire"
            },
            {
                "blip_id": 202010066,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Backstage",
                "display_name": "Backstage",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "186",
                "tag": "refresh_writeup",
                "description": "<p>As the focus on improving the developer experience and efficiency increases across organizations, we're seeing <strong><a href=\"https://backstage.io/\">Backstage</a></strong> rise in popularity, alongside the adoption of developer portals. These organizations are looking to support and streamline their development environments. As the number of tools and technologies increases, some form of standardization is becoming increasingly important for consistency so that developers can focus on innovation and product development instead of getting bogged down with reinventing the wheel. Backstage is an open-source developer portal platform created by Spotify. It's based on software templates, unifying infrastructure tooling and consistent and centralized technical documentation. The plugin architecture allows for extensibility and adaptability into an organization's infrastructure ecosystem. We'll be watching the new <a href=\"https://backstage.io/docs/features/software-catalog/software-catalog-overview\">Backstage Service Catalog</a>, currently in alpha, which keeps track of ownership and metadata for all the software in an organization's ecosystem.</p>",
                "radarId": 18,
                "id": "en_2021-10_202010066",
                "blip_selector": "backstage"
            },
            {
                "blip_id": 202110071,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "317",
                "name": "Comby",
                "display_name": "Comby",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "72",
                "tag": "new",
                "description": "<p>This edition of the Radar introduces two tools that search and replace code using an abstract syntax tree (AST) representation. They occupy a similar space as <a href=\"/radar/tools/jscodeshift\">jscodeshift</a> but contain parsers for a wide range of programming languages. Although they share some similarities, they also differ in several ways. One of these tools, <strong><a href=\"https://comby.dev/\">Comby</a></strong>, is unique in its simple, command-line interface designed in the spirit of Unix tools such as <code>awk</code> and <code>sed</code>. While the Unix commands are based on regular expressions operating matching text, Comby employs a pattern syntax that is specific to programming language constructs and parses the code before searching. This helps developers search large code bases for structural patterns. Like <code>sed</code>, Comby can replace the patterns it matches with new structures. This is useful for automating wholesale changes to large codebases or for making repetitive changes across a suite of microservice repositories. Since these tools are fairly new, we expect to see a range of creative uses that have yet to be discovered.</p>",
                "radarId": 49,
                "id": "en_2021-10_202110071",
                "blip_selector": "comby"
            },
            {
                "blip_id": 201911009,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "XTDB",
                "display_name": "XTDB",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "258",
                "tag": "refresh_writeup",
                "description": "<p><a href=\"https://www.xtdb.com/main/index.html\"><strong>XTDB</strong></a> is an open-source document database with bitemporal graph queries. It natively supports two time axes for each record: <em>valid</em> time, when a fact occurs, and <em>transaction</em> time, when a fact is processed and recorded by the database. Support for bitemporality is beneficial in numerous scenarios, including analytical use cases executing time-aware queries; auditing historical changes to facts; supporting distributed data architectures that must guarantee globally consistent point-in-time queries such as <a href=\"/radar/techniques/data-mesh\">data mesh</a>; and preserving data immutability. XTDB takes information in document form, expressed in the Extensible Data Notation (EDN) format, a subset of the Clojure language. XTDB supports graph as well as SQL queries and is extensible through a REST API layer and Kafka Connect, among other modules. We're excited to see a growth in adoption of XTDB and the addition of features such as support for transactions and SQL.</p>",
                "radarId": 36,
                "id": "en_2021-10_201911009",
                "blip_selector": "xtdb"
            },
            {
                "blip_id": 202110097,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Transloco",
                "display_name": "Transloco",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "351",
                "tag": "new",
                "description": "<p><strong><a href=\"https://ngneat.github.io/transloco/\">Transloco</a></strong> is a library for Angular to build multilingual applications. It can be used in templates and offers a function to cover more complex use cases. Because the translations are loaded on-demand at run time, Transloco makes it easy to implement language switching in the web browser. It also covers localization of numbers, dates and more using template pipes.</p>",
                "radarId": 96,
                "id": "en_2021-10_202110097",
                "blip_selector": "transloco"
            },
            {
                "blip_id": 202110036,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "Production data in test environments",
                "display_name": "Production data in test environments",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "120",
                "tag": "new",
                "description": "<p>We continue to perceive <strong>production data in test environments</strong> as an area for concern. Firstly, many examples of this have resulted in reputational damage, for example, where an incorrect alert has been sent from a test system to an entire client population. Secondly, the level of security, specifically around protection of private data, tends to be less for test systems. There is little point in having elaborate controls around access to production data if that data is copied to a test database that can be accessed by every developer and QA. Although you <em>can</em> obfuscate the data, this tends to be applied only to specific fields, for example, credit card numbers. Finally, copying production data to test systems can break privacy laws, for example, where test systems are hosted or accessed from a different country or region. This last scenario is especially problematic with complex cloud deployments. Fake data is a safer approach, and tools exist to help in its creation. We do recognize there are reasons for <em>specific</em> elements of production data to be copied, for example, in the reproduction of bugs or for training of specific ML models. Here our advice is to proceed with caution.</p>",
                "radarId": 17,
                "id": "en_2021-10_202110036",
                "blip_selector": "production-data-in-test-environments"
            },
            {
                "blip_id": 202110022,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Arium",
                "display_name": "Arium",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "274",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/thoughtworks/Arium\"><strong>Arium</strong></a> is an automated testing framework for 3D applications written in Unity. Functional tests are an important part of a healthy test pyramid. Arium, which is built as a wrapper on the <a href=\"https://docs.unity3d.com/Packages/com.unity.test-framework@1.1/manual/index.html\">Unity Test framework</a>, lets you write functional tests for 3D apps on multiple platforms. We've used it successfully in a few of our projects.</p>",
                "radarId": 68,
                "id": "en_2021-10_202110022",
                "blip_selector": "arium"
            },
            {
                "blip_id": 1125,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "Airflow",
                "display_name": "Airflow",
                "ring": "Trial",
                "blip_status": "move_out",
                "volume_date": "2021-10",
                "theta": "76",
                "tag": "move_out",
                "description": "<p>In recent years we've seen the rise of generic and domain-specific workflow management tools. The drivers behind this rise include the increased usage of data-processing pipelines and the automation of the machine-learning (ML) model development process. <strong><a href=\"https://airflow.apache.org/\">Airflow</a></strong> is one of the early open-source task orchestration tools that popularized the definition of directed acyclic graphs (DAGs) as code, an improvement over an XML/YAML pipeline configuration. Although Airflow remains one of the most widely adopted orchestration tools, we encourage you to evaluate other tools based on your unique situation. For example, you may want to choose <a href=\"/radar/tools/prefect\">Prefect</a>, which supports dynamic data-processing tasks as a first-class concern with generic Python functions as tasks; or <a href=\"https://argoproj.github.io/\">Argo</a> if you prefer a tight integration with Kubernetes; or <a href=\"/radar/tools/kubeflow\">Kubeflow</a> or <a href=\"/radar/tools/mlflow\">MLflow</a> for ML-specific workflows. Given the rise of new tools, combined with some of the shortfalls of Airflow (such as lack of native support for dynamic workflows and its centralized approach to scheduling pipelines), we no longer recommend Airflow as the default orchestration tool.</p>\n\n<p>We believe that with the increased usage of streaming in analytics and data pipelines, as well as managing data through a <a href=\"/radar/techniques/data-mesh\">decentralized data mesh</a>, the need for orchestration tools to define and manage complex data-processing pipelines is reduced.</p>",
                "radarId": 38,
                "id": "en_2021-10_1125",
                "blip_selector": "airflow"
            },
            {
                "blip_id": 202104042,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Kotlin Multiplatform Mobile",
                "display_name": "Kotlin Multiplatform Mobile",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "297",
                "tag": "move_in",
                "description": "<p>For many organizations, cross-platform mobile development is becoming a strong option especially as the end-to-end experience of building mobile cross-platform applications becomes more enjoyable and efficient. <strong><a href=\"https://kotlinlang.org/docs/mobile/home.html\">Kotlin Multiplatform Mobile</a></strong> (KMM) is an SDK provided by JetBrains that leverages the <a href=\"https://kotlinlang.org/docs/multiplatform.html\">multiplatform capabilities</a> in <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> and includes tools and features designed to streamline the developer experience. With KMM you write code once for business logic and the app core in Kotlin and then share it with both Android and iOS applications. You write platform-specific code only when necessary, for example, to take advantage of native UI elements; and the specific code is kept in different views for each platform. We're moving KMM to Trial as it is <a href=\"https://kotlinlang.org/docs/mobile/kmm-evolution.html\">evolving rapidly</a> and we're seeing a few organizations use this as their default.</p>",
                "radarId": 73,
                "id": "en_2021-10_202104042",
                "blip_selector": "kotlin-multiplatform-mobile"
            },
            {
                "blip_id": 202110074,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Pactflow",
                "display_name": "Pactflow",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "32",
                "tag": "new",
                "description": "<p>For organizations with larger and more complex API ecosystems, especially those who are already using <a href=\"https://github.com/pact-foundation\">Pact</a>, we think it's worth assessing whether <strong><a href=\"https://pactflow.io/\">Pactflow</a></strong> could be useful. Pactflow manages the workflow and continuous deployment of tests written in Pact, lowering the barrier to <a href=\"/radar/techniques/consumer-driven-contract-testing\">consumer-driven contract testing</a>. The complexity of coordination between multiple producers and various disparate consumers can become prohibitive. We've seen some teams invest significant effort in hand-crafting solutions to this problem and think it's worth assessing whether Pactflow can look after this for you.</p>",
                "radarId": 59,
                "id": "en_2021-10_202110074",
                "blip_selector": "pactflow"
            },
            {
                "blip_id": 201911020,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "100",
                "name": "React Hooks",
                "display_name": "React Hooks",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "330",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://reactjs.org/docs/hooks-intro.html\">React Hooks</a></strong> have introduced a new approach to managing stateful logic; given React components have always been closer to functions than classes, Hooks have embraced this and brought state to the functions, instead of using classes to take function to the state with methods. Another staple of state management in React applications is <a href=\"/radar/languages-and-frameworks/redux\">Redux</a>, and we've already noted that it has come under scrutiny, suggesting that sometimes the complexity of Redux isn't worth it and in such cases a simple approach using Hooks is preferable. Rolling this completely on your own can quickly become tricky; therefore we recommend considering a combination of <a href=\"https://reactjs.org/docs/context.html\">React Context</a> and the useContext and useReducer hooks, along the lines explained in this <a href=\"https://blog.logrocket.com/guide-to-react-usereducer-hook/\">blog post</a>.</p>",
                "radarId": 67,
                "id": "en_2021-10_201911020",
                "blip_selector": "react-hooks"
            },
            {
                "blip_id": 202010050,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Mock Service Worker",
                "display_name": "Mock Service Worker",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "311",
                "tag": "move_in",
                "description": "<p>Web applications, especially those for internal use in enterprises, are usually written in two parts. The user interface and some business logic run in the web browser while business logic, authorization and persistence run on a server. These two halves normally communicate via JSON over HTTP. The endpoints shouldn't be mistaken for a real API; they're simply an implementation detail of an application that is split across two run-time environments. At the same time, they provide a valid seam to test the pieces individually. When testing the JavaScript part, the server side can be stubbed and mocked at the network level by a tool such as <a href=\"/radar/tools/mountebank\">Mountebank</a>. <strong><a href=\"https://mswjs.io/\">Mock Service Worker</a></strong> offers an alternative approach of intercepting requests in the browser. This simplifies manual tests as well. Like Mountebank, Mock Service Worker is run outside the browser as a Node.js process for testing network interactions. In addition to REST interactions, it mocks GraphQL APIs — a bonus because GraphQL can be complex to mock manually at the network level.</p>",
                "radarId": 75,
                "id": "en_2021-10_202010050",
                "blip_selector": "mock-service-worker"
            },
            {
                "blip_id": 202110073,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Nx",
                "display_name": "Nx",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "20",
                "tag": "new",
                "description": "<p>Over the years we've debated several times whether to feature monorepos in the Radar. Each time we ended up concluding that the trade-offs introduced by monorepos require a nuanced discussion and the technique is \"too complex to blip.\" Now we're seeing increased interest in monorepos in the JavaScript community, for example, for building applications composed of micro frontends, as discussed in this <a href=\"https://semaphoreci.com/blog/monorepo-micro-frontends-jonathan-creamer\">podcast episode</a>. Whether this is a good idea depends a lot on your situation, and we certainly don't want to give a general recommendation. What we do want to comment on is the tooling. In our teams we see a shift away from <a href=\"https://lerna.js.org/\">Lerna</a> and a strong preference to use <a href=\"https://nx.dev/\"><strong>Nx</strong></a> for managing JavaScript-based monorepos.</p>",
                "radarId": 44,
                "id": "en_2021-10_202110073",
                "blip_selector": "nx"
            },
            {
                "blip_id": 202110027,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "lifelines",
                "display_name": "lifelines",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "301",
                "tag": "new",
                "description": "<p><strong><a href=\"https://lifelines.readthedocs.io/en/latest/\">lifelines</a></strong> is a library for survival analysis in Python. Originally developed for birth and death events, it has evolved into a complete survival analysis library to predict any duration of time. Beyond medical use cases (such as answering, <em>How long does this population live for?</em>), we've used it in retail and manufacturing to answer questions like <em>How long users are subscribed to a service?</em> or <em>When should we do the next preventive maintenance?</em></p>",
                "radarId": 74,
                "id": "en_2021-10_202110027",
                "blip_selector": "lifelines"
            },
            {
                "blip_id": 202110019,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Konga",
                "display_name": "Konga",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "225",
                "tag": "new",
                "description": "<p><a href=\"https://pantsel.github.io/konga/\"><strong>Konga</strong></a> is an open-source UI for administering the <a href=\"/radar/tools/kong-api-gateway\">Kong API Gateway</a>, previously featured in the Radar in Trial. Our teams liked the quick setup and rich feature set that allowed them to experiment with and try out configurations easily. And the fact it's open-source software eases concerns about licensing costs.</p>",
                "radarId": 33,
                "id": "en_2021-10_202110019",
                "blip_selector": "konga"
            },
            {
                "blip_id": 202110005,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Jetpack Hilt",
                "display_name": "Jetpack Hilt",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "292",
                "tag": "new",
                "description": "<p><a href=\"https://developer.android.com/jetpack/androidx/releases/hilt\"><strong>Jetpack Hilt</strong></a> has recently reached version 1.0, and we can report that we've had good experiences with it. Jetpack Hilt offers extensions for integrating Hilt with various other AndroidX libraries, such as WorkManager and Navigation. It further expands the reach of Hilt, to provide developers with a standard way of incorporating <a href=\"/radar/languages-and-frameworks/dagger\">Dagger</a> dependency injection into Android applications. We've featured <a href=\"/radar/languages-and-frameworks/koin\">Koin</a> as a Kotlin-native dependency injection framework in the Radar before, and we would advise against attempting to replace Koin in a large existing codebase. However, when starting a new project, Hilt, it seems, is now the way to go.</p>",
                "radarId": 72,
                "id": "en_2021-10_202110005",
                "blip_selector": "jetpack-hilt"
            },
            {
                "blip_id": 202110041,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Vercel",
                "display_name": "Vercel",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "256",
                "tag": "new",
                "description": "<p>Since we first evaluated <a href=\"/radar/techniques/jamstack\">JAMstack</a>, we've seen more and more web applications of this style. However, when the infrastructure for building traditional dynamic websites and back-end services is too heavy for JAMstack, our teams choose <a href=\"https://vercel.com/\"><strong>Vercel</strong></a>. Vercel is a cloud platform for static site hosting. More importantly, it provides a seamless workflow for developing, previewing and shipping JAMstack sites. The configuration for the deployment is quite simple. By integrating with GitHub, each code commit or pull request could trigger a new website deployment that has a URL for preview, which greatly accelerates development feedback. Vercel also uses CDN to scale and speed up production sites. It's worth mentioning that the team behind Vercel also supports another popular framework, <a href=\"/radar/languages-and-frameworks/next-js\">Next.js</a>.</p>",
                "radarId": 28,
                "id": "en_2021-10_202110041",
                "blip_selector": "vercel"
            },
            {
                "blip_id": 202110031,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "mob",
                "display_name": "mob",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "48",
                "tag": "new",
                "description": "<p>Sometimes you come across a tool that you didn't realize you needed until you do; <strong><a href=\"https://github.com/remotemobprogramming/mob\">mob</a></strong> is just such a tool. Living as we do in a world where remote pair programming has become the norm for many teams, having a tool that allows for seamless handover either between pairs or a wider group as part of a <a href=\"/radar/techniques/remote-mob-programming\">mob programming</a> session is super useful. mob hides all the version control paraphernalia behind a command-line interface that makes participating in mob programming sessions simpler. It also provides specific advice around how to participate remotely, for example, to \"steal the screenshare\" in Zoom rather than ending a screenshare, ensuring the video layout doesn't change for participants. A useful tool and thoughtful advice, what's not to like?</p>",
                "radarId": 55,
                "id": "en_2021-10_202110031",
                "blip_selector": "mob"
            },
            {
                "blip_id": 202110013,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Code With Me",
                "display_name": "Code With Me",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "77",
                "tag": "new",
                "description": "<p>JetBrains' collaborative coding tool, <strong><a href=\"https://www.jetbrains.com/code-with-me/\">Code With Me</a></strong>, has been increasing in popularity as many teams use various JetBrains tools in this remote-first world. Along with other remote collaboration tools such as VSCode's <a href=\"/radar/tools/visual-studio-live-share\">Visual Studio Live Share</a>, Code With Me gives development teams an improved experience with remote pairing and collaboration. Code With Me's abilities to invite teammates into the IDE projects and collaborate in real time are worth exploring. However, we've seen some limitations with regard to refactoring seamlessly and some issues in high-latency environments. We'll continue to watch this tool in this space.</p>",
                "radarId": 48,
                "id": "en_2021-10_202110013",
                "blip_selector": "code-with-me"
            },
            {
                "blip_id": 1298,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Four key metrics",
                "display_name": "Four key metrics",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "158",
                "tag": "refresh_writeup",
                "description": "<p>To measure software delivery performance, more and more organizations are turning to the <strong>four key metrics</strong> as defined by the <a href=\"https://www.devops-research.com/\">DORA research</a> program: change lead time, deployment frequency, mean time to restore (MTTR) and change fail percentage. This research and its statistical analysis have shown a clear link between high delivery performance and these metrics; they provide a great leading indicator for how a team, or even a whole delivery organization, is doing.</p>\n\n<p>We're still big proponents of these metrics, but we've also learned some lessons since we first started monitoring them. And we're increasingly seeing misguided measurement approaches with tools that help teams measure these metrics based purely on their continuous delivery (CD) pipelines. In particular when it comes to the stability metrics (MTTR and change fail percentage), CD pipeline data alone doesn't provide enough information to determine what a deployment failure with real user impact is. Stability metrics only make sense if they include data about real incidents that degrade service for the users.</p>\n\n<p>And as with all metrics, we recommend to always keep in mind the ultimate intention behind a measurement and use them to reflect and learn. For example, before spending weeks to build up sophisticated dashboard tooling, consider just regularly taking the <a href=\"https://www.devops-research.com/quickcheck.html\">DORA quick check</a> in team retrospectives. This gives the team the opportunity to reflect on which <a href=\"https://www.devops-research.com/research.html#capabilities\">capabilities</a> they could work on to improve their metrics, which can be much more effective than overdetailed out-of-the-box tooling.</p>",
                "radarId": 1,
                "id": "en_2021-10_1298",
                "blip_selector": "four-key-metrics"
            },
            {
                "blip_id": 202110075,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "pydantic",
                "display_name": "pydantic",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "315",
                "tag": "new",
                "description": "<p>Originally type annotations were added to Python to support static analysis. However, considering how widely type annotations, and annotations in general, are used in other programming languages, it was only a matter of time before developers would begin to use Python's type annotations for other purposes. <strong><a href=\"https://pydantic-docs.helpmanual.io/\">pydantic</a></strong> falls into this category. It allows you to use type annotations for data validation and settings management at run time. When data arrives as, say, a JSON document and needs to be parsed into a complex Python structure, pydantic ensures that the incoming data matches the expected types or reports an error if it doesn't. Although you can use pydantic directly, many developers have used it as part of <a href=\"/radar/languages-and-frameworks/fastapi\">FastAPI</a>, one of the most popular Python web frameworks. In fact, using pydantic in FastAPI is considered so indispensable that a recently proposed change to Python, aimed at reducing the cost of loading annotated code into memory, was <a href=\"https://mail.python.org/archives/list/python-dev@python.org/thread/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/\">reconsidered</a> because it would have broken the use of type annotations at run time.</p>",
                "radarId": 77,
                "id": "en_2021-10_202110075",
                "blip_selector": "pydantic"
            },
            {
                "blip_id": 202110081,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Crossplane",
                "display_name": "Crossplane",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "59",
                "tag": "new",
                "description": "<p><a href=\"https://crossplane.io/\"><strong>Crossplane</strong></a> is another entry in the class of tools implemented by the <a href=\"/radar/tools/kubernetes-operators\">Kubernetes Operator pattern</a> but with side effects that extend beyond the Kubernetes cluster. In our last Radar we mentioned <a href=\"/radar/techniques/kube-managed-cloud-services\">Kube-managed cloud services</a> as a technique, and Crossplane does just that. The idea is to leverage the Kubernetes control plane to provision cloud services on which your deployment is dependent, even if they aren't deployed on the cluster itself. Examples include managed database instances, load balancers or access control policies. This tool is noteworthy for two reasons. First, it demonstrates the powerful and flexible execution environment of the underlying Kubernetes control plane. There is no real limit to the range of supported custom resources. Second, Crossplane provides an alternative to the usual options of <a href=\"/radar/tools/terraform\">Terraform</a>, <a href=\"/radar/platforms/aws-cloud-development-kit\">CDK</a> or <a href=\"/radar/platforms/pulumi\">Pulumi</a>. Crossplane comes with a set of predefined providers for the major cloud services that cover the most commonly provisioned services. It isn't trying to be a general-purpose infrastructure-as-code (IaC) tool but rather a companion to workloads being deployed in Kubernetes. Often associated with the practice of <a href=\"/radar/techniques/gitops\">GitOps</a>, Crossplane stands on its own and allows you to stay within the Kubernetes ecosystem when it's necessary to manage external cloud resources. However, Crossplane doesn't help with provisioning Kubernetes itself; you'll need at least one other IaC tool to bootstrap the cluster.</p>",
                "radarId": 52,
                "id": "en_2021-10_202110081",
                "blip_selector": "crossplane"
            },
            {
                "blip_id": 202110015,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Contrast Security",
                "display_name": "Contrast Security",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "50",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.contrastsecurity.com/\">Contrast Security</a></strong> offers a security platform with multiple components, including static application security testing (SAST), interactive application security testing (IAST), open-source scanning and runtime application self-protection (RASP). It's been around for a few years now, and we've used it in multiple projects. One of the things we quite like about the Contrast platform is its run-time analysis of libraries; it helps identify libraries that are not used, which in turn helps our teams prioritize vulnerabilities and potentially get rid of unused libraries. This is particularly relevant given the increased importance of <a href=\"/radar/techniques/software-bill-of-materials\">securing the software supply chain</a>. We also quite like its IAST component; we've found it effective in our continuous delivery (CD) pipeline with reduced false positives, and it manages to catch a good range of vulnerabilities.</p>",
                "radarId": 41,
                "id": "en_2021-10_202110015",
                "blip_selector": "contrast-security"
            },
            {
                "blip_id": 202104048,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Operator Framework",
                "display_name": "Operator Framework",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2021-10",
                "theta": "35",
                "tag": "refresh_writeup",
                "description": "<p>We continue to see the adoption of Kubernetes in new and novel scenarios. For example, we see Kubernetes is being extended to <a href=\"/radar/techniques/operator-pattern-for-nonclustered-resources\">manage resources running outside of its cluster</a> or <a href=\"/radar/tools/crossplane\">across multiple infrastructure providers</a>, or it is used in managing stateful applications beyond Kubernetes's original scope. These extensions are possible using the <a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\">Kubernetes Operator</a> pattern: building Kubernetes controllers that have the domain-specific knowledge of the custom resource they manage. For example, an operator that manages a stateful application can use the Kubernetes primitives to automate an application's specific tasks beyond its deployment, such as restore, backup and upgrade its database.</p>\n\n<p><strong><a href=\"https://operatorframework.io/\">Operator Framework</a></strong> is a set of open-source tools that simplifies building and managing the lifecycle of <a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\">Kubernetes operators</a>. Although there are <a href=\"https://github.com/cncf/tag-app-delivery/blob/eece8f7307f2970f46f100f51932db106db46968/operator-wg/whitepaper/Operator-WhitePaper_v1-0.md#operator-frameworks-for-kubernetes\">multiple frameworks</a> to help you build Kubernetes operators, Operator Framework remains a good choice. It supports rich operator lifecycle management using its <a href=\"https://github.com/operator-framework/operator-lifecycle-manager/\">Operator Lifecycle Manager</a> module; it supports multiple languages to build the operator code itself using its <a href=\"https://sdk.operatorframework.io/\">Operator SDK</a>; and it provides a <a href=\"https://operatorhub.io/\">catalog</a> for publishing and sharing the operators. If you're planning to build Kubernetes operators, we recommend giving the Operator Framework a try to accelerate your development reliably.</p>",
                "radarId": 58,
                "id": "en_2021-10_202104048",
                "blip_selector": "operator-framework"
            },
            {
                "blip_id": 202110099,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Vite",
                "display_name": "Vite",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "5",
                "tag": "new",
                "description": "<p>Fast feedback is crucial for a good developer experience. Nothing breaks the flow of development more than having to wait a minute or two before getting feedback on the last code changes. Unfortunately, with applications growing in size and complexity, the popular build tools for front-end pipelines are often not fast enough anymore. Previously, we featured <a href=\"/radar/tools/esbuild\">esbuild</a>, which offers a significant performance improvement, because it's implemented in a compile-to-native language rather than JavaScript. <strong><a href=\"https://vitejs.dev/\">Vite</a></strong>, which is built on top of esbuild, delivers <a href=\"https://vitejs.dev/guide/why.html\">significant improvements</a> over other tools. It consists of two major parts: a dev server that provides rich feature enhancements over native ES modules, such as extremely fast Hot Module Replacement (HMR), and a build command that bundles your code with Rollup. Vite relies on ES modules, and unlike most older tools, it doesn't provide shimming or polyfills, which means it's not compatible with older browsers that don't support ES modules. In cases where older browsers had to be supported, some of our teams used Vite during development and other tools for production builds.</p>",
                "radarId": 65,
                "id": "en_2021-10_202110099",
                "blip_selector": "vite"
            },
            {
                "blip_id": 1145,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "gopass",
                "display_name": "gopass",
                "ring": "Assess",
                "blip_status": "move_out",
                "volume_date": "2021-10",
                "theta": "56",
                "tag": "move_out",
                "description": "<p><strong><a href=\"https://www.gopass.pw/\">gopass</a></strong> is a password manager for teams, built on GPG and Git. It's a descendant of <a href=\"http://www.passwordstore.org/\">pass</a> and adds several features, including interactive search and multiple password stores in a single tree. Since we first mentioned gopass, our teams have used it on several projects, sometimes stretching it beyond its limits. A sorely missed feature was the ability to deprecate secrets. Discoverability was already an issue, but not being able to mark secrets as no longer in use compounded this problem. The biggest issue, though, was scale. When you have teams with 50+ people using the same repository for several years, we found that the repository could grow to multiple gigabytes in size. Re-encrypting the secrets when onboarding new members could take more than half an hour. The underlying issue seems to be that in our teams everything changes all the time: people come and go, secrets are rotated, the architecture evolves, new secrets are added, old ones are no longer needed. gopass seems to work well, even for large numbers of users, when there's less change.</p>",
                "radarId": 53,
                "id": "en_2021-10_1145",
                "blip_selector": "gopass"
            },
            {
                "blip_id": 202110076,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Software Bill of Materials",
                "display_name": "Software Bill of Materials",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "105",
                "tag": "new",
                "description": "<p>In May 2021, the U.S. White House published its <a href=\"https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/\">Executive Order on Improving the Nation's Cybersecurity</a>. The document puts forward several technical mandates that relate to items we've featured in past Radars, such as <a href=\"/radar/techniques/zero-trust-architecture\">zero trust architecture</a> and automated compliance scanning using <a href=\"/radar/techniques/security-policy-as-code\">security policy as code</a>. Much of the document is devoted to improving the security of the software supply chain. One item in particular that caught our attention was the requirement that government software should contain a machine-readable <strong>Software Bill of Materials (SBOM)</strong>, defined as \"a formal record containing the details and supply chain relationships of various components used in building software.\" In other words, it should detail not just the components shipped but also the tools and frameworks used to deliver the software. This order has the potential to usher in a new era of transparency and openness in software development. This will undoubtedly have an impact on those of us who produce software for a living. Many, if not all software products produced today contain open-source components or employ them in the build process. Often, the consumer has no way of knowing which version of which package might have an impact on the security of their product. Instead they must rely on the security alerts and patches provided by the retail vendor. This executive order will ensure that an explicit description of all components is made available to consumers, empowering them to implement their own security controls. And since the SBOM is machine-readable, those controls can be automated. We sense that this move also represents a shift toward embracing open-source software and practically addressing both the security risks and benefits that it provides.</p>",
                "radarId": 15,
                "id": "en_2021-10_202110076",
                "blip_selector": "software-bill-of-materials"
            },
            {
                "blip_id": 202110023,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "Chakra UI",
                "display_name": "Chakra UI",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "279",
                "tag": "new",
                "description": "<p><a href=\"https://chakra-ui.com/\"><strong>Chakra UI</strong></a> is a UI component library for <a href=\"/radar/languages-and-frameworks/react-js\">React.js</a> that is designed for accessibility. We like it, especially for its accessibility features, including dark mode and compatibility with the Web Accessibility Initiative – Accessible Rich Internet Applications (WAI-ARIA) guidelines. Moreover, it is easy to test and customize which makes for a good development experience, accelerating the development process of UI solutions in production environments.</p>",
                "radarId": 69,
                "id": "en_2021-10_202110023",
                "blip_selector": "chakra-ui"
            },
            {
                "blip_id": 202110077,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Sourcegraph",
                "display_name": "Sourcegraph",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "13",
                "tag": "new",
                "description": "<p>Another abstract syntax tree–based code search tool that received our attention is <strong><a href=\"https://about.sourcegraph.com/\">Sourcegraph</a></strong>. In contrast to <a href=\"/radar/tools/comby\">Comby</a>, which is open source, Sourcegraph is a commercial tool (with a 10-user free tier). Sourcegraph is particularly suited for searching, navigating or cross-referencing in large codebases. The cloud-hosted version can be accessed through Sourcegraph's website and is designed to search publicly available open-source repositories. Whereas Comby is a lightweight command-line tool for automating repetitive tasks, Sourcegraph's emphasis is on interactive developer tools for understanding and navigating large code bases. Unlike Comby's <code>sed</code>-like interface, Sourcegraph's automated code rewriting capability is driven from a UI, allowing users to review changes before they're made. Because Sourcegraph is a hosted service, it also has the ability to continuously monitor code bases and send alerts when a match occurs.</p>",
                "radarId": 63,
                "id": "en_2021-10_202110077",
                "blip_selector": "sourcegraph"
            },
            {
                "blip_id": 202010039,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "255",
                "name": "K3s",
                "display_name": "K3s",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2021-10",
                "theta": "214",
                "tag": "move_in",
                "description": "<p><a href=\"https://k3s.io/\"><strong>K3s</strong></a> is a lightweight Kubernetes distribution built for IoT and edge computing. You get the benefits of a fully compliant Kubernetes but with reduced operational overhead. Its enhancements include lightweight storage backends (<a href=\"https://docs.python.org/3/library/sqlite3.html\">sqlite3</a> as default instead of <a href=\"https://etcd.io/\">etcd</a>), a single binary package with minimal OS dependencies and reduced memory footprint, all of which make K3s suitable for resource-constrained environments. We've used K3s in point-of-sale machines, and we're quite happy with our decision.</p>",
                "radarId": 22,
                "id": "en_2021-10_202010039",
                "blip_selector": "k3s"
            },
            {
                "blip_id": 202110033,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Mozilla Sops",
                "display_name": "Mozilla Sops",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "40",
                "tag": "new",
                "description": "<p>Plaintext secrets checked into source control (usually Github) are one of the most pervasive security mistakes developers make. For this reason we thought it useful to feature <strong><a href=\"https://github.com/mozilla/sops\">Mozilla Sops</a></strong>, a tool for encrypting secrets in text files that our developers find useful in situations where it is impossible to remove secrets from legacy code repositories. We've mentioned many tools of this type before (<a href=\"/radar/tools/blackbox\">Blackbox</a>, <a href=\"https://github.com/AGWA/git-crypt\">git-crypt</a>), but Sops has several features that set it apart. For example, Sops integrates with cloud-managed keystores such as AWS and GCP Key Management Service (KMS) or Azure Key Vault as sources of encryption keys. It also works cross-platform and supports PGP keys. This enables fine-grained access control to secrets on a file-by-file basis. Sops leaves the identifying key in plain text so that secrets can still be located and diffed by git. We're always supportive of anything that makes it easier for developers to be secure; however, remember that you don't have to keep secrets in source control to begin with. See <a href=\"/radar/techniques/decoupling-secret-management-from-source-code\">Decoupling secret management from source code</a> in our November 2017 issue.</p>",
                "radarId": 57,
                "id": "en_2021-10_202110033",
                "blip_selector": "mozilla-sops"
            },
            {
                "blip_id": 202110016,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Cloud Carbon Footprint",
                "display_name": "Cloud Carbon Footprint",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "82",
                "tag": "new",
                "description": "<p>Stakeholders increasingly expect businesses to account for the environmental externalities of their decisions, as evidenced by the rise of environmental, social and corporate governance (ESG) investing and employee activism around climate change. Migrating to the cloud offers the potential for more efficient energy usage — the cloud providers have much more scale to justify investment in green energy sources and R&D — but the downside of software abstractions for cloud users is that those abstractions also hide the energy impact as the actual data centers are hidden from view and financed by another company. <strong><a href=\"https://www.cloudcarbonfootprint.org/\">Cloud Carbon Footprint</a></strong>, a new open-source tool, takes advantage of cloud APIs to provide visualizations of estimated carbon emissions based on usage across AWS, GCP and Azure. It uses heuristics like Etsy's <a href=\"https://codeascraft.com/2020/04/23/cloud-jewels-estimating-kwh-in-the-cloud/\">Cloud Jewels</a> to estimate energy usage and public data sources to convert energy usage into emissions based on the carbon intensity of the cloud region's underlying energy grid (GCP <a href=\"https://cloud.google.com/sustainability/region-carbon\">publishes</a> this data already). The tool's dashboards act as information radiators, allowing decision makers to modify setups to cut costs and emissions at the same time. The linkage of cloud regions to carbon intensity of the underlying grid provides a nudge to switch dirty workloads to regions with greener energy sources.</p>",
                "radarId": 47,
                "id": "en_2021-10_202110016",
                "blip_selector": "cloud-carbon-footprint"
            },
            {
                "blip_id": 202110089,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "242",
                "name": "React Query",
                "display_name": "React Query",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "328",
                "tag": "new",
                "description": "<p><a href=\"https://react-query.tanstack.com/\"><strong>React Query</strong></a> is often described as the missing data-fetching library for React. Fetching, caching, synchronizing and updating server state is a common requirement in many React applications, and although the requirements are well-understood, getting the implementation right is notoriously difficult. React Query provides a straightforward solution using hooks. As an application developer you simply pass a function that resolves your data and leave everything else to the framework. We like that it works out-of-the-box but still offers a lot of configuration when needed. The developer tools, unfortunately not yet available for React Native, do help with understanding of how the framework works, which benefits developers new to it. In our experience, version 3 of the framework brought the stability needed to be used in production with our clients.</p>",
                "radarId": 80,
                "id": "en_2021-10_202110089",
                "blip_selector": "react-query"
            },
            {
                "blip_id": 202110037,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Proxyman",
                "display_name": "Proxyman",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2021-10",
                "theta": "22",
                "tag": "new",
                "description": "<p>It may not be a tool that you need everyday, but when you're in the weeds trying to diagnose a nasty network problem, it's very useful to be able to reach for a feature-rich HTTP debugging proxy. <strong><a href=\"https://proxyman.io/\">Proxyman</a></strong> is just such a tool. Quite a few of our teams have been using it for a while now as a macOS-specific drop-in replacement for <a href=\"https://www.charlesproxy.com/\">Charles</a> and really like its streamlined interface and cert management.</p>",
                "radarId": 61,
                "id": "en_2021-10_202110037",
                "blip_selector": "proxyman"
            }
        ]
    },
    {
        "date": "2022-03",
        "blips": [
            {
                "blip_id": 202203099,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Rethinking remote standups",
                "display_name": "Rethinking remote standups",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "144",
                "tag": "new",
                "description": "<p>The term <em>standup</em> originated from the idea of standing up during this daily sync meeting, with the goal of making it short. It's a common principle many teams try to abide by in their standups: keep it crisp and to the point. But we're now seeing teams challenge that principle and <strong>rethinking remote standups</strong>. When co-located, there are lots of opportunities during the rest of the day to sync up with each other spontaneously, as a complement to the short standup. Remotely, some of our teams are now experimenting with a longer meeting format, similar to what the folks at Honeycomb call a “<a href=\"https://www.honeycomb.io/blog/standup-meetings-are-dead/\">meandering team sync</a>.”</p>\n\n<p>It's not about getting rid of a daily sync altogether; we still find that very important and valuable, especially in a remote setup. Instead, it's about extending the time blocked in everybody's calendars for the daily sync to up to an hour, and use it in a way that makes some of the other team meetings obsolete and brings the team closer together. Activities can still include the well-tried walkthrough of the team board but are then extended by more detailed clarification discussions, quick decisions, and taking time to socialize. The technique is considered successful if it reduces the overall meeting load and improves team bonding.</p>",
                "radarId": 6,
                "id": "en_2022-03_202203099",
                "blip_selector": "rethinking-remote-standups"
            },
            {
                "blip_id": 202203002,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Jetpack Media3",
                "display_name": "Jetpack Media3",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "303",
                "tag": "new",
                "description": "<p>Android today has several media APIs: Jetpack Media, also known as MediaCompat, Jetpack Media2 and ExoPlayer. Unfortunately, these libraries were developed independently, with different goals but overlapping functionality. Android developers not only had to choose which library to use, they also had to contend with writing adaptors or other connecting code when features from multiple APIs were needed. <a href=\"https://developer.android.com/jetpack/androidx/releases/media3\"><strong>Jetpack Media3</strong></a> is an effort, currently in early access, to create a new API that takes common areas of functionality from the existing APIs — including UI, playback and media session handling — combining them into a merged and refined API. The player interface from ExoPlayer has also been updated, enhanced and streamlined to act as the common player interface for Media3.</p>",
                "radarId": 84,
                "id": "en_2022-03_202203002",
                "blip_selector": "jetpack-media3"
            },
            {
                "blip_id": 202203067,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "340",
                "name": "Temporal",
                "display_name": "Temporal",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "261",
                "tag": "new",
                "description": "<p><strong><a href=\"https://temporal.io/\">Temporal</a></strong> is a platform for developing long-running workflows, particularly for microservice architectures. A fork of Uber’s previous OSS <a href=\"https://github.com/uber/cadence\">Cadence</a> project, it has an event-sourcing model for long-running workflows so they can survive process/machine crashes. Although we don’t recommend using distributed transactions in microservice architectures, if you do need to implement them or long-running <a href=\"https://microservices.io/patterns/data/saga.html\">Sagas</a>, you may want to look at Temporal.</p>",
                "radarId": 43,
                "id": "en_2022-03_202203067",
                "blip_selector": "temporal"
            },
            {
                "blip_id": 202203034,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "CycloneDX",
                "display_name": "CycloneDX",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "243",
                "tag": "new",
                "description": "<p><strong><a href=\"https://cyclonedx.org/\">CycloneDX</a></strong> is a standard for describing a machine-readable <a href=\"/radar/techniques/software-bill-of-materials\">Software Bill of Materials</a> (SBOM). As software and compute fabrics increase in complexity, <em>software</em> becomes harder to define. Originating with OWASP, CycloneDX improves on the older SPDX standard with a broader definition that extends beyond the local machine dependencies to include runtime service dependencies. You'll also find implementations in several languages, an <a href=\"https://cyclonedx.org/tool-center/\">ecosystem</a> of supporting integrations and a <a href=\"https://github.com/CycloneDX/cyclonedx-cli\">CLI tool</a> that lets you analyze and change SBOMs with appropriate signing and verification.</p>",
                "radarId": 41,
                "id": "en_2022-03_202203034",
                "blip_selector": "cyclonedx"
            },
            {
                "blip_id": 202203001,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "205",
                "name": "GitLab CI/CD",
                "display_name": "GitLab CI/CD",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "227",
                "tag": "new",
                "description": "<p>If you're using <a href=\"https://gitlab.com/\">GitLab</a> to manage your software delivery, you should also look at <strong><a href=\"https://docs.gitlab.com/ee/ci/\">GitLab CI/CD</a></strong> for your continuous integration and continuous delivery needs. We've found it especially useful when used with on-premise GitLab and self-hosted runners, as this combination gets around authorization headaches often caused by using a cloud-based solution. Self-hosted runners can be fully configured for your purposes with the right OS and dependencies installed, and as a result pipelines can run much faster than using a cloud-provisioned runner that needs to be configured each time.</p>\n\n<p>Apart from the basic build, test and deploy pipeline, GitLab's product supports Services, Auto Devops and ChatOps among other advanced features. Services are useful in running Docker services such as Postgres or <a href=\"/radar/languages-and-frameworks/testcontainers\">Testcontainer</a> linked to a job for integration and end-to-end testing. Auto Devops creates pipelines with zero configuration which is very useful for teams that are new to continuous delivery or for organizations with many repositories that would otherwise need to create many pipelines manually.</p>",
                "radarId": 29,
                "id": "en_2022-03_202203001",
                "blip_selector": "gitlab-ci-cd"
            },
            {
                "blip_id": 202203082,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "MistQL",
                "display_name": "MistQL",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "309",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/evinism/mistql\">MistQL</a></strong> is a small domain-specific language for performing computations on JSON-like structures. Originally built for handcrafted feature extraction of machine-learning models on the frontend, MistQL currently supports a JavaScript implementation for browsers and a Python implementation for server-side use cases. We quite like its clean composable functional syntax, and we encourage you to assess it based on your needs.</p>",
                "radarId": 85,
                "id": "en_2022-03_202203082",
                "blip_selector": "mistql"
            },
            {
                "blip_id": 202104064,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Podman",
                "display_name": "Podman",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "29",
                "tag": "move_in",
                "description": "<p>As an alternative to <a href=\"/radar/platforms/docker\">Docker</a>, <strong><a href=\"https://github.com/containers/podman\">Podman</a></strong> has been validated by many of our teams. Podman introduces a daemonless engine for managing and running containers which is an interesting approach in comparison to what Docker does. Additionally, Podman can be easily run as a normal user <a href=\"/radar/platforms/rootless-containers\">without requiring root privileges</a>, which reduces the attack surface. By using either <a href=\"https://opencontainers.org/\">Open Container Initiative</a> (OCI) images built by <a href=\"https://github.com/containers/buildah\">Buildah</a> or Docker images, Podman can be adapted to most container use cases. Apart from some compatibility issues with macOS, our team has had generally good experiences with Podman on Linux distributions.</p>",
                "radarId": 55,
                "id": "en_2022-03_202104064",
                "blip_selector": "podman"
            },
            {
                "blip_id": 202203004,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Chrome Recorder panel",
                "display_name": "Chrome Recorder panel",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "77",
                "tag": "new",
                "description": "<p><strong><a href=\"https://developer.chrome.com/docs/devtools/recorder/\">Chrome Recorder panel</a></strong> is a preview feature in Google Chrome 97 that allows for simple record and playback of user journeys. While this definitely isn't a new idea, the way in which it is integrated into Chrome allows for quick creation, editing and running of scripts. The panel also integrates nicely with the performance panel, which makes getting repeated consistent feedback on page performance easier. While record/playback style testing always needs to be used with care in order to avoid brittle tests, we think this preview feature is worth assessing, especially if you're already using the Chrome Performance panel to measure your pages.</p>",
                "radarId": 61,
                "id": "en_2022-03_202203004",
                "blip_selector": "chrome-recorder-panel"
            },
            {
                "blip_id": 202104005,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "175",
                "name": "GitHub Actions",
                "display_name": "GitHub Actions",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "221",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://docs.github.com/en/actions\">GitHub Actions</a></strong> has grown considerably last year. It has proven that it can take on more complex workflows and call other actions in composite actions among other things. It still has some shortcomings, though, such as its inability to re-trigger a single job of a workflow. Although the ecosystem in the <a href=\"https://github.com/marketplace?type=actions\">GitHub Marketplace</a> has its obvious advantages, giving third-party GitHub Actions access to your build pipeline risks sharing secrets in insecure ways (we recommend following GitHub's advice on <a href=\"https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions\">security hardening</a>). However, the convenience of creating your build workflow directly in GitHub next to your source code combined with the ability to run GitHub Actions locally using open-source tools such as <a href=\"https://github.com/nektos/act\">act</a> is a compelling option that has facilitated setup and onboarding of our teams.</p>",
                "radarId": 28,
                "id": "en_2022-03_202104005",
                "blip_selector": "github-actions"
            },
            {
                "blip_id": 1298,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "65",
                "name": "Four key metrics",
                "display_name": "Four key metrics",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "150",
                "tag": "refresh_writeup",
                "description": "<p>To measure software delivery performance, more and more organizations are defaulting to the <strong>four key metrics</strong> as defined by the <a href=\"https://www.devops-research.com/\">DORA research</a> program: change lead time, deployment frequency, mean time to restore (MTTR) and change fail percentage. This research and its statistical analysis have shown a clear link between high-delivery performance and these metrics; they provide a great leading indicator for how a delivery organization as a whole is doing.</p>\n\n<p>We're still big proponents of these metrics, but we've also learned some lessons. We're still observing misguided approaches with tools that help teams measure these metrics based purely on their continuous delivery (CD) pipelines. In particular when it comes to the stability metrics (MTTR and change fail percentage), CD pipeline data alone doesn't provide enough information to determine what a deployment failure with real user impact is. Stability metrics only make sense if they include data about real incidents that degrade service for the users.</p>\n\n<p>We recommend always to keep in mind the ultimate intention behind a measurement and use it to reflect and learn. For example, before spending weeks building up sophisticated dashboard tooling, consider just regularly taking the <a href=\"https://www.devops-research.com/quickcheck.html\">DORA quick check</a> in team retrospectives. This gives the team the opportunity to reflect on which <a href=\"https://www.devops-research.com/research.html#capabilities\">capabilities</a> they could work on to improve their metrics, which can be much more effective than overdetailed out-of-the-box tooling. Keep in mind that these four key metrics originated out of the organization-level research of high-performing teams, and the use of these metrics at a team level should be a way to reflect on their own behaviors, not just another set of metrics to add to the dashboard.</p>",
                "radarId": 1,
                "id": "en_2022-03_1298",
                "blip_selector": "four-key-metrics"
            },
            {
                "blip_id": 202005105,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "82",
                "name": "tfsec",
                "display_name": "tfsec",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "45",
                "tag": "move_in",
                "description": "<p>For our projects using <a href=\"/radar/tools/terraform\">Terraform</a>, <strong><a href=\"https://github.com/liamg/tfsec\">tfsec</a></strong> has quickly become a default static analysis tool to detect potential security risks. It's easy to integrate into a CI pipeline and has a growing library of checks against all of the major cloud providers and platforms like Kubernetes. Given its ease of use, we believe tfsec could be a good addition to any Terraform project.</p>",
                "radarId": 44,
                "id": "en_2022-03_202005105",
                "blip_selector": "tfsec"
            },
            {
                "blip_id": 202203041,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Android Gradle plugin - Kotlin DSL",
                "display_name": "Android Gradle plugin - Kotlin DSL",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "275",
                "tag": "new",
                "description": "<p><strong>Android Gradle plugin Kotlin DSL</strong> added support for Kotlin Script as an alternative to Groovy for Gradle build scripts. The goal of replacing Groovy with Kotlin is to provide better support for refactoring and simpler editing in IDEs as well as ultimately to produce code that is easier to read and maintain. For teams already using Kotlin it also means working on the build in a familiar language. We had a team with an at least seven-year-old 450-line build script <a href=\"https://developer.android.com/studio/build/migrate-to-kts\">migrate</a> within a few days. If you have large or complex gradle build scripts, then it's worth assessing whether Kotlin Script will produce better outcomes for your teams.</p>",
                "radarId": 79,
                "id": "en_2022-03_202203041",
                "blip_selector": "android-gradle-plugin-kotlin-dsl"
            },
            {
                "blip_id": 202005040,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Google BigQuery ML",
                "display_name": "Google BigQuery ML",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "235",
                "tag": "move_in",
                "description": "<p>Since we last blipped about <strong><a href=\"https://cloud.google.com/bigquery-ml/docs\">Google BigQuery ML</a></strong>, more sophisticated models such as Deep Neural Networks and AutoML Tables have been added by connecting BigQuery ML with TensorFlow and Vertex AI as its backend. BigQuery has also introduced support for time series forecasting. One of our concerns previously was <a href=\"/radar/techniques/explainability-as-a-first-class-model-selection-criterion\">explainability</a>. Earlier this year, <a href=\"https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-xai-overview\">BigQuery Explainable AI</a> was announced for general availability, taking a step in addressing this. We can also export BigQuery ML models to Cloud Storage as a Tensorflow SavedModel and use them for online prediction. There remain trade-offs like ease of \"continuous delivery for machine learning\" but with its low barrier to entry, BigQuery ML remains an attractive option, particularly when the data already resides in BigQuery.</p>",
                "radarId": 30,
                "id": "en_2022-03_202005040",
                "blip_selector": "google-bigquery-ml"
            },
            {
                "blip_id": 202203055,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Java 17",
                "display_name": "Java 17",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "292",
                "tag": "new",
                "description": "<p>We don't routinely feature new versions of languages, but we wanted to highlight the new long-term support (LTS) version of Java, version 17. While there are promising new features, such as the preview of <a href=\"https://openjdk.java.net/jeps/406\">pattern matching</a>, it's the switch to the new LTS process that should interest many organizations. We recommend organizations assess new releases of Java as and when they become available, making sure they adopt new features and versions as appropriate. Surprisingly many organizations do not routinely adopt newer versions of languages even though regular updates help keep things small and manageable. Hopefully the new LTS process, alongside organizations moving to regular updates, will help avoid the \"too expensive to update\" trap that ends with production software running on an end-of-life version of Java.</p>",
                "radarId": 82,
                "id": "en_2022-03_202203055",
                "blip_selector": "java-17"
            },
            {
                "blip_id": 202203087,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "218",
                "name": "Syft",
                "display_name": "Syft",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "17",
                "tag": "new",
                "description": "<p>One of the key elements of improving \"supply chain security\" is using a <a href=\"/radar/techniques/software-bill-of-materials\">Software Bill of Materials (SBOM)</a>, which is why publishing an SBOM along with the software artifact is increasingly important. <strong><a href=\"https://github.com/anchore/syft\">Syft</a></strong> is a CLI tool and Go library for generating an SBOM from container images and file systems. It can generate the SBOM output in multiple formats, including JSON, <a href=\"/radar/platforms/cyclonedx\">CycloneDX</a> and SPDX. The SBOM output of Syft can be used by <a href=\"/radar/tools/grype\">Grype</a> for vulnerability scanning. One way to publish the generated SBOM along with the image is to add it as an attestation using <a href=\"/radar/tools/cosign\">Cosign</a>. This allows consumers of the image to verify the SBOM and to use it for further analysis.</p>",
                "radarId": 57,
                "id": "en_2022-03_202203087",
                "blip_selector": "syft"
            },
            {
                "blip_id": 202203049,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Collibra",
                "display_name": "Collibra",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "234",
                "tag": "new",
                "description": "<p>In the increasingly crowded space that is the enterprise data catalog market, our teams have enjoyed working with <strong><a href=\"https://www.collibra.com/us/en\">Collibra</a></strong>. They liked the deployment flexibility of either a SaaS or self-hosted instance, the wide range of functionality included out of the box, including data governance, lineage, quality and observability. Users also have the option to use a smaller subset of capabilities required by a more decentralized approach such as a <a href=\"/radar/techniques/data-mesh\">data mesh</a>. The real feather in its cap has been their often overlooked customer support, which our people have found to be collaborative and supportive. Of course, there's a tension between simple data catalogs and more full featured enterprise platforms, but so far the teams using it are happy with how Collibra has supported their needs.</p>",
                "radarId": 40,
                "id": "en_2022-03_202203049",
                "blip_selector": "collibra"
            },
            {
                "blip_id": 202203070,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "302",
                "name": "TinyML",
                "display_name": "TinyML",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "102",
                "tag": "new",
                "description": "<p>Until recently, executing a machine-learning (ML) model was seen as computationally expensive and in some cases required special-purpose hardware. While creating the models still broadly sits within this classification, they can be created in a way that allows them to be run on small, low-cost and low-power consumption devices. This technique, called <strong><a href=\"https://towardsdatascience.com/an-introduction-to-tinyml-4617f314aa79\">TinyML</a></strong>, has opened up the possibility of running ML models in situations many might assume infeasible. For example, on battery-powered devices, or in disconnected environments with limited or patchy connectivity, the model can be run locally without prohibitive cost. If you've been considering using ML but thought it unrealistic because of compute or network constraints, then this technique is worth assessing.</p>",
                "radarId": 18,
                "id": "en_2022-03_202203070",
                "blip_selector": "tinyml"
            },
            {
                "blip_id": 202203014,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Capacitor",
                "display_name": "Capacitor",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "286",
                "tag": "new",
                "description": "<p>We've been debating the merits of cross-platform mobile development tools for nearly as long as we've been publishing the Technology Radar. We first noted a new generation of tools in 2011 when blipping about <a href=\"/radar/tools/cross-mobile-platforms\">cross-mobile platforms</a>. Although we were skeptical of them at first, these tools have been perfected and widely adopted over the years. And nobody can debate the enduring popularity and usefulness of <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a>. <strong><a href=\"https://capacitorjs.com/\">Capacitor</a></strong> is the latest generation of a line of tools starting with PhoneGap, then renamed to <a href=\"/radar/platforms/phonegap-apache-cordova\">Apache Cordova</a>. Capacitor is a complete rewrite from Ionic that embraces the <a href=\"/radar/techniques/progressive-web-applications\">progressive web app</a> style for stand-alone applications. So far, our developers like that they can address web, iOS and Android applications with a single code base and that they can manage the native platforms separately with access to the native APIs when necessary. Capacitor offers an alternative to React Native, which has many years of cross-platform experience behind it.</p>",
                "radarId": 81,
                "id": "en_2022-03_202203014",
                "blip_selector": "capacitor"
            },
            {
                "blip_id": 202110092,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Sealed Secrets",
                "display_name": "Sealed Secrets",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "256",
                "tag": "stay",
                "description": "<p><a href=\"/radar/platforms/kubernetes\">Kubernetes</a> natively supports a key-value object known as a secret. However, by default, Kubernetes secrets aren't really secret. They're handled separately from other key-value data so that precautions or access control can be applied separately. There is support for encrypting secrets before they are stored in <a href=\"https://etcd.io/\">etcd</a>, but the secrets start out as plain text fields in configuration files. <strong><a href=\"https://github.com/bitnami-labs/sealed-secrets\">Sealed Secrets</a></strong> is a combination operator and command-line utility that uses asymmetric keys to encrypt secrets so that they can only be decrypted by the controller in the cluster. This process ensures that the secrets won't be compromised while they sit in the configuration files that define a Kubernetes deployment. Once encrypted, these files can be safely shared or stored alongside other deployment artifacts.</p>",
                "radarId": 33,
                "id": "en_2022-03_202110092",
                "blip_selector": "sealed-secrets"
            },
            {
                "blip_id": 202203025,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "255",
                "name": "NUKE",
                "display_name": "NUKE",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "40",
                "tag": "new",
                "description": "<p><strong><a href=\"https://nuke.build/\">NUKE</a></strong> is a build system for .NET and an alternative to either the traditional MSBuild or <a href=\"https://cakebuild.net/\">Cake</a> and <a href=\"https://fake.build/\">Fake</a> which we've featured previously in the Radar. NUKE represents build instructions as a C# DSL, making it easy to learn and with good IDE support. In our experience, NUKE made it really simple to build automation for .NET projects. We like the accurate static code checks and hints. We also like that we can use any NuGet package seamlessly and that the automation code can be compiled to avoid problems at runtime. NUKE isn't new, but its novel approach — using a C# DSL — and our positive overall experience prompted us to include it here.</p>",
                "radarId": 53,
                "id": "en_2022-03_202203025",
                "blip_selector": "nuke"
            },
            {
                "blip_id": 202203071,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Transitional architecture",
                "display_name": "Transitional architecture",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "99",
                "tag": "new",
                "description": "<p>A <strong><a href=\"https://martinfowler.com/articles/patterns-legacy-displacement/transitional-architecture.html\">transitional architecture</a></strong> is a useful practice used when replacing legacy systems. Much like scaffolding might be built, reconfigured and finally removed during construction or renovation of a building, you often need interim architectural steps during legacy displacement. Transitional architectures will be removed or replaced later on, but they're not just throwaway work given the important role they play in reducing risk and allowing a difficult problem to be broken into smaller steps. Thus they help with avoiding the trap of defaulting to a \"big bang\" legacy replacement approach, because you cannot make smaller interim steps line up with a final architectural vision. Care is needed to make sure the architectural \"scaffolding\" is eventually removed, lest it just become technical debt later on.</p>",
                "radarId": 11,
                "id": "en_2022-03_202203071",
                "blip_selector": "transitional-architecture"
            },
            {
                "blip_id": 202203036,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Excalidraw",
                "display_name": "Excalidraw",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "70",
                "tag": "new",
                "description": "<p><strong><a href=\"https://excalidraw.com/\">Excalidraw</a></strong> is a simple but powerful online drawing tool that our teams enjoy using. Sometimes teams just need a quick picture instead of a formal diagram, for remote teams Excalidraw provides a quick way to create and share diagrams. Our teams also like the \"lo-fi\" look of the diagrams it can produce, which is reminiscent of the whiteboard diagrams they would have produced when co-located. One caveat: you need to pay attention to the default security — at the time of writing, anyone who has the link can see the diagram. A paid-for version provides further authentication.</p>",
                "radarId": 62,
                "id": "en_2022-03_202203036",
                "blip_selector": "excalidraw"
            },
            {
                "blip_id": 202203027,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Remix",
                "display_name": "Remix",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "320",
                "tag": "new",
                "description": "<p>We witnessed the migration from server-side rendering website to single-page application in the browser, now the pendulum of web development seems to swing back to the middle. <strong><a href=\"https://remix.run/\">Remix</a></strong> is one such example. It's a full-stack JavaScript framework. It provides fast page loads by leveraging distributed systems and native browsers instead of clumsy static builds. It has made some optimizations on nested routing and page loading, which makes page rendering seem especially fast. Many people will compare Remix with <a href=\"/radar/languages-and-frameworks/next-js\">Next.js</a>, which is similarly positioned. We're glad to see such frameworks cleverly combining the browser run time with the server run time to provide a better user experience.</p>",
                "radarId": 87,
                "id": "en_2022-03_202203027",
                "blip_selector": "remix"
            },
            {
                "blip_id": 202203047,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "CDKTF",
                "display_name": "CDKTF",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "84",
                "tag": "new",
                "description": "<p>By now many organizations have created sprawling landscapes of services in the cloud. Of course, this is only possible when using <a href=\"/radar/techniques/infrastructure-as-code\">infrastructure as code</a> and mature tooling. We still like <a href=\"/radar/tools/terraform\">Terraform</a>, not the least because of its rich and growing ecosystem. However, the lack of abstractions in HCL, Terraform's default configuration language, effectively creates a glass ceiling. Using <a href=\"/radar/tools/terragrunt\">Terragrunt</a> pushes that up a bit further, but more and more often our teams find themselves longing for the abstractions afforded by modern programming languages. <a href=\"https://www.terraform.io/cdktf\"><strong>Cloud Development Kit for Terraform (CDKTF)</strong></a>, which resulted from a collaboration between AWS's <a href=\"/radar/platforms/aws-cloud-development-kit\">CDK</a> team and Hashicorp, makes it possible for teams to use several programming languages, including TypeScript and Java, to define and provision infrastructure. With this approach it follows the lead of <a href=\"/radar/platforms/pulumi\">Pulumi</a> while remaining in the Terraform ecosystem. We've had good experiences with CDKTF but have decided to keep it in the Assess ring until it moves out of beta.</p>",
                "radarId": 60,
                "id": "en_2022-03_202203047",
                "blip_selector": "cdktf"
            },
            {
                "blip_id": 202203030,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "sqlc",
                "display_name": "sqlc",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "337",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/kyleconroy/sqlc\">sqlc</a></strong> is a compiler that generates type-safe idiomatic Go code from SQL. Unlike other approaches based on object-relational mapping (ORM), you continue to write plain SQL for your needs. Once invoked, sqlc checks the correctness of the SQL and generates performant Go code, which can be directly called from the rest of the application. With stable support for both PostgreSQL and MySQL, sqlc is worth a look, and we encourage you to assess it.</p>",
                "radarId": 90,
                "id": "en_2022-03_202203030",
                "blip_selector": "sqlc"
            },
            {
                "blip_id": 202203050,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "CUPID",
                "display_name": "CUPID",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "169",
                "tag": "new",
                "description": "<p>How do you approach writing good code? How do you judge if you've written good code? As software developers, we're always looking for catchy rules, principles and patterns that we can use to share a language and values with each other when it comes to writing simple, easy-to-change code.</p>\n\n<p>Daniel Terhorst-North has recently made a new attempt at creating such a checklist for good code. He argues that instead of sticking to a set of rules like <a href=\"https://en.wikipedia.org/wiki/SOLID\">SOLID</a>, using a set of properties to aim for is more generally applicable. He came up with what he calls the <strong><a href=\"https://dannorth.net/2022/02/10/cupid-for-joyful-coding/\">CUPID</a></strong> properties to describe what we should strive for to achieve \"joyful\" code: Code should be composable, follow the Unix philosophy and be predictable, idiomatic and domain based.</p>",
                "radarId": 12,
                "id": "en_2022-03_202203050",
                "blip_selector": "cupid"
            },
            {
                "blip_id": 202203009,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "VerneMQ",
                "display_name": "VerneMQ",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "263",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/vernemq/vernemq\">VerneMQ</a></strong> is an open-source, high-performance, distributed MQTT broker. We've blipped other MQTT brokers in the past like <a href=\"/radar/platforms/mosquitto\">Mosquitto</a> and <a href=\"/radar/platforms/emq\">EMQ</a>. Like EMQ and RabbitMQ, VerneMQ is also based on Erlang/OTP which makes it highly scalable. It scales horizontally and vertically on commodity hardware to support a high number of concurrent publishers and consumers while maintaining low latency and fault tolerance. In our internal benchmarks, we've been able to achieve a few million concurrent connections in a single cluster. While it's not new, we've used it in production for some time now, and it has worked well for us.</p>",
                "radarId": 34,
                "id": "en_2022-03_202203009",
                "blip_selector": "vernemq"
            },
            {
                "blip_id": 202203053,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "GitHub Codespaces",
                "display_name": "GitHub Codespaces",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "63",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/features/codespaces\">GitHub Codespaces</a></strong> allows developers to create <a href=\"/radar/techniques/development-environments-in-the-cloud\">development environments in the cloud</a> and access them through an IDE as though the environment were local. GitHub isn't the first company to implement this idea; we previously blipped about <a href=\"/radar/tools/gitpod\">Gitpod</a>. We like that Codespaces allows environments to be standardized by using dotfiles configuration, making it quicker to onboard new team members, and that they offer VMs with up to 32 cores and 64GB memory. These VMs can be spun up in under ten seconds, potentially offering environments more powerful than a developer laptop.</p>",
                "radarId": 63,
                "id": "en_2022-03_202203053",
                "blip_selector": "github-codespaces"
            },
            {
                "blip_id": 513,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "200",
                "name": "Couchbase",
                "display_name": "Couchbase",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "207",
                "tag": "refresh_writeup",
                "description": "<p>When we originally blipped <strong><a href=\"https://www.couchbase.com/\">Couchbase</a></strong> in 2013, it was seen primarily as a persistent cache that evolved from a merger of <a href=\"https://github.com/membase\">Membase</a> and <a href=\"https://couchdb.apache.org/\">CouchDB</a>. Since then, it has undergone steady improvement and an ecosystem of related tools and commercial offerings has grown up around it. Among the additions to the product suite are Couchbase Mobile and the Couchbase Sync Gateway. These features work together to keep persistent data on edge devices up-to-date even when the device is offline for periods of time due to intermittent connectivity. As these devices proliferate, we see increasing need for embedded persistence that continues to work whether or not the device happens to be connected. Recently, one of our teams evaluated Couchbase for its offline sync capability and found that this off-the-shelf capability saved them considerable effort that they otherwise would have had to invest themselves.</p>",
                "radarId": 26,
                "id": "en_2022-03_513",
                "blip_selector": "couchbase"
            },
            {
                "blip_id": 202203022,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "189",
                "name": "kube-score",
                "display_name": "kube-score",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "62",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/zegl/kube-score\">kube-score</a></strong> is a tool that does static code analysis of your Kubernetes object definitions. The output is a list of recommendations for what you can improve to make your application more secure and resilient. It has a list of <a href=\"https://github.com/zegl/kube-score/blob/master/README_CHECKS.md\">predefined checks</a> which includes best practices such as running containers with non-root privileges and correctly specifying resource limits. It's been around for some time, and we've used it in a few projects as part of a CD pipeline for Kubernetes manifests. A major drawback of kube-score is that you can't add custom policies. We typically supplement it with tools like <a href=\"/radar/tools/conftest\">Conftest</a> in these cases.</p>",
                "radarId": 49,
                "id": "en_2022-03_202203022",
                "blip_selector": "kube-score"
            },
            {
                "blip_id": 202203003,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "380",
                "name": "Miscellaneous platform teams",
                "display_name": "Miscellaneous platform teams",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "144",
                "tag": "new",
                "description": "<p>We previously featured <a href=\"/radar/techniques/platform-engineering-product-teams\">platform engineering product teams</a> in Adopt as a good way for internal platform teams to operate, thus enabling delivery teams to self-service deploy and operate systems with reduced lead time and stack complexity. Unfortunately we're seeing the \"platform team\" label applied to teams dedicated to projects that don't have clear outcomes or a well-defined set of customers. As a result, these <strong>miscellaneous platform teams</strong>, as we call them, struggle to deliver due to high cognitive loads and a lack of clearly aligned priorities as they're dealing with a miscellaneous collection of unrelated systems. They effectively become just another general support team for things that don't fit or that are unwanted elsewhere. We continue to believe platform engineering product teams focused around a clear and well-defined (internal) product offer a better set of outcomes.</p>",
                "radarId": 20,
                "id": "en_2022-03_202203003",
                "blip_selector": "miscellaneous-platform-teams"
            },
            {
                "blip_id": 202203061,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "ShedLock",
                "display_name": "ShedLock",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "326",
                "tag": "new",
                "description": "<p>Executing a scheduled task once and only once in a cluster of distributed processors is a relatively common requirement. For example, the situation might arise when ingesting a batch of data, sending a notification or performing some regular cleanup activity. But this is a notoriously difficult problem. How does a group of processes cooperate reliably over laggy and less reliable networks? Some kind of locking mechanism is required to coordinate actions across the cluster. Fortunately, a variety of distributed stores can implement a lock. Systems like <a href=\"https://zookeeper.apache.org/\">ZooKeeper</a> and <a href=\"/radar/tools/consul\">Consul</a> as well as databases such as DynamoDB or <a href=\"/radar/platforms/couchbase\">Couchbase</a> have the necessary underlying mechanisms to manage consensus across the cluster. <strong><a href=\"https://github.com/lukas-krecan/ShedLock\">ShedLock</a></strong> is a small library for taking advantage of these providers in your own Java code, if you're looking to implement your own scheduled tasks. It provides an API for acquiring and releasing locks as well as connectors to a wide variety of lock providers. If you're writing your own distributed tasks but don't want to take on the complexity of an entire orchestration platform like <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>, ShedLock is worth a look.</p>",
                "radarId": 88,
                "id": "en_2022-03_202203061",
                "blip_selector": "shedlock"
            },
            {
                "blip_id": 201911021,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Kotest",
                "display_name": "Kotest",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "315",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://kotest.io/\">Kotest</a></strong> (previously KotlinTest) is a stand-alone testing tool for the <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> ecosystem that is continuing to gain traction within our teams across various Kotlin implementations — native, JVM or JavaScript. Key advantages are that it offers a variety of testing styles in order to structure the test suites and that it comes with a comprehensive set of matchers, which allow for expressive tests in an elegant internal DSL. In addition to its support for <a href=\"/radar/techniques/property-based-unit-testing\">property-based testing</a> — a technique we've highlighted previously in the Radar — our teams like the solid IntelliJ plugin and the growing community of support.</p>",
                "radarId": 76,
                "id": "en_2022-03_201911021",
                "blip_selector": "kotest"
            },
            {
                "blip_id": 202203046,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Bob",
                "display_name": "Bob",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "285",
                "tag": "new",
                "description": "<p>When building an app with React Native you sometimes find yourself having to create your own modules. For example, we've encountered this need when building a UI component library for a React Native app. Creating such a module project isn't straightforward, and our teams report success using <strong><a href=\"https://github.com/callstack/react-native-builder-bob\">Bob</a></strong> to automate this task. Bob provides a CLI to create the scaffolding for different targets. The scaffolding is not limited to core functionality but, optionally, can include example code, linters, build pipeline configuration and other features.</p>",
                "radarId": 74,
                "id": "en_2022-03_202203046",
                "blip_selector": "bob"
            },
            {
                "blip_id": 202110044,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "cert-manager",
                "display_name": "cert-manager",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "79",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://cert-manager.io/\">cert-manager</a></strong> is a tool to manage your X.509 certificates within your <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> cluster. It models certificates and issuers as first-class resource types and provides certificates as a service securely to developers and applications working within the Kubernetes cluster. The obvious choice when using the Kubernetes default ingress controller, it's also recommended for others and much preferred over hand-rolling your own certificate management. Several of our teams have been using cert-manager extensively, and we've also found that its usability has much improved in the past few months.</p>",
                "radarId": 46,
                "id": "en_2022-03_202110044",
                "blip_selector": "cert-manager"
            },
            {
                "blip_id": 202203059,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "npm workspaces",
                "display_name": "npm workspaces",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "315",
                "tag": "new",
                "description": "<p>While many tools support multipackage development in the node.js world, npm 7 adds direct support with the addition of <strong><a href=\"https://docs.npmjs.com/cli/v8/using-npm/workspaces\">npm workspaces</a></strong>. Managing related packages together facilitates development, allowing you, for example, to store multiple related libraries in a single repo. With npm workspaces, once you add a configuration in a top-level package.json file to refer to one or more nested package.json files, commands like <code>npm install</code> work across multiple packages, symlinking the dependent source packages into the root node_modules directory. Other npm commands are also now workspace aware, allowing you, for example, to execute <code>npm run</code> and <code>npm test</code> commands across multiple packages with a single command. Having that flexibility out of the box decreases the need for some teams to reach for another package manager.</p>",
                "radarId": 86,
                "id": "en_2022-03_202203059",
                "blip_selector": "npm-workspaces"
            },
            {
                "blip_id": 202203013,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Blueboat",
                "display_name": "Blueboat",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "207",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/losfair/blueboat\">Blueboat</a></strong> is a multitenant platform for serverless web applications. It leverages the popular V8 JavaScript engine and implements commonly used web application libraries natively in <a href=\"/radar/languages-and-frameworks/rust\">Rust</a> for security and performance. You can think of Blueboat as an alternative to <a href=\"/radar/platforms/cloudflare-workers\">CloudFlare Workers</a> or <a href=\"https://deno.com/deploy\">Deno Deploy</a> but with an important distinction — you have to operate and manage the underlying infrastructure. That said, we recommend you carefully assess Blueboat for your on-prem serverless needs.</p>",
                "radarId": 37,
                "id": "en_2022-03_202203013",
                "blip_selector": "blueboat"
            },
            {
                "blip_id": 202203060,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Service mesh without sidecar",
                "display_name": "Service mesh without sidecar",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "135",
                "tag": "new",
                "description": "<p><a href=\"/radar/techniques/service-mesh\">Service mesh</a> is usually implemented as a reverse-proxy process, aka sidecar, deployed alongside each service instance. Although these sidecars are lightweight processes, the overall cost and operational complexity of adopting service mesh increases with every new instance of the service requiring another sidecar. However, with the advancements in <a href=\"/radar/platforms/ebpf\">eBPF</a>, we're observing a new <a href=\"https://isovalent.com/blog/post/2021-12-08-ebpf-servicemesh\"><strong>service mesh without sidecar</strong></a> approach where the functionalities of the mesh are safely pushed down to the OS kernel, thereby enabling services in the same node to communicate transparently via sockets without the need of additional proxies. You can try this with <a href=\"https://github.com/cilium/cilium-service-mesh-beta\">Cilium service mesh</a> and simplify the deployment from one proxy-per-service to one proxy-per-node. We're intrigued by the capabilities of eBPF and find this evolution of service mesh to be important to assess.</p>",
                "radarId": 15,
                "id": "en_2022-03_202203060",
                "blip_selector": "service-mesh-without-sidecar"
            },
            {
                "blip_id": 202110077,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "186",
                "name": "Sourcegraph",
                "display_name": "Sourcegraph",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "23",
                "tag": "move_in",
                "description": "<p>In our previous Radar, we featured two tools that search and replace code using an abstract syntax tree (AST) representation, <a href=\"/radar/tools/comby\">Comby</a> and <strong><a href=\"https://about.sourcegraph.com/\">Sourcegraph</a></strong>. Although they share some similarities, they also differ in several ways. Sourcegraph is a commercial tool (with a 10-user free tier). It's particularly suited for searching, navigating or cross-referencing in large codebases, with an emphasis on an interactive developer experience. In contrast, Comby is a lightweight open-source command-line tool for automating repetitive tasks. Because Sourcegraph is a hosted service, it also has the ability to continuously monitor code bases and send alerts when a match occurs. Now that we've gained more experience with Sourcegraph, we decided to move it into the Trial ring to reflect our positive experience — which doesn't mean that Sourcegraph is better than Comby. Each tool focuses on a different niche.</p>",
                "radarId": 56,
                "id": "en_2022-03_202110077",
                "blip_selector": "sourcegraph"
            },
            {
                "blip_id": 202203042,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Azure Bicep",
                "display_name": "Azure Bicep",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "281",
                "tag": "new",
                "description": "<p>For those who prefer a more natural language than JSON for infrastructure code, <strong><a href=\"https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/overview?tabs=bicep\">Azure Bicep</a></strong> is a domain-specific language (DSL) that uses a declarative syntax. It supports reusable parameterized templates for modular resource definitions. A <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-bicep\">Visual Studio Code extension</a> provides instant type-safety, intellisense and syntax checking, and the compiler allows bidirectional transpilation to and from ARM templates. Bicep's resource-oriented DSL and native integration with the Azure ecosystem make it a compelling choice for Azure infrastructure development.</p>",
                "radarId": 80,
                "id": "en_2022-03_202203042",
                "blip_selector": "azure-bicep"
            },
            {
                "blip_id": 202203040,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "actions-runner-controller",
                "display_name": "actions-runner-controller",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "189",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/actions-runner-controller/actions-runner-controller\">actions-runner-controller</a></strong> is a Kubernetes <a href=\"https://kubernetes.io/docs/concepts/architecture/controller/\">controller</a> that operates <a href=\"https://docs.github.com/en/actions/hosting-your-own-runners\">self-hosted runners</a> for <a href=\"/radar/platforms/github-actions\">GitHub Actions</a> on your Kubernetes cluster. With this tool you create a runner resource on Kubernetes, and it will run and operate the self-hosted runner. Self-hosted runners are helpful in scenarios where the job that your GitHub Actions runs needs to access resources that are either not accessible to GitHub cloud runners or have specific operating system and environmental requirements that are different from what GitHub provides. In those cases where you have a Kubernetes cluster, you can run your self-hosted runners as a Kubernetes pod, with the ability to scale up or down hooking into GitHub webhook events. actions-controller-runner is lightweight and scalable.</p>",
                "radarId": 35,
                "id": "en_2022-03_202203040",
                "blip_selector": "actions-runner-controller"
            },
            {
                "blip_id": 202203020,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Infracost",
                "display_name": "Infracost",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "42",
                "tag": "new",
                "description": "<p>One often-cited advantage of moving to the cloud is transparency around infrastructure spend. In our experience, this is often not the case. Teams don't always think about the decisions they make around infrastructure in terms of financial cost which is why we previously blipped about <a href=\"/radar/techniques/run-cost-as-architecture-fitness-function\">run cost as architecture fitness function</a>. We're intrigued by the release of a new tool called <strong><a href=\"https://infracost.io/\">Infracost</a></strong> which aims to make cost trade-offs visible in Terraform pull requests. It's open-source software and available for macOS, Linux, Windows and Docker and supports pricing for AWS, GCP and Microsoft Azure out of the box. It also provides a public API that can be queried for current cost data. Our teams are excited by its potential, especially when it comes to gaining better cost visibility in the IDE.</p>",
                "radarId": 66,
                "id": "en_2022-03_202203020",
                "blip_selector": "infracost"
            },
            {
                "blip_id": 202203054,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "302",
                "name": "Inclusive design",
                "display_name": "Inclusive design",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "158",
                "tag": "new",
                "description": "<p>We recommend organizations assess <a href=\"https://www.microsoft.com/design/inclusive/\"><strong>inclusive design</strong></a> as a way of making sure accessibility is treated as a first-class requirement. All too often requirements around accessibility and inclusivity are ignored until just before, if not just after, the release of software. The cheapest and simplest way to accommodate these requirements, while also providing early feedback to teams, is to incorporate them fully into the development process. In the past, we've highlighted techniques that perform a \"shift-left\" for security and cross-functional requirements; one perspective on this technique is that it achieves the same goal for accessibility.</p>",
                "radarId": 13,
                "id": "en_2022-03_202203054",
                "blip_selector": "inclusive-design"
            },
            {
                "blip_id": 202110040,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "Single team remote wall",
                "display_name": "Single team remote wall",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "120",
                "tag": "move_in",
                "description": "<p>A <strong>single team remote wall</strong> is a simple technique to reintroduce the team wall virtually. We recommend that distributed teams adopt this approach; one of the things we hear from teams who moved to remote working is that they miss having the physical team wall. This was a single place where all the various story cards, tasks, status and progress could be displayed, acting as an information radiator and hub for the team. The wall acted as an integration point with the actual data being stored in different systems. As teams have become remote, they've had to revert to looking into the individual source systems and getting an \"at a glance\" view of a project has become very difficult. While there might be some overhead in keeping this up-to-date, we feel the benefits to the team are worth it. For some teams, updating the physical wall formed part of the daily \"ceremonies\" the team did together, and the same can be done with a remote wall.</p>",
                "radarId": 2,
                "id": "en_2022-03_202110040",
                "blip_selector": "single-team-remote-wall"
            },
            {
                "blip_id": 202110008,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "302",
                "name": "Operator pattern for nonclustered resources",
                "display_name": "Operator pattern for nonclustered resources",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "147",
                "tag": "refresh_writeup",
                "description": "<p>We're continuing to see increasing use of the <a href=\"/radar/tools/kubernetes-operators\">Kubernetes Operator</a> pattern for purposes other than managing applications deployed on the cluster. Using the <strong>Operator pattern for nonclustered resources</strong> takes advantage of custom resource definitions and the event-driven scheduling mechanism implemented in the Kubernetes control plane to manage activities that are related to yet outside of the cluster. This technique builds on the idea of <a href=\"/radar/techniques/kube-managed-cloud-services\">Kube-managed cloud services</a> and extends it to other activities, such as continuous deployment or reacting to changes in external repositories. One advantage of this technique over a purpose-built tool is that it opens up a wide range of tools that either come with Kubernetes or are part of the wider ecosystem. You can use commands such as diff, dry-run or apply to interact with the operator's custom resources. Kube's scheduling mechanism makes development easier by eliminating the need to orchestrate activities in the proper order. Open-source tools such as <a href=\"/radar/tools/crossplane\">Crossplane</a>, <a href=\"https://fluxcd.io/\">Flux</a> and <a href=\"/radar/platforms/argo-cd\">Argo CD</a> take advantage of this technique, and we expect to see more of these emerge over time. Although these tools have their use cases, we're also starting to see the inevitable misuse and overuse of this technique and need to repeat some old advice: Just because you <em>can</em> do something with a tool doesn't mean you <em>should</em>. Be sure to rule out simpler, conventional approaches before creating a custom resource definition and taking on the complexity that comes with this approach.</p>",
                "radarId": 14,
                "id": "en_2022-03_202110008",
                "blip_selector": "operator-pattern-for-nonclustered-resources"
            },
            {
                "blip_id": 202203029,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Server-driven UI",
                "display_name": "Server-driven UI",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "135",
                "tag": "new",
                "description": "<p>When putting together a new volume of the Radar, we're often overcome by a sense of déjà vu, and the technique of <strong>server-driven UI</strong> sparks a particularly strong case with the advent of frameworks that allow mobile developers to take advantage of faster change cycles while not falling foul of an app store's policies around revalidation of the mobile app itself. We've blipped about this before from the perspective of enabling mobile development to <a href=\"/radar/techniques/micro-frontends-for-mobile\">scale across teams</a>. Server-driven UI separates the rendering into a generic container in the mobile app while the structure and data for each view is provided by the server. This means that changes that once required a round trip to an app store can now be accomplished via simple changes to the responses the server sends. Note, we're not recommending this approach for all UI development, indeed we've experienced some horrendous, overly configurable messes, but with the backing of behemoths such as AirBnB and Lyft, we suspect it's not only us at Thoughtworks getting tired of <a href=\"/radar/techniques/spa-by-default\">everything being done client side</a>. Watch this space.</p>",
                "radarId": 7,
                "id": "en_2022-03_202203029",
                "blip_selector": "server-driven-ui"
            },
            {
                "blip_id": 201911018,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "95",
                "name": "SwiftUI",
                "display_name": "SwiftUI",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "300",
                "tag": "move_in",
                "description": "<p>When Apple introduced <strong><a href=\"https://developer.apple.com/xcode/swiftui/\">SwiftUI</a></strong> a few years ago, it was a big step forward for implementing user interfaces on all kinds of devices made by Apple. From the beginning, we liked the declarative, code-centric approach and the reactive programming model provided by <a href=\"/radar/languages-and-frameworks/combine\">Combine</a>. We did notice, though, that writing a lot of view tests, which you still need with a model—view—viewmodel (MVVM) pattern, was not really sensible with the XCUITest automation framework provided by Apple. This gap has been closed by <a href=\"/radar/languages-and-frameworks/viewinspector\">ViewInspector</a>. A final hurdle was the minimum OS version required. At the time of release, only the very latest versions of iOS and macOS could run applications written with SwiftUI, but because of Apple’s regular cadence of updates, SwiftUI apps can now run on practically all versions of macOS and iOS that receive security updates.</p>",
                "radarId": 72,
                "id": "en_2022-03_201911018",
                "blip_selector": "swiftui"
            },
            {
                "blip_id": 202203008,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "The streaming data warehouse",
                "display_name": "The streaming data warehouse",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "113",
                "tag": "new",
                "description": "<p>The need to respond quickly to customer insights has driven increasing adoption of event-driven architectures and stream processing. Frameworks such as <a href=\"/radar/platforms/apache-spark\">Spark</a>, <a href=\"/radar/platforms/apache-flink\">Flink</a> or <a href=\"/radar/platforms/kafka-streams\">Kafka Streams</a> offer a paradigm where simple event consumers and producers can cooperate in complex networks to deliver real-time insights. But this programming style takes time and effort to master and when implemented as single-point applications, it lacks interoperability. Making stream processing work universally on a large scale can require a significant engineering investment. Now, a new crop of tools is emerging that offers the benefits of stream processing to a wider, established group of developers who are comfortable using SQL to implement analytics. Standardizing on SQL as the universal streaming language lowers the barrier for implementing streaming data applications. Tools like <a href=\"/radar/languages-and-frameworks/ksqldb\">ksqlDB</a> and <a href=\"/radar/platforms/materialize\">Materialize</a> help transform these separate applications into unified platforms. Taken together, a collection of SQL-based streaming applications across an enterprise might constitute a <strong>streaming data warehouse</strong>.</p>",
                "radarId": 17,
                "id": "en_2022-03_202203008",
                "blip_selector": "the-streaming-data-warehouse"
            },
            {
                "blip_id": 202203065,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "289",
                "name": "SQLFluff",
                "display_name": "SQLFluff",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "21",
                "tag": "new",
                "description": "<p>While linting is an ancient practice in the software world, it's had slower adoption in the data world. <strong><a href=\"https://docs.sqlfluff.com/en/stable/\">SQLFluff</a></strong> is a cross-dialect SQL linter written in Python that ships with a simple command line interface (CLI), making it easy to incorporate into a CI/CD pipeline. If you're comfortable with the default conventions, then SQLFluff works without any additional configuration after installing it and will enforce a strongly opinionated set of formatting standards; setting your own conventions involves adding a configuration dotfile. The CLI can automatically fix certain classes of violations that involve formatting concerns like whitespace or uppercasing of keywords. SQLFluff is still new, but we're excited to see SQL getting some attention in the linting world.</p>",
                "radarId": 69,
                "id": "en_2022-03_202203065",
                "blip_selector": "sqlfluff"
            },
            {
                "blip_id": 202104127,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "170",
                "name": "Team cognitive load",
                "display_name": "Team cognitive load",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "108",
                "tag": "stay",
                "description": "<p>A system's architecture mimics an organizational structure and its communication. It's not big news that we should be intentional about how teams interact — see, for instance, the <a href=\"/radar/techniques/inverse-conway-maneuver\">Inverse Conway Maneuver</a>. Team interaction is one of the variables for how fast and how easily teams can deliver value to their customers. We were happy to find a way to measure these interactions; we used the <a href=\"https://teamtopologies.com/book\">Team Topologies</a> author's <a href=\"https://github.com/TeamTopologies/Team-Cognitive-Load-Assessment\">assessment</a> which gives you an understanding of how easy or difficult the teams find it to build, test and maintain their services. By measuring <strong>team cognitive load</strong>, we could better advise our clients on how to change their teams' structure and evolve their interactions.</p>",
                "radarId": 10,
                "id": "en_2022-03_202104127",
                "blip_selector": "team-cognitive-load"
            },
            {
                "blip_id": 202005111,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "250",
                "name": "eBPF",
                "display_name": "eBPF",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "214",
                "tag": "refresh_writeup",
                "description": "<p>For several years now, the Linux kernel has included the extended Berkeley Packet Filter (<strong><a href=\"https://ebpf.io/\">eBPF</a></strong>), a virtual machine that provides the ability to attach filters to particular sockets. But eBPF goes far beyond packet filtering and allows custom scripts to be triggered at various points within the kernel with very little overhead. Although this technology isn't new, it's now coming into its own with the increasing use of microservices deployed as orchestrated containers. Kubernetes and service mesh technology such as <a href=\"/radar/platforms/istio\">Istio</a> are commonly used, and they employ sidecars to implement control functionality. With new tools — <a href=\"https://github.com/solo-io/bumblebee\">Bumblebee</a> in particular makes building, running and distributing eBPF programs much easier — eBPF can be seen as an alternative to the traditional sidecar. A maintainer of <a href=\"/radar/tools/cilium\">Cilium</a>, a tool in this space, has even proclaimed the <a href=\"https://isovalent.com/blog/post/2021-12-08-ebpf-servicemesh\">demise of the sidecar</a>. An approach based on eBPF reduces some overhead in performance and operation that comes with sidecars, but it doesn't support common features such as SSL termination.</p>",
                "radarId": 27,
                "id": "en_2022-03_202005111",
                "blip_selector": "ebpf"
            },
            {
                "blip_id": 202110076,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Software Bill of Materials",
                "display_name": "Software Bill of Materials",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "126",
                "tag": "move_in",
                "description": "<p>With continued pressure to keep systems secure and no reduction in the general threat landscape, a machine-readable <strong>Software Bill of Materials</strong> (SBOM) may help teams stay on top of security problems in the libraries that they rely on. The recent <a href=\"https://en.wikipedia.org/wiki/Log4Shell\">Log4Shell</a> zero-day remote exploit was critical and widespread, and if teams had had an SBOM ready, it could have been scanned for and fixed quickly. We've now had production experience using SBOMs on projects ranging from small companies to large multinationals and even government departments, and we're convinced they provide a benefit. Tools such as <a href=\"/radar/tools/syft\">Syft</a> make it easy to use an SBOM for vulnerability detection.</p>",
                "radarId": 8,
                "id": "en_2022-03_202110076",
                "blip_selector": "software-bill-of-materials"
            },
            {
                "blip_id": 201911027,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "85",
                "name": "Testcontainers",
                "display_name": "Testcontainers",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "330",
                "tag": "move_in",
                "description": "<p>We've had enough experience with <strong><a href=\"https://www.testcontainers.org/\">Testcontainers</a></strong> that we think it's a useful default option for creating a reliable environment for running tests. It's a library, ported to <a href=\"https://github.com/testcontainers\">multiple languages</a>, that Dockerizes common test dependencies — including various types of databases, queuing technologies, cloud services and UI testing dependencies like web browsers — with the ability to run custom Dockerfiles when needed. It works well with test frameworks like JUnit, is flexible enough to let users manage the container lifecycle and advanced networking and quickly sets up an integrated test environment. Our teams have consistently found this library of programmable, lightweight and disposable containers to make functional tests more reliable.</p>",
                "radarId": 73,
                "id": "en_2022-03_201911027",
                "blip_selector": "testcontainers"
            },
            {
                "blip_id": 202203063,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "SLSA",
                "display_name": "SLSA",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "124",
                "tag": "new",
                "description": "<p>As software continues to grow in complexity, the threat vector of software dependencies becomes increasingly challenging to guard against. The recent Log4J vulnerability showed how difficult it can be to even <em>know</em> those dependencies — many companies who didn't use Log4J directly were unknowingly vulnerable simply because other software in their ecosystem relied on it. Supply chain Levels for Software Artifacts, or <strong><a href=\"https://slsa.dev\">SLSA</a></strong> (pronounced \"salsa\"), is a consortium-curated set of guidance for organizations to protect against supply chain attacks, evolved from internal guidance Google has been using for years. We appreciate that SLSA doesn't promise a \"silver bullet,\" tools-only approach to securing the supply chain but instead provides a checklist of concrete threats and practices along a maturity model. The <a href=\"https://slsa.dev/spec/v0.1/threats\">threat model</a> is easy to follow with real-world examples of attacks, and the <a href=\"https://slsa.dev/spec/v0.1/requirements\">requirements</a> provide guidance to help organizations prioritize actions based on levels of increasing robustness to improve their supply chain security posture. We think SLSA provides applicable advice and look forward to more organizations learning from it.</p>",
                "radarId": 16,
                "id": "en_2022-03_202203063",
                "blip_selector": "slsa"
            },
            {
                "blip_id": 202203018,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "292",
                "name": "GoReleaser",
                "display_name": "GoReleaser",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "56",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/goreleaser/goreleaser\"><strong>GoReleaser</strong></a> is a tool that automates the process of building and releasing a Go project for different architectures via multiple repositories and channels, a common need for Go projects targeting different platforms. You run the tool either from your local machine or via CI, with the tool available via several CI services thus minimizing set-up and maintenance. GoReleaser takes care of build, packaging, publishing and announcement of each release and supports different combinations of package format, package repository and source control. Although it's been around for a few years, we're surprised that more teams are not using it. If you're regularly releasing a Go codebase, this tool is worth assessing.</p>",
                "radarId": 64,
                "id": "en_2022-03_202203018",
                "blip_selector": "goreleaser"
            },
            {
                "blip_id": 1158,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "235",
                "name": "Lighthouse",
                "display_name": "Lighthouse",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "57",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://developers.google.com/web/tools/lighthouse/\">Lighthouse</a></strong> is a tool written by Google to assess web applications and web pages, collecting performance metrics and insights on good development practices. We've long advocated for <a href=\"/radar/techniques/performance-testing-as-a-first-class-citizen\">performance testing as a first-class citizen</a>, and the additions to Lighthouse that we mentioned five years ago certainly helped with that. Our thinking around <a href=\"/radar/techniques/architectural-fitness-function\">architectural fitness functions</a> created strong motivation for tools such as Lighthouse to be run in build pipelines. With the introduction of <a href=\"https://github.com/GoogleChrome/lighthouse-ci\">Lighthouse CI</a>, it has become easier than ever to include Lighthouse in pipelines managed by <a href=\"https://github.com/GoogleChrome/lighthouse-ci/blob/main/docs/getting-started.md#configure-your-ci-provider\">various tools</a>.</p>",
                "radarId": 50,
                "id": "en_2022-03_1158",
                "blip_selector": "lighthouse"
            },
            {
                "blip_id": 202203098,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Tactical forking",
                "display_name": "Tactical forking",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "117",
                "tag": "new",
                "description": "<p><strong><a href=\"https://faustodelatog.wordpress.com/2020/10/16/tactical-forking/\">Tactical forking</a></strong> is a technique that can assist with restructuring or migrating from monolithic codebases to microservices. Specifically, this technique offers one possible alternative to the more common approach of fully modularizing the codebase first, which in many circumstances can take a very long time or be very challenging to achieve. With tactical forking a team can create a new fork of the codebase and use that to address and extract one particular concern or area while deleting the unnecessary code. Use of this technique would likely be just one part of a longer-term plan for the overall monolith.</p>",
                "radarId": 9,
                "id": "en_2022-03_202203098",
                "blip_selector": "tactical-forking"
            },
            {
                "blip_id": 202203005,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Reusable workflows in Github Actions",
                "display_name": "Reusable workflows in Github Actions",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "249",
                "tag": "new",
                "description": "<p>We've seen increased interest in <a href=\"/radar/platforms/github-actions\">GitHub Actions</a> since we first blipped it two Radars ago. With the release of <a href=\"https://docs.github.com/en/actions/using-workflows/reusing-workflows\">reusable workflows</a>, GitHub continues to evolve the product in a way that addresses some of its early shortcomings. <strong>Reusable workflows in Github Actions</strong> bring modularity to pipeline design, allowing parameterized reuse even across repositories (as long as the workflow repository is public). They support explicit passing of confidential values as secrets and can pass outputs to the calling job. With a few lines of YAML, GitHub Actions now gives you the type of flexibility you see with <a href=\"/radar/platforms/circleci\">CircleCI</a> Orbs or <a href=\"/radar/platforms/azure-pipeline-templates\">Azure Pipeline Templates</a>, but without having to leave GitHub as a platform.</p>",
                "radarId": 32,
                "id": "en_2022-03_202203005",
                "blip_selector": "reusable-workflows-in-github-actions"
            },
            {
                "blip_id": 202110016,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Cloud Carbon Footprint",
                "display_name": "Cloud Carbon Footprint",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "72",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://www.cloudcarbonfootprint.org/\">Cloud Carbon Footprint</a></strong> (CCF) is an open-source tool that uses cloud APIs to provide visualizations of estimated carbon emissions based on usage across AWS, GCP and Azure. The Thoughtworks team has <a href=\"https://www.thoughtworks.com/clients/Bringing-green-cloud-optimization-to-a-green-energy-business\">successfully used the tool</a> with several organizations, including energy technology companies, retailers, digital service providers and companies that use AI. Cloud platform providers realize that it's important to help their customers understand the carbon impact of using their services, so they've begun to build similar functionality themselves. Because CCF is cloud agnostic, it allows users to view energy usage and carbon emissions for multiple cloud providers in one place, while translating carbon footprints into real-world impact such as flights or trees planted.</p>\n\n<p>In recent releases, CCF has begun to include Google Cloud and AWS-sourced optimization recommendations alongside potential energy and CO2 savings, as well as to support more cloud instance types such as GPU instances. Given the traction the tool has received and the continued addition of new features, we feel confident moving it to Trial.</p>",
                "radarId": 47,
                "id": "en_2022-03_202110016",
                "blip_selector": "cloud-carbon-footprint"
            },
            {
                "blip_id": 202203011,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "AKHQ",
                "display_name": "AKHQ",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "85",
                "tag": "new",
                "description": "<p><strong><a href=\"https://akhq.io/docs/#installation\">AKHQ</a></strong> is a GUI for Apache Kafka that lets you manage topics, topics data, consumer groups and more. Some of our teams have found AKHQ to be an effective tool to watch the real-time status of a Kafka cluster. You can, for example, browse the topics on a cluster. For each topic, you can visualize the name, the number of messages stored, the disk size used, the time of the last record, the number of partitions, the replication factor with the in-sync quantity and the consumer group. With options for Avro and Protobuf deserialization, AKHQ can help you understand the flow of data in your Kafka environment.</p>",
                "radarId": 45,
                "id": "en_2022-03_202203011",
                "blip_selector": "akhq"
            },
            {
                "blip_id": 202203016,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Documentation quadrants",
                "display_name": "Documentation quadrants",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "153",
                "tag": "new",
                "description": "<p>Writing good documentation is an overlooked aspect of software development that is often left to the last minute and done in a haphazard way. Some of our teams have found <strong><a href=\"https://documentation.divio.com/\">documentation quadrants</a></strong> a handy way to ensure the right artifacts are being produced. This technique classifies artifacts along two axes: The first axis relates to the nature of the information, practical or theoretical; the second axis describes the context in which the artifact is used, studying or working. This defines four quadrants in which artifacts such as tutorials, how-to guides or reference pages can be placed and understood. This classification system not only ensures that critical artifacts aren't overlooked but also guides the presentation of the content. We've found this particularly useful for creating onboarding documentation that brings developers up to speed quickly when they join a new team.</p>",
                "radarId": 5,
                "id": "en_2022-03_202203016",
                "blip_selector": "documentation-quadrants"
            },
            {
                "blip_id": 201911051,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Data mesh",
                "display_name": "Data mesh",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "171",
                "tag": "refresh_writeup",
                "description": "<p><a href=\"https://martinfowler.com/articles/data-monolith-to-mesh.html\"><strong>Data mesh</strong></a> is a <em>decentralized</em> organizational and technical approach in sharing, accessing and managing data for analytics and ML. Its objective is to create a <em>sociotechnical</em> approach that scales out getting value from data as the organization's complexity grows and as the use cases for data proliferate and the sources of data diversify. Essentially, it creates a <em>responsible</em> data-sharing model that is in step with organizational growth and continuous change. In our experience, interest in the application of data mesh has grown tremendously. The approach has inspired many organizations to embrace its adoption and technology providers to repurpose their existing technologies for a mesh deployment. Despite the great interest and growing experience in data mesh, its implementations face high cost of integration. Moreover, its adoption remains limited to sections of larger organizations and technology vendors are distracting the organizations from the hard <em>socio</em> aspects of data mesh — decentralized data ownership and a federated governance operating model.</p>\n\n<p>These ideas are explored in <em><a href=\"https://www.amazon.com/Data-Mesh-Delivering-Data-Driven-Value/dp/1492092398\">Data Mesh, Delivering Data-Driven Value at Scale</a></em>, which guides practitioners, architects, technical leaders and decision makers on their journeys from traditional big data architecture to data mesh. It provides a complete introduction to data mesh principles and its constituents; it covers how to design a data mesh architecture, guide and execute a data mesh strategy and navigate organizational design to a decentralized data ownership model. The goal of the book is to create a new framework for deeper conversations and lead to the next phase in maturity of data mesh.</p>",
                "radarId": 3,
                "id": "en_2022-03_201911051",
                "blip_selector": "data-mesh"
            },
            {
                "blip_id": 202203012,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Apache Iceberg",
                "display_name": "Apache Iceberg",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "198",
                "tag": "new",
                "description": "<p><strong><a href=\"https://iceberg.apache.org/\">Apache Iceberg</a></strong> is an open table format for very large analytic data sets. Iceberg supports modern analytical data operations such as record-level insert, update, delete, <a href=\"https://iceberg.apache.org/docs/latest/spark-queries/#time-travel\">time-travel queries</a>, ACID transactions, <a href=\"https://iceberg.apache.org/docs/latest/partitioning/#icebergs-hidden-partitioning\">hidden partitioning</a> and <a href=\"https://iceberg.apache.org/docs/latest/evolution/\">full schema evolution</a>. It supports multiple underlying file storage formats such as <a href=\"https://parquet.apache.org/\">Apache Parquet</a>, <a href=\"https://orc.apache.org/\">Apache ORC</a> and <a href=\"https://avro.apache.org/docs/1.2.0/\">Apache Avro</a>. Many data-processing engines support Apache Iceberg, including SQL engines such as <a href=\"https://www.dremio.com/\">Dremio</a> and <a href=\"https://trino.io/\">Trino</a> as well as (structured) streaming engines such as <a href=\"https://spark.apache.org/\">Apache Spark</a> and <a href=\"https://flink.apache.org/\">Apache Flink</a>.</p>\n\n<p>Apache Iceberg falls in the same category as <a href=\"https://delta.io/\">Delta Lake</a> and <a href=\"https://hudi.apache.org/\">Apache Hudi</a>. They all more or less support similar features, but each differs in the underlying implementations and detailed feature lists. Iceberg is an independent format and is not native to any specific processing engine, hence it's supported by an increasing number of platforms, including <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying-iceberg.html\">AWS Athena</a> and <a href=\"https://www.snowflake.com/\">Snowflake</a>. For the same reason, Apache Iceberg, unlike native formats such as Delta Lake, may not benefit from optimizations when used with Spark.</p>",
                "radarId": 36,
                "id": "en_2022-03_202203012",
                "blip_selector": "apache-iceberg"
            },
            {
                "blip_id": 202203044,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Azure Pipeline templates",
                "display_name": "Azure Pipeline templates",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "193",
                "tag": "new",
                "description": "<p><strong><a href=\"https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops\">Azure Pipeline templates</a></strong> allow you to remove duplication in your Azure Pipeline definition through two mechanisms. With \"includes\" templates, you can reference a template such that it will expand inline like a parameterized C++ macro, allowing a simple way of factoring out common configuration across stages, jobs and steps. With \"extends\" templates, you can define an outer shell with common pipeline configuration, and with the <a href=\"https://docs.microsoft.com/en-us/azure/devops/pipelines/process/approvals?view=azure-devops&tabs=check-pass#required-template\">required template approval</a>, you can fail the build if the pipeline doesn't extend certain templates, preventing malicious attacks against the pipeline configuration itself. Along with <a href=\"/radar/platforms/circleci\">CircleCI</a> Orbs and the newer <a href=\"/radar/platforms/reusable-workflows-in-github-actions\">GitHub Actions Reusable Workflows</a>, Azure Pipeline templates are part of the trend of creating modularity in pipeline design across multiple platforms, and several of our teams have been happy using them.</p>",
                "radarId": 24,
                "id": "en_2022-03_202203044",
                "blip_selector": "azure-pipeline-templates"
            },
            {
                "blip_id": 202203085,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "SpiceDB",
                "display_name": "SpiceDB",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "331",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/authzed/spicedb\">SpiceDB</a></strong> is a database system, inspired by Google's <a href=\"https://research.google/pubs/pub48190\">Zanzibar</a>, for managing application permissions. With SpiceDB, you create a schema to model the permissions requirements and use the <a href=\"https://docs.authzed.com/reference/api#client-libraries\">client library</a> to apply the schema to one of the <a href=\"https://docs.authzed.com/spicedb/selecting-a-datastore\">supported databases</a>, insert data and query to efficiently answer questions like \"Does this user have access to this resource?\" or even the inverse \"What are all the resources this user has access to?\" We usually advocate separating the authorization policies from code, but SpiceDB takes it a step further by separating data from the policy and storing it as a graph to efficiently answer authorization queries. Because of this separation, you have to ensure that the changes in your application's primary data store are reflected in SpiceDB. Among other Zanzibar-inspired implementations, we find SpiceDB to be an interesting framework to assess for your authorization needs.</p>",
                "radarId": 89,
                "id": "en_2022-03_202203085",
                "blip_selector": "spicedb"
            },
            {
                "blip_id": 202203066,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "The Composable Architecture",
                "display_name": "The Composable Architecture",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "343",
                "tag": "new",
                "description": "<p>Developing apps for iOS has become more streamlined over time, and <a href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/swiftui\">SwiftUI</a> moving into Adopt is a sign of that. Going beyond the general nature of SwiftUI and other common frameworks, <a href=\"https://github.com/pointfreeco/swift-composable-architecture#the-composable-architecture\"><strong>The Composable Architecture</strong></a> (TCA) is both a library and an architectural style for building apps. It was designed over the course of a series of videos, and the authors state that they had composition, testing and ergonomics in mind, building on a foundation of ideas from The Elm Architecture and Redux. As expected, the narrow scope and opinionatedness is both a strength and a weakness of TCA. We feel that teams who don't have a lot of expertise in writing iOS apps, which are often teams who may be looking after multiple related codebases with different tech stacks, stand to benefit the most from using an opinionated framework like TCA, and we like the opinions expressed in TCA.</p>",
                "radarId": 91,
                "id": "en_2022-03_202203066",
                "blip_selector": "the-composable-architecture"
            },
            {
                "blip_id": 202203031,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Typesense",
                "display_name": "Typesense",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "7",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/typesense/typesense\">Typesense</a></strong> is a fast, typo-tolerant text search engine. For use cases with large volumes of data, Elasticsearch might still be a good option as it provides a horizontally scalable disk-based search solution. However, if you're building a latency-sensitive search application with a search index size that can fit in memory, Typesense is a powerful alternative and another option to evaluate alongside tools such as <a href=\"/radar/platforms/meilisearch\">Meilisearch</a>.</p>",
                "radarId": 71,
                "id": "en_2022-03_202203031",
                "blip_selector": "typesense"
            },
            {
                "blip_id": 1147,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "175",
                "name": "CircleCI",
                "display_name": "CircleCI",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "200",
                "tag": "refresh_writeup",
                "description": "<p>Many of our teams choose <strong><a href=\"http://circleci.com/\">CircleCI</a></strong> for their continuous integration needs, and they appreciate its ability to run complex pipelines efficiently. The CircleCI developers continue to add new features with CircleCI, now in version 3.0. <a href=\"https://circleci.com/docs/2.0/concepts/#orbs\">Orbs</a> and <a href=\"https://circleci.com/docs/2.0/executor-types/\">executors</a> were called out by our teams as being particularly useful. Orbs are reusable snippets of code that automate repeated processes, speed up project setup and make it easy to integrate with third-party tools. The wide variety of executor types provides flexibility to set up jobs in Docker, Linux, macOS or Windows VMs.</p>",
                "radarId": 25,
                "id": "en_2022-03_1147",
                "blip_selector": "circleci"
            },
            {
                "blip_id": 202110010,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "240",
                "name": "Vowpal Wabbit",
                "display_name": "Vowpal Wabbit",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "345",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"https://vowpalwabbit.org/\">Vowpal Wabbit</a></strong> is a general-purpose machine-learning library. Originally created at Yahoo! Research over a decade ago, Vowpal Wabbit continues to implement new algorithms in reinforcement learning. We want to highlight <a href=\"https://vowpalwabbit.org/blog/vowpalwabbit-9.0.0.html\">Vowpal Wabbit 9.0</a>, a major release after six years, and encourage you to plan the <a href=\"https://vowpalwabbit.org/docs/vowpal_wabbit/python/latest/reference/python_8110_900_migration_guide.html\">migration</a> as it has several usability improvements, new reductions and bug fixes.</p>",
                "radarId": 78,
                "id": "en_2022-03_202110010",
                "blip_selector": "vowpal-wabbit"
            },
            {
                "blip_id": 202203068,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Terraform Validator",
                "display_name": "Terraform Validator",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "14",
                "tag": "new",
                "description": "<p>Organizations that have adopted <a href=\"/radar/techniques/infrastructure-as-code\">infrastructure as code</a> and self-service infrastructure platforms are looking for ways to give teams a maximum of autonomy while still enforcing good security practices and organizational policies. We've highlighted <a href=\"/radar/tools/tfsec\">tfsec</a> before and are moving it into the Adopt category in this Radar. For teams working on GCP, <a href=\"https://github.com/GoogleCloudPlatform/terraform-validator\"><strong>Terraform Validator</strong></a> could be an option when creating a policy library, a set of constraints that are checked against Terraform configurations.</p>",
                "radarId": 70,
                "id": "en_2022-03_202203068",
                "blip_selector": "terraform-validator"
            },
            {
                "blip_id": 202203039,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Volta",
                "display_name": "Volta",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "12",
                "tag": "new",
                "description": "<p>When working on multiple JavaScript codebases at the same time, it's often necessary to use different versions of Node and other JavaScript tools. On developer machines, these tools are usually installed in the user account or the machine itself, which means a solution is needed to switch between multiple installations. For Node itself there's nvm, but we want to highlight <strong><a href=\"https://volta.sh/\">Volta</a></strong> as an alternative that we're seeing in use with our teams. Volta has several advantages over using nvm: it can manage other JavaScript tools such as Yarn; it also has the notion of pinning a version of the toolchain on a project basis, which means that developers can simply use the tools in a given code directory without having to worry about manually switching between tool versions — Volta simply uses shims in the path to select the pinned version. Written in Rust, Volta is fast and ships as a single binary without dependencies.</p>",
                "radarId": 58,
                "id": "en_2022-03_202203039",
                "blip_selector": "volta"
            },
            {
                "blip_id": 1250,
                "quadrant": "languages-and-frameworks",
                "movement": "c",
                "locale": "en",
                "radius": "310",
                "name": "WebAssembly",
                "display_name": "WebAssembly",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "348",
                "tag": "refresh_writeup",
                "description": "<p><strong><a href=\"http://webassembly.org/\">WebAssembly</a></strong> (WASM) is the W3C standard that provides capabilities of executing code in the browser. Supported by all major browsers and backward compatible, it's a binary compilation format designed to run in the browser at near native speeds. It opens up the range of languages you can use to write front-end functionality, with early focus on C, C++ and Rust, and it's also an <a href=\"https://llvm.org/\">LLVM compilation</a> target. When run in the sandbox, it can interact with JavaScript and shares the same permissions and security model. Portability and security are key capabilities that will enable most platforms, including mobile and IoT.</p>",
                "radarId": 92,
                "id": "en_2022-03_1250",
                "blip_selector": "webassembly"
            },
            {
                "blip_id": 202203007,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Swift Package Manager",
                "display_name": "Swift Package Manager",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "330",
                "tag": "new",
                "description": "<p>Some programming languages, especially newer ones, have a package and dependency management solution built in. When it was introduced in 2014, Swift didn't come with a package manager, and so the macOS and iOS developer community simply kept using CocoaPods and <a href=\"/radar/tools/carthage\">Carthage</a>, the third-party solutions that had been created for Objective-C. A couple of years later <strong><a href=\"https://github.com/apple/swift-package-manager\">Swift Package Manager</a></strong> (SwiftPM) was started as an official Apple open-source project, and it then took another few  years before Apple added support for it to Xcode. Even at that point, though, many development teams continued to use CocoaPods and Carthage, mostly because many packages were simply not available via SwiftPM. Now that most packages can be included via SwiftPM and processes have been further streamlined for both creators and consumers of packages, our teams are increasingly relying on SwiftPM.</p>",
                "radarId": 77,
                "id": "en_2022-03_202203007",
                "blip_selector": "swift-package-manager"
            },
            {
                "blip_id": 202110036,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Production data in test environments",
                "display_name": "Production data in test environments",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "126",
                "tag": "stay",
                "description": "<p>We continue to perceive <strong>production data in test environments</strong> as an area for concern. Firstly, many examples of this have resulted in reputational damage, for example, where an incorrect alert has been sent from a test system to an entire client population. Secondly, the level of security, specifically around protection of private data, tends to be less for test systems. There is little point in having elaborate controls around access to production data if that data is copied to a test database that can be accessed by every developer and QA. Although you <em>can</em> obfuscate the data, this tends to be applied only to specific fields, for example, credit card numbers. Finally, copying production data to test systems can break privacy laws, for example, where test systems are hosted or accessed from a different country or region. This last scenario is especially problematic with complex cloud deployments. Fake data is a safer approach, and tools exist to help in its creation. We do recognize there are reasons for <em>specific</em> elements of production data to be copied, for example, in the reproduction of bugs or for training of specific ML models. Here our advice is to proceed with caution.</p>",
                "radarId": 21,
                "id": "en_2022-03_202110036",
                "blip_selector": "production-data-in-test-environments"
            },
            {
                "blip_id": 202203006,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "380",
                "name": "SPA by default",
                "display_name": "SPA by default",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "108",
                "tag": "new",
                "description": "<p>We generally avoid putting blips in Hold when we consider that advice too obvious, including blindly following an architectural style without paying attention to trade-offs. However, the sheer prevalence of teams choosing a single-page application (SPA) by default when they need a website has us concerned that people aren't even recognizing SPAs as an architectural style to begin with, instead immediately jumping into framework selection. SPAs incur complexity that simply doesn't exist with traditional server-based websites: search engine optimization, browser history management, web analytics, first page load time, etc. That complexity is often warranted for user experience reasons, and tooling continues to evolve to make those concerns easier to address (although the churn in the React community around state management hints at how hard it can be to get a generally applicable solution). Too often, though, we don't see teams making that trade-off analysis, blindly accepting the complexity of <strong>SPAs by default</strong> even when the business needs don't justify it. Indeed, we've started to notice that many newer developers aren't even aware of an alternative approach, as they've spent their entire career in a framework like React. We believe that many websites will benefit from the simplicity of server-side logic, and we're encouraged by techniques like <a href=\"/radar/techniques/hotwire\">Hotwire</a> that help close the gap on user experience.</p>",
                "radarId": 22,
                "id": "en_2022-03_202203006",
                "blip_selector": "spa-by-default"
            },
            {
                "blip_id": 202203077,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Flutter-Unity widget",
                "display_name": "Flutter-Unity widget",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "300",
                "tag": "new",
                "description": "<p>Flutter is increasingly popular for building cross-platform mobile apps, and Unity is great for building AR/VR experiences. A key piece in the puzzle for integrating Unity and Flutter is the <strong><a href=\"https://github.com/juicycleff/flutter-unity-view-widget\">Flutter-Unity widget</a></strong>, which allows embedding Unity apps inside Flutter widgets. One of the key capabilities the widget offers is bi-directional communication between Flutter and Unity. We've found its performance to be pretty good as well, and we're looking forward to leveraging Unity in more Flutter apps.</p>",
                "radarId": 75,
                "id": "en_2022-03_202203077",
                "blip_selector": "flutter-unity-widget"
            },
            {
                "blip_id": 202110014,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "187",
                "name": "Conftest",
                "display_name": "Conftest",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "70",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://github.com/open-policy-agent/conftest\">Conftest</a></strong> is a tool for writing tests against structured configuration data. It relies on the <a href=\"https://www.openpolicyagent.org/docs/latest/policy-language/#what-is-rego\">Rego language</a> from <a href=\"/radar/tools/open-policy-agent-opa\">Open Policy Agent</a> to write tests for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> configurations, <a href=\"/radar/platforms/tekton\">Tekton</a> pipeline definitions or even <a href=\"/radar/tools/terraform\">Terraform</a> plans. We've had great experiences with Conftest — and its shallow learning curve. With fast feedback from tests, our teams iterate quickly and safely on configuration changes to Kubernetes.</p>",
                "radarId": 48,
                "id": "en_2022-03_202110014",
                "blip_selector": "conftest"
            },
            {
                "blip_id": 202203084,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "skopeo",
                "display_name": "skopeo",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "28",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/containers/skopeo\">skopeo</a></strong> is a command line utility that performs various operations on container images and image repositories. It doesn't require a user to be root to do most of its operations nor does it require a daemon to be running. It's a useful part of a CI pipeline; we've used it to copy images from one registry to another as we promote the images. It's better than doing a pull and a push as we don't need to store the images locally. It's not a new tool, but it's useful enough and underutilized that we felt it's worth calling it out.</p>",
                "radarId": 68,
                "id": "en_2022-03_202203084",
                "blip_selector": "skopeo"
            },
            {
                "blip_id": 202203017,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Embeddinghub",
                "display_name": "Embeddinghub",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "252",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/featureform/embeddinghub\">Embeddinghub</a></strong> is a vector database for machine-learning <a href=\"https://www.featureform.com/post/the-definitive-guide-to-embeddings\">embeddings</a>, and quite similar to <a href=\"/radar/platforms/milvus-2-0\">Milvus</a>. However, with out-of-the-box support for approximate nearest neighbor operations, partitioning, versioning and access control, we recommend you assess Embeddinghub for your embedding vector use cases.</p>",
                "radarId": 42,
                "id": "en_2022-03_202203017",
                "blip_selector": "embeddinghub"
            },
            {
                "blip_id": 202203026,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Definition of production readiness",
                "display_name": "Definition of production readiness",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "162",
                "tag": "new",
                "description": "<p>In an organization that practices the \"you build it, you run it\" principle, a <strong>definition of production readiness</strong> (DPR) is a useful technique to support teams in assessing and preparing the operational readiness of new services. Implemented as a checklist or a template, a DPR gives teams guidance on what to think about and consider before they bring a new service into production. While DPRs do not define specific service-level objectives (SLOs) to fulfill (those would be hard to define one-size-fits-all), they remind teams what categories of SLOs to think of, what organizational standards to comply with and what documentation is required. DPRs provide a source of input that teams turn into respective product-specific requirements around, for example, observability and reliability, to feed into their product backlogs.</p>\n\n<p>DPRs are closely related to Google's concept of a <a href=\"https://sre.google/sre-book/evolving-sre-engagement-model/#:%7E:text=The%20most%20typical,of%20a%20service\">production readiness review (PRR)</a>. In organizations that are too small to have a dedicated site reliability engineering team, or who are concerned that a review board process could negatively impact a team's flow to go live, having a DPR can at least provide some guidance and document the agreed-upon criteria for the organization. For highly critical new services, extra scrutiny on fulfilling the DPR can be added via a PRR when needed.</p>",
                "radarId": 4,
                "id": "en_2022-03_202203026",
                "blip_selector": "definition-of-production-readiness"
            },
            {
                "blip_id": 202203019,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Grype",
                "display_name": "Grype",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "49",
                "tag": "new",
                "description": "<p>Securing the software supply chain has become a commonplace concern among delivery teams, a concern that is reflected by the growing number of new tools in this space. <strong><a href=\"https://github.com/anchore/grype\">Grype</a></strong> is a new lightweight vulnerability scanning tool for Docker and OCI images. It can be installed as a binary, can scan images before they're pushed to a registry, and it doesn't require a Docker daemon to run on your build agents. Grype comes from the same team that is behind <a href=\"/radar/tools/syft\">Syft</a>, which generates <a href=\"/radar/techniques/software-bill-of-materials\">SBOMs</a> in various formats from container images. Grype can consume the SBOM output of Syft to scan for vulnerabilities.</p>",
                "radarId": 65,
                "id": "en_2022-03_202203019",
                "blip_selector": "grype"
            },
            {
                "blip_id": 202203024,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "178",
                "name": "Micrometer",
                "display_name": "Micrometer",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "45",
                "tag": "new",
                "description": "<p><strong><a href=\"https://micrometer.io/\">Micrometer</a></strong> is a platform-agnostic library for metrics instrumentation on the JVM that supports Graphite, New Relic, CloudWatch and many other integrations. We've found that Micrometer has benefited both library authors and teams: library authors can include metrics instrumentation code in their libraries without needing to support each and every metrics system that their users are using;  and teams can support many different metrics on back-end registries which enables organizations to collect metrics in a consistent way.</p>",
                "radarId": 52,
                "id": "en_2022-03_202203024",
                "blip_selector": "micrometer"
            },
            {
                "blip_id": 202203010,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Zig",
                "display_name": "Zig",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "354",
                "tag": "new",
                "description": "<p><strong><a href=\"https://ziglang.org/\">Zig</a></strong> is a new language that shares many attributes with C but with stronger typing, easier memory allocation, support for namespacing and a host of other features. Its syntax, however, is reminiscent of JavaScript rather than C, which some may hold against it. Zig's aim is to provide a very simple language with straightforward compilation that minimizes side-effects and delivers predictable, easy-to-trace execution. Zig also provides simplified access to LLVM's <a href=\"https://llvm.org/\">cross-compilation capability</a>. Some of our developers have found this feature so viable, they're using Zig as a cross-compiler even though they aren't writing Zig code. Zig is a novel language and worth looking into  for applications where C is being considered or already in use as well as for low-level systems applications that require explicit memory manipulation.</p>",
                "radarId": 93,
                "id": "en_2022-03_202203010",
                "blip_selector": "zig"
            },
            {
                "blip_id": 1329,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "230",
                "name": "Azure DevOps",
                "display_name": "Azure DevOps",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "186",
                "tag": "refresh_writeup",
                "description": "<p>As the <strong><a href=\"https://azure.microsoft.com/en-us/services/devops/\">Azure DevOps</a></strong> ecosystem keeps growing, our teams are using it more with success. These services contain a set of managed services, including hosted Git repos, build and deployment pipelines, automated testing tooling, backlog management tooling and artifact repository. We've seen our teams gaining experience in using this platform with good results, which means Azure DevOps is maturing. We particularly like its flexibility; it allows you to use the services you want even if they're from different providers. For instance, you could use an external Git repository while still using the Azure DevOps pipeline services. Our teams are especially excited about <a href=\"https://azure.microsoft.com/en-us/services/devops/pipelines/\">Azure DevOps Pipelines</a>. As the ecosystem matures, we're seeing an uptick in onboarding teams that are already on the Azure stack as it easily integrates with the rest of the Microsoft world.</p>",
                "radarId": 23,
                "id": "en_2022-03_1329",
                "blip_selector": "azure-devops"
            },
            {
                "blip_id": 202203015,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Colima",
                "display_name": "Colima",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "225",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/abiosoft/colima\">Colima</a></strong> is becoming a popular open alternative to Docker for Desktop. It provisions the Docker container runtime in a Lima VM, configures the Docker CLI on macOS and handles port-forwarding and volume mounts. Colima uses <a href=\"https://containerd.io/\">containerd</a> as runtime, which is also the runtime on most managed Kubernetes services (thus improved dev-prod parity). With Colima you can easily use and test the latest features of containerd, such as lazy loading for container images. With its good performance, we're watching Colima as a strong potential for the open-source choice alternative to Docker for Desktop.</p>",
                "radarId": 39,
                "id": "en_2022-03_202203015",
                "blip_selector": "colima"
            },
            {
                "blip_id": 202203056,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "jc",
                "display_name": "jc",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "35",
                "tag": "new",
                "description": "<p>In our previous Radar, we placed <a href=\"/radar/tools/modern-unix-commands\">modern Unix commands</a> in Assess. One of the commands featured in that collection of tools was jq, effectively a sed for JSON. <strong><a href=\"https://kellyjonbrazil.github.io/jc/docs/\">jc</a></strong> performs a related task: it takes the output of common Unix commands and parses the output into JSON. The two commands together provide a bridge between the Unix CLI world and the raft of libraries and tools that operate on JSON. When writing <em>simple</em> scripts, for example, for software deployment or gathering troubleshooting information, having the myriad of different Unix command output formats mapped into well-defined JSON can save a lot of time and effort. As with jq, you need to make sure the command is available. It can be installed from many of the well-known package repositories.</p>",
                "radarId": 67,
                "id": "en_2022-03_202203056",
                "blip_selector": "jc"
            },
            {
                "blip_id": 202203023,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Metaflow",
                "display_name": "Metaflow",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "51",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/Netflix/metaflow\">Metaflow</a></strong> is a user-friendly Python library and back-end service that helps data scientists and engineers build and manage production-ready data processing, ML training and inference workflows. Metaflow provides Python APIs that structure the code as a directed graph of steps. Each step can be decorated with flexible configurations such as the required compute and storage resources. Code and data artifacts for each step's run (aka task) are stored and can be retrieved either for future runs or the next steps in the flow, enabling you to recover from errors, repeat runs and track  versions of models and their dependencies across multiple runs.</p>\n\n<p>The value proposition of Metaflow is the simplicity of its idiomatic Python library: it fully integrates with the build and run-time infrastructure to enable running data engineering and science tasks in local and scaled production environments. At the time of writing, Metaflow is heavily integrated with AWS services such as S3 for its data store service and step functions for orchestration. Metaflow supports R in addition to Python. Its core features are open sourced.</p>\n\n<p>If you're building and deploying your production ML and data-processing pipelines on AWS, Metaflow is a lightweight full-stack alternative framework to more complex platforms such as <a href=\"/radar/tools/mlflow\">MLflow</a>.</p>",
                "radarId": 51,
                "id": "en_2022-03_202203023",
                "blip_selector": "metaflow"
            },
            {
                "blip_id": 202203057,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Jetpack Glance",
                "display_name": "Jetpack Glance",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "298",
                "tag": "new",
                "description": "<p>Android 12 brought significant changes to app widgets that have improved the user and developer experience. For writing regular Android apps, we've expressed our preference for <a href=\"/radar/languages-and-frameworks/jetpack-compose\">Jetpack Compose</a> as a modern way of building native user interfaces. Now, with <strong><a href=\"https://developer.android.com/jetpack/androidx/releases/glance\">Jetpack Glance</a></strong>, which is built on top of the Compose runtime, developers can use similar declarative Kotlin APIs for writing widgets. Recently, Glance has been <a href=\"https://android-developers.googleblog.com/2022/01/announcing-glance-tiles-for-wear-os.html\">extended</a> to support Tiles for Wear OS.</p>",
                "radarId": 83,
                "id": "en_2022-03_202203057",
                "blip_selector": "jetpack-glance"
            },
            {
                "blip_id": 202203038,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Web Test Runner",
                "display_name": "Web Test Runner",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "6",
                "tag": "new",
                "description": "<p><strong><a href=\"https://modern-web.dev/docs/test-runner/overview/\">Web Test Runner</a></strong> is a package within the <a href=\"https://modern-web.dev/\">Modern Web</a> project, which provides several high-quality tools for modern web development with support for web standards like ES Modules. Web Test Runner is a test runner for web applications. One of its advantages compared to existing test runners is that it runs tests in the browser (which could be headless). It supports multiple browser launchers — including <a href=\"/radar/languages-and-frameworks/puppeteer\">Puppeteer</a>, <a href=\"/radar/tools/playwright\">Playwright</a>, and Selenium — and uses Mocha by default for the test framework. The tests run pretty fast, and we like that we can open a browser window with devtools when debugging. Web Test Runner internally uses <a href=\"https://modern-web.dev/docs/dev-server/overview/\">Web Dev Server</a> which allows us to leverage its great plugin API for adding customized plugins for our test suite. Modern Web tools look like a very promising developer toolchain, and we're already using it in a few projects.</p>",
                "radarId": 59,
                "id": "en_2022-03_202203038",
                "blip_selector": "web-test-runner"
            },
            {
                "blip_id": 202110074,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "167",
                "name": "Pactflow",
                "display_name": "Pactflow",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "34",
                "tag": "move_in",
                "description": "<p>We've used <a href=\"https://github.com/pact-foundation\">Pact</a> for contract testing long enough to see some of the complexity that comes with scale. Some of our teams have successfully used <strong><a href=\"https://pactflow.io/\">Pactflow</a></strong> to reduce that friction. Pactflow runs both as software as a service and as an on-prem deployment with the same features as the SaaS offering, and it adds improved usability, security and auditing on top of the open-source Pact Broker offering. We've been pleased with our use so far and are happy to see continued effort to remove some of the overhead of managing contract testing at scale.</p>",
                "radarId": 54,
                "id": "en_2022-03_202110074",
                "blip_selector": "pactflow"
            },
            {
                "blip_id": 202203048,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Cloudflare Pages",
                "display_name": "Cloudflare Pages",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-03",
                "theta": "216",
                "tag": "new",
                "description": "<p>When <a href=\"/radar/platforms/cloudflare-workers\">Cloudflare Workers</a> was released, we highlighted it as an early function as a service (FaaS) for edge computing with an interesting implementation. The release of <strong><a href=\"https://pages.cloudflare.com/\">Cloudflare Pages</a></strong> last April didn't feel as noteworthy, because Pages is just one in a class of many Git-backed site-hosting solutions. It did have continuous previews, a useful feature not found in most alternatives. Now, though, Cloudflare has more tightly <a href=\"https://blog.cloudflare.com/cloudflare-pages-goes-full-stack/\">integrated Workers and Pages</a>, creating a fully integrated <a href=\"/radar/techniques/jamstack\">Jamstack</a> solution running on the CDN. The inclusion of a key-value store and a strongly consistent coordination primitive further enhance the attractiveness of the new version of Cloudflare Pages.</p>",
                "radarId": 38,
                "id": "en_2022-03_202203048",
                "blip_selector": "cloudflare-pages"
            },
            {
                "blip_id": 1336,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Google Cloud Dataflow",
                "display_name": "Google Cloud Dataflow",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-03",
                "theta": "242",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://cloud.google.com/dataflow/\">Google Cloud Dataflow</a></strong> is a cloud-based data-processing service for both batch and real-time data-streaming applications. Our teams are using Dataflow to create processing pipelines for integrating, preparing and analyzing large data sets, with <a href=\"https://beam.apache.org/\">Apache Beam</a>'s unified programming model on top to ease manageability. We first featured Dataflow in 2018, and its stability, performance and rich feature set make us confident to move it to Trial in this edition of the Radar.</p>",
                "radarId": 31,
                "id": "en_2022-03_1336",
                "blip_selector": "google-cloud-dataflow"
            },
            {
                "blip_id": 201911058,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "375",
                "name": "Azure Data Factory for orchestration",
                "display_name": "Azure Data Factory for orchestration",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2022-03",
                "theta": "162",
                "tag": "refresh_writeup",
                "description": "<p>For organizations using Azure as their primary cloud provider, <a href=\"https://azure.microsoft.com/en-us/services/data-factory/\">Azure Data Factory</a> is currently the default for orchestrating data-processing pipelines. It supports data ingestion, copying data from and to different storage types on prem or on Azure and executing transformation logic. Although we've had adequate experience with Azure Data Factory for simple migrations of data stores from on prem to the cloud, we discourage the use of <strong>Azure Data Factory for orchestration</strong> of complex data-processing pipelines and workflows. We've had some success with Azure Data Factory when it's used primarily to move data between systems. For more complex data pipelines, it still has its challenges, including poor debuggability and error reporting; limited observability as Azure Data Factory logging capabilities don't integrate with other products such as Azure Data Lake Storage or Databricks, making it difficult to get an end-to-end observability in place; and availability of data source-triggering mechanisms only to certain regions. At this time, we encourage using other open-source orchestration tools (e.g., <a href=\"/radar/tools/airflow\">Airflow</a>) for complex data pipelines and limiting Azure Data Factory for data copying or snapshotting. Our teams continue to use Data Factory to move and extract data, but for larger operations we recommend other, more well-rounded workflow tools.</p>",
                "radarId": 19,
                "id": "en_2022-03_201911058",
                "blip_selector": "azure-data-factory-for-orchestration"
            }
        ]
    },
    {
        "date": "2022-10",
        "blips": [
            {
                "blip_id": 201911008,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "Delta Lake",
                "display_name": "Delta Lake",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "240",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://delta.io/\">Delta Lake</a></strong> is an <a href=\"https://github.com/delta-io/delta\">open-source storage layer</a>, implemented by Databricks, that attempts to bring ACID transactions to big data processing. In our Databricks-enabled <a href=\"/radar/techniques/data-lake\">data lake</a> or <a href=\"/radar/techniques/data-mesh\">data mesh</a> projects, our teams prefer using Delta Lake storage over the direct use of file storage types such as <a href=\"https://aws.amazon.com/s3/\">AWS S3</a> or <a href=\"https://azure.microsoft.com/en-au/services/storage/data-lake-storage/\">ADLS</a>. Until recently, Delta Lake has been a closed proprietary product from Databricks, but it's now open source and accessible to non-Databricks platforms. However, our recommendation of Delta Lake as a default choice currently extends only to Databricks projects that use <a href=\"https://parquet.apache.org/\">Parquet</a> file formats. Delta Lake facilitates concurrent data read/write use cases where file-level transactionality is required. We find Delta Lake's seamless integration with Apache Spark <a href=\"https://docs.databricks.com/delta/delta-batch.html\">batch</a> and <a href=\"https://docs.databricks.com/delta/delta-streaming.html\">micro-batch</a> APIs very helpful, particularly features such as <a href=\"https://databricks.com/blog/2019/02/04/introducing-delta-time-travel-for-large-scale-data-lakes.html\">time travel</a> (accessing data at a particular point in time or commit reversion) as well as <a href=\"https://databricks.com/blog/2019/09/24/diving-into-delta-lake-schema-enforcement-evolution.html\">schema evolution</a> support on write.</p>",
                "radarId": 28,
                "id": "en_2022-10_201911008",
                "blip_selector": "delta-lake"
            },
            {
                "blip_id": 202210002,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "292",
                "name": "Xcode Cloud",
                "display_name": "Xcode Cloud",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "8",
                "tag": "new",
                "description": "<p><a href=\"https://developer.apple.com/xcode-cloud/\"><strong>Xcode Cloud</strong></a> is a CI/CD tool that is built into Xcode and used to build, test and deploy Apple apps. It provides an integrated experience with familiar tools for Apple developers like Xcode, App Store Connect and TestFlight. Based on our team's experience, it does a good job of simplifying the pipeline configuration and provisioning profiles and certificates. This tool is quite fresh and most of our mobile development teams are still using the more mature <a href=\"/radar/tools/bitrise\">Bitrise</a>. Still, we think it's worth assessing and tracking its progress.</p>",
                "radarId": 75,
                "id": "en_2022-10_202210002",
                "blip_selector": "xcode-cloud"
            },
            {
                "blip_id": 202210081,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "195",
                "name": "Design tokens",
                "display_name": "Design tokens",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "155",
                "tag": "new",
                "description": "<p>When faced with the challenge of using a <a href=\"/radar/techniques/design-systems\">design system</a> consistently across many form factors and platforms, the team at Salesforce came up with the concept of <strong><a href=\"https://medium.com/salesforce-ux/living-design-system-3ab1f2280ef7#.r26jko9u3\">design tokens</a></strong>. The tokens store values, such as colors and fonts, in one central place. This makes it possible to <a href=\"https://medium.com/eightshapes-llc/tokens-in-design-systems-25dd82d58421\">separate options from decisions</a>, and it significantly improves <a href=\"https://uxdesign.cc/design-tokens-for-dummies-8acebf010d71\">collaboration between teams</a>. Design tokens are not new, but with the introduction of tools like <a href=\"/radar/languages-and-frameworks/tailwind-css\">Tailwind CSS</a> and <a href=\"https://amzn.github.io/style-dictionary/#/\">Style Dictionary</a>, we see design tokens being used more often.</p>",
                "radarId": 6,
                "id": "en_2022-10_202210081",
                "blip_selector": "design-tokens"
            },
            {
                "blip_id": 202210008,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Soda Core",
                "display_name": "Soda Core",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "23",
                "tag": "new",
                "description": "<p><a href=\"https://www.soda.io/core\"><strong>Soda Core</strong></a> is an open-source data quality and observability tool. We talked about <a href=\"/radar/tools/great-expectations\">Great Expectations</a> previously in the Radar, and Soda Core is an alternative with a key difference — you express the data validations in a DSL called <a href=\"https://docs.soda.io/soda-cl/soda-cl-overview.html\">SodaCL</a> (previously called <a href=\"https://docs.soda.io/soda-sql/overview.html\">Soda SQL</a>) as opposed to Python functions. Once the validations are written, it can be executed as part of a <a href=\"https://docs.soda.io/soda-core/orchestrate-scans.html\">data pipeline</a> or <a href=\"https://docs.soda.io/soda-core/programmatic.html\">scheduled to run programmatically</a>. As we become increasingly data-driven, it's critical to maintain data quality, and we encourage you to assess Soda Core.</p>",
                "radarId": 73,
                "id": "en_2022-10_202210008",
                "blip_selector": "soda-core"
            },
            {
                "blip_id": 202210083,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "225",
                "name": "Fake SMTP server to test mail-sending",
                "display_name": "Fake SMTP server to test mail-sending",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "148",
                "tag": "new",
                "description": "<p>Using test email accounts or entire test SMTP (Single Mail Transfer Protocol) servers remains a common software testing practice. However, using a real server carries the risk that <a href=\"https://www.usatoday.com/story/money/2021/06/18/hbo-max-integration-test-email-confusion/7744108002/\">test emails will be sent to real people</a> and often complicates automated integration testing. We've seen success using a <strong>fake SMTP server to test mail sending</strong>, which records a request to send an email without actually sending it. Multiple open-source tools exist in this space, including <a href=\"https://github.com/gessnerfl/fake-smtp-server\">fake-smtp-server</a>, which renders emails in a web UI for visual testing, and <a href=\"https://www.mbtest.org/\">mountebank</a>, which exposes the sent emails through a REST API for integration testing. We recommend exploring this technique to reduce risk and improve testing efficiency.</p>",
                "radarId": 7,
                "id": "en_2022-10_202210083",
                "blip_selector": "fake-smtp-server-to-test-mail-sending"
            },
            {
                "blip_id": 202210037,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "GCP Vertex AI",
                "display_name": "GCP Vertex AI",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "220",
                "tag": "new",
                "description": "<p><strong><a href=\"https://cloud.google.com/vertex-ai\">GCP Vertex AI</a></strong> is a unified artificial intelligence platform that allows teams to build, deploy and scale machine-learning (ML) models. Vertex AI includes pretrained models, which can be used directly, fine-tuned or combined with <a href=\"/radar/techniques/automated-machine-learning-automl\">AutoML</a>, as well as infrastructure such as feature stores and pipelines for ML models. We like Vertex AI's integrated capabilities, which help to make it feel like a coherent AI platform.</p>",
                "radarId": 45,
                "id": "en_2022-10_202210037",
                "blip_selector": "gcp-vertex-ai"
            },
            {
                "blip_id": 202210048,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Connect",
                "display_name": "Connect",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "308",
                "tag": "new",
                "description": "<p><a href=\"https://connect.build/\"><strong>Connect</strong></a> is a family of libraries for building browser- and gRPC-compatible HTTP APIs. Similar to gRPC, you write Protocol Buffer schema and implement the application logic, and Connect generates code to handle marshaling, routing, compression and content type negotiation. However, Connect tries to improve on gRPC in several ways. This includes native support for gRPC-Web without a translating proxy; interoperability with third-party routers or middleware, because <a href=\"https://github.com/bufbuild/connect-go\">connect-go</a> is built on top of net/http (unlike grpc-go); and fully generated type-safe clients with the ergonomics of hand-crafted code. We mostly prefer REST and are not a big fan of the RPC approach to building APIs. That said, Connect does seem to address some of our concerns with RPCs, and we encourage you to assess it.</p>",
                "radarId": 95,
                "id": "en_2022-10_202210048",
                "blip_selector": "connect"
            },
            {
                "blip_id": 202210024,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Cruft",
                "display_name": "Cruft",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "56",
                "tag": "new",
                "description": "<p>We've been talking about <a href=\"/radar/techniques/tailored-service-templates\">tailored service templates</a> ever since we first identified <a href=\"/radar/techniques/microservices\">microservices</a> as a thing. If an organization sets out to create a collection of small services that can be developed, built, deployed and operated independently but consistently, it makes sense to give teams a solid starting point that aligns to the standard. However, one of the enduring problems with that approach is that as the template evolves over time in response to changing technical and business requirements, projects based on older versions of the template fall out of date. Retrofitting template improvements into an established project becomes a major pain. <strong><a href=\"https://cruft.github.io/cruft/\">Cruft</a></strong> attempts to address this problem by providing tools to identify and patch differences between a local project and the current head of a master template repository. It combines the <a href=\"https://github.com/cookiecutter/cookiecutter\">Cookiecutter</a> templating engine with git hashes to identify and apply changes to the templates. Think of it as a package manager for a project boilerplate. Keeping templates up-to-date is a notoriously difficult and long-standing problem, so to us the solution Cruft provides sounds almost too good to be true. Based on early feedback from our team, however, Cruft actually works and makes life easier for service builders and maintainers. We're anxious to see how it performs over the long term, but for now it's worth taking a look at this potentially useful tool.</p>",
                "radarId": 57,
                "id": "en_2022-10_202210024",
                "blip_selector": "cruft"
            },
            {
                "blip_id": 202104084,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "DataHub",
                "display_name": "DataHub",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "207",
                "tag": "move_in",
                "description": "<p>Since we first mentioned <a href=\"/radar/techniques/data-discoverability\">data discoverability</a> in the Radar, LinkedIn has evolved <a href=\"https://engineering.linkedin.com/blog/2016/03/open-sourcing-wherehows--a-data-discovery-and-lineage-portal\">WhereHows</a> to <strong><a href=\"https://github.com/linkedin/datahub\">DataHub</a></strong>, the next generation platform that addresses data discoverability via an extensible metadata system. Instead of crawling and pulling metadata, DataHub adopts a push-based model where individual components of the data ecosystem publish metadata via an API or a stream to the central platform. This push-based integration shifts ownership from the central entity to individual teams, making them accountable for their metadata. As a result, we've used DataHub successfully as an organization-wide metadata repository and entry point for multiple autonomously maintained data products. When taking this approach, be sure to keep it lightweight and avoid the slippery slope leading to centralized control over a shared resource.</p>",
                "radarId": 32,
                "id": "en_2022-10_202104084",
                "blip_selector": "datahub"
            },
            {
                "blip_id": 202010066,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "60",
                "name": "Backstage",
                "display_name": "Backstage",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "210",
                "tag": "move_in",
                "description": "<p>In an increasingly digital world, improving developer effectiveness in large organizations is often a core concern of senior leaders. We've seen enough value with developer portals in general and <strong><a href=\"https://backstage.io/\">Backstage</a></strong> in particular that we're happy to recommend it in Adopt. Backstage is an open-source developer portal platform created by Spotify that improves discovery of software assets across the organization. It uses Markdown <a href=\"https://backstage.io/docs/features/techdocs/techdocs-overview\">TechDocs</a> that live alongside the code for each service, which nicely balances the needs of centralized discovery with the need for distributed ownership of assets. Backstage supports software templates to accelerate new development and a plugin architecture that allows for extensibility and adaptability into an organization's infrastructure ecosystem. <a href=\"https://backstage.io/docs/features/software-catalog/software-catalog-overview\">Backstage Service Catalog</a> uses YAML files to track ownership and metadata for all the software in an organization's ecosystem; it even lets you track third-party SaaS software, which usually requires tracking ownership.</p>",
                "radarId": 27,
                "id": "en_2022-10_202010066",
                "blip_selector": "backstage"
            },
            {
                "blip_id": 201911004,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Teleport",
                "display_name": "Teleport",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "256",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://gravitational.com/teleport/\">Teleport</a></strong> is a tool for <a href=\"/radar/techniques/zero-trust-architecture\">zero trust</a> network access to infrastructure. Traditional setups require complex policies or jump servers to restrict access to critical resources. Teleport, however, simplifies this with a unified access plane and with fine-grained authorization controls that replace jump servers, VPNs or shared credentials. Implemented as a single binary with out-of-the-box support for several protocols (including SSH, RDP, <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> API, MySQL, <a href=\"/radar/platforms/mongodb\">MongoDB</a> and PostgreSQL wire protocols), Teleport makes it easy to set up and manage secured access across Linux, Windows or Kubernetes environments. Since we first mentioned it in the Radar, a few teams have used Teleport and our overall positive experience prompted us to highlight it.</p>",
                "radarId": 39,
                "id": "en_2022-10_201911004",
                "blip_selector": "teleport"
            },
            {
                "blip_id": 202010061,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Svelte",
                "display_name": "Svelte",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "348",
                "tag": "move_in",
                "description": "<p>Among web component frameworks, <strong><a href=\"https://svelte.dev/\">Svelte</a></strong> stands out by moving reactivity out of the browser and into the compiler. Instead of optimizing DOM updates by using a virtual DOM and browser optimization tricks, Svelte compiles your code into vanilla framework-less JavaScript code that surgically updates the DOM directly. In addition to the run-time performance benefits, this also allows Svelte to optimize the amount of code the browser has to download without sacrificing features for developers; moreover, it's proven to be performant and battery-friendly for mobile web applications as less code has to execute in the browser itself. Performance benefits aside, our teams have appreciated its friendly learning curve and the maintenance benefits that come from <a href=\"https://svelte.dev/blog/write-less-code\">writing less code</a>. Svelte itself is only the component framework, but <a href=\"https://kit.svelte.dev/\">SvelteKit</a> adds features to build full web applications.</p>",
                "radarId": 89,
                "id": "en_2022-10_202010061",
                "blip_selector": "svelte"
            },
            {
                "blip_id": 202210010,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "dbtvault",
                "display_name": "dbtvault",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "68",
                "tag": "new",
                "description": "<p><a href=\"https://datavaultalliance.com/news/dv/understanding-data-vault-2-0/\">Data Vault 2.0</a> is a data modeling methodology and design pattern intended to improve the flexibility of data warehouses compared to other popular modeling approaches. Data Vault 2.0 can be applied to any data store such as <a href=\"https://www.snowflake.com/data-cloud-glossary/data-vault/\">Snowflake</a> or <a href=\"https://www.databricks.com/glossary/data-vault\">Databricks</a>. When implementing Data Vault warehouses, we've found the <strong><a href=\"https://www.data-vault.co.uk/dbtvault/\">dbtvault</a></strong> package for <a href=\"/radar/tools/dbt\">dbt</a> to be a helpful tool. dbtvault provides a set of <a href=\"https://jinja.palletsprojects.com/en/3.1.x/\">jinja</a> templates that generate and execute the ETL scripts necessary to populate a Data Vault warehouse. Although dbtvault has some rough edges — it lacks support for enforcing implied uniqueness or performing incremental loads — overall, it fills a niche and requires minimal configuration to get started.</p>",
                "radarId": 67,
                "id": "en_2022-10_202210010",
                "blip_selector": "dbtvault"
            },
            {
                "blip_id": 202210041,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Databricks Unity Catalog",
                "display_name": "Databricks Unity Catalog",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "196",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.databricks.com/product/unity-catalog\">Databricks Unity Catalog</a></strong> is a data governance solution for assets such as files, tables or machine learning models in a <a href=\"https://www.databricks.com/blog/2020/01/30/what-is-a-data-lakehouse.html\">lakehouse</a>. Although you'll find several platforms in the enterprise data governance space, if you're already using other Databricks solutions, you should certainly assess Unity Catalog. We want to highlight that while these governance platforms usually implement a centralized solution for better consistency across workspaces and workloads, the responsibility to govern should be federated by enabling individual teams to govern their own assets.</p>",
                "radarId": 42,
                "id": "en_2022-10_202210041",
                "blip_selector": "databricks-unity-catalog"
            },
            {
                "blip_id": 202210042,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Feast",
                "display_name": "Feast",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "228",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/feast-dev/feast\">Feast</a></strong> is an open-source <a href=\"/radar/platforms/feature-store\">Feature Store</a> for machine learning. It has several useful properties, including generating point-in-time correct feature sets — so error-prone future feature values do not leak to models during training — and supporting both streaming and batch data sources. However, it currently only supports timestamped structured data and therefore may not be suitable if you work with unstructured data in your models. We've successfully used Feast at a significant scale as an offline store during model training and as an online store during prediction.</p>",
                "radarId": 35,
                "id": "en_2022-10_202210042",
                "blip_selector": "feast"
            },
            {
                "blip_id": 202210077,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Seldon Core",
                "display_name": "Seldon Core",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "249",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/SeldonIO/seldon-core\">Seldon Core</a></strong> is an open-source platform to package, deploy, monitor and manage machine learning models in <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> clusters. With out-of-the-box support for several machine-learning frameworks, you can easily containerize your models using <a href=\"https://docs.seldon.io/projects/seldon-core/en/latest/servers/overview.html\">prepackaged inference servers</a>, <a href=\"https://docs.seldon.io/projects/seldon-core/en/latest/servers/custom.html\">custom inference servers</a> or <a href=\"https://docs.seldon.io/projects/seldon-core/en/latest/wrappers/language_wrappers.html\">language wrappers</a>. With distributed tracing through <a href=\"https://docs.seldon.io/projects/seldon-core/en/latest/graph/distributed-tracing.html\">Jaeger</a> and model explainability via <a href=\"https://github.com/SeldonIO/alibi\">Alibi</a>, Seldon Core addresses several last-mile delivery challenges with machine learning deployments, and our data teams like it.</p>",
                "radarId": 38,
                "id": "en_2022-10_202210077",
                "blip_selector": "seldon-core"
            },
            {
                "blip_id": 202210074,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Databricks Photon",
                "display_name": "Databricks Photon",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "200",
                "tag": "new",
                "description": "<p>Starting with Databricks 9.1 LTS (Long Term Support), a new run time became available called <a href=\"https://www.databricks.com/product/photon\"><strong>Databricks Photon</strong></a>, an alternative that was rewritten from the ground up in C++. Several of our teams have now used Photon in production and have been pleased with the performance improvements and corresponding cost savings. Actual improvements and changes in costs will depend upon multiple factors such as data set size and transaction types. We recommend trialing against a realistic workload to gather data for a comparison before making any decision on Photon's use.</p>",
                "radarId": 31,
                "id": "en_2022-10_202210074",
                "blip_selector": "databricks-photon"
            },
            {
                "blip_id": 202210004,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Harness Cloud Cost Management",
                "display_name": "Harness Cloud Cost Management",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "53",
                "tag": "new",
                "description": "<p><strong><a href=\"https://harness.io/products/cloud-cost\">Harness Cloud Cost Management</a></strong> is a commercial tool that works across all three of the major cloud providers and their managed <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> clusters to help visualize and manage cloud costs. The product calculates a cost efficiency score by looking at idle resources as well as resources not allocated to any workload and uses historical trends to help optimize resource allocation. The dashboards highlight cost spikes and allow a user to register unexpected anomalies, which are then fed into their reinforcement learning algorithm around anomaly detection. Cloud Cost Management can recommend adjustments to limits for memory and CPU usage, with options to optimize for either cost or performance. \"Perspectives\" allows you to group costs based on organizationally defined filters (which could correspond to business units, teams or products) and automate report distribution to bring visibility into cloud spend. We believe Cloud Cost Management offers a compelling feature set to help organizations mature their FinOps practices.</p>",
                "radarId": 69,
                "id": "en_2022-10_202210004",
                "blip_selector": "harness-cloud-cost-management"
            },
            {
                "blip_id": 202210056,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Cloudscape",
                "display_name": "Cloudscape",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "302",
                "tag": "new",
                "description": "<p><strong><a href=\"https://cloudscape.design/\">Cloudscape</a></strong> is an open-source design system that not only has a rich set of components but also 35 interaction and content representation patterns. In addition, it uses <a href=\"/radar/techniques/design-tokens\">design tokens</a> for theming and provides element wrappers for all components, which greatly simplifies unit testing. This makes it stand out from other design systems out there.</p>",
                "radarId": 94,
                "id": "en_2022-10_202210056",
                "blip_selector": "cloudscape"
            },
            {
                "blip_id": 202203015,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Colima",
                "display_name": "Colima",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "193",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://github.com/abiosoft/colima\">Colima</a></strong> is becoming a popular open alternative to Docker Desktop. It provisions the <a href=\"/radar/platforms/docker\">Docker</a> container run time in a Lima VM, configures the Docker CLI on macOS and handles port-forwarding and volume mounts. Colima uses <a href=\"https://containerd.io/\">containerd</a> as its run time, which is also the run time on most managed <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> services — improving the important dev-prod parity. With Colima you can easily use and test the latest features of containerd, such as lazy loading for container images. We've been having good results with Colima in our projects. When in the Kubernetes space, we also use <a href=\"https://github.com/containerd/nerdctl\">nerdctl</a>, a Docker-compatible CLI for containerd. Since Kubernetes has deprecated Docker as container run time and most managed-services (EKS, GKE, etc) are following its lead, more people will be looking to containerd native tools, hence the importance of tools like nerdctl. In our opinion, Colima is realizing its strong potential and becoming a go-to option as an alternative to Docker Desktop.</p>",
                "radarId": 30,
                "id": "en_2022-10_202203015",
                "blip_selector": "colima"
            },
            {
                "blip_id": 1327,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Camunda",
                "display_name": "Camunda",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "292",
                "tag": "move_in",
                "description": "<p>Since we last mentioned <strong><a href=\"https://camunda.com/\">Camunda</a></strong>, we've seen many of our teams and clients use the platform, making it one of our preferred workflow engines in cases where a workflow engine is a good fit for the domain. Camunda offers workflow and decision engines that can be integrated as a library in your Java code. This makes it easy to test, version and refactor workflows, alleviating some of the downsides of other more low-code workflow engines. We've even seen Camunda used in environments with high performance requirements. Teams also like how easy it is to integrate with <a href=\"/radar/languages-and-frameworks/spring-boot\">Spring Boot</a> and its nice user interface.</p>",
                "radarId": 84,
                "id": "en_2022-10_1327",
                "blip_selector": "camunda"
            },
            {
                "blip_id": 202210107,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Carbon",
                "display_name": "Carbon",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "315",
                "tag": "new",
                "description": "<p>We're seeing some interest in the <strong><a href=\"https://github.com/carbon-language/carbon-lang\">Carbon</a></strong> programming language. That doesn't come as a surprise: it has Google's backing and is presented as a natural successor to C++. In our opinion C++ can't be replaced fast enough as software engineers have shown, over the past decades, that writing safe and error-free C++ code is extremely difficult and time-consuming. While Carbon is an interesting concept with its focus on migration from C++, without a working compiler, it's clearly a long way from being usable and there are other modern programming languages that are good choices if you want to migrate from C++. It's too early to tell whether Carbon will become the natural successor to C++, but, from today's perspective, we recommend that teams look at <a href=\"/radar/languages-and-frameworks/rust\">Rust</a> and <a href=\"/radar/languages-and-frameworks/go-language\">Go</a> rather than postponing a migration because they're waiting for Carbon to arrive.</p>",
                "radarId": 103,
                "id": "en_2022-10_202210107",
                "blip_selector": "carbon"
            },
            {
                "blip_id": 202203020,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "300",
                "name": "Infracost",
                "display_name": "Infracost",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2022-10",
                "theta": "45",
                "tag": "refresh_writeup",
                "description": "<p>We continue to see organizations move to the cloud without properly understanding how they will track ongoing spend. We previously blipped <a href=\"/radar/techniques/run-cost-as-architecture-fitness-function\">run cost as architecture fitness function</a>, and <a href=\"https://infracost.io/\"><strong>Infracost</strong></a> is a tool that aims to make these cloud cost trade-offs visible in Terraform pull requests. It's open-source software and available for macOS, Linux, Windows and Docker and supports pricing for AWS, GCP and Microsoft Azure out of the box. It also provides a public API that can be queried for current cost data. We remain excited by its potential, especially when it comes to gaining better cost visibility in the IDE.</p>",
                "radarId": 70,
                "id": "en_2022-10_202203020",
                "blip_selector": "infracost"
            },
            {
                "blip_id": 202210073,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "DataOps.live",
                "display_name": "DataOps.live",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "216",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.dataops.live/\">DataOps.live</a></strong> is a data platform that automates environments in <a href=\"/radar/platforms/snowflake\">Snowflake</a>. Inspired by <a href=\"/radar/techniques/devops\">DevOps</a> practices, DataOps.live lets you treat the data platform like any other web platform by embracing continuous integration and continuous delivery (CI/CD), automated testing, observability and code management. You can roll back changes immediately without impacting the data or recover from complete failures and rebuild a fresh Snowflake tenant in minutes or hours instead of days. Our teams had good experiences with DataOps.live, because it allowed us to iterate quickly when building data products on top of Snowflake.</p>",
                "radarId": 33,
                "id": "en_2022-10_202210073",
                "blip_selector": "dataops-live"
            },
            {
                "blip_id": 202210044,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "JobRunr",
                "display_name": "JobRunr",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "327",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.jobrunr.io/\">JobRunr</a></strong> is a library for background job processing in Java and an alternative to the Quartz scheduler. Our teams have enjoyed using JobRunr's built-in dashboard, which is easy to use and allows the monitoring and scheduling of background tasks. JobRunr is open source and free for commercial use; for features such as job migration and recovery, however, you need to get a paid license.</p>",
                "radarId": 98,
                "id": "en_2022-10_202210044",
                "blip_selector": "jobrunr"
            },
            {
                "blip_id": 202210018,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Hadolint",
                "display_name": "Hadolint",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "46",
                "tag": "new",
                "description": "<p>We like spreading the word about linting tools that actually help you find issues rather than just shortcut style disputes in the team. <strong><a href=\"https://github.com/hadolint/hadolint\">Hadolint</a></strong> is one of those tools — it helps find common issues in Dockerfiles. We find it to be fast, accurate and with good documentation. It explains both how to fix an issue and why it's an issue in the first place, thus nudging Dockerfile authors toward good practices. Incidentally, Hadolint is built on top of <a href=\"/radar/tools/shellcheck\">ShellCheck</a>, which we recommend in its own right for checking your shell scripts.</p>",
                "radarId": 59,
                "id": "en_2022-10_202210018",
                "blip_selector": "hadolint"
            },
            {
                "blip_id": 201911021,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "Kotest",
                "display_name": "Kotest",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "305",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://kotest.io/\">Kotest</a></strong> (previously KotlinTest) is a stand-alone testing tool for the <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> ecosystem that is widely used among our teams across various Kotlin implementations — native, JVM or JavaScript. Its key advantages are that it offers a variety of testing styles in order to structure test suites and that it comes with a comprehensive set of matchers, which allow for expressive tests in an elegant internal DSL. In addition to its support for <a href=\"/radar/techniques/property-based-unit-testing\">property-based testing</a>, our teams like the solid IntelliJ plugin and the support community. Many of our developers consider it their first choice and recommend those who are still using JUnit in Kotlin consider switching over to Kotest.</p>",
                "radarId": 78,
                "id": "en_2022-10_201911021",
                "blip_selector": "kotest"
            },
            {
                "blip_id": 202210023,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Clumio Protect",
                "display_name": "Clumio Protect",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "63",
                "tag": "new",
                "description": "<p>We've had success with <a href=\"https://clumio.com/products/protect/\"><strong>Clumio Protect</strong></a> for backing up AWS data, particularly S3. A commercial SaaS solution, Clumio Protect can also back up a range of other AWS services and stores the data offline where it is not accessible through the internet. Our teams responsible for handling data protection and recovery at massive scale found that Clumio Protect is easy to set up and maintain and far outperforms the native AWS Backup service when S3 buckets are particularly big.</p>",
                "radarId": 56,
                "id": "en_2022-10_202210023",
                "blip_selector": "clumio-protect"
            },
            {
                "blip_id": 202210053,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Aleph.js",
                "display_name": "Aleph.js",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "276",
                "tag": "new",
                "description": "<p>There is certainly no shortage of frameworks to build web applications in JavaScript/<a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>. We've featured many of them in the Radar, but what sets <strong><a href=\"https://alephjs.org/docs\">Aleph.js</a></strong> apart in this crowded field is that it's built to run on <a href=\"/radar/platforms/deno\">Deno</a>, the new server-side run time created by the original developer of <a href=\"/radar/platforms/node-js\">Node</a>. This puts Aleph.js on a modern foundation that addresses several shortcomings and problems with Node. Aleph.js is still new — it’s approaching the 1.0 release at the time of writing — but it already offers a solid developer experience, including hot module replacement. With Deno now way past its <a href=\"https://deno.com/blog/v1\">1.0 release</a>, this is a modern choice for projects that can take the risk.</p>",
                "radarId": 90,
                "id": "en_2022-10_202210053",
                "blip_selector": "aleph-js"
            },
            {
                "blip_id": 202210064,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Keptn",
                "display_name": "Keptn",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "245",
                "tag": "new",
                "description": "<p><strong><a href=\"https://keptn.sh/\">Keptn</a></strong> is a control plane for delivery and operations that relies on <a href=\"https://cloudevents.io/\">CloudEvents</a> for instrumentation. Like one of the techniques we mentioned in <a href=\"/radar/techniques/observability-for-ci-cd-pipelines\">observability for CI/CD pipelines</a>, Keptn visualizes its orchestration as traces. The declarative definition of the delivery pipeline aims to separate SRE intentions from the underlying implementation, relying on other observability, pipeline and deployment tooling to respond to the appropriate events. We're particularly excited by the idea of adding service-level objective (SLO) verifications as <a href=\"/radar/techniques/architectural-fitness-function\">architectural fitness functions</a> to CI/CD pipelines: Keptn lets you define service-level indicators (SLIs) as key-value pairs, with the value representing the query to your observability infrastructure. It will then evaluate the result against the defined SLOs as a <a href=\"https://keptn.sh/docs/concepts/quality_gates/\">quality gate</a>. Keptn takes the same approach to automated operations, allowing a declarative definition that specifies the intent of scaling a ReplicaSet in response to a degradation of average response time, for example. Created by Dynatrace, Keptn also integrates with <a href=\"/radar/tools/prometheus\">Prometheus</a> and Datadog.</p>",
                "radarId": 48,
                "id": "en_2022-10_202210064",
                "blip_selector": "keptn"
            },
            {
                "blip_id": 202104055,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Spectral",
                "display_name": "Spectral",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "21",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://stoplight.io/open-source/spectral/\">Spectral</a></strong> is a JSON/YAML linter with an emphasis on OpenAPI and AsyncAPI specifications. It ships with a comprehensive set of out-of-the-box rules for these specs that can save developers headaches when designing and implementing APIs or event-driven collaboration. These rules check for proper API parameter specifications or the existence of a license statement in the spec, among other things. The <a href=\"https://meta.stoplight.io/docs/spectral/9ffa04e052cc1-spectral-cli\">CLI</a> makes it easy to incorporate Spectral into both local development and CI/CD pipelines, and the <a href=\"https://meta.stoplight.io/docs/spectral/eb68e7afd463e-spectral-in-java-script\">JavaScript API</a> supports more advanced use cases. The <a href=\"https://github.com/stoplightio/spectral\">GitHub site</a> links to publicly available real-world rule sets from companies like Adidas, giving teams a head start on adopting their own linting rules.</p>",
                "radarId": 62,
                "id": "en_2022-10_202104055",
                "blip_selector": "spectral"
            },
            {
                "blip_id": 202203050,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "298",
                "name": "CUPID",
                "display_name": "CUPID",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2022-10",
                "theta": "164",
                "tag": "stay",
                "description": "<p>How do you approach writing good code? How do you judge if you've written good code? As software developers, we're always looking for catchy rules, principles and patterns that we can use to share a language and values with each other when it comes to writing simple, easy-to-change code.</p>\n\n<p>Daniel Terhorst-North has recently made a new attempt at creating such a checklist for good code. He argues that instead of sticking to a set of rules like <a href=\"https://en.wikipedia.org/wiki/SOLID\">SOLID</a>, using a set of properties to aim for is more generally applicable. He came up with what he calls the <strong><a href=\"https://dannorth.net/2022/02/10/cupid-for-joyful-coding/\">CUPID</a></strong> properties to describe what we should strive for to achieve \"joyful\" code: Code should be composable, follow the Unix philosophy and be predictable, idiomatic and domain based.</p>",
                "radarId": 15,
                "id": "en_2022-10_202203050",
                "blip_selector": "cupid"
            },
            {
                "blip_id": 202203070,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "305",
                "name": "TinyML",
                "display_name": "TinyML",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2022-10",
                "theta": "107",
                "tag": "refresh_writeup",
                "description": "<p>We continue to be excited by the <strong><a href=\"https://towardsdatascience.com/an-introduction-to-tinyml-4617f314aa79\">TinyML</a></strong> technique and the ability to create machine learning (ML) models designed to run on low-powered and mobile devices. Until recently, executing an ML model was seen as computationally expensive and, in some cases, required special-purpose hardware. While creating the models still broadly sits within this classification, they can now be created in a way that allows them to be run on small, low-cost and low-power consumption devices. If you've been considering using ML but thought it unrealistic because of compute or network constraints, then this technique is worth assessing.</p>",
                "radarId": 22,
                "id": "en_2022-10_202203070",
                "blip_selector": "tinyml"
            },
            {
                "blip_id": 202210060,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Ladle",
                "display_name": "Ladle",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "326",
                "tag": "new",
                "description": "<p>As <a href=\"https://storybook.js.org/\">Storybook</a> grew in popularity, it became more and more of a behemoth. If all you really care about is isolating and testing your React UI components, then <strong><a href=\"https://ladle.dev/\">Ladle</a></strong> is the alternative. Ladle supports most of the Storybook API (MDX files are not supported yet) and can be used as a drop-in replacement. It is lightweight and has better integration with <a href=\"https://vitejs.dev/\">Vite</a>. It also provides simple and clean APIs that can be easily integrated with other testing frameworks.</p>",
                "radarId": 87,
                "id": "en_2022-10_202210060",
                "blip_selector": "ladle"
            },
            {
                "blip_id": 202005013,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "225",
                "name": "Micro frontends for mobile",
                "display_name": "Micro frontends for mobile",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-10",
                "theta": "123",
                "tag": "refresh_writeup",
                "description": "<p>Since introducing them in the Radar in 2016, we've seen widespread adoption of <a href=\"/radar/techniques/micro-frontends\">micro frontends</a> for web UIs. Recently, however, we've seen projects extend this architectural style to include <strong>micro frontends for mobile</strong> apps as well. When an app becomes sufficiently large and complex, it becomes necessary to distribute the development over multiple teams. This presents a number of challenges around team autonomy, repository structures and integration frameworks. In the past we've mentioned <a href=\"/radar/languages-and-frameworks/atlas-and-beehive\">Atlas and BeeHive</a>, but these frameworks failed to gain traction and are no longer in active development. More recent approaches include <a href=\"https://github.com/tuist/tuist\">Tuist</a> or the <a href=\"/radar/languages-and-frameworks/swift-package-manager\">Swift Package Manager</a> for integrating the work of multiple teams into a single app. But in our experience, teams often end up implementing their own framework for integration. While we definitely see a need for modularity in scaling up mobile development teams, the case for micro frontends is less certain. This is because while micro frontends imply a direct correspondence between teams and pages or components, this structure could end up blurring responsibilities for business domain contexts, thereby increasing <a href=\"/radar/techniques/team-cognitive-load\">team cognitive load</a>. Our advice is to follow the basics of good, clean application design, embrace modularity when scaling up to multiple teams and adopt a micro frontend architecture only when the modules and the business domain are strongly aligned.</p>",
                "radarId": 10,
                "id": "en_2022-10_202005013",
                "blip_selector": "micro-frontends-for-mobile"
            },
            {
                "blip_id": 202210019,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Kaniko",
                "display_name": "Kaniko",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "38",
                "tag": "new",
                "description": "<p>Most of today's CI/CD pipeline tools and platforms are built on containers as runtimes. Many of our teams are using <strong><a href=\"https://github.com/GoogleContainerTools/kaniko\">Kaniko</a></strong> to build container images from within those container-based pipelines. This comes as part of a trend away from <a href=\"/radar/platforms/docker\">Docker</a> as the de facto standard for container runtimes. With Kaniko, you can build your images without using a Docker daemon. This helps avoid the security issue of Docker's \"privileged\" mode, which would be necessary for any \"Docker-in-Docker\" activity. Moreover, you don't have to assume that your pipeline has access to a Docker daemon in the first place, which cannot be taken for granted anymore and often requires extra configuration.</p>",
                "radarId": 60,
                "id": "en_2022-10_202210019",
                "blip_selector": "kaniko"
            },
            {
                "blip_id": 202110076,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "180",
                "name": "Software Bill of Materials",
                "display_name": "Software Bill of Materials",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-10",
                "theta": "99",
                "tag": "refresh_writeup",
                "description": "<p>With continued pressure to keep systems secure and no reduction in the general threat landscape, a machine-readable <strong>Software Bill of Materials</strong> (SBOM) may help teams stay on top of security problems in the libraries that they rely on. Since the original <a href=\"https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/\">Executive Order</a> was published, the industry has gained clarity and understanding of what an SBOM is and how to create one; the National Institute of Standards and Technology (NIST), for example, now has more <a href=\"https://www.nist.gov/itl/executive-order-14028-improving-nations-cybersecurity/software-security-supply-chains-software-1\">specific advice</a> on how to comply with the order. We've had production experience using SBOMs on projects ranging from small companies to large multinationals and even government departments, and we're convinced they provide a benefit. More organizations and governments should consider requiring SBOMs for the software they use. The technique will be strengthened by the new tools that continue to emerge, such as the <a href=\"https://firebase.google.com/docs/android/learn-more#bom\">Firebase Android BOM</a> that automatically aligns an application's library dependencies to those listed in the BOM.</p>",
                "radarId": 13,
                "id": "en_2022-10_202110076",
                "blip_selector": "software-bill-of-materials"
            },
            {
                "blip_id": 202210034,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "165",
                "name": "Incremental developer platform",
                "display_name": "Incremental developer platform",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "131",
                "tag": "new",
                "description": "<p>We've been writing about developer platforms and how to build them in almost every edition of the Radar since 2017. In the meantime, the <em><a href=\"https://teamtopologies.com/book\">Team Topologies</a></em> book has also done a great job of describing the ideal of a platform that supports developers with \"self-service APIs, tools, services and knowledge.\" However, we often see teams shooting for too much of that platform vision too fast. Instead, building an <strong>incremental developer platform</strong> is key.</p>\n\n<p><em>Team Topologies</em> recommends to always strive for what they call the \"Thinnest Viable Platform\" necessary at any given stage, where the first version could even be just a set of documentation on a wiki. The next increment could increase the service level by providing templates or allowing teams to create pull requests. Further increments could then introduce self-service APIs, but only if valuable. In short, even though we've cautioned against fully <a href=\"/radar/techniques/ticket-driven-platform-operating-models\">ticket-driven platform operating models</a>, going from zero to self-service is the other extreme. Pace yourself, <a href=\"/radar/techniques/applying-product-management-to-internal-platforms\">treat your platform as a product</a> and build it up incrementally.</p>",
                "radarId": 9,
                "id": "en_2022-10_202210034",
                "blip_selector": "incremental-developer-platform"
            },
            {
                "blip_id": 202210068,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "OrioleDB",
                "display_name": "OrioleDB",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "261",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/orioledb/orioledb/\">OrioleDB</a></strong> is a new storage engine for PostgreSQL. Our teams use PostgreSQL a lot, but its storage engine was originally designed for hard drives. Although there are several options to tune for modern hardware, it can be difficult and cumbersome to achieve optimal results. OrioleDB addresses these challenges by implementing a cloud-native storage engine with explicit support for solid-state drives (SSDs) and nonvolatile random-access memory (NVRAM). To try the new engine, first install the enhancement patches to the current <a href=\"https://www.postgresql.org/docs/current/tableam.html\">table access methods</a> and then install OrioleDB as a PostgreSQL extension. We believe OrioleDB has great potential to address several <a href=\"https://www.slideshare.net/AlexanderKorotkov/solving-postgresql-wicked-problems\">long-pending issues in PostgreSQL</a>, and we encourage you to carefully assess it.</p>",
                "radarId": 50,
                "id": "en_2022-10_202210068",
                "blip_selector": "orioledb"
            },
            {
                "blip_id": 202210012,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "git-together",
                "display_name": "git-together",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "60",
                "tag": "new",
                "description": "<p>We're always looking for ways to remove small frictions from pair programming, which is why we're excited by <a href=\"https://github.com/kejadlen/git-together\"><strong>git-together</strong></a>, a tool written in Rust that simplifies git commit attribution during pairing. By aliasing <code>git-together</code> as <code>git</code>, the tool allows you to add extensions to <code>git config</code> that capture committer information, aliasing each committer by their initials. Changing pairs (or switching to soloing or mob programming) requires you to run <code>git with</code>, followed by the initials of the pair (for example: <code>git with bb cc</code>), allowing you to resume your regular git workflow afterward. Every time you commit, git-together will rotate through the pair as the official author that git stores, and it will automatically add any other authors to the bottom of the commit message. The configuration can be checked in with the repo, allowing git-together to work automatically after cloning a repo.</p>",
                "radarId": 68,
                "id": "en_2022-10_202210012",
                "blip_selector": "git-together"
            },
            {
                "blip_id": 201911053,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "235",
                "name": "Federated machine learning",
                "display_name": "Federated machine learning",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "140",
                "tag": "move_in",
                "description": "<p>We're now seeing client projects that use <strong>federated machine learning</strong> (ML). Traditionally, ML model training has required data to be placed in a centralized location where the relevant training algorithm can be run. From a privacy point of view, this is problematic, especially when the training data contains sensitive or personally identifiable information; users might be reluctant to share data or local data protection legislation may prevent us from moving data to a central location. Federated ML is a decentralized technique for training on a large and diverse set of data that allows the data to remain remote — for example, on a user's device. Network bandwidth and the computational limitations of devices still present significant technical challenges, but we like the way federated ML leaves users in control of their own personal information.</p>",
                "radarId": 8,
                "id": "en_2022-10_201911053",
                "blip_selector": "federated-machine-learning"
            },
            {
                "blip_id": 202210051,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Soketi",
                "display_name": "Soketi",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "340",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/soketi/soketi\"><strong>Soketi</strong></a> is an open-source WebSockets server. If your application is compatible with the <a href=\"https://pusher.com/\">Pusher</a> protocol, you can plug Soketi in directly as it fully implements the <a href=\"https://pusher.com/docs/channels/library_auth_reference/pusher-websockets-protocol/#version-7-2017-11\">Pusher Protocol v7</a>. We find the <a href=\"https://dash.soketi.app/register\">beta support</a> for Cloudflare Workers particularly interesting because it opens the door to using WebSockets at the network edge.</p>",
                "radarId": 100,
                "id": "en_2022-10_202210051",
                "blip_selector": "soketi"
            },
            {
                "blip_id": 202210052,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Stable Diffusion",
                "display_name": "Stable Diffusion",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "347",
                "tag": "new",
                "description": "<p>OpenAI's <a href=\"https://openai.com/blog/dall-e/\">DALL·E</a> caught everyone's attention with its ability to create <a href=\"http://wearemtm.com/2022/07/22/dall-e-2-creating-photorealistic-images-from-text/\">images from text prompts</a>. Now, <a href=\"https://stability.ai/blog/stable-diffusion-public-release\"><strong>Stable Diffusion</strong></a> offers the same capability but, critically, it's open source. Anyone with access to a powerful graphics card can experiment with the model, and anyone with <a href=\"https://huggingface.co/CompVis/stable-diffusion-v1-4#environmental-impact\">sufficient</a> compute resources can recreate the model themselves. The results are <a href=\"https://prompthero.com/prompt/1981b47ffa6\">astounding</a> but also raise significant questions. For example, the model is trained on image-text pairs obtained via a <a href=\"https://laion.ai/blog/laion-5b/\">broad scrape of the internet</a> and therefore will reflect societal biases, which means it could possibly produce content that is illegal, upsetting, or at the very least undesirable. Stable Diffusion now includes an AI-based <a href=\"https://huggingface.co/CompVis/stable-diffusion-safety-checker\">safety classifier</a>; however, given its open-source nature, people can disable the classifier. Finally, artists have noted that with the right prompts the model is adept at mimicking their artistic style. This raises questions about the ethical and legal implications of an AI capable of imitating an artist.</p>",
                "radarId": 101,
                "id": "en_2022-10_202210052",
                "blip_selector": "stable-diffusion"
            },
            {
                "blip_id": 202210050,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Synthetic Data Vault",
                "display_name": "Synthetic Data Vault",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "353",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/sdv-dev/SDV\">Synthetic Data Vault (SDV)</a></strong> is a synthetic data generation ecosystem of libraries that can learn the distribution of a data set to generate synthetic data with the same format and statistical properties as the source. In the past, we talked about the downsides of using <a href=\"/radar/techniques/production-data-in-test-environments\">production data in test environments</a>. However, the nuances of data distribution in production can hardly be replicated manually, resulting in defects and surprises. We believe SDV and similar tools can address this gap by generating production-like data for <a href=\"https://sdv.dev/SDV/user_guides/single_table/index.html\">single-table</a>, <a href=\"https://sdv.dev/SDV/user_guides/relational/index.html\">complex multi-table</a> and <a href=\"https://sdv.dev/SDV/user_guides/timeseries/index.html\">multivariate timeseries</a> data. Although SDV isn't new, we quite like it and decided to highlight it.</p>",
                "radarId": 102,
                "id": "en_2022-10_202210050",
                "blip_selector": "synthetic-data-vault"
            },
            {
                "blip_id": 202210066,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Dragonfly",
                "display_name": "Dragonfly",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "204",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/dragonflydb/dragonfly\">Dragonfly</a></strong> is a new in-memory data store with compatible <a href=\"/radar/platforms/redis\">Redis</a> and Memcached APIs. It leverages the new Linux-specific <a href=\"https://github.com/axboe/liburing\">io_uring</a> API for I/O and implements <a href=\"https://dragonflydb.io/blog/2022/06/23/cache_design/\">novel algorithms and data structures</a> on top of a multithreaded, shared-nothing architecture. Because of these clever choices in implementation, Dragonfly achieves impressive results in performance. Although Redis continues to be our default choice for in-memory data store solutions, we do think Dragonfly is an interesting choice to assess.</p>",
                "radarId": 43,
                "id": "en_2022-10_202210066",
                "blip_selector": "dragonfly"
            },
            {
                "blip_id": 871,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Threat modeling",
                "display_name": "Threat modeling",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2022-10",
                "theta": "113",
                "tag": "refresh_writeup",
                "description": "<p>We continue to recommend that teams carry out <strong><a href=\"https://www.owasp.org/index.php/Category:Threat_Modeling\">threat modeling</a></strong> — a set of techniques to help you identify and classify potential threats during the development process — but we want to emphasize that this is not a one-off activity only done at the start of projects; teams need to avoid the <a href=\"/radar/techniques/security-sandwich\">security sandwich</a>. This is because throughout the lifetime of any software, new threats will emerge and existing ones will continue to evolve thanks to external events and ongoing changes to requirements and architecture. This means that threat modeling needs to be repeated periodically — the frequency of repetition will depend on the circumstances and will need to consider factors such as the cost of running the exercise and the potential risk to the business. When used in conjunction with other techniques, such as establishing cross-functional security requirements to address common risks in the project's technologies and using automated security scanners, threat modeling can be a powerful asset.</p>",
                "radarId": 3,
                "id": "en_2022-10_871",
                "blip_selector": "threat-modeling"
            },
            {
                "blip_id": 202203029,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Server-driven UI",
                "display_name": "Server-driven UI",
                "ring": "Assess",
                "blip_status": "move_out",
                "volume_date": "2022-10",
                "theta": "131",
                "tag": "move_out",
                "description": "<p><strong>Server-driven UI</strong> continues to be a hot topic of discussion in mobile circles because it offers the potential for developers to take advantage of faster change cycles without falling foul of an app store's policies around revalidation of the mobile app itself. Server-driven UI separates the rendering into a generic container in the mobile app while the structure and data for each view is provided by the server. This means that changes that once required a round trip to an app store can now be accomplished via simple changes to the responses the server sends. While some very large mobile app teams have had great success with this technique, it also requires a substantial investment in building and maintaining a complex proprietary framework. Such an investment requires a compelling business case. Until the case is made, it might be best to proceed with caution; indeed, we've experienced some horrendous, overly configurable messes that didn't actually deliver on the promised benefits. But with the backing of behemoths such as Airbnb and Lyft, we may very well see some useful frameworks emerge that help tame the complexity. Watch this space.</p>",
                "radarId": 19,
                "id": "en_2022-10_202203029",
                "blip_selector": "server-driven-ui"
            },
            {
                "blip_id": 202210033,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Observability for CI/CD pipelines",
                "display_name": "Observability for CI/CD pipelines",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "115",
                "tag": "new",
                "description": "<p>Observability practices have shifted the conversation from monitoring for well-understood problems to helping troubleshoot unknown problems in distributed systems. We've seen success taking that perspective outside of the traditional production environment by applying <strong>observability for CI/CD pipelines</strong> to help optimize testing and deployment bottlenecks. Complex pipelines create developer friction when they run too slow or suffer from nondeterminism, reducing important feedback loops and hindering developer effectiveness. Additionally, their role as critical deployment infrastructure creates stress points during periods of rapid deployments, as happened to several organizations responding to the recent log4shell vulnerability. The concept of traces translates nicely to pipelines: instead of capturing the cascade of service calls, child spans capture information about each stage of the build. The same waterfall charts used to analyze a call flow in a distributed architecture can also be effective in helping us to identify bottlenecks in pipelines, even complex ones with fan-in and fan-out. This enables far more focused optimization efforts. While the technique should work with any tracing tool, <a href=\"https://www.honeycomb.io/\">Honeycomb</a> supports a tool called <a href=\"https://github.com/honeycombio/buildevents\">buildevents</a> that helps capture pipeline trace information. An alternative approach of capturing information already exposed by CI/CD platforms, taken by the open-source <a href=\"https://github.com/cburgmer/buildviz\">buildviz</a> (built and maintained by a Thoughtworker), allows for a similar investigation without changing the step configurations themselves.</p>",
                "radarId": 11,
                "id": "en_2022-10_202210033",
                "blip_selector": "observability-for-ci-cd-pipelines"
            },
            {
                "blip_id": 202210084,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "42",
                "name": "Path-to-production mapping",
                "display_name": "Path-to-production mapping",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "145",
                "tag": "new",
                "description": "<p>Although <strong>path-to-production mapping</strong> has been a near-universal practice at Thoughtworks since codifying <em><a href=\"https://www.amazon.com/Continuous-Delivery-Deployment-Automation-Addison-Wesley/dp/0321601912\">Continuous Delivery</a></em>, we often come across organizations unfamiliar with the practice. The activity is most often done in a workshop with a cross-functional group of people —  that includes everyone involved in designing, developing, releasing and operating the software — around a shared whiteboard (or virtual equivalent). First, the steps in the process are listed in order, from the developer workstation all the way to production. Then, a facilitated session is used to capture further information and pain points. The most common technique we see is based on <a href=\"https://en.wikipedia.org/wiki/Value-stream_mapping\">value-stream mapping</a>, although plenty of <a href=\"https://caroli.org/en/path-to-production/\">process map</a> variants are equally valuable. The activity is often eye-opening for many of the participants, as they identify delays, risks and inconsistencies and continue to use the visual representation for the continuous improvement of the build and deploy process. We consider this technique so foundational that we were surprised to discover we hadn't blipped it before.</p>",
                "radarId": 1,
                "id": "en_2022-10_202210084",
                "blip_selector": "path-to-production-mapping"
            },
            {
                "blip_id": 202210005,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Teller",
                "display_name": "Teller",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "15",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/tellerops/teller\">Teller</a></strong> is an open-source universal secret manager for developers that ensures the correct environment variables are set when starting an application. However, it's not a vault itself — it's a CLI tool that connects to a variety of sources, ranging from cloud secrets providers to third-party solutions like <a href=\"/radar/tools/hashicorp-vault\">HashiCorp Vault</a> to local environment files. Teller has additional functionality to scan for vault-kept secrets in your code, to redact secrets from logs, to detect drift between secrets providers and to sync between them. Given the sensitivity of accessing secrets, we can't emphasize enough the need to secure the supply chain for open-source dependencies, but we appreciate how easy the CLI is to use in local development environments, CI/CD pipelines and deployment automation.</p>",
                "radarId": 74,
                "id": "en_2022-10_202210005",
                "blip_selector": "teller"
            },
            {
                "blip_id": 202210007,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Mizu",
                "display_name": "Mizu",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "30",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/up9inc/mizu/tree/main\">Mizu</a></strong> is an API traffic viewer for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Unlike other tools, Mizu does not require instrumentation or code changes. It runs as a <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\">DaemonSet</a> to inject a container at the node level in your Kubernetes cluster and performs tcpdump-like operations. We find it useful as a debugging tool, as it can observe all API communications across multiple protocols (REST, gRPC, <a href=\"/radar/platforms/apache-kafka\">Kafka</a>, AMQP and <a href=\"/radar/platforms/redis\">Redis</a>) in real time.</p>",
                "radarId": 72,
                "id": "en_2022-10_202210007",
                "blip_selector": "mizu"
            },
            {
                "blip_id": 202210055,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "BentoML",
                "display_name": "BentoML",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "289",
                "tag": "new",
                "description": "<p><a href=\"https://github.com/bentoml/BentoML\"><strong>BentoML</strong></a> is a python-first framework for serving machine-learning models in production at scale. The models it provides are agnostic of their environment; all model artifacts, source code and dependencies are encapsulated in a self-contained format called Bento. It's like having your model \"as a service.\" Think of BentoML as the <a href=\"/radar/platforms/docker\">Docker</a> for ML models: It generates VM images with pre-programmed APIs ready for deployment and includes features that make it easy to test these images. BentoML can help speed up the initial development effort by easing the start of projects which is why we included it in Assess.</p>",
                "radarId": 92,
                "id": "en_2022-10_202210055",
                "blip_selector": "bentoml"
            },
            {
                "blip_id": 202210063,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Carbon Aware SDK",
                "display_name": "Carbon Aware SDK",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "295",
                "tag": "new",
                "description": "<p>When looking at reducing the carbon footprint of an application — the carbon dioxide emissions caused indirectly by running the software — attention is usually directed at making the software more efficient. The thinking is clear: more efficient software needs less electricity and fewer servers, reducing the emissions from electricity generation and manufacturing of the servers. An additional strategy is to make the application <em>carbon aware</em>. This is because the same workload does not always have the same carbon footprint. For example, when run in a data center in a cooler climate, less power for air conditioning is needed; or, when run at a time when more renewable energy is available (more sunshine, stronger winds), less electricity from carbon-based  sources is required. With the <a href=\"https://github.com/Green-Software-Foundation/carbon-aware-sdk\"><strong>Carbon Aware SDK</strong></a>, software engineers can query data sources to discover less carbon-intensive options for a given workload and then move it to a different location or run it at a different time. This makes sense for large workloads that are neither time nor latency sensitive, such as training a machine-learning model. Although the SDK and available data sources are not very comprehensive yet, we believe it's time to start looking at how we can make our systems carbon aware.</p>",
                "radarId": 93,
                "id": "en_2022-10_202210063",
                "blip_selector": "carbon-aware-sdk"
            },
            {
                "blip_id": 202210047,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "Yjs",
                "display_name": "Yjs",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "347",
                "tag": "new",
                "description": "<p>Conflict-free replicated data type (CRDT) algorithms are proven to be able to automatically distribute and merge changes among peers without conflicts. But in practice, even for small enough data, these algorithms usually require a significant amount of memory to trace all the changes made by different peers, thus making them impractical. <strong><a href=\"https://yjs.dev/\">Yjs</a></strong> is a carefully optimized CRDT implementation that keeps memory consumption at a reasonable level for large data sets and millions of modifications. It also provides bindings for popular text editors, which greatly reduce the cost of building collaborative tools.</p>",
                "radarId": 82,
                "id": "en_2022-10_202210047",
                "blip_selector": "yjs"
            },
            {
                "blip_id": 202210040,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "OpenMetadata",
                "display_name": "OpenMetadata",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "253",
                "tag": "new",
                "description": "<p>Undoubtedly, <a href=\"/radar/techniques/data-discoverability\">data discoverability</a> has become a very important focal point for companies since it is an enabler for data to be shared and used efficiently by different people. We’ve included platforms such as <a href=\"/radar/platforms/datahub\">DataHub</a> and <a href=\"/radar/platforms/collibra\">Collibra</a> in previous editions of the Radar. However, our teams are constantly assessing options in this space and have recently shown interest in <strong><a href=\"https://github.com/open-metadata/OpenMetadata#what-is-openmetadata\">OpenMetadata</a></strong>, a platform dedicated to metadata management by using open standards. Our teams like this open-source platform because it improves the development experience due to its simple architecture, easy deployment with a focus on automation and strong focus on data discoverability.</p>",
                "radarId": 49,
                "id": "en_2022-10_202210040",
                "blip_selector": "openmetadata"
            },
            {
                "blip_id": 202210078,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Retool",
                "display_name": "Retool",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "246",
                "tag": "new",
                "description": "<p>In previous editions, we’ve recommended assessing <a href=\"/radar/techniques/bounded-low-code-platforms\">bounded low-code platforms</a> as a method for applying low-code solutions to specific use cases in very limited domains. We’ve seen some traction in this space, specifically with <a href=\"https://retool.com/\"><strong>Retool</strong></a>, a low-code platform that our teams use to build solutions for internal users, predominantly to query and visualize data. It allows them to produce non-business-critical read-only solutions faster. The main reported benefits of Retool are its UI components and its ability to be integrated quickly and easily with common data sources.</p>",
                "radarId": 37,
                "id": "en_2022-10_202210078",
                "blip_selector": "retool"
            },
            {
                "blip_id": 202010098,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "298",
                "name": "Verifiable credentials",
                "display_name": "Verifiable credentials",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2022-10",
                "theta": "99",
                "tag": "refresh_writeup",
                "description": "<p>When we first included it in the Radar two years ago, <strong>verifiable credentials</strong> (VC) was an intriguing standard with some promising potential applications, but it wasn't widely known or understood outside the community of enthusiasts. This was particularly true when it came to the credential-granting institutions, such as state governments, who would be responsible for implementing the standards. Two years and one pandemic later, the demand for cryptographically secure, privacy-respecting and machine-verifiable electronic credentials has grown and, as a result, governments are starting to wake up to VC's potential. We're now starting to see VC crop up in our work for public-sector clients. The <a href=\"https://www.w3.org/TR/vc-data-model/\">W3C standard</a> puts credential holders at the center, which is similar to our experience when using physical credentials: users can put their verifiable credentials in their own digital wallets and show them to anyone at any time without the permission of the credentials' issuer. This decentralized approach also enables users to better manage and selectively disclose their own information which greatly improves data privacy protection. For example, powered by zero-knowledge proof technology, you can construct a verifiable credential to prove that you're an adult without revealing your birthday. It’s important to note that although many VC-based <a href=\"/radar/techniques/decentralized-identity\">decentralized identity</a> solutions rely on blockchain technology, blockchain is not a prerequisite for all VC implementations.</p>",
                "radarId": 23,
                "id": "en_2022-10_202010098",
                "blip_selector": "verifiable-credentials"
            },
            {
                "blip_id": 202210075,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "AWS Database Migration Service",
                "display_name": "AWS Database Migration Service",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "186",
                "tag": "new",
                "description": "<p>Many of our teams have successfully used <strong><a href=\"https://aws.amazon.com/dms/\">AWS Database Migration Service</a></strong> (DMS) to migrate data to and from AWS. In one of our Digital Transformation engagements, we achieved nearly zero downtime cut-over to the new system as we migrated data from Microsoft SQL Server to an AWS Relational Database Service (RDS) PostgreSQL instance. Such transformations involve many moving parts that require planning and coordination across multidisciplinary teams, but for data migration we're quite happy with DMS. It automatically manages the deployment, management and monitoring of all required resources. Over the years DMS has matured to support several <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.html\">source</a> and <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.html\">target</a> databases, and we continue to like it.</p>",
                "radarId": 29,
                "id": "en_2022-10_202210075",
                "blip_selector": "aws-database-migration-service"
            },
            {
                "blip_id": 202210026,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "AWS Control Tower",
                "display_name": "AWS Control Tower",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "70",
                "tag": "new",
                "description": "<p>Multi-team account management is a challenge in AWS, especially in setup and governance; <a href=\"https://aws.amazon.com/controltower\"><strong>AWS Control Tower</strong></a> is an attempt to address this challenge. Our team has reported good results using it to manage accounts and access control for multiple teams in the organization through a single, centralized place.</p>",
                "radarId": 55,
                "id": "en_2022-10_202210026",
                "blip_selector": "aws-control-tower"
            },
            {
                "blip_id": 202203063,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "SLSA",
                "display_name": "SLSA",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "109",
                "tag": "move_in",
                "description": "<p>As software continues to grow in complexity, the threat vector of software dependencies becomes increasingly challenging to guard against. Supply chain Levels for Software Artifacts, or <strong><a href=\"https://slsa.dev/\">SLSA</a></strong> (pronounced \"salsa\"), is a consortium-curated set of guidance for organizations to protect against supply chain attacks, evolved from internal guidance Google has been using for years. We appreciate that SLSA doesn't promise a \"silver bullet,\" tools-only approach to securing the supply chain, but it does provide a checklist of concrete threats and practices along a maturity model. The <a href=\"https://slsa.dev/spec/v0.1/threats\">threat model</a> is easy to follow with real-world examples of attacks, and the <a href=\"https://slsa.dev/spec/v0.1/requirements\">requirements</a> provide guidance to help organizations prioritize actions based on levels of increasing robustness to improve their supply chain security posture. Since we first mentioned it in the Radar, SLSA has added more detail around <a href=\"https://slsa.dev/attestation-model\">software attestations</a> with examples to track concerns like <a href=\"https://slsa.dev/provenance/v0.2\">build provenance</a>. Our teams have found SLSA to strike a nice balance between implementation guidance and higher-level awareness around supply chain threats.</p>",
                "radarId": 12,
                "id": "en_2022-10_202203063",
                "blip_selector": "slsa"
            },
            {
                "blip_id": 202005111,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "230",
                "name": "eBPF",
                "display_name": "eBPF",
                "ring": "Trial",
                "blip_status": "c",
                "volume_date": "2022-10",
                "theta": "221",
                "tag": "refresh_writeup",
                "description": "<p>For several years now, the Linux kernel has included the extended Berkeley Packet Filter (<strong><a href=\"https://ebpf.io/\">eBPF</a></strong>), a virtual machine that provides the ability to attach filters to particular sockets. But eBPF goes far beyond packet filtering and allows custom scripts to be triggered at various points within the kernel with very little overhead. By allowing you to run sandboxed programs within the operating system kernel, application developers can run eBPF programs to add additional capabilities to the operating system at run time. Some of our projects require troubleshooting and profiling at the system call level, and our teams found that tools like <a href=\"https://github.com/iovisor/bcc\">bcc</a> and <a href=\"https://github.com/iovisor/bpftrace\">bpftrace</a> have made their jobs easier. Observability and network infrastructure also benefit from eBPF — for example, the <a href=\"/radar/tools/cilium\">Cilium</a> project can implement traffic load balancing and observability <a href=\"/radar/techniques/service-mesh-without-sidecar\">without sidecar overhead</a> in <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>, and <a href=\"https://github.com/cilium/hubble\">Hubble</a> provides further security and traffic observability on top of it. The <a href=\"https://github.com/falcosecurity/falco\">Falco</a> project uses eBPF for security monitoring, and the <a href=\"https://github.com/facebookincubator/katran\">Katran</a> project uses eBPF to build more efficient L4 load balancing. The eBPF community is growing rapidly, and we're seeing more and more synergy with the field of observability.</p>",
                "radarId": 34,
                "id": "en_2022-10_202005111",
                "blip_selector": "ebpf"
            },
            {
                "blip_id": 202210031,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Local-first application",
                "display_name": "Local-first application",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "148",
                "tag": "new",
                "description": "<p>In a centralized application, the data on the server is the single source of truth — any modification to the data must go through the server. Local data is subordinate to the server version. This seems like a natural and inevitable choice to enable collaboration among multiple users of the software. <strong>Local-first application</strong>, or <a href=\"https://www.inkandswitch.com/local-first/#towards-a-better-future\">local-first software</a>, is a set of principles that enables both collaboration and local data ownership. It prioritizes the use of local storage and local networks over servers in remote data centers or the cloud. Techniques like conflict-free replicated data types (CRDTs) and peer-to-peer (P2P) networks have the potential to be a foundational technology for realizing local-first software.</p>",
                "radarId": 17,
                "id": "en_2022-10_202210031",
                "blip_selector": "local-first-application"
            },
            {
                "blip_id": 202210059,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Moshi",
                "display_name": "Moshi",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "337",
                "tag": "new",
                "description": "<p>We're hearing that our <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a>-based teams are seeking alternatives to Java frameworks such as GSON when handling JSON. Although it's been around for some time, <strong><a href=\"https://github.com/square/moshi\">Moshi</a></strong> has now emerged as a preferred framework for many of these teams. It's easy to migrate from GSON and Moshi provides native support for Kotlin non-nullable types and default parameters. Moshi makes working with JSON faster and easier. If you're currently using a Java framework from within Kotlin to handle JSON, we recommend giving Moshi a try.</p>",
                "radarId": 88,
                "id": "en_2022-10_202210059",
                "blip_selector": "moshi"
            },
            {
                "blip_id": 202203036,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Excalidraw",
                "display_name": "Excalidraw",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "53",
                "tag": "move_in",
                "description": "<p>We continue to hear enthusiastic reports about <strong><a href=\"https://excalidraw.com/\">Excalidraw</a></strong> from our teams, but our previous caveat about security remains in place. Excalidraw is a simple yet powerful online drawing tool. Sometimes teams just need a quick picture instead of a formal diagram; for remote teams, Excalidraw provides a quick way to create and share diagrams. Our teams also like the \"lo-fi\" look of the diagrams it can produce, which is reminiscent of the whiteboard diagrams they would have produced when co-located. Regarding security, at the time of writing, anyone who has the link can see your diagrams; note, though, that the paid version of Excalidraw provides further authentication and options to run a server locally do exist.</p>",
                "radarId": 58,
                "id": "en_2022-10_202203036",
                "blip_selector": "excalidraw"
            },
            {
                "blip_id": 202203002,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Jetpack Media3",
                "display_name": "Jetpack Media3",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "315",
                "tag": "move_in",
                "description": "<p>Android had several media APIs: Jetpack Media, also known as MediaCompat, Jetpack Media2 and ExoPlayer. Unfortunately, these libraries were developed independently, with different goals but overlapping functionality. Android developers not only had to choose which library to use, they also had to contend with writing adaptors or other connecting code when features from multiple APIs were needed. <a href=\"https://developer.android.com/jetpack/androidx/releases/media3\"><strong>Jetpack Media3</strong></a> is an API that takes common areas of functionality from the existing APIs — including UI, playback and media session handling — and combines them into a merged and refined API. The player interface from ExoPlayer has also been updated, enhanced and streamlined to act as the common player interface for Media3. After an early access phase, Media3 is now in beta. Although its first release is forthcoming, we've already had positive experiences using it in apps.</p>",
                "radarId": 86,
                "id": "en_2022-10_202203002",
                "blip_selector": "jetpack-media3"
            },
            {
                "blip_id": 202010103,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "io-ts",
                "display_name": "io-ts",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "282",
                "tag": "move_in",
                "description": "<p>Our teams developing in <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> are finding <strong><a href=\"https://gcanti.github.io/io-ts/\">io-ts</a></strong> invaluable, especially when interacting with APIs that ultimately result in the creation of objects with specific types. When working with TypeScript, getting data into the bounds of the type system (i.e., from the aforementioned APIs) can lead to run-time errors that can be hard to find and debug. io-ts bridges the gap between compile-time type checking and run-time consumption of external data by providing encode and decode functions. Given the experiences of our teams and the elegance of its approach, we think io-ts is worth adopting.</p>",
                "radarId": 77,
                "id": "en_2022-10_202010103",
                "blip_selector": "io-ts"
            },
            {
                "blip_id": 202210057,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Astro",
                "display_name": "Astro",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "282",
                "tag": "new",
                "description": "<p>It's hard to believe, but in 2022, the developer community continues to pump out interesting new frameworks for building web applications. <strong><a href=\"https://astro.build/\">Astro</a></strong> is a recent, open-source, multi-page application framework that renders HTML on the server and minimizes the amount of JavaScript sent over the wire. Astro seems particularly well-suited to content-oriented websites that pull from many different sources. We like the fact that although Astro encourages sending only HTML, it still supports — when appropriate — select active components written in the front-end JavaScript framework of your choice. It does this through its <a href=\"https://mainawycliffe.dev/blog/island-architecture/\">island architecture</a>. Islands are regions of interactivity within a single page where the necessary JavaScript is downloaded only when needed. Astro is relatively new but seems to support a growing ecosystem of developers and code. It's one to watch as it develops.</p>",
                "radarId": 91,
                "id": "en_2022-10_202210057",
                "blip_selector": "astro"
            },
            {
                "blip_id": 202210071,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Bun",
                "display_name": "Bun",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "188",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/oven-sh/bun\">Bun</a></strong> is a new JavaScript runtime, similar to <a href=\"/radar/platforms/node-js\">Node.js</a> or <a href=\"/radar/platforms/deno\">Deno</a>. Unlike Node.js or Deno, however, Bun is built using WebKit's JavaScriptCore instead of Chrome's V8 engine. Designed as a drop-in replacement for Node.js, Bun is a single binary (written in <a href=\"/radar/languages-and-frameworks/zig\">Zig</a>) that acts as a bundler, transpiler and package manager for JavaScript and <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a> applications. Bun is currently in beta, so expect bugs or compatibility issues with a few Node.js libraries. However, it’s been built from the ground up with several optimizations, including fast startup and improved server-side rendering, and we believe it’s worthwhile to assess.</p>",
                "radarId": 41,
                "id": "en_2022-10_202210071",
                "blip_selector": "bun"
            },
            {
                "blip_id": 202210082,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "185",
                "name": "Component visual regression testing",
                "display_name": "Component visual regression testing",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "164",
                "tag": "new",
                "description": "<p><a href=\"/radar/tools/visual-regression-testing-tools\">Visual regression testing</a> is a useful and powerful tool to have in your toolbox, but it has a significant cost given it's done for the entire page. With the rise of component-based frameworks such as <a href=\"/radar/languages-and-frameworks/react-js\">React</a> and <a href=\"/radar/languages-and-frameworks/vue-js\">Vue</a>, we've also seen the rise of <strong>component visual regression testing</strong>. This technique strikes a good balance between value and cost to ensure that no undesired visuals have been added to the application. In our experience, component visual regression testing presents fewer false positives and promotes a good architectural style. By using it with tools such as <a href=\"https://github.com/vitejs/vite\">Vite</a> and the webpack feature <a href=\"https://webpack.js.org/guides/hot-module-replacement/\">Hot Module Replacement (HMR)</a>, it could be seen as a paradigm shift for applying test-driven development to front-end development.</p>",
                "radarId": 5,
                "id": "en_2022-10_202210082",
                "blip_selector": "component-visual-regression-testing"
            },
            {
                "blip_id": 202210028,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Metrics store",
                "display_name": "Metrics store",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "140",
                "tag": "new",
                "description": "<p><strong><a href=\"https://blog.transform.co/data-talks/what-is-a-metrics-store-why-your-data-team-should-define-business-metrics-in-code/\">Metrics store</a></strong>, sometimes referred to as headless business intelligence (BI), is a layer that decouples metrics definitions from their usage in reports and visualizations. Traditionally, metrics are defined inside the context of BI tools, but this approach leads to duplication and inconsistencies as different teams use them in different contexts. By decoupling the definition in the metrics store, we get clear and consistent reuse across BI reports, visualizations and even embedded analytics. This technique is not new; for example, Airbnb introduced <a href=\"https://medium.com/airbnb-engineering/airbnb-metric-computation-with-minerva-part-2-9afe6695b486\">Minerva</a> a year ago. However, we're now seeing considerable traction in the data and analytics ecosystem with more tools supporting metrics stores out of the box.</p>",
                "radarId": 18,
                "id": "en_2022-10_202210028",
                "blip_selector": "metrics-store"
            },
            {
                "blip_id": 202210043,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "VictoriaMetrics",
                "display_name": "VictoriaMetrics",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "265",
                "tag": "new",
                "description": "<p>Modern observability relies on collecting and aggregating an exhaustive set of granular metrics to fully understand, predict and analyze system behavior. But when applied to a cloud native system composed of many redundant and cooperating processes and hosts, the cardinality (or number of unique time series) becomes unwieldy because it grows exponentially with each additional service, container, node, cluster, etc. When dealing with high-cardinality data, we've found that <a href=\"https://victoriametrics.com/\"><strong>VictoriaMetrics</strong></a> performs well. VictoriaMetrics is particularly useful for operating <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>-hosted <a href=\"/radar/techniques/microservices\">microservice</a> architectures, and the VictoriaMetrics operator makes it easy for teams to implement their own monitoring in a self-service way. We also like its componentized architecture and ability to continue collecting metrics even when the central server is unavailable. Although our team has been happy with VictoriaMetrics, this is a rapidly evolving area, and we'd recommend keeping an eye on other high-performance, <a href=\"/radar/tools/prometheus\">Prometheus</a>-compatible time series databases such as <a href=\"https://cortexmetrics.io/\">Cortex</a> or <a href=\"https://thanos.io/\">Thanos</a>.</p>",
                "radarId": 40,
                "id": "en_2022-10_202210043",
                "blip_selector": "victoriametrics"
            },
            {
                "blip_id": 202010078,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "65",
                "name": "k6",
                "display_name": "k6",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "30",
                "tag": "move_in",
                "description": "<p>Since we first mentioned it in the Radar, <a href=\"https://k6.io/\"><strong>k6</strong></a> has become a go-to tool for performance testing. We continue to be fans of how easy it is to write JavaScript code for tests, but k6 also has a low-code <a href=\"https://k6.io/docs/test-authoring/test-builder\">test builder</a> to make playing with the tool even easier. The documentation shows how easy it is to add performance testing to a pipeline across <a href=\"https://k6.io/docs/integrations/#continuous-integration-and-continuous-delivery\">multiple CI/CD tools</a>. Our teams find it easy to integrate <a href=\"https://k6.io/docs/integrations/#result-store-and-visualization\">visualization tools</a> like <a href=\"/radar/tools/grafana\">Grafana</a> and New Relic, which help them tune both infrastructure and applications. The developer friendliness and ecosystem make k6 a compelling option for investigating a system's behavior under heavy load.</p>",
                "radarId": 52,
                "id": "en_2022-10_202010078",
                "blip_selector": "k6"
            },
            {
                "blip_id": 201911023,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "45",
                "name": "NestJS",
                "display_name": "NestJS",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "300",
                "tag": "move_in",
                "description": "<p>In the past, we've cautioned about <a href=\"/radar/platforms/node-overload\">Node overload</a>, and we're still cautious about the reasons to choose it. However, in scenarios where Node.js is required to build back-end applications, our teams are reporting that <strong><a href=\"https://nestjs.com/\">NestJS</a></strong> is a suitable option to enable developers to create testable, scalable, loosely coupled and easily maintainable applications in enterprises. NestJS is a <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>-first framework that makes the development of Node.js applications safer and less error-prone. NestJS is opinionated and comes with SOLID principles and an <a href=\"/radar/languages-and-frameworks/angular\">Angular</a>-inspired architecture out of the box.</p>",
                "radarId": 79,
                "id": "en_2022-10_201911023",
                "blip_selector": "nestjs"
            },
            {
                "blip_id": 202210009,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "298",
                "name": "Clasp",
                "display_name": "Clasp",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "83",
                "tag": "new",
                "description": "<p>Unfortunately, a big part of the world still runs on spreadsheets and will continue to do so. They're the ultimate tool to let anyone build those small custom tools tailored to their exact needs. However, when you want to enhance them with a level of logic that requires \"real\" code, the low-code nature of spreadsheets can then become a constraint. If you're with a company that, like Thoughtworks, uses Google's G-Suite, <strong><a href=\"https://github.com/google/clasp\">Clasp</a></strong> enables you to apply at least some <a href=\"/radar/techniques/continuous-delivery-cd\">Continuous Delivery</a> practices to Apps Script code. You can write the code outside of the Apps Script project, which creates options for testing, source control and build pipelines; it even lets you use <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>. Clasp has been around for a while, and you shouldn’t expect a programming environment with all of the usual comforts, but it can greatly improve the experience of using Apps Script.</p>",
                "radarId": 65,
                "id": "en_2022-10_202210009",
                "blip_selector": "clasp"
            },
            {
                "blip_id": 202203007,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "75",
                "name": "Swift Package Manager",
                "display_name": "Swift Package Manager",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "334",
                "tag": "move_in",
                "description": "<p>When introduced in 2014, Swift didn't come with a package manager. Later, <strong><a href=\"https://github.com/apple/swift-package-manager\">Swift Package Manager</a></strong> was created as an official Apple open-source project, and this solution has continued to develop and mature. Our teams rely increasingly on SwiftPM because most packages can be included through it and the processes for both creators and consumers of packages have been streamlined. In the previous Radar, we recommended trialing, but we now believe it makes sense to select it as the default when starting new projects. For existing projects using tools like CocoaPods or <a href=\"/radar/tools/carthage\">Carthage</a>, it might be worth a quick experiment to gauge the level of effort to migrate and to check whether all dependencies are available.</p>",
                "radarId": 81,
                "id": "en_2022-10_202203007",
                "blip_selector": "swift-package-manager"
            },
            {
                "blip_id": 202210017,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Styra Declarative Authorization Service",
                "display_name": "Styra Declarative Authorization Service",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "16",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.styra.com/styra-das/\">Styra Declarative Authorization Service</a></strong> (DAS) is a governance and automation tool for managing <a href=\"/radar/tools/open-policy-agent-opa\">Open Policy Agent (OPA)</a> at scale. Built by the creators of OPA, the tool allows us to deploy policies across \"systems,\" including <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> clusters, infrastructure code repositories, namespaces and more. Most importantly, it allows for real-time analysis of decisions made by an OPA agent, along with replayability for debugging and investigating what-if scenarios for policy changes. It also comes with an audit log that can help security teams with historical reporting.</p>",
                "radarId": 63,
                "id": "en_2022-10_202210017",
                "blip_selector": "styra-declarative-authorization-service"
            },
            {
                "blip_id": 202110089,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "45",
                "name": "React Query",
                "display_name": "React Query",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "338",
                "tag": "move_in",
                "description": "<p><a href=\"https://react-query-v3.tanstack.com/\"><strong>React Query</strong></a> is often described as the missing data-fetching library for <a href=\"/radar/languages-and-frameworks/react-js\">React</a>. Fetching, caching, synchronizing and updating server state is a common requirement in many React applications, and although the requirements are well understood, getting the implementation right is notoriously difficult. React Query provides a straightforward solution using hooks. It works hand-in-hand with existing async data-fetching libraries like <a href=\"/radar/tools/axios\">axios</a>, <a href=\"/radar/languages-and-frameworks/fetch\">Fetch</a> and <a href=\"/radar/languages-and-frameworks/graphql\">GraphQL</a> since they are built on promises. As an application developer, you simply pass a function that resolves your data and leave everything else to the framework. We like that it works out of the box but still offers a lot of configuration when needed. The developer tools, unfortunately not yet available for <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a>, also help developers new to the framework understand how it works. For React Native, you can use a <a href=\"https://github.com/bgaleotti/react-query-native-devtools\">third-party developer tools plugin</a> utilizing <a href=\"/radar/tools/flipper\">Flipper</a>. In our experience, version 3 of React Query brought the stability needed to be used in production with our clients.</p>",
                "radarId": 80,
                "id": "en_2022-10_202110089",
                "blip_selector": "react-query"
            },
            {
                "blip_id": 202203006,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "385",
                "name": "SPA by default",
                "display_name": "SPA by default",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2022-10",
                "theta": "135",
                "tag": "refresh_writeup",
                "description": "<p>The prevalence of teams choosing a single-page application (SPA) when they need a website continues. We remain concerned that people aren't properly recognizing SPAs as an architectural style to begin with; instead they're immediately jumping into framework selection. SPAs incur complexity that simply doesn't exist with traditional server-based websites: issues such as search engine optimization, browser history management, web analytics and first page load time all need to be addressed. Proper analysis and consideration of the trade-offs is required to determine if that complexity is warranted for business or user experience reasons. Too often teams are skipping that trade-off analysis, blindly accepting the complexity of <strong>SPAs by default</strong> even when business needs don't justify it. We still see some developers who aren't aware of an alternative approach because they've spent their entire career in a framework like React. We believe that many websites will benefit from the simplicity of server-side logic, and we're encouraged by techniques like <a href=\"/radar/techniques/hotwire\">Hotwire</a> that help close the gap on user experience.</p>",
                "radarId": 25,
                "id": "en_2022-10_202203006",
                "blip_selector": "spa-by-default"
            },
            {
                "blip_id": 202210067,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "IAM Roles Anywhere",
                "display_name": "IAM Roles Anywhere",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "237",
                "tag": "new",
                "description": "<p><strong><a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/userguide/introduction.html\">IAM Roles Anywhere</a></strong> is a new service from AWS that lets you obtain temporary security credentials in IAM for workloads such as servers, containers and applications that run outside of AWS. We find it particularly useful in hybrid cloud setups where workloads are split across AWS and non-AWS resources. Instead of creating long-lived credentials, with IAM Roles Anywhere, you can now create short-lived credentials to access AWS resources using X.509 certificates. We believe this approach streamlines the access pattern across the hybrid cloud and recommend you check it out.</p>",
                "radarId": 47,
                "id": "en_2022-10_202210067",
                "blip_selector": "iam-roles-anywhere"
            },
            {
                "blip_id": 202210070,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "325",
                "name": "Gradient",
                "display_name": "Gradient",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "229",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.paperspace.com/gradient\">Gradient</a></strong> is a platform for building, deploying and running machine-learning applications, very similar to Google's Colab. Notebooks can be created from templates, helping you to get started with <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a> or <a href=\"/radar/languages-and-frameworks/tensorflow\">TensorFlow</a> or with applications like <a href=\"/radar/languages-and-frameworks/stable-diffusion\">Stable Diffusion</a>. In our experience, Gradient is well-suited for GPU-intensive models, and we like that the web-based environment is persistent.</p>",
                "radarId": 46,
                "id": "en_2022-10_202210070",
                "blip_selector": "gradient"
            },
            {
                "blip_id": 202210013,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Karpenter",
                "display_name": "Karpenter",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "38",
                "tag": "new",
                "description": "<p>One of the fundamental capabilities of <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> is its ability to automatically launch new pods when additional capacity is needed and shut them down when loads decrease. This horizontal autoscaling is a useful feature, but it can only work if the nodes needed to host the pods already exist. While <a href=\"https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler\">Cluster Autoscaler</a> can do some rudimentary cluster expansion triggered by pod failures, it has limited flexibility; <strong><a href=\"https://karpenter.sh/\">Karpenter</a></strong>, however, is an open-source <a href=\"/radar/tools/kubernetes-operators\">Kubernetes Operator</a> autoscaler with more smarts built in: it analyzes the current workloads and the pod scheduling constraints to automatically select an appropriate instance type and then start or stop it as needed. Karpenter is an operator in the spirit of tools like <a href=\"/radar/tools/crossplane\">Crossplane</a> that can provision cloud resources outside the cluster. Karpenter is an attractive companion to the autoscaling services cloud vendors provide natively with their managed Kubernetes clusters. For example, AWS now supports Karpenter as a first-class alternative in their EKS Cluster Autoscaler service.</p>",
                "radarId": 71,
                "id": "en_2022-10_202210013",
                "blip_selector": "karpenter"
            },
            {
                "blip_id": 202210076,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Monte Carlo",
                "display_name": "Monte Carlo",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "235",
                "tag": "new",
                "description": "<p><strong><a href=\"https://www.montecarlodata.com/\">Monte Carlo</a></strong> is a data observability platform. Using machine learning models, it infers and learns about data, identifying issues and notifying users when they arise. It allows our teams to maintain data quality across ETL pipelines, data lakes, data warehouses and business intelligence (BI) reports. With features such as monitoring dashboards as code, a central data catalog and field-level lineage, our teams find Monte Carlo to be an invaluable tool for overall data governance.</p>",
                "radarId": 36,
                "id": "en_2022-10_202210076",
                "blip_selector": "monte-carlo"
            },
            {
                "blip_id": 202010076,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "85",
                "name": "Great Expectations",
                "display_name": "Great Expectations",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "60",
                "tag": "move_in",
                "description": "<p><a href=\"https://docs.greatexpectations.io/en/latest/\"><strong>Great Expectations</strong></a> has become a sensible default for our teams in the data quality space, which is why we recommend adopting it — not only for the lack of better alternatives but also because our teams have reported great results in several client projects. Great Expectations is a framework that allows you to craft built-in controls that flag anomalies or quality issues in data pipelines. Just as unit tests run in a build pipeline, Great Expectations makes assertions during the execution of a data pipeline. We like its simplicity and ease of use — the rules stored in JSON can be modified by our data domain experts without necessarily needing data engineering skills.</p>",
                "radarId": 51,
                "id": "en_2022-10_202010076",
                "blip_selector": "great-expectations"
            },
            {
                "blip_id": 202005098,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Apache Superset",
                "display_name": "Apache Superset",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "84",
                "tag": "move_in",
                "description": "<p><strong><a href=\"https://superset.apache.org/\">Apache Superset</a></strong> is a great business intelligence (BI) tool for data exploration and visualization to work with large data lake and data warehouse setups. It supports several <a href=\"https://superset.apache.org/docs/databases/installing-database-drivers\">data sources</a> — including AWS Redshift, <a href=\"/radar/platforms/bigquery\">BigQuery</a>, Azure MS SQL, <a href=\"/radar/platforms/snowflake\">Snowflake</a> and <a href=\"/radar/platforms/clickhouse\">ClickHouse</a>. Moreover, you don't have to be a data engineer to use it; it's meant to benefit all engineers exploring data in their everyday work. For demanding use cases, we found it easy to scale Superset by deploying it in a <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> cluster. Since we last talked about it in the Radar, Superset has graduated as an Apache product, and we've seen great success in several projects.</p>",
                "radarId": 53,
                "id": "en_2022-10_202005098",
                "blip_selector": "apache-superset"
            },
            {
                "blip_id": 202210006,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "Databricks Overwatch",
                "display_name": "Databricks Overwatch",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "75",
                "tag": "new",
                "description": "<p><strong><a href=\"https://databrickslabs.github.io/overwatch/\">Databricks Overwatch</a></strong> is a Databricks Labs project that enables teams to analyze various operational metrics of Databricks workloads around cost, governance and performance with support to run what-if experiments. It's essentially a set of data pipelines that populate tables in Databricks, which can then be analyzed using tools like notebooks. Overwatch is very much a power tool; however, it's still in its early stages and it may take some effort to set it up — our use of it required Databricks solution architects to help set it up and populate a price reference table for cost calculations — but we expect adoption to get easier over time. The level of analysis made possible by Overwatch is deeper than what is allowed by cloud providers' cost analysis tools. For example, we were able to analyze the cost of job failures — recognizing that failing fast saves money compared to jobs that only fail near the final step — and break down the cost by various groupings (workspace, cluster, job, notebook, team). We also appreciated the improved operational visibility, as we could easily audit access controls around cluster configurations and analyze operational metrics like finding the longest running notebook or largest read/write volume. Overwatch can analyze historical data, but its real-time mode allows for alerting which helps you to add appropriate controls to your Databricks workloads.</p>",
                "radarId": 66,
                "id": "en_2022-10_202210006",
                "blip_selector": "databricks-overwatch"
            },
            {
                "blip_id": 202210025,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "xbar for build monitoring",
                "display_name": "xbar for build monitoring",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "7",
                "tag": "new",
                "description": "<p>On remote teams, we sorely lack having a <a href=\"https://martinfowler.com/articles/continuousIntegration.html#EveryoneCanSeeWhatsHappening\">dedicated build monitor</a> in the room; unfortunately, newer continuous integration (CI) tools lack support for the old <a href=\"https://cctray.org/v1/\">CCTray</a> format. The result is that broken builds aren't always picked up as quickly as we'd like. To solve this problem, many of our teams have started using <strong><a href=\"https://github.com/matryer/xbar\">xbar</a> for build monitoring</strong>. With xbar, one can execute a script to poll build status, displaying it on the menu bar. It can be further scripted to track other team metrics such as pending credential expiries or how far the production release lags behind the user acceptance testing (UAT) release. Of course, xbar is more general purpose, but it solves an immediate and emergent problem caused by remote working. <a href=\"https://github.com/jaredks/rumps\">Rumps</a>, among other tools, can solve the same problem.</p>",
                "radarId": 64,
                "id": "en_2022-10_202210025",
                "blip_selector": "xbar-for-build-monitoring"
            },
            {
                "blip_id": 202210027,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "SLIs and SLOs as code",
                "display_name": "SLIs and SLOs as code",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "123",
                "tag": "new",
                "description": "<p>Since Google first popularized service-level indicators (SLIs) and service-level objectives (SLOs) as part of their site reliability engineering (SRE) practice, observability tools like <a href=\"https://docs.datadoghq.com/monitors/service_level_objectives/\">Datadog</a>, <a href=\"https://www.honeycomb.io/slos\">Honeycomb</a> and <a href=\"https://www.dynatrace.com/news/blog/what-are-slos/\">Dynatrace</a> started incorporating SLO monitoring into their toolchains. <a href=\"https://github.com/OpenSLO/OpenSLO\">OpenSLO</a> is an emerging standard that allows defining <strong>SLIs and SLOs as code</strong>, using a declarative, vendor-neutral specification language based on the YAML format used by <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. While the standard is still quite new, we're seeing some encouraging momentum, as with Sumo Logic's contribution of the <a href=\"https://github.com/OpenSLO/slogen\">slogen</a> tool to generate monitoring and dashboards. We're excited by the promise of versioning SLI and SLO definitions in code and updating observability tooling as part of the CI/CD pipeline of the service being deployed.</p>",
                "radarId": 20,
                "id": "en_2022-10_202210027",
                "blip_selector": "slis-and-slos-as-code"
            },
            {
                "blip_id": 202210014,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Online services for formatting or parsing code",
                "display_name": "Online services for formatting or parsing code",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "45",
                "tag": "new",
                "description": "<p>We previously called out <a href=\"/radar/techniques/production-data-in-test-environments\">production data in test environments</a> and now want to highlight another common practice that needs to be approached with care or even stopped entirely: <strong>online services for formatting or parsing code</strong>. There are many useful sites for formatting or parsing formats such as JSON and YAML, as well as sites that assess code tutorials or produce online code metrics. Great care is needed when using these. Pasting a block of JavaScript, JSON or similar into an unknown website can easily create security and privacy issues and might unknowingly export personal data into a different jurisdiction. These sites should never be used with production data and should be approached with caution in all other circumstances.</p>",
                "radarId": 76,
                "id": "en_2022-10_202210014",
                "blip_selector": "online-services-for-formatting-or-parsing-code"
            },
            {
                "blip_id": 202104127,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "85",
                "name": "Team cognitive load",
                "display_name": "Team cognitive load",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "135",
                "tag": "move_in",
                "description": "<p>Team interaction is a key concept when redesigning an organization for business agility and speed. These interactions will be reflected in the software being built (see <a href=\"https://www.thoughtworks.com/about-us/news/2021/latest-thoughtworks-technology-radar-proclaims---embrace-conway-\">Conway's Law</a>) and indicate how effectively teams can autonomously deliver value to their customers. Our advice is to be intentional about how teams are designed and how they interact. Because we believe that organizational design and team interactions evolve over time, we think it's particularly important to measure and keep track of the <strong>team cognitive load</strong>, which indicates how easy or difficult teams find building, testing and maintaining their services. We've been using a <a href=\"https://github.com/TeamTopologies/Team-Cognitive-Load-Assessment\">template</a> to assess team cognitive load that is based on ideas by the authors of the <em><a href=\"https://teamtopologies.com/book\">Team Topologies</a></em> book.</p>\n\n<p>We continue to be impressed by the positive impact of applying this book's concepts when communicating to clients and redesigning organizations. The authors recommend a simple but powerful approach to organizational design, identifying just four types of teams and three modes of interaction; this helps reduce ambiguity within the organization and provides a common vocabulary for teams, stakeholders and leadership to describe and design a team's work. To implement an org design change, we design the ideal to-be team topologies structure, apply any technical/staffing constraints (i.e., not enough employees) and then end up with the final to-be structure. That allows us to better advise clients and anticipate whether we're indeed improving cognitive load by comparing the as-is/to-be team structures.</p>",
                "radarId": 2,
                "id": "en_2022-10_202104127",
                "blip_selector": "team-cognitive-load"
            },
            {
                "blip_id": 202210072,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Edge Impulse",
                "display_name": "Edge Impulse",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "212",
                "tag": "new",
                "description": "<p>In previous Radars, we've written about <a href=\"/radar/techniques/tinyml\">TinyML</a> — the practice of running trained models on small devices with onboard sensors to make decisions or extract features without a roundtrip to the cloud. <a href=\"https://www.edgeimpulse.com/\"><strong>Edge Impulse</strong></a> has made the process of collecting sensor data and then training and deploying a model as simple as possible. Edge Impulse is an end-to-end hosted platform for developing models optimized to run on small edge devices such as microcontrollers. The platform guides the developer through the entire pipeline, including the task of collecting and labeling training data. They've made it easy to get started using your mobile phone for both data collection and running the classifier while the model training and refining happens in the more powerful, cloud-hosted environment. The resulting recognition algorithms can also be optimized, compiled and uploaded to a wide range of microcontroller architectures. Although Edge Impulse is a commercial venture, the platform is free for developers and makes the entire process fun and engaging even for those who are new to machine learning. The low barrier of entry to creating a working application means that we'll be seeing more edge devices with smart decisioning built in.</p>",
                "radarId": 44,
                "id": "en_2022-10_202210072",
                "blip_selector": "edge-impulse"
            },
            {
                "blip_id": 202210049,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Million",
                "display_name": "Million",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "334",
                "tag": "new",
                "description": "<p><strong><a href=\"https://github.com/aidenybai/million\">Million</a></strong> is a new virtual DOM JavaScript library. Similar to <a href=\"/radar/languages-and-frameworks/svelte\">Svelte</a>, it leverages the compiler, <a href=\"/radar/tools/vite\">Vite</a>, to create small JavaScript bundles with exceptional rendering performance. The Million library ships as a single NPM package with several modules — including <a href=\"https://github.com/aidenybai/million/tree/main/packages/router\">router</a>, <a href=\"https://github.com/aidenybai/million/tree/main/packages/jsx-runtime\">jsx-runtime</a> and a module for <a href=\"https://github.com/aidenybai/million/tree/main/packages/react\">React compatibility</a> to create single-page applications. Although <a href=\"/radar/languages-and-frameworks/react-js\">React</a> popularized the virtual DOM a decade ago, it's fascinating to see new innovations in this space.</p>",
                "radarId": 99,
                "id": "en_2022-10_202210049",
                "blip_selector": "million"
            },
            {
                "blip_id": 202210045,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Cypress Component Testing",
                "display_name": "Cypress Component Testing",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "321",
                "tag": "new",
                "description": "<p><a href=\"https://docs.cypress.io/guides/component-testing/writing-your-first-component-test\"><strong>Cypress Component Testing</strong></a> provides a testable component workbench to quickly build and test UI components. You can write component visual regression tests with the same API that you write end-to-end (E2E) UI tests. Although still in beta, component testing will be the most important feature in <a href=\"/radar/tools/cypress\">Cypress</a> 10.</p>",
                "radarId": 97,
                "id": "en_2022-10_202210045",
                "blip_selector": "cypress-component-testing"
            },
            {
                "blip_id": 202203042,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Azure Bicep",
                "display_name": "Azure Bicep",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "281",
                "tag": "move_in",
                "description": "<p>For those who prefer a more natural language than JSON for infrastructure code, <strong><a href=\"https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/overview?tabs=bicep\">Azure Bicep</a></strong> is a domain-specific language (DSL) that uses a declarative syntax and supports reusable parameterized templates for modular resource definitions. A <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-bicep\">Visual Studio Code extension</a> provides instant type safety, intellisense and syntax checking, while the compiler allows bidirectional transpilation to and from Azure Resource Manager (ARM) templates. Bicep's resource-oriented DSL and native integration with the Azure ecosystem make it a compelling choice for Azure infrastructure development.</p>",
                "radarId": 83,
                "id": "en_2022-10_202203042",
                "blip_selector": "azure-bicep"
            },
            {
                "blip_id": 202210032,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Synthetic data for testing models",
                "display_name": "Synthetic data for testing models",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "115",
                "tag": "new",
                "description": "<p>During our discussions for this edition of the Radar, several tools and applications for synthetic data generation came up. As the tools mature, we've found that using <strong>synthetic data for testing models</strong> is a powerful and broadly useful technique. Although not intended as a substitute for real data in validating the discrimination power of machine-learning models, synthetic data can be used in a variety of situations. For example, it can be used to guard against catastrophic model failure in response to rarely occurring events or to test data pipelines without exposing personally identifiable information. Synthetic data is also useful for exploring edge cases that lack real data or for identifying model bias. Some helpful tools for generating data include <a href=\"https://github.com/joke2k/faker\">Faker</a> or <a href=\"https://www.getsynth.com/\">Synth</a>, which generate data that conforms to desired statistical properties, and tools like <a href=\"/radar/languages-and-frameworks/synthetic-data-vault\">Synthetic Data Vault</a> that can generate data that mimics the properties of an input data set.</p>",
                "radarId": 21,
                "id": "en_2022-10_202210032",
                "blip_selector": "synthetic-data-for-testing-models"
            },
            {
                "blip_id": 201911049,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "BERT",
                "display_name": "BERT",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "172",
                "tag": "move_in",
                "description": "<p>Since we last talked about <strong><a href=\"https://arxiv.org/abs/1810.04805\">BERT</a></strong> (Bidirectional Encoder Representations from Transformers) in the Radar, our teams have successfully used it in a few natural language processing (NLP) projects. In one of our engagements, we observed significant improvements when we switched from the default BERT tokenizer to a domain-trained word-piece tokenizer for queries that contain nouns like brand names or dimensions. Although NLP has several new transformer models, BERT is well understood with good documentation and a vibrant community, and we continue to find it effective in an enterprise NLP context.</p>",
                "radarId": 4,
                "id": "en_2022-10_201911049",
                "blip_selector": "bert"
            },
            {
                "blip_id": 202210029,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "GitHub push protection",
                "display_name": "GitHub push protection",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "156",
                "tag": "new",
                "description": "<p>The accidental publication of secrets seems to be a perennial issue with tools such as <a href=\"/radar/tools/talisman\">Talisman</a> popping up to help with the problem. Before now, GitHub Enterprise Cloud users with an Advanced Security License could enable security scanning on their accounts, and any secrets (API keys, access tokens, credentials, etc.) that were accidentally committed and pushed would trigger an alert. <strong><a href=\"https://docs.github.com/en/enterprise-cloud@latest/code-security/secret-scanning/protecting-pushes-with-secret-scanning\">GitHub push protection</a></strong> takes this one step further, and brings it one step earlier in the development workflow, by blocking changes from being pushed at all if secrets are detected. This needs to be configured for the organization and applies, of course, only to license holders, but additional protection from publishing secrets is to be welcomed.</p>",
                "radarId": 16,
                "id": "en_2022-10_202210029",
                "blip_selector": "github-push-protection"
            },
            {
                "blip_id": 202210080,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "385",
                "name": "Satellite workers without \"remote native\"",
                "display_name": "Satellite workers without \"remote native\"",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "158",
                "tag": "new",
                "description": "<p>The term \"remote team setup\" does not just describe one setup; it encompasses multiple <a href=\"https://martinfowler.com/articles/remote-or-co-located.html\">patterns and flavors</a>. And many teams have been changing patterns recently. They're coming out of the \"everybody always remote\" mode that was forced on them by a pandemic and moving into a pattern of (often rotating) satellite workers, where part of the team is co-located and part of the team is remote. We see many of them failing to properly consider what this means for their ways of working. <strong>Satellite workers without \"remote native\"</strong> ways of working is a slip back into privileging co-located practices. In a setup with satellite workers, it's important to still <a href=\"/radar/techniques/use-remote-native-processes-and-approaches\">use \"remote native\" processes and approaches by default</a>. For example, if the co-located part of the team joins a meeting together, they should still all be on their individual laptops to participate in digital collaboration or meeting chat. Teams need to be aware of the risk of excluding their satellite workers and creating silos and feelings of exclusion. If you know that you'll always have at least one satellite team member, the default ways of working should assume remoteness.</p>",
                "radarId": 24,
                "id": "en_2022-10_202210080",
                "blip_selector": "satellite-workers-without-remote-native"
            },
            {
                "blip_id": 202210022,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "AWS Backup Vault Lock",
                "display_name": "AWS Backup Vault Lock",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "77",
                "tag": "new",
                "description": "<p>When implementing robust, secure and reliable disaster recovery, it’s necessary to ensure that backups can't be deleted or altered before their expiry, either maliciously or accidentally. Previously, with AWS Backup, these policies and guarantees had to be implemented by hand. Recently, AWS has added the Vault Lock feature to ensure backups are immutable and untamperable. <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/vault-lock.html\"><strong>AWS Backup Vault Lock</strong></a> enforces retention and deletion policies and prevents even those with administrator privileges from altering or deleting backup files. This has proved to be a valuable addition and fills a previously empty space.</p>",
                "radarId": 54,
                "id": "en_2022-10_202210022",
                "blip_selector": "aws-backup-vault-lock"
            },
            {
                "blip_id": 202210054,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Cross device SDK",
                "display_name": "Cross device SDK",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "315",
                "tag": "new",
                "description": "<p>As smart devices continue to embed themselves in our lives, we are starting to see new use cases emerge that span across multiple devices. The classic example is a text we start reading on a phone but prefer to finish on a tablet. Other examples include plotting a cycling route on a laptop and then transferring the data to a bike computer for easier navigation or using a mobile phone as a webcam. Such use cases require very specific kinds of features, like the discovery of nearby devices, secure communication and multi-device sessions. Apple started introducing such features a while ago to its own SDKs, and now Google has released the first preview of its <a href=\"https://developer.android.com/guide/topics/connectivity/cross-device-sdk/overview\"><strong>Cross device SDK</strong></a>. Although the preview has several limitations — for example, only phones and tablets are supported and only two devices at a time — the technology is exciting and can be utilized as it is rolled out over time.</p>",
                "radarId": 96,
                "id": "en_2022-10_202210054",
                "blip_selector": "cross-device-sdk"
            },
            {
                "blip_id": 202203041,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Gradle Kotlin DSL",
                "display_name": "Gradle Kotlin DSL",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2022-10",
                "theta": "303",
                "tag": "move_in",
                "description": "<p>Previously, we blipped about the Android Gradle plugin Kotlin DSL, or <strong>Gradle Kotlin DSL</strong>, which added support for <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> Script as an alternative to <a href=\"/radar/languages-and-frameworks/groovy\">Groovy</a> for Android projects using <a href=\"/radar/tools/gradle\">Gradle</a> build scripts. The goal of replacing Groovy with Kotlin is to provide better support for refactoring and simpler editing in IDEs and, ultimately, to produce code that is easier to read and maintain. For teams already using Kotlin, it also means working on the build in a familiar language. We now suggest trialing Kotlin DSL as an alternative language to Groovy for Gradle projects in general, especially if you have large or complex Gradle build scripts. Many IDEs now include support for the migration of existing projects. Some caveats remain, and we suggest checking the <a href=\"https://docs.gradle.org/current/userguide/kotlin_dsl.html\">documentation</a> for the most up-to-date details, including the prerequisites. We had a team with an at least seven-year-old, 450-line build script migrate successfully within a few days.</p>",
                "radarId": 85,
                "id": "en_2022-10_202203041",
                "blip_selector": "gradle-kotlin-dsl"
            },
            {
                "blip_id": 202210030,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Carbon efficiency as an architectural characteristic",
                "display_name": "Carbon efficiency as an architectural characteristic",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "172",
                "tag": "new",
                "description": "<p>Sustainability is a topic that demands the attention of enterprises. In the software development space its importance has increased, and we're now seeing <a href=\"https://www.thoughtworks.com/clients/Bringing-green-cloud-optimization-to-a-green-energy-business\">different ways</a> to approach this topic. Looking at the carbon footprint of building software, for example, we recommend assessing <strong>carbon efficiency as an architectural characteristic</strong>. An architecture that takes into consideration carbon efficiency is one where design and infrastructure choices have been made in order to to minimize energy consumption and therefore carbon emissions. The measurement tooling and advice in this space is maturing, making it feasible for teams to consider carbon efficiency alongside other factors such as performance, scalability, financial cost and security. Like almost everything in software architecture, this should be considered a trade-off; our advice is to think about this as one additional characteristic in a whole set of relevant <a href=\"https://en.wikipedia.org/wiki/List_of_system_quality_attributes\">quality attributes</a> that are driven and prioritized by organizational goals and not left to a small cadre of experts to ponder in a siloed manner.</p>",
                "radarId": 14,
                "id": "en_2022-10_202210030",
                "blip_selector": "carbon-efficiency-as-an-architectural-characteristic"
            },
            {
                "blip_id": 202210108,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "395",
                "name": "Superficial cloud native",
                "display_name": "Superficial cloud native",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "113",
                "tag": "new",
                "description": "<p>The term \"cloud native\" was originally used to describe architectures with characteristics that took maximum advantage of public cloud hosting. Examples include distributed architectures composed of many small, stateless and collaborating processes, and systems with high levels of automation for building, testing and deploying applications. However, we've noticed a growing trend toward <strong>superficial cloud native</strong> designs that simply use a lot of a cloud vendor's proprietary services and stop there without revisiting the fundamentally monolithic, brittle or toil-intensive nature of the application. It’s important to remember that serverless functions by themselves don't make an application more resilient or easier to maintain and that cloud native is really a matter of design rather than a set of implementation choices.</p>",
                "radarId": 26,
                "id": "en_2022-10_202210108",
                "blip_selector": "superficial-cloud-native"
            },
            {
                "blip_id": 202210015,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Kusto Query Language",
                "display_name": "Kusto Query Language",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2022-10",
                "theta": "28",
                "tag": "new",
                "description": "<p>As data work becomes more common, we continue to see tools that try to enhance the SQL language; <a href=\"https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/\"><strong>Kusto Query Language</strong></a> (KQL) is one of them. KQL was created by Azure, and it brings modularity, encapsulation, composability, reusability, extensibility and dynamism to relational querying. Our teams quite like its interactivity: you can pipe a query to the render operator and see a chart instantly. You can also combine these charts into dashboards and get insights from logs to execs in minutes. Although the KQL language is currently limited to the <a href=\"https://azure.microsoft.com/en-us/products/data-explorer/#overview\">Azure Data Explorer</a>, we anticipate the move to enhance SQL to achieve better data operability will not stop.</p>",
                "radarId": 61,
                "id": "en_2022-10_202210015",
                "blip_selector": "kusto-query-language"
            }
        ]
    },
    {
        "date": "2023-04",
        "blips": [
            {
                "blip_id": 202304059,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "LangChain",
                "display_name": "LangChain",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "317",
                "description": "<p><strong><a href=\"https://github.com/hwchase17/langchain\">LangChain</a></strong> is a framework for building applications with large language models (LLMs). These models have triggered a race to incorporate generative AI in several use cases. However, using these LLMs in isolation may not be enough — you have to combine them with your differentiated assets to build an impactful product. LangChain fills this niche with some neat features, including prompt management, chaining, <a href=\"https://python.langchain.com/en/latest/use_cases/evaluation/data_augmented_question_answering.html\">data augmented generation</a> and a rich set of <a href=\"https://langchain.readthedocs.io/en/latest/modules/agents/agents.html\">agents</a> to determine which actions to take and in what order. We expect more tooling and frameworks to evolve with LLMs, and we recommend assessing LangChain.</p>",
                "radarId": 100,
                "id": "en_2023-04_202304059",
                "blip_selector": "langchain"
            },
            {
                "blip_id": 202304092,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Ory Kratos",
                "display_name": "Ory Kratos",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "11",
                "description": "<p>We've already assessed <a href=\"/radar/platforms/hydra\">Ory Hydra</a> as a self-hosted OAuth2 solution, and the feedback from the team has been good. This time, we turn to <strong><a href=\"https://github.com/ory/kratos\">Ory Kratos</a></strong>, an API-first identity and user management system that’s developer friendly and easy to customize. It already provides common functions we want to achieve in an identity management system, including self-service login and registration, multi-factor authentication (MFA/2FA), account verification and account recovery. Like Hydra, Kratos is headless and requires developers to build the UI themselves, which gives the team more flexibility. Developers can also customize identity schema to fit different business contexts. Kratos has <a href=\"https://www.ory.sh/docs/ecosystem/software-architecture-philosophy\">no external dependencies</a> other than the database, and it's easy to deploy and scale in different cloud environments. If you need to build a user management system, we recommend you give Kratos a try.</p>",
                "radarId": 78,
                "id": "en_2023-04_202304092",
                "blip_selector": "ory-kratos"
            },
            {
                "blip_id": 202304025,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Mikro ORM",
                "display_name": "Mikro ORM",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "302",
                "description": "<p><strong><a href=\"https://mikro-orm.io/\">Mikro ORM</a></strong> is an object-relational mapping (ORM) framework that has an interesting <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>-centric approach. By leveraging TypeScript throughout the entire stack, it offers a consistent development experience from browser to backend, making it easier for developers to write and maintain code. Notably, Mikro ORM's performance is excellent, enabling rapid query execution and minimizing latency. While Mikro ORM offers appealing features, it’s essential to keep in mind the general caveats associated with object-relational mappers. ORM frameworks are <a href=\"https://martinfowler.com/bliki/OrmHate.html\">often complex</a> and offer only a leaky abstraction over a relational data store, and so using one is always a balance of trade-offs.</p>",
                "radarId": 85,
                "id": "en_2023-04_202304025",
                "blip_selector": "mikro-orm"
            },
            {
                "blip_id": 202304061,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "mljar-supervised",
                "display_name": "mljar-supervised",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "322",
                "description": "<p><strong><a href=\"https://github.com/mljar/mljar-supervised\">mljar-supervised</a></strong> is an <a href=\"/radar/techniques/automated-machine-learning-automl\">AutoML</a> Python package that assists with understanding and explaining tabular data. Our data science teams are excited about it and use it to automate exploratory data analysis. It abstracts the common way to preprocess the data, construct the machine learning (ML) models and perform hyper-parameters tuning to find the best model. Explainability and transparency are important tenets, and that's where mljar-supervised shines. It allows you to see exactly how the ML pipeline is constructed with a detailed markdown report for each ML model. It’s definitely an interesting AutoML package that’s worth assessing for your ML needs.</p>",
                "radarId": 101,
                "id": "en_2023-04_202304061",
                "blip_selector": "mljar-supervised"
            },
            {
                "blip_id": 202304020,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Devbox",
                "display_name": "Devbox",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "59",
                "description": "<p><strong><a href=\"https://www.jetpack.io/devbox/\">Devbox</a></strong> provides an approachable interface for creating reproducible, per-project development environments leveraging the Nix package manager. Our teams use it to eliminate version and configuration mismatches in their development environments, and they like it for its ease of use. Devbox supports shell hooks, custom scripts and <a href=\"https://containers.dev/\">devcontainer.json</a> generation for integration with VSCode.</p>",
                "radarId": 69,
                "id": "en_2023-04_202304020",
                "blip_selector": "devbox"
            },
            {
                "blip_id": 202104088,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Feature Store",
                "display_name": "Feature Store",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "230",
                "description": "<p>Any software system needs to properly represent the given domain in which it is employed and should always be informed by key aims and goals. Machine learning (ML) projects are no different. <a href=\"https://en.wikipedia.org/wiki/Feature_engineering\">Feature engineering</a> is a crucial aspect of engineering and designing ML software systems. <strong><a href=\"https://www.featurestore.org/\">Feature Store</a></strong> is a related architectural concept to facilitate the identification, discovery and monitoring of the features pertinent to the given domain or business problem. Implementing this concept involves a combination of architectural design, data engineering and infrastructure management to create a scalable, efficient and reliable ML system. From a tooling perspective, you can find open-source and fully managed platforms, but they're only one part of this concept. In the end-to-end design of ML systems, implementing a feature store enables the following capabilities: the ability to (1) define the right features; (2) enhance reusability and make features consistently available regardless of the type of model, which also includes setting up the feature engineering pipelines that curate data as described in the feature store; (3) enable feature discovery and (4) enable feature serving. Our teams leverage feature stores in production to reap these benefits for end-to-end ML systems.</p>",
                "radarId": 30,
                "id": "en_2023-04_202104088",
                "blip_selector": "feature-store"
            },
            {
                "blip_id": 202304078,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Directus",
                "display_name": "Directus",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "291",
                "description": "<p>We've used <strong><a href=\"https://directus.io/headless-cms/\">Directus</a></strong> as a headless content management system (CMS). Although we have options when it comes to headless CMS products, we needed a self-hosted solution with rich digital asset management and content authoring workflows. In this evaluation we find Directus to be a good fit for our needs; we quite like its event-driven data processing and automation via <a href=\"https://docs.directus.io/configuration/flows.html\">flows</a>.</p>",
                "radarId": 95,
                "id": "en_2023-04_202304078",
                "blip_selector": "directus"
            },
            {
                "blip_id": 202304070,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Terraform Cloud Operator",
                "display_name": "Terraform Cloud Operator",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "19",
                "description": "<p>More and more teams are using the <a href=\"/radar/tools/kubernetes-operators\">Kubernetes Operators</a> pattern to manage their Kubernetes clusters. We used to recommend <a href=\"/radar/tools/crossplane\">Crossplane</a> for this, and now we have an alternative tool, <strong><a href=\"https://github.com/hashicorp/terraform-k8s\">Terraform Cloud Operator</a></strong> for Kubernetes. This tool integrates Terraform Cloud and Kubernetes by extending the Kubernetes control plane to enable lifecycle management of cloud and on-premise infrastructures through Kubernetes manifests. Our team uses it to provision resources from Kubernetes namespaces and RoleBindings to cloud database instances and other SaaS resources. We quite like it because it leverages the Terraform module, which is a more familiar abstraction layer for us to operate cloud resources.</p>",
                "radarId": 60,
                "id": "en_2023-04_202304070",
                "blip_selector": "terraform-cloud-operator"
            },
            {
                "blip_id": 202304049,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Flutter for embedded",
                "display_name": "Flutter for embedded",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "301",
                "description": "<p><strong><a href=\"https://flutter.dev/multi-platform/embedded\">Flutter for embedded</a></strong> makes it relatively easy to create and maintain a modern UI similar to mobile apps but for embedded systems like human-machine interface (HMI) in cars, refrigerators and other consumer appliances. This is made possible with <a href=\"/radar/languages-and-frameworks/flutter\">Flutter</a> now supporting custom embedders, which allows portability to different platforms. The apps are written in the <a href=\"/radar/languages-and-frameworks/google-dart\">Dart</a> programming language using the Flutter SDK and ecosystem. We've been building prototypes with it —  our developers love the dev experience and our customers like the agility, speed and modern user experience that it brings.</p>",
                "radarId": 97,
                "id": "en_2023-04_202304049",
                "blip_selector": "flutter-for-embedded"
            },
            {
                "blip_id": 202304046,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "EventCatalog",
                "display_name": "EventCatalog",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "76",
                "description": "<p>Enterprises now often use <a href=\"/radar/techniques/event-streaming-as-the-source-of-truth\">event streaming as the source of truth</a> and as an information-sharing mechanism in <a href=\"/radar/techniques/microservices\">microservices</a> architectures. This creates the need to standardize event types and share those standards across the enterprise. Event schema registries are commonly deployed but the existing offerings tend to be specialized to a single broker such as <a href=\"/radar/platforms/apache-kafka\">Apache Kafka</a> or <a href=\"https://learn.microsoft.com/en-us/azure/event-hubs/schema-registry-overview\">Azure Event Hub</a>. They also fall short of conveying rich documentation about event types that goes beyond simple schema definitions. <strong><a href=\"https://www.eventcatalog.dev/\">EventCatalog</a></strong> is an open-source project that provides something we often see businesses building for themselves: a widely accessible repository of documentation for events and schemas. These describe the role the events play in the business, where they belong in a business domain model and which services subscribe and publish them. If you're looking for a way to publish event documentation to your organization, this tool might save you the trouble of building it yourself.</p>",
                "radarId": 48,
                "id": "en_2023-04_202304046",
                "blip_selector": "eventcatalog"
            },
            {
                "blip_id": 202010039,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "105",
                "name": "K3s",
                "display_name": "K3s",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "247",
                "description": "<p><strong><a href=\"https://k3s.io/\">K3s</a></strong> remains our default <a href=\"/radar/platforms/kubernetes\">Kubernetes</a> distribution for edge computing needs and resource-constrained environments. It's a lightweight, fully compliant Kubernetes but with reduced operational overhead. It uses <a href=\"https://docs.python.org/3/library/sqlite3.html\">sqlite3</a> as the default storage backend instead of <a href=\"https://etcd.io/\">etcd</a>. It has a reduced memory footprint because it runs all relevant components in a single process. We've used K3s in environments like industrial control systems and point-of-sale machines, and we're quite happy with our decision. With the K3s runtime containerd now <a href=\"https://github.com/containerd/runwasi\">supporting wasm</a>, K3s can run and manage <a href=\"/radar/languages-and-frameworks/webassembly\">WebAssembly</a> workloads directly, further reducing the runtime overhead.</p>",
                "radarId": 25,
                "id": "en_2023-04_202010039",
                "blip_selector": "k3s"
            },
            {
                "blip_id": 202304050,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "FOSSA",
                "display_name": "FOSSA",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "72",
                "description": "<p><strong><a href=\"https://fossa.com/product/open-source-license-compliance\">FOSSA</a></strong> is an open-source compliance tool that helps developers and teams determine which open-source components their code relies on and which licenses these components are released under. This information is essential for ensuring compliance with various open-source licenses and maintaining the <a href=\"/radar/techniques/software-bill-of-materials\">Software Bill of Materials</a>. FOSSA integrates with dependency management tools of various tech stacks to identify which open-source components are used in a project. It also highlights any license issues based on the organization’s policies and generates reports of the same. Some key features of FOSSA include its ability to integrate with development workflows, such as the CI, and to perform real-time compliance monitoring. Many of our clients and teams have found FOSSA to be a valuable and effective tool.</p>",
                "radarId": 49,
                "id": "en_2023-04_202304050",
                "blip_selector": "fossa"
            },
            {
                "blip_id": 202010004,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "250",
                "name": "Bounded low-code platforms",
                "display_name": "Bounded low-code platforms",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "150",
                "description": "<p>We've always been advocates of writing less code. Simplicity is one of the core values underlying our sensible defaults for software development. For example, we try not to anticipate needs and only introduce code that satisfies immediate business requirements and nothing else. One way to achieve this is to create engineering platforms that make this possible on an organizational basis.</p>\n\n<p>This is also the stated aim of many low-code platforms surging in popularity right now. Platforms like <a href=\"https://www.mendix.com/\">Mendix</a> or <a href=\"https://powerapps.microsoft.com/\">Microsoft Power Apps</a> can expose common business processes for reuse and simplify the problems of getting new functionality deployed and in the hands of users. These platforms have made great strides in recent years with testability and support for good engineering practices. They're particularly useful for simple tasks or event-triggered apps. However, asking them to adapt to a nearly infinite range of business requirements brings complexity. Although developers might be writing less (or zero) code, they must also become experts in an all-encompassing commercial platform. We would advise businesses to consider if they need all the functionality these products bring or if they're better off pursuing <strong>bounded low-code platforms</strong>, either by developing their own <a href=\"/radar/techniques/applying-product-management-to-internal-platforms\">platform as an internal product</a> or by carefully constraining the use of commercial low-code products to those simple tasks at which they excel.</p>",
                "radarId": 6,
                "id": "en_2023-04_202010004",
                "blip_selector": "bounded-low-code-platforms"
            },
            {
                "blip_id": 202304109,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Tracking health over debt",
                "display_name": "Tracking health over debt",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "107",
                "description": "<p>Tracking technical debt is a perennial topic in software delivery organizations. What is <a href=\"https://martinfowler.com/bliki/TechnicalDebt.html\">technical debt</a> and what is not? How do you prioritize it? And most importantly, how do you express the value of paying it off to your internal stakeholders? Following the Agile Manifesto’s manner of reasoning — \"while there is value in the item on the right, we value the item on the left more\" — we like the idea of <strong>tracking health over debt</strong>. The folks at REA in Australia share a good <a href=\"https://www.rea-group.com/about-us/news-and-insights/blog/what-good-software-looks-like-at-rea/\">example</a> of what such health tracking can look like. They track system ratings in the categories of development, operations and architecture.</p>\n\n<p>Focusing on health instead of debt is a more constructive framing. It connects a team to the ultimate value of reducing debt and helps them prioritize it. Every piece of tackled technical debt should ideally be connectable to one of the agreed expectations. Teams should treat the health rating the same as other service-level objectives (SLOs) and prioritize improvements whenever they drop out of the \"green zone\" for a given category.</p>",
                "radarId": 18,
                "id": "en_2023-04_202304109",
                "blip_selector": "tracking-health-over-debt"
            },
            {
                "blip_id": 202304002,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "AI-aided test-first development",
                "display_name": "AI-aided test-first development",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "164",
                "description": "<p>Like many in the software industry, we've been exploring the rapidly evolving AI tools that can support us in writing code. We see many people feed <a href=\"/radar/tools/chatgpt\">ChatGPT</a> with an implementation, and then ask it to generate tests for that implementation. However, because we're big believers in TDD, and we don't always want to feed an external model with our potentially sensitive implementation code, one of our experiments in this space is a technique we call <strong><a href=\"https://martinfowler.com/articles/2023-chatgpt-xu-hao.html\">AI-aided test-first development</a></strong>. In this approach, we get ChatGPT to generate tests for us, and then a developer implements the functionality. Specifically, we first describe the tech stack and the design patterns we're using in a prompt \"fragment\" that is reusable across multiple use cases. Then we describe the specific feature we want to implement, including the acceptance criteria. Based on all that, we ask ChatGPT to generate an implementation plan for that feature in our architectural style and tech stack. Once we sanity check that implementation plan, we ask it to generate tests for our acceptance criteria.</p>\n\n<p>This approach has worked surprisingly well for us: It required the team to come up with a concise description of their architectural style and helped junior developers and new team members code features aligned with the team’s existing style. The main drawback of this approach is that even though we don't give the model our source code, we still feed it potentially sensitive information such as our tech stack and feature descriptions. Teams should ensure they're working with their legal advisors to avoid any intellectual property issues, at least until a \"for business\" version of these AI tools becomes available.</p>",
                "radarId": 11,
                "id": "en_2023-04_202304002",
                "blip_selector": "ai-aided-test-first-development"
            },
            {
                "blip_id": 202304055,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "260",
                "name": "IBM Equal Access Accessibility Checker",
                "display_name": "IBM Equal Access Accessibility Checker",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "57",
                "description": "<p>Defects are cheaper to fix when they're caught early. That's why we always try to get the fastest possible feedback to developers in the form of static analysis, unit tests or end-to-end tests run in the local environment. Accessibility is no exception to this and that’s why we've featured tools such as <a href=\"/radar/tools/lighthouse\">Lighthouse</a>, <a href=\"/radar/tools/axe-core\">axe-core</a> and <a href=\"/radar/tools/axe-linter\">axe Linter</a> in the past. When it comes to automatically testing web pages that are already deployed in production, one of our teams chose instead to go with <strong><a href=\"https://www.ibm.com/able/toolkit/verify/automated/\">IBM Equal Access Accessibility Checker</a></strong> in a head-to-head comparison. Although we're still in the process of assessing the results, we can say that it offers an efficient way to test pages once they've been deployed. We emphasize that this should be used to augment, not replace, early automated testing by the developer. The tool is distributed under a Creative Commons license and is free to use under those restrictions.</p>",
                "radarId": 52,
                "id": "en_2023-04_202304055",
                "blip_selector": "ibm-equal-access-accessibility-checker"
            },
            {
                "blip_id": 202304096,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Quarto",
                "display_name": "Quarto",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "319",
                "description": "<p><strong><a href=\"https://quarto.org/\">Quarto</a></strong> is an open-source scientific and technical publishing system. With it, we can build computational notebooks that allow you to write documents in markdown, embed code and emit that code’s output into the final document. It can be used to create reproducible and customizable data analysis reports, which can be easily shared in a variety of formats. Our data science teams used Quarto to share data analysis reports containing visualizations (plots) and tables. They liked being able to use <a href=\"https://en.wikipedia.org/wiki/R_(programming_language)\">R</a> and <a href=\"https://en.wikipedia.org/wiki/Python_(programming_language)\">Python</a> to generate these dynamic reports and then export them as <a href=\"https://en.wikipedia.org/wiki/HTML\">HTML</a> to share with stakeholders. If you're looking to share your research and analysis within or outside of your organization, we recommend evaluating Quarto.</p>",
                "radarId": 87,
                "id": "en_2023-04_202304096",
                "blip_selector": "quarto"
            },
            {
                "blip_id": 202304091,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "335",
                "name": "OpenLineage",
                "display_name": "OpenLineage",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "245",
                "description": "<p><strong><a href=\"https://openlineage.io/\">OpenLineage</a></strong> is an open standard for lineage metadata collection for data pipelines, designed to instrument jobs as they're running. It defines a generic model of run, job and data set entities using consistent naming conventions. The core lineage model is extensible by defining specific facets to enrich those entities. OpenLineage solves the interoperability problem between producers and consumers of lineage data who otherwise would need to know how to speak to each other in various ways. Although there is a risk of it being another \"standard in the middle,\" being a <a href=\"https://lfaidata.foundation/\">Linux Foundation AI & Data Foundation</a> project increases its chances of gaining widespread adoption. OpenLineage currently supports data collection for multiple platforms, such as <a href=\"/radar/platforms/apache-spark\">Spark</a>, <a href=\"/radar/tools/airflow\">Airflow</a> and <a href=\"/radar/tools/dbt\">dbt</a>, although users need to configure its listeners. Support for OpenLineage data consumers is <a href=\"https://openlineage.io/ecosystem\">more limited at this time</a>.</p>",
                "radarId": 41,
                "id": "en_2023-04_202304091",
                "blip_selector": "openlineage"
            },
            {
                "blip_id": 202110099,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Vite",
                "display_name": "Vite",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "7",
                "description": "<p><strong><a href=\"https://vitejs.dev/\">Vite</a></strong>, a front-end build tool, has continued to mature and grow in popularity since we featured it in the Assess ring in the previous Radar. It is rapidly becoming the default choice among our teams when starting a new front-end project. Vite provides a set of defaults for building, bundling and managing dependencies in applications that depend on ES modules in the browser. Because it takes advantage of the native speed of <a href=\"/radar/tools/esbuild\">esbuild</a> and the <a href=\"https://rollupjs.org/\">Rollup</a> bundler, Vite <a href=\"https://vitejs.dev/guide/why.html\">significantly improves</a> the front-end developer experience. Moreover, when used with React, Vite offers an attractive alternative to the <a href=\"https://hackernoon.com/create-react-app-is-dead-here-are-some-alternatives\">stalwart but nearly defunct</a> Create React App. Vite relies on ES modules, and unlike most older tools, it doesn't provide shimming or polyfills, which means you need a different strategy for older browsers that don't support ES modules. In cases where older browsers had to be supported, some of our teams import polyfills at the module level so that Vite can be used consistently across environments.</p>",
                "radarId": 63,
                "id": "en_2023-04_202110099",
                "blip_selector": "vite"
            },
            {
                "blip_id": 202304100,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Ruff",
                "display_name": "Ruff",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "34",
                "description": "<p><strong><a href=\"https://github.com/charliermarsh/ruff\">Ruff</a></strong> is a new linter for Python. For us, the question is not whether to use a linter or not but which linter to use, and there are several choices for Python. Ruff stands out for two reasons: its out-of-box experience and its speed. It has over 500 rules built in and readily replaces Flake8, including many of that linter's plug-ins. The claims by the team behind Ruff about its performance are borne out by our experience. It really is at least an order of magnitude faster than other linters, which is a huge benefit because it helps reduce build times on large codebases.</p>",
                "radarId": 57,
                "id": "en_2023-04_202304100",
                "blip_selector": "ruff"
            },
            {
                "blip_id": 202304112,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "Vitest",
                "display_name": "Vitest",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "351",
                "description": "<p><strong><a href=\"https://vitest.dev/\">Vitest</a></strong> is a unit testing framework for JavaScript. Up to now, many teams have relied on <a href=\"/radar/languages-and-frameworks/jest\">Jest</a>, but Jest doesn't play well with <a href=\"/radar/tools/vite\">Vite</a>, a modern front-end build tool. Using Jest and Vite together forced teams to create two pipelines — one for build and development and one for unit testing — which required tedious configuration of the pipelines with duplicate settings. These problems are solved with Vitest. It is designed specifically for Vite and uses Vite as a bundler. As an additional feature, Vitest has Jest-compatible APIs which makes it possible to use Vitest as a drop-in replacement for Jest in various build setups. However, using Vite and Vitest together provides a better developer experience, and although Vitest is fast, in our experience, it isn't necessarily faster than using Jest.</p>",
                "radarId": 91,
                "id": "en_2023-04_202304112",
                "blip_selector": "vitest"
            },
            {
                "blip_id": 202210050,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Synthetic Data Vault",
                "display_name": "Synthetic Data Vault",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "343",
                "description": "<p><strong><a href=\"https://github.com/sdv-dev/SDV\">Synthetic Data Vault (SDV)</a></strong> is a synthetic data generation ecosystem of libraries that can learn the distribution of a data set to generate synthetic data with the same format and statistical properties as the source. In the past, we talked about the downsides of using <a href=\"/radar/techniques/production-data-in-test-environments\">production data in test environments</a>. However, the nuances of data distribution in production can hardly be replicated manually, resulting in defects and surprises. We've had good experiences using SDV to generate large data for performance testing. SDV fares well with modeling a <a href=\"https://docs.sdv.dev/sdv/single-table-data/modeling\">single table</a>. However, data generation time increases considerably as the number of <a href=\"https://docs.sdv.dev/sdv/multi-table-data/modeling\">tables</a> with foreign key constraints increases. Nonetheless, SDV offers great promise for local performance testing. It's a good tool for synthetic data generation and worth considering for your testing needs.</p>",
                "radarId": 90,
                "id": "en_2023-04_202210050",
                "blip_selector": "synthetic-data-vault"
            },
            {
                "blip_id": 202304085,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "165",
                "name": "Ktlint",
                "display_name": "Ktlint",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "53",
                "description": "<p>The <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> ecosystem continues to evolve, and our teams report positive experiences with <strong><a href=\"https://github.com/pinterest/ktlint\">Ktlint</a></strong>, a simple and easy-to-configure linter and formatter for Kotlin code. We like <a href=\"/radar/techniques/opinionated-and-automated-code-formatting\">opinionated and automated code formatting</a> as it lets developers focus more on what the code does rather than how it looks; this tool enables development teams to maintain consistency and readability in their codebases efficiently, reducing the likelihood of messy merges due to formatting issues. Ktlint can be easily configured to run in pre-commit hooks, targeting only the files with changes and resulting in faster integration processes.</p>",
                "radarId": 53,
                "id": "en_2023-04_202304085",
                "blip_selector": "ktlint"
            },
            {
                "blip_id": 202304006,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "180",
                "name": "Demo frontends for API-only products",
                "display_name": "Demo frontends for API-only products",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "135",
                "description": "<p>One of the big challenges in developing APIs is capturing and communicating their business value. APIs are, by their nature, technical artifacts. Whereas developers can easily comprehend JSON payloads, OpenAPI (<a href=\"/radar/tools/swagger\">Swagger</a>) specs and <a href=\"/radar/tools/postman\">Postman</a> demos, business stakeholders tend to respond better to demos they can interact with. The value of the product is more clearly articulated when you can see and touch it, which is why we sometimes find it worthwhile to invest in <strong>demo frontends for API-only products</strong>. When a custom graphical UI is built alongside an API product, stakeholders can see analogies to paper forms or reports that might be more familiar to them. As the interaction model and richness of the demo UI evolves, it allows them to make more informed decisions about the direction the API product should take. Working on the UI has the added benefit of increasing developers' empathy for business users. This isn't a new technique — we've been doing this successfully when necessary as long as API products have been around. However, because this technique isn't widely known, we thought it worthwhile calling attention to it.</p>",
                "radarId": 7,
                "id": "en_2023-04_202304006",
                "blip_selector": "demo-frontends-for-api-only-products"
            },
            {
                "blip_id": 202304054,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Gitleaks",
                "display_name": "Gitleaks",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "67",
                "description": "<p><strong><a href=\"https://github.com/gitleaks/gitleaks\">Gitleaks</a></strong> is an open-source SAST (static application security testing) command line tool for detecting and preventing hardcoded secrets like passwords, API keys and tokens in <a href=\"/radar/tools/git\">Git</a> repositories. It can be used as a Git pre-commit hook or in the CI/CD pipeline. Our teams found Gitleaks to be more sensitive than some of the other secret-scanning tools. Gitleaks utilizes regular expressions and <a href=\"https://en.wikipedia.org/wiki/Entropy_coding\">entropy</a> string coding to detect secrets. In our experience, the flexibility to supply custom regex along with entropy coding allowed the teams to better categorize secrets based on their needs. For example, instead of categorizing all API keys as \"generic-api-key,\" it allowed categorization as specific \"cloud provider key.\"</p>",
                "radarId": 50,
                "id": "en_2023-04_202304054",
                "blip_selector": "gitleaks"
            },
            {
                "blip_id": 202304110,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Turborepo",
                "display_name": "Turborepo",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "349",
                "description": "<p>One of the topics that seems to perennially draw interest in our discussions is the issue of monorepos. Some places have embraced them for the whole organization, while others have applied the concept in certain narrow applications such as mobile applications or combined UI/BFF development. Regardless of whether or where monorepos are appropriate, the industry seems to be revisiting tools that can effectively manage large codebases and build them efficiently into deployable units. <strong><a href=\"https://turbo.build/repo\">Turborepo</a></strong> is a relatively new tool in this category that offers an alternative to <a href=\"/radar/tools/nx\">Nx</a> or <a href=\"https://lerna.js.org/\">Lerna</a> for large JavaScript or TypeScript codebases. One of the challenges with large repos is executing builds quickly enough that they don't interrupt developer flow or reduce efficiency. Turborepo is written in <a href=\"/radar/languages-and-frameworks/rust\">Rust</a> which makes it highly performant; it also builds incrementally and caches intermediate steps to speed things up further. However, it does require changes to the developer workflow that take time to learn and is probably best suited to large codebases with multiple independent builds where a different approach is warranted. We've found that the documentation is sparse, leading some teams to stick with more established tools for now. However, it's worth assessing and seeing if Turborepo and its newer companion, <a href=\"https://turbo.build/pack\">Turbopack</a> (currently in beta), continue to evolve.</p>",
                "radarId": 106,
                "id": "en_2023-04_202304110",
                "blip_selector": "turborepo"
            },
            {
                "blip_id": 202304029,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Qwik",
                "display_name": "Qwik",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "338",
                "description": "<p>One of the challenges of creating a rich, interactive browser-based experience is in minimizing the time from first request to full user interactivity. When starting up, the application may need to download large amounts of JavaScript to the browser or execute a lengthy process to restore application state on the server. <strong><a href=\"https://qwik.builder.io/\">Qwik</a></strong> is a new front-end framework that serializes application state so it can be rendered on the server without rehydrating and replaying application logic. This is achieved through <em>resumability</em>, which involves pausing execution on the server to resume it on the client. Like other newer front-end frameworks, such as <a href=\"/radar/languages-and-frameworks/astro\">Astro</a> or <a href=\"/radar/languages-and-frameworks/svelte\">Svelte</a>, Qwik also speeds up initial page load times by minimizing the amount of JavaScript to load. In Qwik's case, the initial application download is primarily HTML, with most JavaScript loaded dynamically on demand from a local cache, if possible.</p>",
                "radarId": 104,
                "id": "en_2023-04_202304029",
                "blip_selector": "qwik"
            },
            {
                "blip_id": 201911060,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Kubeflow",
                "display_name": "Kubeflow",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "48",
                "description": "<p><strong><a href=\"https://www.kubeflow.org/\">Kubeflow</a></strong> is a <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>-native machine learning (ML) platform that simplifies build, train and deploy lifecycles of models to diverse infrastructure. We've extensively used <a href=\"https://www.kubeflow.org/docs/components/pipelines/\">Pipelines</a> to encode ML workflows for several models across experimentation, training and serving use cases. Besides Pipelines, Kubeflow ships with multiple <a href=\"https://www.kubeflow.org/docs/components/\">components</a>, among which we find hyperparameter tuning with <a href=\"https://www.kubeflow.org/docs/components/katib/\">Katib</a> and <a href=\"https://www.kubeflow.org/docs/components/multi-tenancy/\">multi-tenancy</a> to be quite useful.</p>",
                "radarId": 54,
                "id": "en_2023-04_201911060",
                "blip_selector": "kubeflow"
            },
            {
                "blip_id": 202304011,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Logseq as team knowledge base",
                "display_name": "Logseq as team knowledge base",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "140",
                "description": "<p>Team knowledge management is a familiar concept with teams using tools such as wikis to store information and onboard new team members. Some of our teams now prefer to use <strong><a href=\"https://logseq.com/\">Logseq</a> as a team knowledge base</strong>. An open-source knowledge-management system, Logseq is powered by a graph database, helps users organize thoughts, notes and ideas and can be adapted for team use with Git-based storage. Logseq allows teams to build a democratic and accessible knowledge base, providing each member with a personalized learning journey and facilitating efficient onboarding. However, as with any knowledge management tool, teams will need to apply good curation and management of their knowledge base to avoid information overload or disorganization.</p>\n\n<p>While similar functionality is available in tools like <a href=\"/radar/tools/obsidian\">Obsidian</a>, the key difference lies in Logseq's focus on consumption, with paragraph-based linking enabling team members to quickly find the relevant context without having to read an entire article.</p>",
                "radarId": 14,
                "id": "en_2023-04_202304011",
                "blip_selector": "logseq-as-team-knowledge-base"
            },
            {
                "blip_id": 202304040,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Jetpack CameraViewfinder",
                "display_name": "Jetpack CameraViewfinder",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "286",
                "description": "<p>When adding camera capabilities to Android apps, developers had to look out for pitfalls. The recently introduced <strong><a href=\"https://android-developers.googleblog.com/2022/11/introducing-camera-viewfinder.html\">Jetpack CameraViewfinder</a></strong> API significantly improves the developer experience in this area. Internally it uses either a TextureView or SurfaceView to display the camera feed and applies transformations to correctly display the viewfinder, fixing aspect ratio, scale and rotation where necessary. Optimized layouts for foldable devices are provided, too. While not a major feature, we highlight it here to ensure teams are aware of its existence.</p>",
                "radarId": 83,
                "id": "en_2023-04_202304040",
                "blip_selector": "jetpack-cameraviewfinder"
            },
            {
                "blip_id": 202304099,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "RudderStack",
                "display_name": "RudderStack",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "240",
                "description": "<p><strong><a href=\"https://www.rudderstack.com/\">RudderStack</a></strong> is a customer data platform (CDP) that makes it easy to store data in a data warehouse or data lake. This approach, increasingly known as Headless CDP, separates the CDP's features from its user interface and emphasizes configurability through APIs and the data warehouse/lake as primary storage. As expected from a product in this category, RudderStack has a rich repository of integrations with third-party products (both as source and sink) and the ability to ingest custom events. RudderStack has both a commercial offering and a self-hosted OSS version with functionality limitations.</p>",
                "radarId": 31,
                "id": "en_2023-04_202304099",
                "blip_selector": "rudderstack"
            },
            {
                "blip_id": 202304023,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Kubernetes External Secrets Operator",
                "display_name": "Kubernetes External Secrets Operator",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "27",
                "description": "<p><strong><a href=\"https://github.com/external-secrets/external-secrets\">Kubernetes External Secrets Operator</a></strong> allows external secret providers to be integrated with <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. It reads from the external provider API and injects the result into a Kubernetes Secret. The operator works with a large variety of secret management tools, including some we've featured in previous editions of the Radar. Our teams have found it simplified the use of secrets when working with Kubernetes by allowing the use of a single store across a whole project.</p>",
                "radarId": 75,
                "id": "en_2023-04_202304023",
                "blip_selector": "kubernetes-external-secrets-operator"
            },
            {
                "blip_id": 202304045,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Domain-specific LLMs",
                "display_name": "Domain-specific LLMs",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "156",
                "description": "<p>We've featured large language models (LLMs) like <a href=\"/radar/techniques/bert\">BERT</a> and <a href=\"/radar/languages-and-frameworks/ernie\">ERNIE</a> in the Radar before; <strong>domain-specific LLMs</strong>, however, are an emerging trend. Fine-tuning general-purpose LLMs with domain-specific data can tailor them for various tasks, including information retrieval, customer support augmentation and content creation. This practice has shown promising results in industries like <a href=\"https://www.linkedin.com/news/story/pwc-lawyers-get-an-ai-helper-5581124/\">legal</a> and finance, as demonstrated by <a href=\"https://opennyai.org/\">OpenNyAI</a> for legal document analysis. With more organizations experimenting with LLMs and new models like GPT4 being released, we can expect more domain-specific use cases in the near future.</p>\n\n<p>However, there are challenges and pitfalls to consider. First, LLMs can be confidently wrong, so it's essential to build mechanisms into your process to ensure the accuracy of results. Second, third-party LLMs may retain and re-share your data, posing a risk to proprietary and confidential information. Organizations should carefully review the terms of use and trustworthiness of providers or consider training and running LLMs on an infrastructure they control. As with any new technology, businesses must tread carefully, understanding the implications and risks associated with LLM adoption.</p>",
                "radarId": 12,
                "id": "en_2023-04_202304045",
                "blip_selector": "domain-specific-llms"
            },
            {
                "blip_id": 202304024,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": ".NET MAUI",
                "display_name": ".NET MAUI",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "280",
                "description": "<p><strong><a href=\"https://learn.microsoft.com/en-us/dotnet/maui/what-is-maui\">.NET MAUI</a></strong> is a new cross-platform framework for creating native mobile and desktop apps with C# and XAML. It allows the creation of apps that can run on Android, iOS, macOS and Windows from a single shared codebase. However, as a new technology, the ecosystem around MAUI is not as developed as <a href=\"/radar/languages-and-frameworks/react-native\">React Native</a> or other cross-system platforms, and it only supports C#. Additionally, MAUI may face challenges encountered by organizations using <a href=\"/radar/tools/xamarin\">Xamarin</a> in the past, including poor cross-platform tooling, mobile integration problems, developer availability and an immature ecosystem.</p>\n\n<p>While Microsoft announced their commitment to MAUI as an open-source, mobile-first framework for mobile development, its success has yet to be proven. If you’re already using Xamarin, you may want to assess MAUI as a potential upgrade; however, if C# or Xamarin isn't part of your tool set yet, you may want to approach MAUI with some caution until the technology is more widely adopted and proven in the market.</p>",
                "radarId": 93,
                "id": "en_2023-04_202304024",
                "blip_selector": "net-maui"
            },
            {
                "blip_id": 202304071,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "255",
                "name": "TruffleHog",
                "display_name": "TruffleHog",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "15",
                "description": "<p><strong><a href=\"https://github.com/trufflesecurity/trufflehog\">TruffleHog</a></strong> is an open-source SAST (static application security testing) tool for detecting secrets in various sources. While GitHub and GitLab repositories are the most popular use cases, it can also be used to scan cloud storage buckets like S3 and GCS, local files and directories and <a href=\"/radar/platforms/circleci\">CircleCI</a> logs. Developers can set up TruffleHog as a pre-commit hook or scan the history of existing repositories in an entire GitHub organization to detect secrets. The tool supports detecting custom regex patterns, which have been found to be quite useful even in its current alpha stage. TruffleHog also has an enterprise version, but our devs have found the open-source version easy to set up and sufficient for the most common use cases. The tool has a very active community who regularly adds features.</p>",
                "radarId": 61,
                "id": "en_2023-04_202304071",
                "blip_selector": "trufflehog"
            },
            {
                "blip_id": 1338,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "75",
                "name": "Run cost as architecture fitness function",
                "display_name": "Run cost as architecture fitness function",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2023-04",
                "theta": "108",
                "description": "<p>Automatically estimating, tracking and predicting cloud infrastructure run cost is crucial for today's organizations. The cloud providers' savvy pricing models, combined with the proliferation of pricing parameters and the dynamic nature of today's architecture, can lead to surprisingly expensive run costs. Even though this technique has been in Adopt since 2019, we want to highlight the importance of considering <strong>run cost as an architecture fitness function</strong>, especially today, due to accelerated cloud adoption and the growing attention to FinOps practices. Many commercial platforms provide tools that can consolidate and clarify cloud costs for business leaders. Some of them are designed to show cloud run costs to finance organizations or originating business units. </p>\n\n<p>However, cloud consumption decisions are usually made at the engineering level, where systems are designed. It's important that the engineers making design decisions have some way of predicting the cost impact of their architectural decisions. Some teams automate this prediction early in the development lifecycle. Tools like <a href=\"/radar/tools/infracost\">Infracost</a> help teams predict cost impact when thinking about possible changes to infrastructure as code. This computation can be automated and woven into the CD pipeline. Note that cost will be impacted by architectural decisions combined with actual usage levels; to do this properly, you need good projections of expected usage levels. Early and frequent feedback on run cost can prevent it from soaring. When the predicted cost deviates from what was expected or acceptable, the team can discuss whether it's time to evolve the architecture.</p>",
                "radarId": 4,
                "id": "en_2023-04_1338",
                "blip_selector": "run-cost-as-architecture-fitness-function"
            },
            {
                "blip_id": 202304060,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Matter",
                "display_name": "Matter",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "220",
                "description": "<p><strong><a href=\"https://csa-iot.org/all-solutions/matter/\">Matter</a></strong> is an open standard for smart home technology, launched by Amazon, Apple, Google, Comcast and the Zigbee Alliance (now Connectivity Standards Alliance, or CSA). It enables devices to work with any Matter-certified ecosystem, thus reducing fragmentation and promoting interoperability among devices and IoT platforms from different providers. Its focus on standardization at the application level, support for Wi-Fi and <a href=\"https://www.theverge.com/23165855/thread-smart-home-protocol-matter-apple-google-interview\">Thread</a> as communication mediums and backing from major tech companies set it apart from other protocols like Zigbee. Although the number of Matter-enabled devices is still relatively low, its growing importance in the IoT space makes it worth assessing for those looking to build smart home and IoT solutions.</p>",
                "radarId": 38,
                "id": "en_2023-04_202304060",
                "blip_selector": "matter"
            },
            {
                "blip_id": 202304056,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Intelligent guided accessibility tests",
                "display_name": "Intelligent guided accessibility tests",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "148",
                "description": "<p>It can be a bit daunting to make a web application compliant with assistive technologies when you yourself never use them, and you feel like you don't yet know anything about directives like the <a href=\"https://en.wikipedia.org/wiki/Web_Content_Accessibility_Guidelines\">Web Content Accessibility Guidelines (WCAG)</a>. <strong>Intelligent guided accessibility tests</strong> are one category of tools that help test if you've done the right thing without needing to be an expert on accessibility. These tools are browser extensions that scan your website, summarize how assistive technology would interpret it and then ask you a set of questions to confirm whether the structure and elements you created are as intended. We've used <a href=\"https://docs.deque.com/devtools-html/4.0.0/en/devtools-igt\">axe DevTools</a>, <a href=\"https://accessibilityinsights.io/docs/web/overview/\">Accessibility Insights for Web</a> or the <a href=\"https://www.tpgi.com/arc-platform/arc-toolkit/\">ARC Toolkit</a> on some of our projects.</p>",
                "radarId": 13,
                "id": "en_2023-04_202304056",
                "blip_selector": "intelligent-guided-accessibility-tests"
            },
            {
                "blip_id": 202110033,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "Mozilla SOPS",
                "display_name": "Mozilla SOPS",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "38",
                "description": "<p>Our advice when it comes to secrets management has always been to <a href=\"/radar/techniques/decoupling-secret-management-from-source-code\">decouple it from source code</a>. However, teams are often presented with a tradeoff between full automation (in the spirit of <a href=\"/radar/techniques/infrastructure-as-code\">infrastructure as code</a>) versus a few manual steps (using tools like vaults) for managing, seeding and rotating seed secrets. For instance, our teams use SOPS to manage seed credentials for bootstrapping infrastructure. In some situations, however, it's impossible to remove secrets from legacy code repositories. For such needs, we found <strong><a href=\"https://github.com/mozilla/sops\">Mozilla SOPS</a></strong> to be a good choice for encrypting secrets in text files. SOPS integrates with cloud-managed keystores such as AWS and GCP Key Management Service (KMS) or Azure Key Vault as sources of encryption keys. It also works cross-platform and supports PGP keys.</p>",
                "radarId": 56,
                "id": "en_2023-04_202110033",
                "blip_selector": "mozilla-sops"
            },
            {
                "blip_id": 202010028,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "DuckDB",
                "display_name": "DuckDB",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "220",
                "description": "<p><strong><a href=\"https://duckdb.org/\">DuckDB</a></strong> is an embedded, columnar database for data science and analytical workloads. Data analysts usually load the data locally in tools like <a href=\"https://pandas.pydata.org/\">pandas</a> or <a href=\"https://github.com/Rdatatable/data.table\">data.table</a> to quickly analyze patterns and form hypotheses before scaling the solution in the server. However, we're now using DuckDB for such use cases, because it unlocks the potential to do larger than memory analysis. DuckDB supports <a href=\"https://duckdb.org/2022/05/27/iejoin.html\">range joins</a>, vectorized execution and multiversion concurrency control (MVCC) for large transactions, and our teams are quite happy with it.</p>",
                "radarId": 29,
                "id": "en_2023-04_202010028",
                "blip_selector": "duckdb"
            },
            {
                "blip_id": 202304072,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "TypeDB",
                "display_name": "TypeDB",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "260",
                "description": "<p><strong><a href=\"https://github.com/vaticle/typedb\">TypeDB</a></strong> is a knowledge graph database, designed to work with intricate data relationships which makes it easier to query and analyze large data sets. TypeDB's <a href=\"https://github.com/vaticle/typeql\">TypeQL</a> query language has a SQL-like syntax which eases the learning curve for schema definition, querying and exploration. TypeDB comes with a variety of tools that make it easier to work with the database, including a command-line interface and a graphical user interface, <a href=\"https://github.com/vaticle/typedb-studio\">TypeDB Studio</a>, which provides some features for working with TypeDB, such as managing schemas, querying data, visualizing relationships or even collaborating with others. There is a good deal of <a href=\"https://docs.vaticle.com/docs/general/introduction\">documentation</a> available and an active community for support. Our teams used it to build knowledge graphs of taxonomic concepts across different databases and took advantage of its strong inference capabilities by adding new inference rules increasing efficiency and reducing workload. With its intuitive developer experience and supportive community, TypeDB is a good candidate to consider for any team looking to build data solutions that depend on complex data relationships, including natural language data, recommendation engines and knowledge graphs.</p>",
                "radarId": 33,
                "id": "en_2023-04_202304072",
                "blip_selector": "typedb"
            },
            {
                "blip_id": 1172,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "PyTorch",
                "display_name": "PyTorch",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "330",
                "description": "<p><strong><a href=\"https://pytorch.org/\">PyTorch</a></strong> continues to be our choice of machine learning (ML) framework. Most of our teams prefer PyTorch over <a href=\"/radar/languages-and-frameworks/tensorflow\">TensorFlow</a>. PyTorch exposes the inner workings of ML that TensorFlow hides, making it easier to debug. With dynamic computational graphs, model optimization is much easier compared to any other ML framework. The extensive availability of <a href=\"https://huggingface.co/models\">State-of-the-Art (SOTA) models</a> and the ease of implementing research papers make PyTorch stand out. When it comes to graph ML, <a href=\"https://pytorch-geometric.readthedocs.io/en/latest/\">PyTorch Geometric</a> is a more mature ecosystem and our teams have had great experiences with it. PyTorch has also gradually bridged gaps when it comes to model deployment and scaling; our teams have used <a href=\"https://github.com/pytorch/serve\">TorchServe</a> to serve pretrained models successfully in production, for example. With many teams defaulting to PyTorch for their end-to-end deep-learning needs, we happily recommend adopting PyTorch.</p>",
                "radarId": 81,
                "id": "en_2023-04_1172",
                "blip_selector": "pytorch"
            },
            {
                "blip_id": 202304043,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Deepchecks",
                "display_name": "Deepchecks",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "69",
                "description": "<p>As machine learning finds its way into the mainstream, practices are maturing around automatically testing models, validating training data and observing model performance in production. Increasingly, these automated checks are being incorporated into continuous delivery pipelines or run against production models to detect drift and model performance. A number of tools with similar or overlapping capabilities have emerged to handle various steps in this process (<a href=\"/radar/tools/giskard\">Giskard</a> and <a href=\"/radar/tools/evidently\">Evidently</a> are also covered in this volume). <strong><a href=\"https://docs.deepchecks.com/stable/getting-started/welcome.html\">Deepchecks</a></strong> is another of these tools that’s available as an open-source Python library and can be invoked from pipeline code through an extensive set of APIs. One unique feature is its ability to handle either tabular or image data with a module for language data currently in alpha release. At the moment, no single tool can handle the variety of tests and guardrails across the entire ML pipeline. We recommend assessing Deepchecks for your particular application niche.</p>",
                "radarId": 67,
                "id": "en_2023-04_202304043",
                "blip_selector": "deepchecks"
            },
            {
                "blip_id": 202304042,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "225",
                "name": "dbt-unit-testing",
                "display_name": "dbt-unit-testing",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "278",
                "description": "<p><strong><a href=\"https://github.com/EqualExperts/dbt-unit-testing\">dbt-unit-testing</a></strong> is a <a href=\"/radar/tools/dbt\">dbt</a> package that allows writing unit tests for a model and its logic by mocking its dependencies. This brings the engineering rigor of fast development feedback to the data ecosystem. Our teams use this package with <a href=\"/radar/platforms/snowflake\">Snowflake</a> to practice test-driven development (<a href=\"https://www.thoughtworks.com/insights/blog/test-driven-development-best-thing-has-happened-software-design\">TDD</a>), although it was only feasible for simple transformations. The library certainly has rough edges when it comes to debugging failed test runs, but the ability to write unit tests on transformers as we develop the model provided a neat developer experience.</p>",
                "radarId": 82,
                "id": "en_2023-04_202304042",
                "blip_selector": "dbt-unit-testing"
            },
            {
                "blip_id": 202304044,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "120",
                "name": "Dependency pruning",
                "display_name": "Dependency pruning",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "126",
                "description": "<p>Starter kits and templates are widely used in software projects to speed up initial setup, but they can pull in many unnecessary dependencies for a particular project. It's important to practice <strong>dependency pruning</strong> — periodically taking a hard look at these dependencies and pruning any that are not used. This helps reduce build and deploy times and decrease the project's attack surface by removing potential vulnerabilities. Although this isn't a new technique, given the increasing frequency of attacks on software supply chains, we advocate for renewed attention to it.</p>",
                "radarId": 3,
                "id": "en_2023-04_202304044",
                "blip_selector": "dependency-pruning"
            },
            {
                "blip_id": 202304018,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "iamlive",
                "display_name": "iamlive",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "37",
                "description": "<p>Creating exactly the minimum viable AWS IAM policies we want, according to the <a href=\"https://en.wikipedia.org/wiki/Principle_of_least_privilege\">principle of least privilege</a>, can be a long journey of trial and error. <strong><a href=\"https://github.com/iann0036/iamlive\">iamlive</a></strong> can shorten that journey considerably. It monitors the AWS CLI calls made from a machine and determines the policies needed to execute those calls. The tool generates a policy document with statements, actions, principals and resources that can be used as a good starting point. We've found it particularly useful to create policies needed in CI/CD pipelines that provision infrastructure, reducing the usual back and forth after a <a href=\"/radar/tools/terraform\">Terraform</a> run fails because the IAM role's policy is insufficient.</p>",
                "radarId": 73,
                "id": "en_2023-04_202304018",
                "blip_selector": "iamlive"
            },
            {
                "blip_id": 202304089,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "nanoGPT",
                "display_name": "nanoGPT",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "328",
                "description": "<p><strong><a href=\"https://github.com/karpathy/nanoGPT\">nanoGPT</a></strong> is a framework for training and fine-tuning medium-sized generative pretrained transformers (GPT). The author, Andrej Karpathy, references <a href=\"https://arxiv.org/abs/1706.03762\">Attention is All You Need</a> and <a href=\"https://arxiv.org/abs/2005.14165\">OpenAI's GPT-3</a> papers to <a href=\"https://www.youtube.com/watch?v=kCc8FmEb1nY\">build a GPT from scratch</a> using <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a>. With all the hype around generative AI, we want to highlight nanoGPT for its simplicity and focus on clearly articulating the building blocks of the GPT architecture.</p>",
                "radarId": 102,
                "id": "en_2023-04_202304089",
                "blip_selector": "nanogpt"
            },
            {
                "blip_id": 202304003,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "190",
                "name": "Akeyless",
                "display_name": "Akeyless",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "86",
                "description": "<p>As more organizations adopt cloud computing, many are starting to integrate multiple cloud providers simultaneously to maximize flexibility and minimize vendor lock-in. However, managing keys and access controls across multiple cloud providers can be a significant challenge, leading to increased complexity and security risks. <strong><a href=\"https://www.akeyless.io/\">Akeyless</a></strong> is a centralized, cloud-based platform that provides unified secrets management with a range of advantages for managing secrets and sensitive data. It integrates seamlessly with different providers, simplifying the management of secrets and access controls to monitor and control who has access to sensitive data; with encryption, access controls, multi-factor authentication and other security mechanisms it ensures only authorized users are able to access sensitive data. Additionally, it provides an intuitive interface for administration and monitoring, providing a less complex and more scalable developer and administration experience.</p>",
                "radarId": 46,
                "id": "en_2023-04_202304003",
                "blip_selector": "akeyless"
            },
            {
                "blip_id": 202304012,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "400",
                "name": "Planning for full utilization",
                "display_name": "Planning for full utilization",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "113",
                "description": "<p>While the practice of creating excess capacity in the delivery process is well-known in the <a href=\"https://www.amazon.com/Principles-Product-Development-Flow-Generation/dp/1935401009\">product management community</a>, we still see far too many teams <strong>planning for full utilization</strong> of team members. Reserving some capacity during sprint planning generally leads to better predictability <em>and</em> better quality; it promotes team resilience to unexpected events like illnesses, production issues, unexpected product requests and tech debt, while also allowing productive activities like team building and ideation that can lead to product innovation. Running at less than full utilization means teams can be more thoughtful about the robustness of the resulting software and pay closer attention to the right observability signals. Our experience is that a fully utilized team leads to a collapse in throughput as well, just as a fully utilized highway creates slow and demoralizing traffic. For example, when one of our teams had unpredictable support issues, they saw a 25% increase in throughput and a 50% decrease in cycle time volatility by planning feature velocity based on only two of the three developer pairs' capacities.</p>",
                "radarId": 22,
                "id": "en_2023-04_202304012",
                "blip_selector": "planning-for-full-utilization"
            },
            {
                "blip_id": 202304033,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "270",
                "name": "Accessibility annotations in designs",
                "display_name": "Accessibility annotations in designs",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "165",
                "description": "<p>The earlier accessibility is considered in software delivery, the easier and cheaper it is to ensure what's built works for as many people as possible. Tools that help communicate <strong>accessibility annotations in designs</strong> help teams consider important elements like document structure, semantic HTML and alternative texts from the beginning of their work. This enables them to ensure user interfaces meet global accessibility standards and address common failures that are actually fairly easy to avoid. <a href=\"/radar/tools/figma\">Figma</a> offers a range of accessibility notation plugins: <a href=\"https://www.figma.com/community/file/953682768192596304\">The A11y Annotation Kit</a>, Twitter's <a href=\"https://www.figma.com/community/file/976946194228458698\">Accessibility Annotation Library</a> and the Axe toolset's <a href=\"https://www.figma.com/community/plugin/1085612091163821851/Axe-for-Designers-(FREE)\">Axe for Designers</a>.</p>",
                "radarId": 5,
                "id": "en_2023-04_202304033",
                "blip_selector": "accessibility-annotations-in-designs"
            },
            {
                "blip_id": 202304062,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Modal",
                "display_name": "Modal",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "229",
                "description": "<p><strong><a href=\"https://modal.com/\">Modal</a></strong> is a platform as a service (PaaS) that offers on-demand compute without the need for your own infrastructure. Modal lets you deploy machine learning models, massively parallel compute jobs, task queues and web apps. It provides a container abstraction that makes the switch from local to cloud deployment seamless, with hot reload both locally and in the cloud. It even removes deployments automatically, avoiding the need for manual clean-up, but can also make them persistent.</p>\n\n<p>Modal is written by the same team that developed the first recommendation engine for Spotify. It takes care of the AI/ML stack end-to-end and can provide on-demand GPU resources, which is useful if you have particularly intensive computational needs. Whether you're working on your laptop or in the cloud, Modal just works, providing an easy and efficient way to run and deploy your projects.</p>",
                "radarId": 39,
                "id": "en_2023-04_202304062",
                "blip_selector": "modal"
            },
            {
                "blip_id": 202304005,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Dapr",
                "display_name": "Dapr",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "204",
                "description": "<p><strong><a href=\"https://dapr.io/\">Dapr</a>,</strong> short for Distributed Application Runtime, helps developers to build resilient, stateless and stateful microservices that run in the cloud. Some people may <a href=\"https://docs.dapr.io/concepts/service-mesh/\">confuse</a> it with a <a href=\"/radar/techniques/service-mesh\">service mesh</a>, because it uses a sidecar architecture that runs as a separate process alongside the application. Dapr is more application oriented and focuses on encapsulating the fault tolerance and connectivity required for building distributed applications. For example, Dapr provides multiple <a href=\"https://docs.dapr.io/developing-applications/building-blocks/\">building blocks</a>, from service invocation and message pub/sub to distributed lock, all of which are common patterns in distributed communication. One of our teams evaluated Dapr on a recent project; given their positive experience, they’re looking forward to bringing it to other projects in the future.</p>",
                "radarId": 36,
                "id": "en_2023-04_202304005",
                "blip_selector": "dapr"
            },
            {
                "blip_id": 202304010,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "400",
                "name": "Casual management of webhooks",
                "display_name": "Casual management of webhooks",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "158",
                "description": "<p>As remote work continues to increase, so does the adoption of chat collaboration platforms and <a href=\"https://www.techtarget.com/searchitoperations/definition/ChatOps\">ChatOps</a>. These platforms often offer webhooks as a simple way to automate sending messages and notifications, but we're noticing a concerning trend: the <strong>casual management of webhooks</strong> — where they’re treated as configuration rather than a secret or credential. This can lead to phishing attacks and compromised internal spaces.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Webhook\">Webhooks</a> are credentials that offer privileged access to an internal space and may contain API keys that can be easily extracted and utilized directly. Not treating them as secrets opens up the possibility of successful phishing attacks. Webhooks in Git repos can easily be extracted and used to send fraudulent payloads, which the user may not have any way to authenticate. To mitigate this threat, teams handling webhooks need to shift their culture and treat webhooks as sensitive credentials. Software developers building integrations with ChatOps platforms must also be mindful of this risk and ensure that webhooks are handled with proper security measures.</p>",
                "radarId": 20,
                "id": "en_2023-04_202304010",
                "blip_selector": "casual-management-of-webhooks"
            },
            {
                "blip_id": 202304027,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "pandera",
                "display_name": "pandera",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "333",
                "description": "<p>In previous Radars, we've featured data validation and testing platforms like <a href=\"/radar/tools/great-expectations\">Great Expectations</a> that can be used to validate assumptions and test the quality of incoming data used for training or classification. Sometimes, though, all you need is a simple code library to implement tests and quality checks directly in pipelines. <strong><a href=\"https://github.com/unionai-oss/pandera\">pandera</a></strong> is a Python library for testing and validating data across a wide range of frame types such as pandas, <a href=\"/radar/languages-and-frameworks/dask\">Dask</a> or PySpark. pandera can implement simple assertions about fields or hypothesis tests based on statistical models. The wide range of supported frame libraries means tests can be written once and then applied to a variety of underlying data formats. pandera can also be used to generate <a href=\"/radar/techniques/synthetic-data-for-testing-models\">synthetic data to test ML models</a>.</p>",
                "radarId": 103,
                "id": "en_2023-04_202304027",
                "blip_selector": "pandera"
            },
            {
                "blip_id": 202304036,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "170",
                "name": "Apache Hudi",
                "display_name": "Apache Hudi",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "190",
                "description": "<p><strong><a href=\"https://hudi.apache.org/\">Apache Hudi</a></strong> is an open-source data lake platform that brings ACID transactional guarantees to the data lake. Our teams have had a great experience using Hudi in a high-volume, high-throughput scenario with real-time inserts and upserts. We particularly like the flexibility Hudi offers for customizing the compaction algorithm which helps in dealing with \"small files\" problems. Apache Hudi falls in the same category as <a href=\"/radar/platforms/delta-lake\">Delta Lake</a> and <a href=\"/radar/platforms/apache-iceberg\">Apache Iceberg</a>. They all support similar features, but each differs in the underlying implementations and detailed feature lists.</p>",
                "radarId": 26,
                "id": "en_2023-04_202304036",
                "blip_selector": "apache-hudi"
            },
            {
                "blip_id": 202304067,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "160",
                "name": "Steampipe",
                "display_name": "Steampipe",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "24",
                "description": "<p><strong><a href=\"https://steampipe.io/\">Steampipe</a></strong> is an open-source tool that lets you instantly query cloud services like AWS, Azure and GCP with SQL. With <a href=\"https://hub.steampipe.io/plugins\">100+ plugins</a> and built-in support for <a href=\"https://steampipe.io/docs/mods/writing-dashboards\">creating dashboards</a>, Steampipe makes it trivial to connect live cloud configuration data with internal or external data sets and create security or compliance dashboards. We've enjoyed working with Steampipe and created several such dashboards with AWS cloud configurations.</p>",
                "radarId": 59,
                "id": "en_2023-04_202304067",
                "blip_selector": "steampipe"
            },
            {
                "blip_id": 202304090,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Neon",
                "display_name": "Neon",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "237",
                "description": "<p><strong><a href=\"https://neon.tech/\">Neon</a></strong> is an open-source alternative to AWS Aurora PostgreSQL. Cloud-native analytical databases have embraced the technique of separating storage from compute nodes to elastically scale on demand. However, it's difficult to do the same in a transactional database. Neon achieves this with its new <a href=\"https://github.com/neondatabase/neon\">multi-tenant storage engine</a> for PostgreSQL. With minimal changes to the mainstream PostgreSQL code, Neon leverages AWS S3 for long-term data storage and elastically scales the processing up or down (including scale-to-zero) for compute. This architecture has several benefits — including cheap and fast clones, copy-on-write and <a href=\"https://neon.tech/branching\">branching</a>. We're quite excited to see new innovations on top of PostgreSQL. Our teams are evaluating Neon, and we recommend you assess it as well.</p>",
                "radarId": 40,
                "id": "en_2023-04_202304090",
                "blip_selector": "neon"
            },
            {
                "blip_id": 202104011,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "220",
                "name": "River",
                "display_name": "River",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "327",
                "description": "<p>At the heart of many approaches to machine learning lies the creation of a model from a set of training data. Once a model is created, it can be used over and over again. However, the world isn't stationary, and often the model needs to change as new data becomes available. Simply re-running the model creation step can be slow and <a href=\"https://medium.com/syncedreview/the-staggering-cost-of-training-sota-ai-models-e329e80fa82\">costly</a>. Incremental learning addresses this issue, making it possible to learn from streams of data incrementally to react to change faster. As a bonus, the compute and memory requirements are lower and predictable. Our practical experience with <strong><a href=\"https://riverml.xyz/dev/\">River</a></strong> continues to be positive. <a href=\"/radar/languages-and-frameworks/vowpal-wabbit\">Vowpal Wabbit</a>, which can be an alternative, has a much steeper learning curve, and the Scikit-like API offered by River makes River more accessible to data scientists.</p>",
                "radarId": 88,
                "id": "en_2023-04_202104011",
                "blip_selector": "river"
            },
            {
                "blip_id": 202304009,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Lakehouse architecture",
                "display_name": "Lakehouse architecture",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "120",
                "description": "<p><strong><a href=\"https://www.cidrdb.org/cidr2021/papers/cidr2021_paper17.pdf\">Lakehouse architecture</a></strong> is an architectural style that combines the scalability of data lakes with the reliability and performance of data warehouses. It enables organizations to store and analyze large volumes of diverse data in a single platform as opposed to having them in separate lake and warehouse tiers, using the same familiar SQL-based tools and techniques. While the term is often associated with vendors like Databricks, open alternatives such as <a href=\"/radar/platforms/delta-lake\">Delta Lake</a>, <a href=\"/radar/platforms/apache-iceberg\">Apache Iceberg</a> and <a href=\"/radar/platforms/apache-hudi\">Apache Hudi</a> are worth considering. Lakehouse architecture can complement <a href=\"/radar/techniques/data-mesh\">data mesh</a> implementations. Autonomous data product teams can choose to leverage a Lakehouse within their data products.</p>",
                "radarId": 8,
                "id": "en_2023-04_202304009",
                "blip_selector": "lakehouse-architecture"
            },
            {
                "blip_id": 201911055,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "410",
                "name": "Lambda pinball",
                "display_name": "Lambda pinball",
                "ring": "Hold",
                "blip_status": "c",
                "volume_date": "2023-04",
                "theta": "135",
                "description": "<p>While <a href=\"/radar/techniques/serverless-architecture\">serverless architectures</a> can be extremely useful for solving some problems, they do come with a certain level of complexity, especially when they involve nontrivial execution and data flows across multiple interdependent <a href=\"/radar/platforms/aws-lambda\">Lambdas</a> — this can sometimes result in a <strong><a href=\"https://twitter.com/ctford/status/1128774411832762369\">Lambda pinball</a></strong> architecture. Our teams have reported that maintaining and testing Lambda pinball architectures can be very challenging: understanding the infrastructure, deployment, diagnosis and debugging can become difficult. At a code level, simple mapping between domain concepts and the multiple Lambdas involved is practically impossible, making any changes and additions challenging. Although we believe serverless is the right fit for some problems and domains, it's not a \"silver bullet\" for every problem, which is why you should try to avoid Lambda pinball. One pattern that can help is to draw a distinction between public and published interfaces and apply domain boundaries with published interfaces between them.</p>",
                "radarId": 21,
                "id": "en_2023-04_201911055",
                "blip_selector": "lambda-pinball"
            },
            {
                "blip_id": 202005061,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "110",
                "name": "DVC",
                "display_name": "DVC",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "45",
                "description": "<p><strong><a href=\"https://dvc.org/\">DVC</a></strong> continues to be our tool of choice for managing experiments in data science projects. The fact that it's <a href=\"/radar/tools/git\">Git</a>-based makes it a known turf for developers to bring engineering practices to the data science ecosystem. DVC's opinionated view of a model checkpoint carefully encapsulates a training data set, a test data set, model hyperparameters and the code. By making <a href=\"/radar/techniques/versioning-data-for-reproducible-analytics\">reproducibility</a> a first-class concern, it allows the team to time travel across various versions of the model. Our teams have successfully used DVC in production to enable <a href=\"/radar/techniques/continuous-delivery-for-machine-learning-cd4ml\">continuous delivery for ML (CD4ML)</a>; it can be plugged in with any type of storage (including AWS S3, Google Cloud Storage, <a href=\"/radar/platforms/minio\">MinIO</a> and Google Drive). However, with data sets getting bigger, file system–based snapshotting could become particularly expensive. When the underlying data is changing rapidly, DVC on top of a good versioned storage allows tracking model drifts over a period of time. Our teams have effectively used DVC on top of data storage formats like <a href=\"/radar/platforms/delta-lake\">Delta Lake</a> which optimizes versioning (<a href=\"https://en.wikipedia.org/wiki/Copy-on-write\">COW</a>). A majority of our data science teams set up DVC as a day zero task while they bootstrap a project; for this reason we're happy to move it to Adopt.</p>",
                "radarId": 45,
                "id": "en_2023-04_202005061",
                "blip_selector": "dvc"
            },
            {
                "blip_id": 202203041,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "95",
                "name": "Gradle Kotlin DSL",
                "display_name": "Gradle Kotlin DSL",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "300",
                "description": "<p>Our teams now view <strong>Gradle Kotlin DSL</strong> as the default for starting new projects using <a href=\"/radar/tools/gradle\">Gradle</a>, preferring it over <a href=\"/radar/languages-and-frameworks/groovy\">Groovy</a>. Teams already using Groovy should consider migration. <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> provides better support for refactoring and simpler editing in IDEs, and our teams report that it produces code that is easier to read and maintain. Given some IDEs now support migration, it should be relatively quick to experiment with replacing existing Groovy. In some situations Kotlin might be slower than Groovy; however, for many projects, this is unlikely to impact the team.</p>",
                "radarId": 80,
                "id": "en_2023-04_202203041",
                "blip_selector": "gradle-kotlin-dsl"
            },
            {
                "blip_id": 202304074,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Zero trust security for CI/CD",
                "display_name": "Zero trust security for CI/CD",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "99",
                "description": "<p>If not properly secured, the infrastructure and tools that run our build and delivery pipelines can become a big liability. Pipelines need access to critical data and systems like source code, credentials and secrets to build and deploy software. This makes these systems very inviting to malicious actors. We therefore highly recommend applying <strong><a href=\"/radar/techniques/zero-trust-architecture\">zero trust</a> security for CI/CD</strong> pipelines and infrastructure — trusting them as little as necessary. This encompasses a number of techniques: If available, authenticate your pipelines with your cloud provider via federated identity mechanisms like OIDC, instead of giving them direct access to secrets. Implement the principle of least privilege by minimizing the access of individual user or runner accounts, rather than employing \"god user accounts\" with unlimited access. Use your runners in an ephemeral way instead of reusing them, to reduce the risk of exposing secrets from previous jobs or running jobs on compromised runners. Keep the software in your agents and runners up to date. Monitor the integrity, confidentiality and availability of your CI/CD systems the same way you would monitor your production software.</p>\n\n<p>We're seeing teams forget about these types of practices particularly when they’re used to working with a self-managed CI/CD infrastructure in internal network zones. While all of these practices are important in your internal networks, they become even more crucial when using a managed service, as that extends the attack surface and blast radius even more.</p>",
                "radarId": 19,
                "id": "en_2023-04_202304074",
                "blip_selector": "zero-trust-security-for-ci-cd"
            },
            {
                "blip_id": 202104005,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "90",
                "name": "GitHub Actions",
                "display_name": "GitHub Actions",
                "ring": "Adopt",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "225",
                "description": "<p><strong><a href=\"https://docs.github.com/en/actions\">GitHub Actions</a></strong> has become a default starting point for many teams that need to get CI or CD up and running quickly in a greenfield environment. Among other things, it can take on more complex workflows and call other actions in composite actions. Although the ecosystem in <a href=\"https://github.com/marketplace?type=actions\">GitHub Marketplace</a> continues to grow, we still urge caution in giving third-party GitHub Actions access to your build pipeline. We recommend following GitHub's advice on <a href=\"https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions\">security hardening</a> to avoid sharing secrets in insecure ways. However, the convenience of creating your build workflow directly in GitHub next to your source code combined with the ability to run GitHub Actions locally, using open-source tools such as <a href=\"https://github.com/nektos/act\">act</a>, is a compelling option that has streamlined the setup and onboarding of our teams.</p>",
                "radarId": 24,
                "id": "en_2023-04_202104005",
                "blip_selector": "github-actions"
            },
            {
                "blip_id": 202304097,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Reachability analysis when testing infrastructure",
                "display_name": "Reachability analysis when testing infrastructure",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "123",
                "description": "<p>When deploying infrastructure as code, we've noticed that a lot of time can be spent diagnosing and repairing production issues that result from systems being unable to communicate with one another. Because the network topology between them can be complex, the entire route may not be traversable even if individual ports and endpoints have been configured correctly. Infrastructure testing practices usually include verifying the right ports are open or closed or that an endpoint can be accessed, but we've only recently begun doing <strong>reachability analysis when testing infrastructure</strong>. The analysis generally involves more than simple yes/no determinations. For example, a tool might traverse and report on multiple routes through transit gateways. This technique is supported by tools across all the major cloud providers. Azure has a service called <a href=\"https://learn.microsoft.com/en-us/azure/network-watcher/network-watcher-connectivity-cli\">Network Watcher</a> that can be scripted in automated tests and GCP supports <a href=\"https://cloud.google.com/network-intelligence-center/docs/connectivity-tests/concepts/overview\">Connectivity Tests</a>. Now, in AWS, you can test reachability <a href=\"https://aws.amazon.com/about-aws/whats-new/2022/11/amazon-vpc-reachability-analyzer-network-analysis-accounts-aws-organization/\">across accounts</a> in the same organization.</p>",
                "radarId": 16,
                "id": "en_2023-04_202304097",
                "blip_selector": "reachability-analysis-when-testing-infrastructure"
            },
            {
                "blip_id": 202304102,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "DataFusion",
                "display_name": "DataFusion",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "75",
                "description": "<p><strong><a href=\"https://github.com/apache/arrow-datafusion\">DataFusion</a></strong> is a part of the data community's exploration of <a href=\"/radar/languages-and-frameworks/rust\">Rust</a>'s performance, memory safety and concurrency features applied to data processing. It shares similarities with <a href=\"/radar/languages-and-frameworks/polars\">Polars</a>, namely a familiar DataFrame API in Rust (with Python bindings), the use of <a href=\"https://arrow.apache.org/\">Apache Arrow</a> under the hood and SQL support. Even though it's primarily designed for single-process execution, distributed processing support is in the works within <a href=\"https://github.com/apache/arrow-ballista\">Ballista</a>. We think the Rust libraries for data processing are an evolving space worth following and exploring, and DataFusion is a part of it.</p>",
                "radarId": 66,
                "id": "en_2023-04_202304102",
                "blip_selector": "datafusion"
            },
            {
                "blip_id": 202304007,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "375",
                "name": "Denodo as primary data transformation tool",
                "display_name": "Denodo as primary data transformation tool",
                "ring": "Hold",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "225",
                "description": "<p><a href=\"https://www.denodo.com/\">Denodo</a> is a data virtualization tool that aims to make it easier to expose and secure transformed, consumer-friendly data (from multiple underlying data sources and through a variety of interfaces) from one platform. Data transformations within Denodo can be defined by creating virtual databases and views using a SQL-like language called VQL which are executed when a user queries the virtual database. Underneath, Denodo can delegate queries on the virtual databases against one or multiple underlying databases.</p>\n\n<p>Although Denodo makes it easy to start exposing consumer-friendly data, performance degrades as layers of views and virtual databases are built on top of each other and queries with multiple joins start hitting multiple underlying databases. These problems are solvable, but they require fairly deep knowledge of the product's behavior and performance tuning options. Because of these drawbacks and given its limited support for unit testing, we recommend that you do not use <strong>Denodo as a primary data transformation tool</strong> and use tools like <a href=\"/radar/platforms/apache-spark\">Spark</a> or SQL (with <a href=\"/radar/tools/dbt\">dbt</a>) for your data transformations instead.</p>",
                "radarId": 44,
                "id": "en_2023-04_202304007",
                "blip_selector": "denodo-as-primary-data-transformation-tool"
            },
            {
                "blip_id": 202304017,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "298",
                "name": "axe Linter",
                "display_name": "axe Linter",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "85",
                "description": "<p>It's becoming increasingly easy for developers to catch accessibility issues early in the development process. While tools like <a href=\"/radar/tools/axe-core\">axe-core</a> scan code for accessibility issues in your pipelines, the <strong><a href=\"https://www.deque.com/axe/linters/\">axe Linter</a></strong> VSCode extension helps find them even before that, while writing code. The vast majority of accessibility issues fall into categories that could be prevented by automated testing and using live feedback linters like this.</p>",
                "radarId": 64,
                "id": "en_2023-04_202304017",
                "blip_selector": "axe-linter"
            },
            {
                "blip_id": 202304064,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Self-hosted LLMs",
                "display_name": "Self-hosted LLMs",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "115",
                "description": "<p>Large language models (LLMs) generally require significant GPU infrastructure to operate. We're now starting to see ports, like <a href=\"https://github.com/ggerganov/llama.cpp\">llama.cpp</a>, that make it possible to run LLMs on different hardware — including Raspberry Pis, laptops and commodity servers. As such, <strong>self-hosted LLMs</strong> are now a reality, with open-source examples including <a href=\"https://huggingface.co/docs/transformers/model_doc/gptj\">GPT-J</a>, <a href=\"https://huggingface.co/togethercomputer/GPT-JT-6B-v1\">GPT-JT</a> and <a href=\"https://research.facebook.com/publications/llama-open-and-efficient-foundation-language-models\">LLaMA</a>. This approach has several benefits, offering better control in fine-tuning for a specific use case, improved security and privacy as well as offline access. However, you should carefully assess the capability within the organization and the cost of running such LLMs before making the decision to self-host.</p>",
                "radarId": 17,
                "id": "en_2023-04_202304064",
                "blip_selector": "self-hosted-llms"
            },
            {
                "blip_id": 202304077,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Cozo",
                "display_name": "Cozo",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "196",
                "description": "<p><strong><a href=\"https://github.com/cozodb/cozo\">Cozo</a></strong> is an embeddable relational database that uses <a href=\"https://en.wikipedia.org/wiki/Datalog\">Datalog</a> for querying. We're intrigued with its support for <a href=\"https://docs.cozodb.org/en/latest/releases/v0.4.html\">time-travel</a> queries and modeling graph data in relational schema. We quite like that it delegates data storage to existing popular engines — including SQLite, RocksDB, Sled and TiKV. Although Cozo is still in its early stages of development, we find it's worth assessing.</p>",
                "radarId": 35,
                "id": "en_2023-04_202304077",
                "blip_selector": "cozo"
            },
            {
                "blip_id": 202210007,
                "quadrant": "Tools",
                "movement": "c",
                "locale": "en",
                "radius": "290",
                "name": "Kubeshark",
                "display_name": "Kubeshark",
                "ring": "Assess",
                "blip_status": "c",
                "volume_date": "2023-04",
                "theta": "22",
                "description": "<p><strong><a href=\"https://kubeshark.co/\">Kubeshark</a></strong> is an API traffic viewer for <a href=\"/radar/platforms/kubernetes\">Kubernetes</a>. Until November 2022, it was known as Mizu. Unlike other tools, Kubeshark does not require instrumentation or code changes. It runs as a <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\">DaemonSet</a> to inject a container at the node level in your Kubernetes cluster and performs tcpdump-like operations. We find it useful as a debugging tool, as it can observe all API communications across multiple protocols (REST, gRPC, <a href=\"/radar/platforms/apache-kafka\">Kafka</a>, AMQP and <a href=\"/radar/platforms/redis\">Redis</a>) in real time.</p>",
                "radarId": 76,
                "id": "en_2023-04_202210007",
                "blip_selector": "kubeshark"
            },
            {
                "blip_id": 202304051,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Fugue",
                "display_name": "Fugue",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "306",
                "description": "<p>In data engineering we're seeing a bewildering choice of tools and technologies. For less experienced engineers especially, it can make sense to work with an abstraction layer to get into the tools, to focus on the task at hand without having to learn several technology-specific APIs and to have the option of switching underlying technologies without too much effort. <strong><a href=\"https://fugue-tutorials.readthedocs.io/\">Fugue</a></strong> is such an abstraction layer. It provides a unified interface for distributed computing, which makes it possible to run Python, pandas and SQL code on <a href=\"/radar/platforms/apache-spark\">Spark</a>, <a href=\"/radar/languages-and-frameworks/dask\">Dask</a>, Ray and <a href=\"/radar/platforms/duckdb\">DuckDB</a> with minimal rewrites. However, if your team has already decided on a set of technologies, and if they're familiar with their APIs and deep into tweaking and tuning their backend systems, such an abstraction layer provides less value in our experience.</p>",
                "radarId": 98,
                "id": "en_2023-04_202304051",
                "blip_selector": "fugue"
            },
            {
                "blip_id": 202210008,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "185",
                "name": "Soda Core",
                "display_name": "Soda Core",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "29",
                "description": "<p><strong><a href=\"https://www.soda.io/core\">Soda Core</a></strong> is an open-source data quality and observability tool. Our teams have used it to validate data as it arrives in a system, before and after transformations, and set up automated monitoring checks for anomalies. We're happy with <a href=\"https://docs.soda.io/soda-cl/soda-cl-overview.html\">SodaCL</a>, the DSL for writing data checks in Soda Core, as it helps team members other than data engineers write quality checks. Overall, our experience using Soda Core to find and resolve data issues at scale has been positive.</p>",
                "radarId": 58,
                "id": "en_2023-04_202210008",
                "blip_selector": "soda-core"
            },
            {
                "blip_id": 202304104,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Stencil",
                "display_name": "Stencil",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "335",
                "description": "<p><strong><a href=\"https://stenciljs.com/\">Stencil</a></strong> is a library that enables developers to build reusable Web Components using well-established tools such as <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>, JSX and JSDoc. According to our teams' experiences, Stencil is a very good choice for building platform-agnostic design systems. For the few browsers that don't support modern browser features, Stencil ensures compatibility by polyfilling unsupported features and APIs on demand.</p>",
                "radarId": 89,
                "id": "en_2023-04_202304104",
                "blip_selector": "stencil"
            },
            {
                "blip_id": 202304022,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "173",
                "name": "Helmfile",
                "display_name": "Helmfile",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "62",
                "description": "<p><strong><a href=\"https://github.com/helmfile/helmfile\">Helmfile</a></strong> is an open-source command line tool and a declarative specification for managing and installing a collection of <a href=\"/radar/tools/helm\">Helm</a> charts. You can use it to help with version control of the Helm values files, the charts used and other overrides. It enables CI/CD workflows with Helm charts and helps create reproducible environments. We've used Helmfile to manage complex deployments with multiple dozens of Helm charts and found it simplifies the deployment workflow.</p>",
                "radarId": 51,
                "id": "en_2023-04_202304022",
                "blip_selector": "helmfile"
            },
            {
                "blip_id": 202304001,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "Accessibility-aware component test design",
                "display_name": "Accessibility-aware component test design",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "172",
                "description": "<p>One of the many places in the software delivery process to consider accessibility requirements early on is during web component testing. Testing framework plugins like <a href=\"https://www.npmjs.com/package/chai-a11y-axe\">chai-a11y-axe</a> provide assertions in their API to check for the basics. But in addition to using what testing frameworks have to offer, <strong>accessibility-aware component test design</strong> further helps to provide all the semantic elements needed by screen readers and other assistive technologies.</p>\n\n<p>Firstly, instead of using test ids or classes to find and select the elements you want to validate, use a principle of identifying elements by <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA\">ARIA</a> roles or other semantic attributes that are used by assistive technologies. Some testing libraries, like <a href=\"https://testing-library.com/docs/queries/about/#priority\">Testing Library</a>, even recommend this in their documentation. Secondly, do not just test for click interactions; also consider users who cannot use a mouse or see the screen, and consider adding additional tests for the keyboard and other interactions.</p>",
                "radarId": 10,
                "id": "en_2023-04_202304001",
                "blip_selector": "accessibility-aware-component-test-design"
            },
            {
                "blip_id": 202304035,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Passkeys",
                "display_name": "Passkeys",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "253",
                "description": "<p>The \"end of passwords\" might be near, finally. Shepherded by the FIDO alliance and backed by Apple, Google and Microsoft, <strong><a href=\"https://fidoalliance.org/passkeys/\">passkeys</a></strong> are nearing mainstream usability. When setting up a new login with passkeys, a key pair is generated: the website receives the public key and the user keeps the private key. Handling login uses asymmetric cryptography. The user proves that they're in possession of the private key, but, unlike passwords, it’s never sent to the website. On users' devices, access to passkeys is protected using biometrics or a PIN.</p>\n\n<p>Passkeys can be stored and synced within the Big Tech ecosystems, using Apple's iCloud Keychain, Google Password Manager or Windows Hello. In most cases this works only with recent OS and browser versions. Notably, storing passkeys in Windows Hello is not supported on Windows 10. Fortunately, though, the <a href=\"https://en.wikipedia.org/wiki/Client_to_Authenticator_Protocol\">Client to Authenticator Protocol (CTAP)</a> makes it possible for passkeys to be kept on a different device other than the one that creates the key or needs it for login. For example, a user creates a passkey for a website on Windows 10 and stores it on an iPhone by scanning a QR code. Because the key is synced via iCloud the user can log in to the website from, say, their MacBook. Passkeys can be stored on hardware security keys, too, and support for native apps has arrived on iOS and Android.</p>\n\n<p>Despite some usability issues — for example, Bluetooth needs to work because device proximity is checked when a QR code is scanned — passkeys are worth considering. We suggest you experiment with them on <a href=\"https://www.passkeys.io/\">passkeys.io</a> to get a feeling for their usability.</p>",
                "radarId": 42,
                "id": "en_2023-04_202304035",
                "blip_selector": "passkeys"
            },
            {
                "blip_id": 202304032,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": ".NET 7 Native AOT",
                "display_name": ".NET 7 Native AOT",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "275",
                "description": "<p><strong><a href=\"https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/\">.NET 7 Native AOT</a></strong> is a big step forward in a long line of approaches to deploying .NET applications natively. It does away with IL and JIT at runtime entirely. Introduced in .NET 7, this improvement is particularly significant for running .NET applications in serverless functions. This new deployment option eliminates the cold start issue, which has been a persistent problem for .NET on serverless platforms like <a href=\"/radar/platforms/aws-lambda\">AWS Lambda</a> and Azure Functions. With Native AOT, you can generate a smaller deployable binary than previous methods, resulting in faster cold start times. AWS has officially embraced Native AOT, supporting it with their Amazon Lambda Tools. This new deployment option brings .NET 7 on par with TypeScript/JavaScript in terms of cold start times, making it a viable option for organizations with a largely .NET-oriented infrastructure.</p>",
                "radarId": 92,
                "id": "en_2023-04_202304032",
                "blip_selector": "net-7-native-aot"
            },
            {
                "blip_id": 202304013,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "100",
                "name": "CI/CD infrastructure as a service",
                "display_name": "CI/CD infrastructure as a service",
                "ring": "Adopt",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "144",
                "description": "<p>The options for <strong>CI/CD infrastructure as a service</strong> have become so manifold and mature that the cases in which it's worth managing your entire CI infrastructure yourself are becoming very rare. Using managed services like <a href=\"/radar/platforms/github-actions\">GitHub Actions</a>, <a href=\"/radar/platforms/azure-devops\">Azure DevOps</a> or <a href=\"/radar/platforms/gitlab-ci-cd\">Gitlab CI/CD</a> comes with all the common advantages (and trade-offs) of managed cloud services. You don't have to spend time, effort and hardware costs on maintenance and operations of this often complex infrastructure. Teams can take advantage of elasticity and self-service, whereas provisioning more of the right agents or getting a new plugin or feature are often a bottleneck in companies that host CI themselves. Even the use cases that require to run build and verification on your own hardware can now mostly be covered with self-hosted runners (we've written about some for GitHub Actions, <a href=\"/radar/platforms/actions-runner-controller\">actions-runner-controller</a> and the <a href=\"/radar/tools/philips-s-self-hosted-github-runner\">Philips's self-hosted GitHub runner</a>). Note, however, that you won’t get out-of-the-box security just because you are using a managed services; while mature services provide all the security features you need, you'll still need to use them to implement <a href=\"/radar/techniques/zero-trust-security-for-ci-cd\">zero trust security for your CI/CD</a> infrastructure.</p>",
                "radarId": 2,
                "id": "en_2023-04_202304013",
                "blip_selector": "ci-cd-infrastructure-as-a-service"
            },
            {
                "blip_id": 202304008,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Jetpack DataStore",
                "display_name": "Jetpack DataStore",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "294",
                "description": "<p><strong><a href=\"https://developer.android.com/topic/libraries/architecture/datastore\">Jetpack DataStore</a></strong> is a new data storage solution to store data asynchronously, consistently and transactionally. It has two implementations: Preferences DataStore for untyped key-value pairs and Proto DataStore for complex data types using Protobufs. By default it is used with <a href=\"/radar/languages-and-frameworks/kotlin\">Kotlin</a> coroutines and Flow but additional support for RXJava 2 and 3 is available. The documentation recommends you consider migrating to DataStore if you're currently using SharedPreferences, and we agree with that recommendation.</p>",
                "radarId": 84,
                "id": "en_2023-04_202304008",
                "blip_selector": "jetpack-datastore"
            },
            {
                "blip_id": 202304047,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Evidently",
                "display_name": "Evidently",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "53",
                "description": "<p><strong><a href=\"https://www.evidentlyai.com/\">Evidently</a></strong> is an open-source Python tool designed to help build monitoring for machine learning models to guarantee their quality and stable production operations. It can be used at various stages of a model lifecycle: as a dashboard to review the model in a notebook, as part of a pipeline or as a monitoring service after deployment. With a particular focus on model drift detection, Evidently also offers features such as model quality, data quality inspection and target drift detection. In addition, it has many built-in metrics, associated visualizations and tests which are easily combined into a report, dashboard or a test-driven pipeline.</p>",
                "radarId": 70,
                "id": "en_2023-04_202304047",
                "blip_selector": "evidently"
            },
            {
                "blip_id": 202203031,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "175",
                "name": "Typesense",
                "display_name": "Typesense",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "10",
                "description": "<p><strong><a href=\"https://github.com/typesense/typesense\">Typesense</a></strong> is an open-source, typo-tolerant search engine optimized for low-latency and high-performance search experiences. If you're building a latency-sensitive search application with a search index size that can fit in memory, Typesense is a powerful alternative. Our teams use Typesense in high availability multi-node clusters to distribute workload and ensure critical search infrastructure is resilient. They had a good experience with Typesense in production, which is why we've moved it to Trial.</p>",
                "radarId": 62,
                "id": "en_2023-04_202203031",
                "blip_selector": "typesense"
            },
            {
                "blip_id": 202304026,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "Galacean Engine",
                "display_name": "Galacean Engine",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "312",
                "description": "<p><strong><a href=\"https://github.com/galacean/engine\">Galacean Engine</a></strong> is a web- and mobile-first interactive engine, designed to provide a seamless way to render component-based architecture and animation in a mobile-friendly manner. With its focus on lightweight and high-performance rendering, it has become an increasingly popular choice for developers creating engaging mobile games. It's a <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>-based engine that developers report outperforms alternatives.</p>",
                "radarId": 99,
                "id": "en_2023-04_202304026",
                "blip_selector": "galacean-engine"
            },
            {
                "blip_id": 202304111,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "305",
                "name": "ChatGPT",
                "display_name": "ChatGPT",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "80",
                "description": "<p><strong><a href=\"https://openai.com/blog/chatgpt\">ChatGPT</a></strong> is an interesting tool that has the potential to be useful for various aspects of the software creation process. As a large language model (LLM) that has \"read\" billions of web pages, ChatGPT can provide additional perspectives and assist with different tasks, from generating ideas and requirements to creating code and tests. Its ability to work across multiple parts of the software lifecycle makes it a versatile tool that might improve efficiency and reduce errors in the development process. GPT4, the LLM that powers ChatGPT, now also has the ability to integrate with external tools such as a knowledge management repository, sandboxed coding environment or web search. For now, we think that ChatGPT is best used as an input to a process, such as helping with a first draft of a story or the boilerplate for a coding task, rather than a tool that produces \"fully baked\" results.</p>\n\n<p>There are concerns around intellectual property and data privacy with these AI tools, including some unresolved legal questions, so we recommend organizations seek advice from their legal teams before use. Some of our clients have already begun experimenting with ChatGPT across various stages of the software lifecycle, and we encourage others to explore the tool and assess its potential benefits. We expect that, like <a href=\"/radar/tools/github-copilot\">GitHub Copilot</a>, a \"for business\" offering will soon be available which may ease intellectual property concerns.</p>",
                "radarId": 65,
                "id": "en_2023-04_202304111",
                "blip_selector": "chatgpt"
            },
            {
                "blip_id": 202304021,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Design token translation tools",
                "display_name": "Design token translation tools",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "64",
                "description": "<p><a href=\"/radar/techniques/design-tokens\">Design tokens</a> are a useful mechanism for defining standard elements in <a href=\"/radar/techniques/design-systems\">design systems</a>. But, keeping those design elements consistent across media such as mobile apps or web frameworks is an increasingly formidable task. <strong><a href=\"https://design-tokens.github.io/community-group/format/#dfn-translation-tool\">Design token translation tools</a></strong> simplify this problem by organizing and automating transformation from the token description (in YAML or JSON) into the code that actually controls rendering in a given medium such as CSS, React components or HTML. <a href=\"https://amzn.github.io/style-dictionary/#/\">Style Dictionary</a> is an open-source example that is widely used and integrates well into automated build pipelines, but there are also commercial alternatives such as <a href=\"https://specifyapp.com/\">Specify</a>.</p>",
                "radarId": 68,
                "id": "en_2023-04_202304021",
                "blip_selector": "design-token-translation-tools"
            },
            {
                "blip_id": 1254,
                "quadrant": "Platforms",
                "movement": "c",
                "locale": "en",
                "radius": "65",
                "name": "Contentful",
                "display_name": "Contentful",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2023-04",
                "theta": "202",
                "description": "<p>Headless content management systems have become a common component of digital platforms. <strong><a href=\"http://www.contentful.com/\">Contentful</a></strong> is still our default choice in this space, but new entrants like <a href=\"/radar/platforms/strapi\">Strapi</a> have impressed us too. We particularly like Contentful's API-first approach and implementation of <a href=\"http://www.contentful.com/r/knowledgebase/cms-as-code/\">CMS as code</a>. It supports powerful content modeling primitives as code and content model evolution scripts, which allow it to be treated like other data store schemas and enable <a href=\"http://martinfowler.com/articles/evodb.html\">evolutionary database design</a> practices to be applied to CMS development. Recently, Contentful has released an <a href=\"https://www.contentful.com/developers/docs/extensibility/app-framework/\">app framework</a> to write apps that make it easier to adapt Contentful to individual business processes and to integrate with other services. Apps can be built by and for a specific organization but a marketplace for apps is emerging, too.</p>",
                "radarId": 23,
                "id": "en_2023-04_1254",
                "blip_selector": "contentful"
            },
            {
                "blip_id": 202304066,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Spin",
                "display_name": "Spin",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "261",
                "description": "<p><strong><a href=\"https://github.com/fermyon/spin\">Spin</a></strong> is an open-source platform for building and running microservices in <a href=\"/radar/languages-and-frameworks/webassembly\">WebAssembly</a> (WASM). In previous editions of the Radar, we talked about WebAssembly in the context of browsers, but we’re now witnessing the penetration on the server side due to its capabilities for <a href=\"https://hacks.mozilla.org/2019/11/announcing-the-bytecode-alliance/\">fine-grained sandboxing</a>, cross-language interoperability and hot reloading. With Spin CLI, you can quickly create and distribute WebAssembly microservices in <a href=\"/radar/languages-and-frameworks/rust\">Rust</a>, <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>, Python and TinyGo. We're excited about Spin, and we recommend you carefully assess it as it moves out of early preview.</p>",
                "radarId": 43,
                "id": "en_2023-04_202304066",
                "blip_selector": "spin"
            },
            {
                "blip_id": 202304038,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "330",
                "name": "Autoware",
                "display_name": "Autoware",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "188",
                "description": "<p><strong><a href=\"https://github.com/autowarefoundation/autoware\">Autoware</a></strong> is an open-source autonomous driving software stack built on <a href=\"https://www.ros.org\">ROS (Robot Operating System)</a> which can be used to develop and deploy advanced driver assist systems (ADAS) for a wide range of vehicles like cars and trucks. It provides a set of tools and algorithms for various aspects of autonomous driving, such as perception, decision-making and control. It also has a planning and control module that generates a trajectory for the vehicle based on its environment and objectives. It encourages open innovations in autonomous driving technology. We're building prototypes using Autoware to validate new product ideas and find it helpful.</p>",
                "radarId": 34,
                "id": "en_2023-04_202304038",
                "blip_selector": "autoware"
            },
            {
                "blip_id": 202304041,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "320",
                "name": "dbt-expectations",
                "display_name": "dbt-expectations",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "285",
                "description": "<p><strong><a href=\"https://github.com/calogica/dbt-expectations/tree/0.8.2/\">dbt-expectations</a></strong> is an extension package for <a href=\"/radar/tools/dbt\">dbt</a> inspired by <a href=\"/radar/tools/great-expectations\">Great Expectations</a>. Data quality is an important tenet of data governance, so when it comes to automated data governance, it's important to craft built-in controls that flag anomalies or quality issues in data pipelines. Just as unit tests run in a build pipeline, dbt-expectations makes assertions during the execution of a data pipeline. In the dbt world, you can run Great Expectations–style data quality tests on your warehouse directly within dbt. Our teams have been exploring this, and it made sense to highlight it.</p>",
                "radarId": 94,
                "id": "en_2023-04_202304041",
                "blip_selector": "dbt-expectations"
            },
            {
                "blip_id": 202304019,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Mend SCA",
                "display_name": "Mend SCA",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "43",
                "description": "<p><strong><a href=\"https://www.mend.io/sca/\">Mend SCA</a></strong> (software composition analysis), previously Whitesource, helps detect open-source software dependencies by identifying if they are up to date, contain security flaws or have licensing requirements. Our teams have had good experience with integrating Mend SCA in their paths to production. Right from IDE integration, raising an automatic PR based on an identified issue to integrating into the CI/CD pipeline, this tool offers a great developer experience. Other popular SCA tools, such as <a href=\"/radar/tools/snyk\">Snyk</a>, are comparable and also worth exploring for your security needs.</p>",
                "radarId": 55,
                "id": "en_2023-04_202304019",
                "blip_selector": "mend-sca"
            },
            {
                "blip_id": 202304094,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Prompt engineering",
                "display_name": "Prompt engineering",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "131",
                "description": "<p><strong>Prompt engineering</strong> refers to the process of designing and refining prompts for generative AI models to obtain high-quality responses from the model. This involves carefully crafting prompts that are specific, clear and relevant to the desired task or application in order to elicit useful outputs from the model. Prompt engineering aims to enhance large language model (LLM) capabilities in tasks like question answering and arithmetic reasoning or in domain-specific contexts. For software creation, you might use prompt engineering to get an LLM to write a story, an API or a test suite based on a brief conversation with a stakeholder or some notes. Developing effective prompting techniques is becoming a valuable skill in working with AI systems. There is debate over whether prompt engineering is an art or science, and potential security risks, such as “prompt injection attacks,” should be considered.</p>",
                "radarId": 15,
                "id": "en_2023-04_202304094",
                "blip_selector": "prompt-engineering"
            },
            {
                "blip_id": 202304053,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "GitHub Copilot",
                "display_name": "GitHub Copilot",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "43",
                "description": "<p><strong><a href=\"https://github.com/features/copilot\">GitHub Copilot</a></strong> is an AI coding assistant, created by a collaboration between Microsoft and OpenAI. It uses machine learning models to generate suggestions based on the context of what a developer is working on. It features strong IDE integration and uses an existing codebase and editor context to create suggestions. Despite being billed as \"your AI pair programmer\" we would not call what it does \"pairing\" — we'd probably describe it as a kind of supercharged, context-sensitive Stack Overflow. When it correctly predicts what a developer is trying to do, it can be a powerful tool for getting stuff done. Like all LLM-based AIs, though, it has a tendency to hallucinate the use of plausible but nonexistent APIs and may introduce bugs through slightly faulty algorithms. We've had success generating code at the line, block and method level, as well as creating tests or infrastructure configurations. Interestingly, it works best when you use good naming practices, so it encourages more readable code.</p>\n\n<p>AI tool capabilities are advancing rapidly, and we think it's sensible for organizations to try them. Some sales pitches for Copilot have claimed very high efficiency gains, but we remain skeptical: after all, writing code isn't the only thing that developers spend time on, and it's notoriously difficult to measure developer productivity in the first place. That said, Copilot is a fairly inexpensive tool; if it offers any productivity gain at all, it's probably worth it. <a href=\"https://github.com/features/preview/copilot-x\">Copilot X</a> — in preview as of this writing — offers additional functionality and integration within a software creation workflow. Copilot has a <a href=\"https://docs.github.com/en/enterprise-cloud@latest/copilot/overview-of-github-copilot/about-github-copilot-for-business\">\"for business\"</a> offering, which provides more clarity around intellectual property issues as well as the ability to manage tool features centrally across an organization. We think these features are critical for enterprise adoption.</p>",
                "radarId": 72,
                "id": "en_2023-04_202304053",
                "blip_selector": "github-copilot"
            },
            {
                "blip_id": 202304030,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "SolidJS",
                "display_name": "SolidJS",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "344",
                "description": "<p><strong><a href=\"https://www.solidjs.com/\">SolidJS</a></strong> is a declarative JavaScript library for creating user interfaces. In the last year, we've seen an increase in SolidJS's visibility and popularity among developers, particularly those interested in creating richer user interactions. SolidJS compiles its templates to real DOM nodes (instead of using vDOM) and updates them with fine-grained reactions which reduces unnecessary DOM updates and results in faster performance and a better user experience. It has a simple API and great support for <a href=\"/radar/languages-and-frameworks/typescript\">TypeScript</a>, which can help catch errors during development. Another benefit of SolidJS is its small bundle size, which is ideal for building fast and lightweight web applications and benefits a mobile-first approach. SolidJS is a relatively new framework, so it doesn't have as large of a community or ecosystem as other frameworks. However, judging by the growing number of useful libraries and tools, it seems to be growing in popularity. Its reactive update system, functional component model and templating system make SolidJS an attractive choice to assess, and we're seeing interest from several teams and communities.</p>",
                "radarId": 105,
                "id": "en_2023-04_202304030",
                "blip_selector": "solidjs"
            },
            {
                "blip_id": 202304048,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "Ferrocene",
                "display_name": "Ferrocene",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "296",
                "description": "<p>The <a href=\"/radar/languages-and-frameworks/rust\">Rust</a> language has been gaining popularity in recent years for its safety, performance and concurrency features. However, certified Rust toolchains have been missing for applications in safety-critical markets like automotive. This gap is being addressed by <strong><a href=\"https://ferrous-systems.com/ferrocene/\">Ferrocene</a></strong>, a Rust compiler toolchain. Ferrocene promises to be ISO26262 functional safety standard compliant for the electronic systems in road vehicles; an effort to qualify the language and toolchain for use in such domains is already underway. We're excited by its progress and the availability of such safety-compliant tools will certainly speed up the adoption of Rust in the automotive industry.</p>",
                "radarId": 96,
                "id": "en_2023-04_202304048",
                "blip_selector": "ferrocene"
            },
            {
                "blip_id": 202304052,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "300",
                "name": "Giskard",
                "display_name": "Giskard",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "48",
                "description": "<p><strong><a href=\"https://www.giskard.ai/\">Giskard</a></strong> is an open-source tool designed to help organizations build more robust and ethical AI models by providing quality assurance capabilities with a focus on explainability and fairness. It facilitates cooperation between technical and nontechnical stakeholders, allowing them to evaluate models collaboratively and establish acceptance criteria based on bias avoidance and other essential quality metrics. Giskard ensures model outcomes are better aligned with business objectives and helps to solve quality issues before production deployment.</p>",
                "radarId": 71,
                "id": "en_2023-04_202304052",
                "blip_selector": "giskard"
            },
            {
                "blip_id": 202304028,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "295",
                "name": "Philips's self-hosted GitHub runner",
                "display_name": "Philips's self-hosted GitHub runner",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "6",
                "description": "<p>While <a href=\"/radar/platforms/github-actions\">GitHub Actions</a> runners cover a wide range of the most common runtimes, sometimes you need something that is more specific to your particular use case, such as a less common language runtime or a particular hardware configuration. That's when you need a self-hosted runner. <strong>Philips's <a href=\"https://github.com/philips-labs/terraform-aws-github-runner\">self-hosted GitHub runner</a></strong> is a Terraform module that lets you spin up custom runners on AWS EC2 spot instances. The module also creates a set of Lambdas to make up for the fact that you lose some of GitHub Actions' lifecycle management when you self-host runners. They do the heavy lifting for scaling runners up and down as needed. That helps manage costs and allows you to make runners ephemeral, which helps improve repeatability and security. When you do need to self-host runners, you might miss a lot of things when building custom runners from scratch. Look for tools like this one instead.</p>",
                "radarId": 79,
                "id": "en_2023-04_202304028",
                "blip_selector": "philips-s-self-hosted-github-runner"
            },
            {
                "blip_id": 202304084,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Immuta",
                "display_name": "Immuta",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "212",
                "description": "<p><strong><a href=\"https://www.immuta.com/\">Immuta</a></strong> is a data security platform that allows you to secure access to your data, automatically discover sensitive data and audit how data is being used in an organization. In the past, we've talked about the importance of automation, engineering practices and treating <a href=\"/radar/techniques/security-policy-as-code\">security policy as code</a> when we think about security concerns. Data security is no different. Our teams have been exploring Immuta to manage data policies as code to allow for fine-grained access control which is beyond what <a href=\"https://en.wikipedia.org/wiki/Role-based_access_control\">role-based access control (RBAC)</a> can offer. Version-controlled policies can be tested and then provisioned as part of a CI/CD pipeline. In a decentralized data ecosystem, like one facilitated by <a href=\"/radar/techniques/data-mesh\">data mesh</a>, having domain-specific roles can lead to role or group proliferation in the identity system. Immuta’s <a href=\"https://en.wikipedia.org/wiki/Attribute-based_access_control\">attribute-based access control (ABAC)</a> capability reduces the access grant to a mathematical equation of matching an \"attribute\" on the user to a \"tag\" on the data source. This platform is still new but certainly worth highlighting for data security needs.</p>",
                "radarId": 37,
                "id": "en_2023-04_202304084",
                "blip_selector": "immuta"
            },
            {
                "blip_id": 202304004,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Arm in the cloud",
                "display_name": "Arm in the cloud",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "200",
                "description": "<p><a href=\"https://www.arm.com/markets/computing-infrastructure/cloud-computing\">Arm compute instances in the cloud</a> have become increasingly popular over the past few years due to their cost and energy efficiency compared to traditional x86-based instances. Many cloud providers now offer Arm-based instances, including <a href=\"https://aws.amazon.com/ec2/graviton/\">AWS</a>, <a href=\"https://azure.microsoft.com/blog/azure-virtual-machines-with-ampere-altra-arm-based-processors-generally-available/\">Azure</a> and <a href=\"https://cloud.google.com/blog/products/compute/tau-t2a-is-first-compute-engine-vm-on-an-arm-chip\">GCP</a>. The cost benefits of running <strong>Arm in the cloud</strong> can be particularly beneficial for businesses that run large workloads or need to scale. Based on our experiences we recommend Arm compute instances for all workloads unless there are architecture-specific dependencies. The tooling to support multiple architectures, like <a href=\"https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way/\">multi-arch docker images</a>, also simplify build and deploy workflows.</p>",
                "radarId": 27,
                "id": "en_2023-04_202304004",
                "blip_selector": "arm-in-the-cloud"
            },
            {
                "blip_id": 202304105,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "230",
                "name": "Strapi",
                "display_name": "Strapi",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "250",
                "description": "<p><strong><a href=\"https://strapi.io/\">Strapi</a></strong> is an open-source, NodeJS-based, headless content management system (CMS) similar to <a href=\"/radar/platforms/contentful\">Contentful</a>. It has been around for a while, and we've used it successfully in a few projects. Strapi provides both REST and GraphQL APIs, has comprehensive documentation, features an easy-to-use data model API and supports customizing both UI and logic.</p>",
                "radarId": 32,
                "id": "en_2023-04_202304105",
                "blip_selector": "strapi"
            },
            {
                "blip_id": 202010098,
                "quadrant": "Techniques",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Verifiable credentials",
                "display_name": "Verifiable credentials",
                "ring": "Trial",
                "blip_status": "move_in",
                "volume_date": "2023-04",
                "theta": "105",
                "description": "<p>When we first included it in the Radar three years ago, <strong>verifiable credentials</strong> (VC) was an intriguing standard with some promising potential applications, but it wasn't widely known or understood outside the community of enthusiasts. This was particularly true when it came to the credential-granting institutions, such as state governments, who would be responsible for implementing the standards. Three years and one pandemic later, the demand for cryptographically secure, privacy-respecting and machine-verifiable electronic credentials has grown and, as a result, governments are starting to wake up to VC's potential. The <a href=\"https://www.w3.org/TR/vc-data-model/\">W3C standard</a> puts credential holders at the center, which is similar to our experience when using physical credentials: users can put their verifiable credentials in their own digital wallets and show them to anyone at any time without the permission of the credentials' issuer. This decentralized approach also helps users to better manage and selectively disclose their own information which greatly improves data privacy protection.</p>\n\n<p>Several of our teams have engaged in projects involving verifiable credentials technology in the past six months. Not surprisingly, the scenarios vary across countries and government departments. Our team has explored different combinations of decentralized identifiers, verifiable credentials and verifiable presentation on multiple projects. This is a developing field, and now that we've had more experience, we want to keep track of it in the Radar.</p>",
                "radarId": 9,
                "id": "en_2023-04_202010098",
                "blip_selector": "verifiable-credentials"
            },
            {
                "blip_id": 202304057,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "315",
                "name": "Kepler",
                "display_name": "Kepler",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "32",
                "description": "<p>Measuring energy consumption is an important step for teams to reduce the carbon footprint of their software. <a href=\"/radar/tools/cloud-carbon-footprint\">Cloud Carbon Footprint (CCF)</a> estimates energy based on billing and usage data retrieved from cloud APIs. <strong><a href=\"https://github.com/sustainable-computing-io/kepler\">Kepler</a></strong> — short for Kubernetes-based Efficient Power Level Exporter — goes one step further: it uses software counters via <a href=\"https://01.org/blogs/2014/running-average-power-limit-%E2%80%93-rapl\">RAPL</a>, <a href=\"https://en.wikipedia.org/wiki/ACPI\">ACPI</a> and <a href=\"https://developer.nvidia.com/nvidia-management-library-nvml\">nvml</a> to measure power consumption by hardware resources and employs an <a href=\"/radar/platforms/ebpf\">eBPF</a>-based approach to attribute power consumption to processes, containers and Kubernetes pods. Power usage is then converted to energy estimates using a custom ML model and data from the <a href=\"https://www.spec.org/power_ssj2008/\">SPEC Power</a> benchmark. Finally, pod-level energy consumption reporting is made available as <a href=\"/radar/tools/prometheus\">Prometheus</a> metrics. In cases where Kubernetes is running on virtual machines, for example when not using bare metal instances, Kepler uses cgroups to <a href=\"https://sustainable-computing.io/usage/trouble_shooting/#kepler-energy-metrics-are-zeroes\">estimate</a> energy consumption. We've had significant experience with CCF and can attest to its usefulness, but we're intrigued by the Kepler project’s approach.</p>",
                "radarId": 74,
                "id": "en_2023-04_202304057",
                "blip_selector": "kepler"
            },
            {
                "blip_id": 202304093,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "210",
                "name": "Per-app language preferences",
                "display_name": "Per-app language preferences",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "310",
                "description": "<p>Many people speak more than one language and use different languages in different contexts. Devices and platforms that can run apps generally ask the user to select one language for the system and then make the apps follow suit. For mobile phones, in particular, users may prefer certain apps to run in a language other than the system's language; Apple introduced a per-app language setting in iOS a while ago. Android app developers, however, had to implement a custom solution within their apps if they wanted to provide this option — until now. Android 13 introduced a new system setting, <strong><a href=\"https://android-developers.googleblog.com/2022/11/per-app-language-preferences-part-1.html\">per-app language preferences</a>,</strong> and a public API, making it easier for developers to offer this feature. For backward compatibility, equivalent APIs are available in AndroidX via AppCompatDelegate. We encourage developers to replace their custom solutions and instead use this feature in their apps.</p>",
                "radarId": 86,
                "id": "en_2023-04_202304093",
                "blip_selector": "per-app-language-preferences"
            },
            {
                "blip_id": 202304039,
                "quadrant": "Platforms",
                "movement": "t",
                "locale": "en",
                "radius": "200",
                "name": "Ax",
                "display_name": "Ax",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "210",
                "description": "<p>Faced with the challenge of exploring large configuration spaces, where it may take a significant amount of time to evaluate a given configuration, teams can turn to adaptive experimentation, a machine-guided, iterative process to find optimal solutions in a resource-efficient manner. <strong><a href=\"https://ax.dev/\">Ax</a></strong> is a platform for managing and automating adaptive experiments, including machine learning experiments, A/B tests and simulations. Currently, it supports two optimization strategies: Bayesian optimization using <a href=\"https://botorch.org/docs/botorch_and_ax\">BoTorch</a>, which is built on top of <a href=\"/radar/languages-and-frameworks/pytorch\">PyTorch</a>, and <a href=\"/radar/techniques/contextual-bandits\">contextual bandits</a>. Facebook, when <a href=\"https://ai.facebook.com/blog/open-sourcing-ax-and-botorch-new-ai-tools-for-adaptive-experimentation/\">releasing Ax and BoTorch</a>, described use cases like increasing the efficiency of back-end infrastructure, tuning ranking models and optimizing hyperparameter search for a machine learning platform. We've had good experiences using Ax for a variety of use cases, and while tools for hyperparameter tuning exist, we're unaware of a platform that provides functionality in a scope similar to Ax.</p>",
                "radarId": 28,
                "id": "en_2023-04_202304039",
                "blip_selector": "ax"
            },
            {
                "blip_id": 202304031,
                "quadrant": "languages-and-frameworks",
                "movement": "t",
                "locale": "en",
                "radius": "310",
                "name": "WebXR Device API",
                "display_name": "WebXR Device API",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "354",
                "description": "<p>When working on the <a href=\"/radar/platforms/webvr\">WebVR</a> experimental API, it became clear that it would make more sense to have a combined API for VR and AR. Rather than changing the WebVR API significantly, a new specification was created: WebXR. At its core is the <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></strong> which provides key capabilities for writing VR and AR applications in a web browser. The API is <a href=\"https://www.w3.org/TR/webxr/\">extensive</a>, and at the time of writing it isn’t <a href=\"https://caniuse.com/webxr\">fully supported</a> by all browsers. Our teams have used WebXR on several occasions, and we see the <a href=\"https://immersiveweb.dev/#benefitsofdoingxrontheweb\">benefits described by the Immersive Web Working Group</a>. For prototypes, we especially like that the experience is available immediately in a web browser. The development team doesn't have to go through an app-store process, and users can play with the experience without having to install an app. Given the status of the API and the fact it’s hidden behind a feature toggle in some browsers, we haven’t seen it used beyond proofs of concept and prototypes.</p>",
                "radarId": 107,
                "id": "en_2023-04_202304031",
                "blip_selector": "webxr-device-api"
            },
            {
                "blip_id": 202304037,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "240",
                "name": "Apicurio Registry",
                "display_name": "Apicurio Registry",
                "ring": "Trial",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "81",
                "description": "<p>Within any organization, API producers and consumers need to stay in sync about the schemas that will be used for communication among them. Especially as the number of APIs and related producers and consumers grow in the organization, what may start with simply passing around schemas among teams will start to hit scaling challenges. Faced with this issue, some of our teams have turned to <strong><a href=\"https://www.apicur.io/registry/\">Apicurio Registry</a></strong>, an open-source, centralized registry for various types of schemas and API artifacts, including OpenAPI specifications and Protobuf and Avro schemas. Apicurio Registry allows users to interact with it through a UI as well as a REST API and a Maven plugin. It also has the option to enforce schema evolution restrictions, such as backward compatibility. Moreover, when it comes to working with <a href=\"/radar/platforms/apache-kafka\">Kafka</a> clients, Apicurio Registry is compatible with Confluent Schema Registry. While our teams have found Confluent Schema Registry's documentation more helpful, Apicurio Registry meets their needs for a source of truth for various schemas.</p>",
                "radarId": 47,
                "id": "en_2023-04_202304037",
                "blip_selector": "apicurio-registry"
            },
            {
                "blip_id": 1133,
                "quadrant": "Techniques",
                "movement": "c",
                "locale": "en",
                "radius": "60",
                "name": "Applying product management to internal platforms",
                "display_name": "Applying product management to internal platforms",
                "ring": "Adopt",
                "blip_status": "c",
                "volume_date": "2023-04",
                "theta": "158",
                "description": "<p>We keep getting good feedback from teams <strong>applying product management to internal platforms</strong>. One key feature to remember, though: It's not just about team structure or renaming existing platform teams; it’s also about applying product-centric working practices within the team. Specifically, we've received feedback that teams face challenges with this technique unless they have a product-centric mindset. This likely means additional roles, such as a product manager, alongside changes to other areas, such as requirements gathering and the measurement of success. Working this way means establishing empathy with internal consumers (the development teams) and collaborating with them on the design. Platform product managers create roadmaps and ensure the platform delivers value to the business and enhances the developer experience. We continue to see this technique as key to building internal platforms to roll out new digital solutions quickly and efficiently.</p>",
                "radarId": 1,
                "id": "en_2023-04_1133",
                "blip_selector": "applying-product-management-to-internal-platforms"
            },
            {
                "blip_id": 202304063,
                "quadrant": "Tools",
                "movement": "t",
                "locale": "en",
                "radius": "290",
                "name": "Obsidian",
                "display_name": "Obsidian",
                "ring": "Assess",
                "blip_status": "t",
                "volume_date": "2023-04",
                "theta": "16",
                "description": "<p>Knowledge management is critical for tech workers, as we need to be constantly learning and staying up to date with the latest technology developments. Recently, tools such as <strong><a href=\"https://obsidian.md/\">Obsidian</a></strong> and <a href=\"https://logseq.com/\">Logseq</a> have emerged in the category of note-taking tools that support linking notes to form a knowledge graph, while storing them in plain markdown files in a local directory, thus letting users own their data. These tools help users organize and link their notes in a flexible, nonlinear way.</p>\n\n<p>Obsidian has a rich repository of community plugins. Some that have caught our attention, in particular, are <a href=\"https://obsidian.md/canvas\">Canvas</a>, akin to a local version of Miro or Mural, and <a href=\"https://github.com/blacksmithgu/obsidian-dataview\">Dataview</a>, which effectively treats your notes as a database and provides a query language for filtering, sorting and extracting data from your markdown notes.</p>",
                "radarId": 77,
                "id": "en_2023-04_202304063",
                "blip_selector": "obsidian"
            }
        ]
    }
]