name,ring,quadrant,isNew,hasMovedIn,hasMovedOut,description
Decoupling deployment from release,adopt,techniques,FALSE,FALSE,FALSE,"<p>Implementing <a href=""http://martinfowler.com/bliki/ContinuousDelivery.html"">Continuous Delivery</a> continues to be a challenge for many organizations, and it remains important to highlight useful techniques such as <strong>decoupling deployment from release</strong>. We recommend strictly using the term <em>Deployment</em> when referring to the act of deploying a change to application components or infrastructure. The term <em>Release</em> should be used when a feature change is released to end users, with a business impact. Using techniques such as feature toggles and dark launches, we can deploy changes to production systems more frequently without releasing features. More-frequent deployments reduce the risk associated with change, while business stakeholders retain control over when features are released to end users.</p>"
Products over projects,adopt,techniques,FALSE,FALSE,FALSE,"<p>We’ve long been championing the idea that thinking of software development as a project - something budgeted and delivered during a limited time slot - doesn’t fit the needs of the modern business. Important software efforts need to be an ongoing product that supports and rethinks the business process it is supporting. Such efforts are not complete until the business process, and its software, cease to be useful. Our observation of this <strong>products over projects</strong> approach, both with our own projects and outside, makes us determine that it is the approach to use for all but exceptional cases.</p>"
Threat modeling,adopt,techniques,FALSE,FALSE,FALSE,""
BFF - Backend for frontends,trial,techniques,FALSE,FALSE,FALSE,"<p>Valuable services support many variations in clients, such as mobile versus web and different forms of web interface. It’s tempting to design a single back-end API to support all clients with a reusable API. But client needs vary, as do constraints such as bandwidth for mobile devices versus the desire for lots of data on fast web connections. Consequently it’s often best to <strong>define different back-end services for each kind of front-end</strong> client. These back ends should be developed by teams aligned with each front end to ensure that each back end properly meets the needs of its client.</p>"
Bug bounties,trial,techniques,FALSE,TRUE,FALSE,""
Data Lake,trial,techniques,FALSE,TRUE,FALSE,""
Event Storming,trial,techniques,FALSE,FALSE,FALSE,"<p><a href=""http://ziobrando.blogspot.be/2013/11/introducing-event-storming.html""><strong>Event Storming</strong></a> is a useful way to do rapid ""outside-in"" domain modeling: starting with the events that occur in the domain rather than a static data model. Run as a facilitated workshop, it focuses on discovering key domain events, placing them along a timeline, identifying their triggers and then exploring their relationships. This approach is particularly useful for people taking an <a href=""https://www.thoughtworks.com/radar/techniques/event-sourcing"">Event Sourced</a> approach. Getting the right people in the room is important - a blend of business and technical people who bring both the questions and the answers. Ensuring that you have enough wall space for modeling is the second key to success. Look to discover the big picture, with the goal of collectively understanding the domain in all of its complexity, before diving into solutions.</p>"
Flux,trial,techniques,FALSE,FALSE,FALSE,"<p><a href=""https://facebook.github.io/flux/""><strong>Flux</strong></a> is an application architecture introduced by Facebook. Usually mentioned in conjunction with <strong>React.js</strong> , Flux is based on a one-way flow of data up through the rendering pipeline. Flux embraces the modern web landscape of client-side JavaScript applications in a way that avoids the venerable MV* clichés. ThoughtWorks teams are now starting to gain some experience with this architectural style and find that it meshes well with service orientation and solves some of the problems inherent in two-way data binding.</p>"
Idempotency filter,trial,techniques,FALSE,FALSE,FALSE,"<p>Many services, especially legacy services, are written with the assumption that any request will occur only once. Networks being what they are, this can be difficult to arrange. An <strong>idempotency filter</strong> is a simple component that merely checks for duplicate requests and ensures that they are sent to the supplier service only once. Such a filter should do only this one task and be used as a decorator over existing service calls.</p>"
NPM for all the things,trial,techniques,FALSE,FALSE,FALSE,"<p>The JavaScript world has a plethora of dependency and package-management tools, all of which rely on the Node Package Manager (NPM). Teams are starting to see these extra tools as redundant and are recommending that if you can use solely NPM for package and dependency management, you should. The simplification of using <strong>NPM for all the things</strong> helps reduce some of the churn in the JavaScript tools space.</p>"
Phoenix Environments,trial,techniques,FALSE,FALSE,FALSE,"<p>The time taken to provision and update environments continues to be a significant bottleneck on many software projects. Phoenix Environments can help with this delay by extending the idea of <a href=""http://martinfowler.com/bliki/PhoenixServer.html"">Phoenix Servers</a> to cover entire environments. We feel this is such a valuable and time-saving technique that you should consider trialing this approach. Using automation, we can create whole environments - including network configuration, load balancing and firewall ports - for example by using <a href=""https://aws.amazon.com/cloudformation/""><strong>CloudFormation</strong></a> in AWS. We can then prove that the process works by tearing the environments down and recreating them from scratch on a regular basis. <strong>Phoenix Environments</strong> can support provisioning new environments for testing, development, UAT and disaster recovery. As with Phoenix Servers, this pattern is not always applicable, and we need to think carefully about things like state and dependencies. Treating the whole environment as a <a href=""http://martinfowler.com/bliki/BlueGreenDeployment.html"">blue/green deployment</a> can be one approach when environment reconfiguration needs to be done.</p>"
QA in production,trial,techniques,FALSE,FALSE,FALSE,"<p>Traditionally, QA roles have focused on assessing the quality of a software product in a pre-production environment. With the rise of Continuous Delivery, the QA role is shifting to include analyzing software product quality in production. This involves monitoring of the production systems, coming up with alert conditions to detect urgent errors, determining ongoing quality issues and figuring out what measurements you can use in the production environment to make this work. While there is a danger that some organizations will go too far and neglect pre-production QA, our experience shows that <strong>QA in production</strong> is a valuable tool for organizations that have already progressed to a reasonable degree of Continuous Delivery.</p>"
Reactive architectures,trial,techniques,FALSE,TRUE,FALSE,""
iFrames for sandboxing,trial,techniques,FALSE,FALSE,FALSE,"<p>Modern web pages tend to contain a plethora of JavaScript widgets and snippets coming from a variety of third-party sources. This can have a negative impact on both security and performance. While we are still waiting for fuller JavaScript isolation with web components, our teams have benefited from using HTML5 <a href=""http://www.html5rocks.com/en/tutorials/security/sandboxed-iframes/""><strong>iFrames for sandboxing</strong></a> untrusted JavaScript.</p>"
Content Security Policies,assess,techniques,TRUE,FALSE,FALSE,""
Hosted IDE's,assess,techniques,FALSE,FALSE,FALSE,"<p>Many organizations want to leverage distributed or offshore development but have security concerns with their code and other intellectual property sitting outside their control. The result is often to use high-latency remote-desktop solutions for development, adhering to an organization’s security controls but crippling developer productivity. An alternative is to use a <strong>Hosted IDE</strong> delivered to a browser via VPN. The IDE, code and build environment are hosted within the organization's private cloud, easing security concerns, and the developer experience is significantly improved. Tools in this space include <a href=""https://orionhub.org/"">Orion</a> and <a href=""http://www.eclipse.org/che/"">Che</a> from the Eclipse Foundation, <a href=""https://c9.io/"">Cloud9</a> and <a href=""https://codenvy.com/"">Code Envy</a>.</p>"
Hosting PII data in the EU,assess,techniques,TRUE,FALSE,FALSE,"<p>In a number of countries around the world, we see government agencies seeking broad access to private, personally identifiable information (PII). In the EU, the highest court has invalidated the Safe Harbor framework, and Privacy Shield, its successor, is expected to be challenged too. At the same time, the use of cloud computing is increasing, and all the major cloud providers—Amazon, Google and Microsoft—offer multiple data centers and regions within the European Union. Therefore, we recommend that companies, especially those with a global user base, assess the feasibility of a safe haven for their users' data, protected by the most progressive privacy laws, by <strong>Hosting PII in the EU</strong>.</p>"
Monitoring of invariants,assess,techniques,FALSE,FALSE,FALSE,"<p>In monitoring, the common approach is to conceive of erroneous conditions and set alerts when these appear. But it’s often difficult to enumerate the myriad failure modes in a software system. <strong>Monitoring of invariants</strong> is a complementary approach to setting expected normal ranges, often by examining historical behavior, and alerting whenever a system goes outside those bounds.</p>"
OWASP ASVS,assess,techniques,TRUE,FALSE,FALSE,""
Serverless architecture,assess,techniques,TRUE,FALSE,FALSE,"<p><strong>Serverless architecture</strong> replaces long-running virtual machines with ephemeral compute power that comes into existence on request and disappears immediately after use. Examples include <a href=""https://www.firebase.com/"">Firebase</a> and <a href=""https://www.thoughtworks.com/radar/platforms/aws-lambda"">AWS Lambda</a>. Use of this architecture can mitigate some security concerns such as security patching and SSH access control, and can make much more efficient use of compute resources. These systems cost very little to operate and can have inbuilt scaling features (this is especially true for AWS Lambda). An example architecture could be a JavaScript app with static assets served by a CDN or S3 coupled with AJAX calls served by the API Gateway and Lambda. While serverless architectures have significant benefits, there are drawbacks too: Deploying, managing and sharing code across services is more complex, and local or offline testing is more difficult if not impossible.</p>"
Unikernels,assess,techniques,TRUE,FALSE,FALSE,""
VR beyond gaming,assess,techniques,TRUE,FALSE,FALSE,""
A single CI instance for all teams,hold,techniques,TRUE,FALSE,FALSE,""
Big Data envy,hold,techniques,TRUE,FALSE,FALSE,"<p>While we've long understood the value of Big Data to better understand how people interact with us, we've noticed an alarming trend of <strong>Big Data envy</strong> : organizations using complex tools to handle ""not-really-that-big” Data. Distributed map-reduce algorithms are a handy technique for large data sets, but many data sets we see could easily fit in a single-node relational or graph database. Even if you do have more data than that, usually the best thing to do is to first pick out the data you need, which can often then be processed on such a single node. So we urge that before you spin up your clusters, take a realistic assessment of what you need to process, and if it fits—maybe in RAM—use the simple option.</p>"
Gitflow,hold,techniques,FALSE,FALSE,FALSE,"<p>We firmly believe that long-lived version-control branches harm valuable engineering practices such as continuous integration, and this belief underlies our dislike for <strong>Gitflow</strong>. We love the flexibility of <a href=""https://git-scm.com"">Git</a> underneath but abhor tools that encourage bad engineering practices. Very short-lived branches hurt less, but most teams we see using Gitflow feel empowered to abuse its branch-heavy workflow, which encourages late integration (therefore discouraging true continuous integration).</p>"
High performance envy/web scale envy,hold,techniques,FALSE,FALSE,FALSE,"<p>We see many teams run into trouble because they have chosen complex tools, frameworks or architectures because they ""might need to scale"". Companies such as Twitter and Netflix need to be able to support extreme loads and so need these architectures, but they also have extremely skilled development teams able to handle the complexity. Most situations do not require these kinds of engineering feats; teams should keep their  <strong>web scale envy</strong> in check in favor of simpler solutions that still get the job done.</p>"
SAFe™,hold,techniques,FALSE,FALSE,FALSE,"<p>The <a href=""http://www.scaledagileframework.com/"">Scaled Agile Framework®</a> (aka  <strong>SAFe™</strong> ) continues to gain mindshare in many organizations at scale. In addition, tools and certification are becoming a significant aspect of the adoption of SAFe™. We continue to be concerned that actual adoptions are prone to over-standardization and are tending towards large release practices, resulting in practices that hinder agile adoption. In its place, we continue to recommend lean approaches that include experimentation and incorporate continuous improvement practices like the Improvement Katas offer organizations a better model for scaling agile.</p><br><br><p>Scaled Agile Framework® and SAFe™ are trademarks of Scaled Agile, Inc.</p>"
Docker,adopt,platforms,FALSE,TRUE,FALSE,""
TOTP Two-Factor Authentication,adopt,platforms,FALSE,FALSE,FALSE,"<p>Password security is still a hotly debated topic with the <a href=""https://www.gov.uk/government/publications/password-policy-simplifying-your-approach/password-policy-executive-summary"">UK government advocating technical controls</a> that let users remember simpler passwords and <a href=""https://www.youtube.com/watch?v=yzGzB-yYKcc"">Edward Snowden’s password advice</a> being described as only ""<a href=""http://www.wired.com/2015/04/snowden-sexy-margaret-thatcher-password-isnt-so-sexy/"">borderline secure</a>"". Passwords are generally one of the weakest links in the security chain, so we recommend employing <strong>two-factor authentication</strong> , which can significantly improve security. <a href=""http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm"">Time-based One-Time Password</a> ( <strong>TOTP</strong> ) is the standard algorithm in this space, with straightforward server-side implementations and free smartphone authenticator apps from <a href=""https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2"">Google</a> and <a href=""http://www.windowsphone.com/en-us/store/app/authenticator/e7994dbc-2336-4950-91ba-ca22d653759b"">Microsoft</a>.</p>"
AWS Lambda,trial,platforms,FALSE,FALSE,FALSE,"<p>Our teams continue to enjoy using <strong><a href=""https://aws.amazon.com/lambda/"">AWS Lambda</a></strong> and are beginning to use it to experiment with <a href=""https://www.thoughtworks.com/radar/techniques/serverless-architecture"">Serverless architectures</a>, combining Lambda with the <a href=""https://aws.amazon.com/api-gateway/"">API Gateway</a> to produce highly scalable systems with invisible infrastructure. We have run into significant problems using Java for Lambda functions, with erratic latencies up to several seconds as the Lambda container is started. We recommend sticking with JavaScript or Python for the time being.</p>"
Apache Kafka,trial,platforms,FALSE,TRUE,FALSE,""
Apache Mesos,trial,platforms,FALSE,FALSE,FALSE,"<p><strong><a href=""http://mesos.apache.org/"">Mesos</a></strong> is a platform that abstracts out underlying computing resources to make it easier to build massively scalable distributed systems. It can be used to provide a scheduling layer for <a href=""https://www.docker.com/"">Docker</a>, or to act as an abstraction layer to things like AWS. Twitter has used it to great effect to help it scale its infrastructure. Tools built on top of Mesos are starting to appear, such as <a href=""http://nerds.airbnb.com/introducing-chronos/"">Chronos</a>, which is a distributed, fault-tolerant cron replacement. Prominent success stories are appearing, such as <a href=""https://mesosphere.com/blog/2015/04/23/apple-details-j-a-r-v-i-s-the-mesos-framework-that-runs-siri/"">Apple's Siri</a> rearchitecting to use Mesos.</p>"
H2O,trial,platforms,FALSE,FALSE,FALSE,"<p>Predictive analytics are used in more and more products, often directly in end user-facing functionality. <a href=""http://h2o.ai/""><strong>H2O</strong></a> is an interesting open source package (with a startup behind it) that makes predictive analytics accessible to development teams, offering straightforward use of a wide variety of analytics, great performance and easy integration on JVM-based platforms. At the same time it integrates with the data scientists’ favorite tools, R and Python, as well as Hadoop and Spark.</p>"
HSTS,trial,platforms,FALSE,FALSE,FALSE,"<p><a href=""https://www.owasp.org/index.php/HTTP_Strict_Transport_Security"">HTTP Strict Transport Security</a> ( <strong>HSTS</strong> ) is a now widely supported policy that allows websites to protect themselves from downgrade attacks. A downgrade attack in the context of HTTPS is one that can cause users of your site to fall back to HTTP rather than HTTPS, allowing for further attacks such as man-in-the-middle attacks. By using the server header, you inform browsers that they should only use HTTPS to access your website, and should ignore downgrade attempts to contact the site via HTTP. Browser support is now widespread enough that this easy-to-implement feature should be considered for any site using HTTPS.</p>"
Kubernetes,trial,platforms,FALSE,TRUE,FALSE,""
Linux Security Modules,trial,platforms,FALSE,TRUE,FALSE,"<p>In earlier versions of the Radar, we have highlighted the value of <strong>Linux security modules</strong> , talking about how they enable people to think about server hardening as a part of their development workflow. More recently, with <a href=""https://linuxcontainers.org/"">LXC</a> and <a href=""https://www.thoughtworks.com/radar/platforms/docker"">Docker</a> containers now shipping with default <a href=""https://wiki.ubuntu.com/AppArmor"">AppArmor</a> profiles on certain Linux distributions, it has forced the hand of many teams to understand how these tools work. In the event that teams use container images to run any process that they did not themselves create, these tools help them assess questions about who has access to what resources on the shared host and the capabilities that these contained services have, and be conservative in managing levels of access.</p>"
Pivotal Cloud Foundry,trial,platforms,TRUE,FALSE,FALSE,""
Rancher,trial,platforms,FALSE,TRUE,FALSE,""
AWS ECS,assess,platforms,FALSE,FALSE,FALSE,"<p>The <strong><a href=""http://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html"">Elastic Container Service (ECS)</a></strong> is AWS’ entry into the multihost Docker space. Although there is a lot of competition in this area, there aren’t many off-premises managed solutions out there yet. Although ECS seems like a good first step, we are worried that it is overly complicated at the moment and lacks a good abstraction layer. If you want to run <a href=""https://www.docker.com/"">Docker</a> on AWS, though, this tool should certainly be high on your list. Just don’t expect it to be easy to get started with.</p>"
Amazon API Gateway,assess,platforms,TRUE,FALSE,FALSE,"<p><a href=""https://aws.amazon.com/api-gateway/""><strong>Amazon API Gateway</strong></a> is Amazon's offering enabling developers to expose API services to Internet clients, offering the usual API gateway features like traffic management, monitoring, authentication and authorization. Our teams have been using this service to front other AWS capabilities like AWS Lambda as part of <a href=""https://www.thoughtworks.com/radar/techniques/serverless-architecture"">serverless architectures</a>. We continue to monitor for the challenges presented by <a href=""https://www.thoughtworks.com/radar/platforms/overambitious-api-gateways"">overambitious API gateways</a>, but at this stage Amazon's offering appears to be lightweight enough to avoid those problems.</p>"
Apache Flink,assess,platforms,TRUE,FALSE,FALSE,"<p><strong><a href=""http://flink.apache.org/"">Apache Flink</a></strong> is a new-generation platform for scalable distributed batch and stream processing. At its core is a streaming data-flow engine. It also supports tabular (SQL-like), graph-processing and machine-learning operations. Apache Flink stands out with feature-rich capabilities for stream processing: event time, rich streaming window operations, fault tolerance and exactly-once semantics. While it hasn't reached version 1.0, it has raised significant community interest due to innovations in stream processing, memory handling, state management and simplicity of configuration.</p>"
Bluetooth Mesh,assess,platforms,TRUE,FALSE,FALSE,"<p>While many deployments of smart devices rely on Wi-Fi connectivity, we have been seeing success with <strong>Bluetooth Mesh</strong> networks that don't necessitate a hub or gateway. With better energy usage than Wi-Fi and better smartphone adoption than ZigBee, Bluetooth LE deployed as a self-healing mesh provides interesting new approaches for connecting local device-area networks. We are still waiting for the formal approach to emerge from the Bluetooth SIG but have already had successful deployments. We particularly like the lack of infrastructure required to stand up a decentralized network but still retain the option to ""progressively enhance"" the system with the addition of a gateway and cloud services.</p>"
Ceph,assess,platforms,FALSE,FALSE,FALSE,"<p><strong><a href=""http://ceph.com/"">Ceph</a></strong> is a storage platform that can be used as object storage, as block storage, and as a file system, typically running on a cluster of commodity servers. With its first major release having been in July 2012, Ceph is certainly not a new product. We do want to highlight it on this Technology Radar as an important building block for private clouds. It is particularly attractive because its RADOS Gateway component can expose the object store through a RESTful interface that is compatible with <a href=""https://aws.amazon.com/s3/"">Amazon S3</a> and the <a href=""https://wiki.openstack.org/wiki/Swift"">OpenStack Swift APIs</a>.</p>"
Deflect,assess,platforms,TRUE,FALSE,FALSE,"<p><a href=""https://deflect.ca/""><strong>Deflect</strong></a> is an open source service protecting NGOs, activist and independent media companies from DDoS attacks. Similar to a commercial CDN, it uses distributed reverse-proxy caching and also hides your server IP addresses and blocks public access to admin URLs. Particular effort is put in to combat the botnets typically used for extrajudicial censoring of independent voices.</p>"
ESP8266,assess,platforms,TRUE,FALSE,FALSE,"<p>Our growing ranks of hardware hackers have been excited by the <strong><a href=""http://esp8266.net/"">ESP8266</a></strong> Wi-Fi microcontroller. Rather than a specific technology innovation, it is the combination of low price point and small form factor that has sparked an inflection point in people's thinking about what is now feasible to achieve with custom hardware devices. Its main characteristics are: Wi-Fi capabilities (it can act as station, access point or a combination of both), low power, open hardware, Arduino SDK programmability, Lua programmability, huge community support and low cost compared with other IoT modules.</p>"
MemSQL,assess,platforms,TRUE,FALSE,FALSE,"<p>As Moore's Law predicts, we continue to increase the capacity of computer systems and reduce their cost, and so new processing techniques become possible that only a few years ago would have seemed out of reach. One of these techniques is the in-memory database: Instead of using slow disks or relatively slow SSDs to store data, we can keep it in memory for high performance. One such in-memory database, <a href=""http://www.memsql.com/""><strong>MemSQL</strong></a>, is making waves because it is horizontally scalable across a cluster and provides a familiar SQL-based query language. MemSQL also connects to Spark for analytics against real-time data, rather than stale data in a warehouse.</p>"
Mesosphere DCOS,assess,platforms,FALSE,FALSE,FALSE,"<p><strong><a href=""https://mesosphere.com/product/"">Mesosphere DCOS</a></strong> is a platform built on top of <a href=""http://mesos.apache.org/"">Mesos</a>. It provides an abstraction over underling machines, giving you a pool of storage and compute that allows services built for DCOS to operate at massive scale (Support is already there for Hadoop, Spark and Cassandra, among others). This is probably overkill for more modest workloads at the moment (where plain old Mesos could still be a good fit), but it will be interesting to see if Mesosphere starts trying to position DCOS as a general-purpose system.</p>"
Nomad,assess,platforms,TRUE,FALSE,FALSE,""
Presto,assess,platforms,FALSE,FALSE,FALSE,"<p><strong><a href=""https://prestodb.io/"">Presto</a></strong> is an open source distributed SQL query engine designed and optimized for running interactive analytics workloads. Presto's massively parallel processing architecture - combined with advanced code-generation techniques and in-memory processing pipelines - makes it highly scalable. It supports a large subset of ANSI SQL including complex queries, joins, aggregations and window functions. Presto comes with support for a wide range of data sources including <strong>Hive</strong> , <strong>Cassandra</strong> , <strong>MySQL</strong> and <strong>PostgreSQL</strong> , thereby unifying the interactive analytics interface across data stores of an organization. Applications can connect to Presto using its JDBC interface.</p>"
Realm,assess,platforms,TRUE,FALSE,FALSE,"<p><strong><a href=""https://realm.io/"">Realm</a></strong> is a database designed for use on mobile devices, with its own persistence engine to achieve high performance. Realm is marketed as a replacement for SQLite and Core Data, and our teams have enjoyed using it. Note that migrations are not quite as straightforward as the Realm documentation would have you believe. Still, Realm has us excited, and we suggest you take a look.</p>"
Sandstorm,assess,platforms,TRUE,FALSE,FALSE,"<p>For people who want the benefit of cloud-based collaboration tools but don't want to inadvertently ""become the product"" of a major cloud provider, <a href=""https://sandstorm.io/""><strong>Sandstorm</strong></a> provides an interesting open source alternative with the potential for self-hosting. Of particular interest is the isolation approach, whereby containerization is applied per document rather than per application, and syscall whitelisting is added to further <a href=""http://docs.sandstorm.io/en/latest/using/security-practices/#server-sandboxing"">secure the sandbox</a>.</p>"
Application Servers,hold,platforms,FALSE,FALSE,FALSE,"<p>The rise of containers, phoenix servers and continuous delivery has seen a move away from the usual approach to deploying web applications. Traditionally we have built an artifact and then installed that artifact into an application server. The result was long feedback loops for changes, increased build times and the not insignificant overhead of managing these application servers in production. Many of them are a pain to automate too. Most teams we work with favor bundling an embedded http server within your web application. There are plenty of options available: Jetty, SimpleWeb, Webbit and Owin Self-Host amongst others. Easier automation, easier deployment and a reduction in the amount of infrastructure you have to manage lead us to recommend embedded servers over <strong>application servers</strong> for future projects.</p>"
Overambitious API gateways,hold,platforms,FALSE,FALSE,FALSE,"<p>One of our common complaints is the pushing of business smarts into middleware, resulting in application servers and enterprise service buses with ambitions to run critical application logic. These require complex programming in environments not well suited to the purpose. We're seeing a worrying re-emergence of this disease with <strong>overambitious API Gateway</strong> products. API Gateways can provide utility in dealing with some generic concerns - for example, authentication and rate-limiting - but any domain smarts such as data transformation or rule processing should live in applications or services where they can be controlled by product teams working closely with the domains they support.</p>"
Superficial private cloud,hold,platforms,FALSE,FALSE,FALSE,""
Consul,adopt,tools,FALSE,TRUE,FALSE,""
Browsersync,trial,tools,FALSE,FALSE,FALSE,"<p>We've had rave reviews from a number of ThoughtWorks teams using <a href=""http://www.browsersync.io/""><strong>Browsersync</strong></a>. As the number of devices we deliver web applications to grows, so does the amount of effort that must be devoted to testing across these different devices. Browsersync is a free, open source tool that can dramatically reduce this effort by synchronizing manual browser testing across multiple mobile or desktop browsers. Providing both a CLI and a UI option, the tool is build-pipeline friendly and automates repetitive tasks such as form filling.</p>"
Carthage,trial,tools,FALSE,FALSE,FALSE,"<p>Dependency management in iOS and OS X projects used to be either completely manual or completely automatic as part of using <a href=""https://cocoapods.org/"">CocoaPods</a>. With <strong><a href=""https://github.com/Carthage/Carthage"">Carthage</a></strong> , a new middle ground has become available. Carthage manages dependencies - it downloads, builds and updates frameworks - but it leaves the integration of the frameworks into the build of the project to the project. This is in contrast to CocoaPods, which basically takes over the project structure and build setup. It should be noted that Carthage can only deal with dynamic frameworks, which are not available on iOS 7 and below.</p>"
Gauge,trial,tools,FALSE,TRUE,FALSE,"<p><strong><a href=""https://gauge.org/"">Gauge</a></strong> is a lightweight cross-platform test-automation tool. Specifications are written in free-form Markdown so test cases can be written in the business language, as opposed to using the more common but restrictive ""given-when-then"" format. Language and IDE support are implemented as plugins to a single core implementation, allowing testers to use the same IDEs as the rest of the team, with powerful capabilities such as autocompletion and refactoring. This tool, open sourced by ThoughtWorks, also supports parallel execution out of the box for all supported platforms.</p>"
GitUp,trial,tools,FALSE,FALSE,FALSE,"<p>Git can be confusing. Really confusing. And even when it’s used in a simple trunk-based development process, there are still enough nuances to how it works that people can tie themselves in knots from time to time. When this happens, having an understanding of how Git works under the hood is very useful, and <strong><a href=""http://gitup.co/"">GitUp</a></strong> is a Mac-based tool that gives you exactly that. GitUp provides a graphical representation of what is happening as you type normal Git commands into the terminal. You can learn the various Git commands while also understanding what each one does as you use it. GitUp is a useful tool for both people new to Git and those with more Git experience.</p>"
Let's Encrypt,trial,tools,FALSE,TRUE,FALSE,""
Load Impact,trial,tools,TRUE,FALSE,FALSE,""
OWASP Dependency-Check,trial,tools,TRUE,FALSE,FALSE,""
Serverspec,trial,tools,TRUE,FALSE,FALSE,""
SysDig,trial,tools,FALSE,FALSE,FALSE,"<p>Although <strong><a href=""http://www.sysdig.org/"">SysDig</a></strong> isn’t the newest tool on the Technology Radar, we’re still surprised by how many people haven’t heard of it. A pluggable open source CLI for Linux system troubleshooting, SysDig has some pretty powerful features. One of the key things we like is the ability to generate a system trace on a machine that is experiencing difficulties, which you can then interrogate afterward to find out what was happening. SysDig also contains support for working with containers, something that makes a previously useful tool even more powerful.</p>"
Webpack,trial,tools,TRUE,FALSE,FALSE,""
Zipkin,trial,tools,FALSE,TRUE,FALSE,""
Concourse,assess,tools,FALSE,FALSE,FALSE,"<p>Many development teams are making the move from simple continuous integration servers to Continuous Delivery pipelines, often spanning multiple environments, reaching into production. To implement such a pipeline successfully and operate it in a sustainable way requires a CI/CD tool that treats build pipelines and artifacts as first-class citizens; and unfortunately there aren’t many. <a href=""http://concourse.ci/""><strong>Concourse CI</strong></a> is a promising new entrant in this field, and our teams that have tried it are excited about its setup, which enables builds that run in containers, has a clean, usable UI and discourages snowflake build servers.</p>"
Gitrob,assess,tools,FALSE,FALSE,TRUE,"<p>Attackers continue to use automated software to crawl public GitHub repositories to find AWS credentials and spin up EC2 instances to mine Bitcoins or for other nefarious purposes. Although adoption of tools like <a href=""https://github.com/AGWA/git-crypt"">git-crypt</a> and <a href=""https://www.thoughtworks.com/radar/tools/blackbox"">Blackbox</a> to safely store secrets such as passwords and access tokens in code repositories is increasing, it is still all too common that secrets are stored unprotected. It is also not uncommon to see project secrets accidentally checked in to developers' personal repositories. <a href=""https://github.com/michenriksen/gitrob""><strong>Gitrob</strong></a> can help minimize the damage of exposing secrets. It scans an organization's GitHub repositories, flagging all files that might contain sensitive information that shouldn't have been pushed to the repository. The current release of the tool has some limitations: It can only be used to scan public GitHub organizations and their members, it doesn't inspect the contents of files, it doesn't review the entire commit history, and it fully scans all repositories each time it is run. Despite these limitations, it can be a helpful reactive tool to help alert teams before it is too late. It should be considered a complementary approach to a proactive tool such as <a href=""https://github.com/thoughtworks/talisman"">Talisman</a>.</p>"
Grasp,assess,tools,TRUE,FALSE,FALSE,""
HashiCorp Vault,assess,tools,TRUE,FALSE,FALSE,"<p>Having a way to securely manage secrets is increasingly becoming a huge project issue. The old idea of just having a file with secrets or environment variables is becoming hard to manage, especially in environments with multiple applications like <a href=""https://www.thoughtworks.com/radar/techniques/microservices"">microservices</a> or microcontainer environments, where the applications need to access a multitude of secrets. <a href=""https://github.com/hashicorp/vault""><strong>HashiCorp Vault</strong></a> is a promising tool that tries to solve the problem by providing mechanisms for securely accessing secrets through an unified interface. It has some features that make life easier, such as encryption and automatically generating secrets for known tools, among others.</p>"
LambdaCD,assess,tools,TRUE,FALSE,FALSE,""
Pinpoint,assess,tools,TRUE,FALSE,FALSE,""
Pitest,assess,tools,TRUE,FALSE,FALSE,""
Prometheus,assess,tools,FALSE,FALSE,FALSE,"<p>SoundCloud has recently open sourced its monitoring and alerting toolkit, <a href=""http://prometheus.io/""><strong>Prometheus</strong></a>. Developed in reaction to difficulties with <a href=""http://graphite.readthedocs.org/"">Graphite</a> in its production systems, Prometheus primarily supports a pull-based HTTP model (although a more Graphite-like push model is also supported). It also goes further by supporting alerts, making it an active part of your operational toolset. As of this writing, Prometheus is still only in release 0.15.1 but is evolving rapidly. We’re glad to see the recent product focus on core time-series DB and multidimensional indexing capabilities while allowing for export to a wider variety of front-end graphing tools.</p>"
RAML,assess,tools,FALSE,FALSE,FALSE,"<p>With a growing landscape of services providing RESTful APIs, it is becoming increasingly important to document them. We have previously mentioned <a href=""https://www.thoughtworks.com/radar/tools/swagger"">Swagger</a>, and in this Technology Radar we’d like to highlight the RESTful API modeling language (<a href=""http://raml.org/""><strong>RAML</strong></a>). Our teams feel that in comparison to Swagger it is more lightweight and moves the focus from adding documentation to existing APIs to designing APIs.</p>"
Repsheet,assess,tools,TRUE,FALSE,FALSE,""
Sleepy Puppy,assess,tools,FALSE,FALSE,FALSE,"<p><strong><a href=""https://github.com/Netflix/sleepy-puppy"">Sleepy Puppy</a></strong> is a delayed cross-site scripting (XSS) payload-management framework recently open sourced by Netflix. It enables you to test vulnerabilities for XSS past the target application when the perpetrator intends to attack a secondary underlying system. With XSS being one of the OWASP Top10, we see this framework assisting with automated security checks for several applications. It simplifies the capturing, managing and tracking of XSS propagation over long periods of time, with customizable payloads. Sleepy puppy also exposes an API that can be integrated with vulnerability tools like <a href=""https://www.thoughtworks.com/radar/tools/zap"">ZAP</a>, for automated security checks.</p>"
ievms,assess,tools,FALSE,FALSE,FALSE,"<p>Despite the shrinking usage of Internet Explorer, for many products the IE user base is not an insignificant share of the market, and browser compatibility needs to be tested. This is particularly troublesome if you prefer the joys of a UNIX-based system for development. To aid in this dilemma, <a href=""https://github.com/xdissent/ievms""><strong>ievms</strong></a> provides a utility script that brings together Windows-distributed VM images and VirtualBox to automate the setup and testability of various IE versions, from 6 up to Edge.</p>"
Jenkins as a deployment pipeline,hold,tools,TRUE,FALSE,FALSE,""
ES6,adopt,languages-and-frameworks,FALSE,FALSE,FALSE,"<p>Over many years, JavaScript has grown to become probably the most widely used programming language in the world. Nevertheless, the language itself has a few problems that many have attempted to address by using libraries or even by implementing their own languages that run on top of JavaScript (of which we’ve mentioned both <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/coffeescript"">CoffeeScript</a> and <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/clojurescript"">ClojureScript</a> before). <strong><a href=""http://es6-features.org/"">ES6</a></strong> (aka ECMAScript 6 or ECMAScript 2015), the new version of JavaScript, addresses many of the concerns of the older versions currently in use. Although browser support is scarce, support from mature transpilers like <a href=""http://babeljs.io"">Babel</a> allows you to write ES6 and have it supported in older browsers. For new projects, we strongly suggest starting with ES6 from day one.</p>"
React.js,adopt,languages-and-frameworks,FALSE,TRUE,FALSE,""
Spring Boot,adopt,languages-and-frameworks,FALSE,TRUE,FALSE,""
Swift,adopt,languages-and-frameworks,FALSE,FALSE,FALSE,"<p><a href=""https://developer.apple.com/swift/""><strong>Swift</strong></a> is now our default choice for development in the Apple ecosystem. With the release of Swift 2, the language approached a level of maturity that provides the stability and performance required for most projects. A good number of libraries that support iOS development—<a href=""https://github.com/SwiftyJSON/SwiftyJSON"">SwiftyJSON</a>, <a href=""https://github.com/Quick/Quick"">Quick</a>, etc.—are now migrated over to Swift, which is where the rest of the applications should follow. Swift has now been open sourced, and we are seeing a community of developers dedicated to continuously improving development in iOS.</p>"
Butterknife,trial,languages-and-frameworks,TRUE,FALSE,FALSE,""
Dagger,trial,languages-and-frameworks,TRUE,FALSE,FALSE,""
Dapper,trial,languages-and-frameworks,TRUE,FALSE,FALSE,""
Ember.js,trial,languages-and-frameworks,FALSE,TRUE,FALSE,"<p><a href=""http://emberjs.com/""><strong>Ember.js</strong></a> has developed further support based on project experiences and is clearly a strong contender in the field of JavaScript application frameworks. Ember is praised for its developer experience, with far fewer surprises than other frameworks such as <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/angularjs"">AngularJS</a>. The Ember CLI build tooling, convention-over-configuration approach and <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/es6"">ES6</a> support also gain positive feedback.</p>"
Enlive,trial,languages-and-frameworks,FALSE,FALSE,FALSE,"<p>Most templating frameworks like <a href=""https://mustache.github.io/"">Mustache</a> or <a href=""http://freemarker.org/"">FreeMarker</a> mix code with markup in a single file to implement complex, dynamic content. <a href=""https://github.com/cgrand/enlive/wiki""><strong>Enlive</strong></a> is a Clojure-based templating framework that completely separates programming language from HTML markup and employs CSS selectors to find and replace parts of the document. Enlive demonstrates the power of functional programming to implement complex behavior through a series of simple, composable functions acting on a common abstraction. Our teams working in Clojure have found it to be a very useful and straightforward tool.</p>"
Fetch,trial,languages-and-frameworks,TRUE,FALSE,FALSE,"<p>Our teams are moving away from JQuery or raw XHR for remote JavaScript calls and instead are using the new <a href=""https://fetch.spec.whatwg.org/"">Fetch</a> API and the <strong><a href=""https://github.com/github/fetch"">Fetch</a></strong> polyfill in particular. The semantics remain similar but have cleaner support for promises and CORS support. We are seeing this as the new de-facto approach.</p>"
React Native,trial,languages-and-frameworks,FALSE,TRUE,FALSE,""
Redux,trial,languages-and-frameworks,TRUE,FALSE,FALSE,"<p><a href=""http://redux.js.org/""><strong>Redux</strong></a> is a great, mature tool that has helped many of our teams reframe how they think about managing state in client-side apps. Using a <a href=""https://www.thoughtworks.com/radar/techniques/flux"">Flux</a>-style approach, it enables a loosely coupled state-machine architecture that's easy to reason about. We've found it a good companion to some of our favored JavaScript frameworks, such as <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/ember-js"">Ember</a> and <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/react-js"">React</a>.</p>"
Robolectric,trial,languages-and-frameworks,TRUE,FALSE,FALSE,""
SignalR,trial,languages-and-frameworks,FALSE,FALSE,FALSE,"<p>We have a number of reservations about the use of HTML5 WebSockets. By allowing the server to initiate actions on the browser, WebSockets departs from the connectionless, request/response model that underpins the World Wide Web today. Security is another big risk with WebSockets. For example, the standard does not impose any cross-origin request policy. However, we do recognize that in certain monitoring or alerting applications, WebSockets can be very useful. If you need to build a .NET WebSockets server, <a href=""http://signalr.net/""><strong>SignalR</strong></a> conveniently implements much of the additional code you need for a robust production application. This includes some recommended security practices such as validating connection tokens and activating SSL when encryption is needed. Although ThoughtWorks teams have been very happy with SignalR, there are still fundamental issues with WebSockets that you should consider before diving in.</p>"
Alamofire,assess,languages-and-frameworks,TRUE,FALSE,FALSE,"<p>Networking and decoding in iOS applications have been a difficult endeavor for many years. There have been many libraries and attempts to solve this ongoing problem. It looks as though <a href=""https://github.com/Alamofire/Alamofire""><strong>Alamofire</strong></a> is the most robust and developer-friendly library to handle decoding JSON. It was written by the same creator as its Objective-C counterpart (AFNetworking), which was used at great length during the Objective-C days.</p>"
AngularJS,assess,languages-and-frameworks,FALSE,FALSE,TRUE,"<p>While we have delivered many successful projects using <a href=""https://angularjs.org/""><strong>AngularJS</strong></a> and are seeing an acceleration of adoption in corporate settings, we have decided to move Angular back to Assess on this edition of the Radar. This move is intended as a note of caution: <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/react-js"">React.js</a> and <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/ember-js"">Ember</a> offer strong alternatives; the migration path from Angular version 1 to version 2 is causing uncertainty; and we see some organizations adopting the framework without really thinking through whether a single-page application fits their needs. We have passionate internal debates about this topic but have certainly seen codebases become overly complex from a combination of two-way binding and inconsistent state-management patterns. We believe that rather than requiring that a solid framework be jettisoned, these issues can be solved through careful design and use of Redux or Flux from the outset.</p>"
Aurelia,assess,languages-and-frameworks,TRUE,FALSE,FALSE,""
Cylon.js,assess,languages-and-frameworks,TRUE,FALSE,FALSE,"<p>The intersection between IoT devices and the JavaScript ecosystem offers interesting possibilities. <strong><a href=""https://cylonjs.com/"">Cylon.js</a></strong> is a JavaScript library for building interfaces for robotics and the Internet of Things, which has excited our technical community. It offers support for 50+ platform devices, as well as general-purpose input/output support with a shared set of drivers provided by the cylon-gpio module. Control of the devices is then possible through a web browser interface.</p>"
Elixir,assess,languages-and-frameworks,TRUE,FALSE,FALSE,"<p>We continue to see a lot of excitement from people using the <a href=""http://elixir-lang.org/""><strong>Elixir</strong></a> programming language. Elixir, which is built on top of the Erlang virtual machine, is showing promise for creating highly concurrent and fault-tolerant systems. Elixir has distinctive features such as the Pipe operator, which allows developers to build a pipeline of functions as you would in the UNIX command shell. The shared byte code allows Elixir to interoperate with Erlang and leverage existing libraries while supporting tools such as the Mix build tool, the Iex interactive shell and the ExUnit unit testing framework.</p>"
Elm,assess,languages-and-frameworks,TRUE,FALSE,FALSE,""
GraphQL,assess,languages-and-frameworks,TRUE,FALSE,FALSE,""
Immutable.js,assess,languages-and-frameworks,TRUE,FALSE,FALSE,"<p>Immutability is often emphasized in the functional programming paradigm, and most languages have the ability to create immutable objects, which cannot be changed once created. <strong><a href=""https://facebook.github.io/immutable-js/"">Immutable.js</a></strong> is a library for JavaScript that provides many persistent immutable data structures, which are highly efficient on modern JavaScript virtual machines. Immutable.js objects are, however, not normal JavaScript objects, so references to JavaScript objects from immutable objects should be avoided. Our teams have had value using this library for tracking mutation and maintaining state, and it is a library we encourage developers to investigate, especially when it's combined with the rest of the Facebook stack.</p>"
Jepsen,assess,languages-and-frameworks,TRUE,FALSE,FALSE,"<p>With the growth in usage of NoSQL data stores, and the growth in popularity of polyglot approaches to persistence, teams now have many choices when it comes to storing their data. While this has brought many advantages, product behavior with flaky networks can introduce subtle (and not so subtle) issues that are often not well understood, even in some cases by the product developers themselves. The <a href=""https://github.com/aphyr/jepsen""><strong>Jepsen</strong></a> toolkit and accompanying <a href=""https://aphyr.com/tags/Jepsen"">blog</a> have become the de-facto reference for anyone looking to understand how different database and queuing technologies react under adverse conditions. Crucially, the approach to testing, which includes clients in the transactions, shines a spotlight on possible failure modes for many teams building microservices.</p>"
OkHttp,assess,languages-and-frameworks,FALSE,FALSE,FALSE,"<p><strong><a href=""http://square.github.io/okhttp/"">OkHttp</a></strong> is a Java HTTP connection library from Square that provides a fluent interface for creating connections, as well as support for the faster HTTP/2 protocol. Even when using HTTP/1.1, OkHttp can provide performance improvements via connection pooling and transparent gzip compression. Supporting both blocking synchronous and nonblocking asynchronous calls, it can also be used as a drop-in replacement for the widely used Apache HttpClient.</p>"
Recharts,assess,languages-and-frameworks,TRUE,FALSE,FALSE,""
TensorFlow,assess,languages-and-frameworks,TRUE,FALSE,FALSE,""
JSPatch,hold,languages-and-frameworks,TRUE,FALSE,FALSE,""