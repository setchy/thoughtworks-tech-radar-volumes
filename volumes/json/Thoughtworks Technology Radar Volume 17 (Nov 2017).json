[
  {
    "name": "Lightweight Architecture Decision Records",
    "ring": "adopt",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>Much documentation can be replaced with highly readable code and tests. In a world of <a href=\"\"https://www.thoughtworks.com/radar/techniques/evolutionary-architecture\"\">evolutionary architecture</a>, however, it's important to record certain design decisions for the benefit of future team members as well as for external oversight. <strong>Lightweight Architecture Decision Records</strong> is a <a href=\"\"http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions\"\" target=\"\"_blank\"\" aria-label=\"\"technique. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">technique<span class=\"\"pop-out-icon\"\"></span></a> for capturing important architectural decisions along with their context and consequences. We recommend <a href=\"\"http://github.com/npryce/adr-tools\"\" target=\"\"_blank\"\" aria-label=\"\"storing these details in source control. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">storing these details in source control<span class=\"\"pop-out-icon\"\"></span></a>, instead of a wiki or website, as then they can provide a record that remains in sync with the code itself. For most projects, we see no reason why you wouldn't want to use this technique.</p>\""
  },
  {
    "name": "Applying product management to internal platforms",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>We've seen a steep increase in interest in the topic of digital platforms over the past 12 months. Companies looking to roll out new digital solutions quickly and efficiently are building internal platforms, which offer teams self-service access to the business APIs, tools, knowledge and support necessary to build and operate their own solutions. We find that these platforms are most effective when they're given the same respect as an external product offering. <strong>Applying product management to internal platforms</strong> means establishing empathy with internal consumers (read: developers) and collaborating with them on the design. Platform product managers establish roadmaps and ensure the platform delivers value to the business and enhances the developer experience. Some owners even create a brand identity for the internal platform and use that to market the benefits to their colleagues. Platform product managers look after the quality of the platform, gather usage metrics, and continuously improve it over time. Treating the platform as a product helps to create a thriving ecosystem and avoids the pitfall of building yet another stagnant, underutilized service-oriented architecture.</p>\""
  },
  {
    "name": "Architectural fitness function",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Borrowed from evolutionary computing, a fitness function is used to summarize how close a given design solution is to achieving the set aims. When defining an evolutionary algorithm, the designer seeks a ‘better’ algorithm; the fitness function defines what ‘better’ means in this context. An <strong>architectural fitness function</strong> , as defined in <a href=\"\"http://www.thoughtworks.com/books/building-evolutionary-architectures\"\" target=\"\"_blank\"\">Building Evolutionary Architectures</a>, provides an objective integrity assessment of some architectural characteristics, which may encompass existing verification criteria, such as unit testing, metrics, monitors, and so on. We believe architects can communicate, validate and preserve architectural characteristics in an automated, continual manner, which is the key to building evolutionary architectures.</p>\""
  },
  {
    "name": "Autonomous bubble pattern",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Many organizations we work with are trying hard to use modern engineering approaches to build new capabilities and features, while also having to coexist with a long tail of legacy systems. An old strategy that, based on our experience, has turned out to be increasingly helpful in these scenarios is <a href=\"\"http://dddcommunity.org/strategic-design/\"\" target=\"\"_blank\"\" aria-label=\"\"Eric Evans's. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Eric Evans's<span class=\"\"pop-out-icon\"\"></span></a> <strong>Autonomous bubble pattern</strong>. This approach involves creating a fresh context for new application development that is shielded from the entanglements of the legacy world. This is a step beyond just using an <a href=\"\"http://wiki.c2.com/?AnticorruptionLayer\"\" target=\"\"_blank\"\" aria-label=\"\"anticorruption layer. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">anticorruption layer<span class=\"\"pop-out-icon\"\"></span></a>. It gives the new bubble context full control over its backing data, which is then asynchronously kept up-to-date with the legacy systems. It requires some work to protect the boundaries of the bubble and keep both worlds consistent, but the resulting autonomy and reduction in development friction is a first bold step toward a modernized future architecture.</p>\""
  },
  {
    "name": "Chaos Engineering",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>In previous editions of the Radar, we've talked about using <a href=\"\"https://www.thoughtworks.com/radar/tools/chaos-monkey\"\">Chaos Monkey</a> from Netflix to test how a running system is able to cope with outages in production by randomly disabling instances and measuring the results. <strong>Chaos Engineering</strong> is the nascent term for the wider application of this technique. By running experiments on distributed systems in production, we're able to build confidence that those systems work as expected under turbulent conditions. A good place to start understanding this technique is the <a href=\"\"http://principlesofchaos.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Principles of Chaos Engineering. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Principles of Chaos Engineering<span class=\"\"pop-out-icon\"\"></span></a> website.</p>\""
  },
  {
    "name": "Decoupling secret management from source code",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>In previous Radars issues we mentioned tools such as <a href=\"\"https://www.agwa.name/projects/git-crypt/\"\" target=\"\"_blank\"\" aria-label=\"\"git-crypt. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\" data-faitracker-click-bind=\"\"true\"\">git-crypt<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"https://www.thoughtworks.com/radar/tools/blackbox\"\" data-faitracker-click-bind=\"\"true\"\">Blackbox</a> that allow us to keep secrets safe inside the source code. <strong>Decoupling secret management from source code</strong> is our way to remind technologists that there are other options for storing secrets. For example, <a href=\"\"https://www.thoughtworks.com/radar/tools/hashicorp-vault\"\" data-faitracker-click-bind=\"\"true\"\">HashiCorp vault</a>, CI servers and configuration management tools provide mechanisms for storing secrets that are not linked to the source code of an application. Both approaches are viable and we recommend you use at least one of them in your projects.</p>\""
  },
  {
    "name": "DesignOps",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Inspired by the DevOps movement, <a href=\"\"http://airbnb.design/designops-airbnb/\"\" target=\"\"_blank\"\" aria-label=\"\"DesignOps. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>DesignOps</strong><span class=\"\"pop-out-icon\"\"></span></a> is a cultural shift and a set of practices that allows people across an organization to continuously redesign products without compromising quality, service coherency or team autonomy. DesignOps advocates for the creation and evolution of a design infrastructure that minimizes the effort necessary to create new UI concepts and variations, and to establish a rapid and reliable feedback loop with end users. With tools such as <a href=\"\"http://github.com/storybooks/storybook\"\" target=\"\"_blank\"\" aria-label=\"\"Storybook. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Storybook<span class=\"\"pop-out-icon\"\"></span></a> promoting close collaboration, the need for upfront analysis and specification handoffs is reduced to the absolute minimum. With DesignOps, design is shifting from being a specific practice to being a part of everyone's job.</p>\""
  },
  {
    "name": "Legacy in a box",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Working with legacy code, especially large monoliths, is one of the most unsatisfying, high-friction <a href=\"\"https://thoughtworks.wistia.com/medias/ogq5b8d80y\"\" target=\"\"_blank\"\" aria-label=\"\"experiences for developers. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">experiences for developers<span class=\"\"pop-out-icon\"\"></span></a>. Although we caution against extending and actively maintaining legacy monoliths, they continue to be dependencies in our environments, and developers often underestimate the cost and time required to develop against these dependencies. To help reduce the friction, developers have used virtualized <a href=\"\"https://www.thoughtworks.com/radar/techniques/machine-image-as-a-build-artifact\"\">machine images</a> or container images with <a href=\"\"https://www.thoughtworks.com/radar/platforms/docker\"\">Docker</a> containers to create immutable images of legacy systems and their configurations. The intent is to contain the <strong>legacy in a box</strong> for developers to run locally and remove the need for rebuilding, reconfiguring or sharing environments. In an ideal scenario, teams that own legacy systems generate the corresponding boxed legacy images through their build pipelines, and developers can then run and orchestrate these images in their allocated sandbox more reliably. Although this approach has reduced the overall time spent by each developer, it has had limited success when the teams owning the downstream dependencies have been reluctant to create container images for others to use.</p>\""
  },
  {
    "name": "Micro frontends",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>We've seen significant benefits from introducing <a href=\"\"https://www.thoughtworks.com/radar/techniques/microservices\"\">microservices</a> architectures, which have allowed teams to scale the delivery of independently deployed and maintained services. Unfortunately, we've also seen many teams create front-end monoliths — a single, large and sprawling browser application — on top of their back-end services. Our preferred (and proven) approach is to split the browser-based code into <strong>micro frontends</strong>. In this approach, the web application is broken down into its features, and each feature is owned, frontend to backend, by a different team. This ensures that every feature is developed, tested and deployed independently from other features. Multiple techniques exist to recombine the features — sometimes as pages, sometimes as components — into a cohesive user experience.</p>\""
  },
  {
    "name": "Pipelines for infrastructure as code",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>The use of continuous delivery pipelines to orchestrate the release process for software has become a mainstream concept. However, automatically testing changes to infrastructure code isn’t as widely understood. Continuous integration (CI) and continuous delivery (CD) tools can be used to test server configuration (e.g., Chef cookbooks, Puppet modules, Ansible playbooks), server image building (e.g., Packer), environment provisioning (e.g., Terraform, CloudFormation) and integration of environments. The use of <strong>pipelines for infrastructure as code</strong> enables errors to be found before changes are applied to operational environments — including environments used for development and testing. They also offer a way to ensure that infrastructure tooling is run consistently, from CI/CD agents, as opposed to being run from individual workstations. Some challenges remain, however, such as the longer feedback loops associated with standing up containers and virtual machines. Still, we've found this to be a valuable technique.</p>\""
  },
  {
    "name": "Serverless architecture",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>The use of <a href=\"\"http://www.martinfowler.com/articles/serverless.html\"\" target=\"\"_blank\"\" aria-label=\"\"serverless architecture. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>serverless architecture</strong><span class=\"\"pop-out-icon\"\"></span></a> has very quickly become an accepted approach for organizations deploying cloud applications, with a plethora of choices available for deployment. Even traditionally conservative organizations are making partial use of some serverless technologies. Most of the discussion goes to Functions as a Service (e.g., <a href=\"\"https://www.thoughtworks.com/radar/platforms/aws-lambda\"\">AWS Lambda</a>, <a href=\"\"http://cloud.google.com/functions/\"\" target=\"\"_blank\"\" aria-label=\"\"Google Cloud Functions. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Google Cloud Functions<span class=\"\"pop-out-icon\"\"></span></a>, <a href=\"\"http://azure.microsoft.com/en-us/services/functions/\"\" target=\"\"_blank\"\" aria-label=\"\"Azure Functions. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Azure Functions<span class=\"\"pop-out-icon\"\"></span></a>) while the appropriate patterns for use are still emerging. Deploying serverless functions undeniably removes the nontrivial effort that traditionally goes into server and OS configuration and orchestration. Serverless functions, however, are not a fit for every requirement. At this stage, you must be prepared to fall back to deploying containers or even server instances for specific requirements. Meanwhile, the other components of a serverless architecture, such as Backend as a Service, have become almost a default choice.</p>\""
  },
  {
    "name": "TDD'ing containers",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Many development teams have adopted test-driven development practices for writing application code because of their benefits. Others have turned to containers to package and deploy their software, and it's accepted practice to use automated scripts to build the containers. What we’ve seen few teams do so far is combine the two trends and drive the writing of the container scripts using tests. With frameworks such as <a href=\"\"http://serverspec.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Serverspec. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Serverspec<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://github.com/aelsabbahy/goss\"\" target=\"\"_blank\"\" aria-label=\"\"Goss. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Goss<span class=\"\"pop-out-icon\"\"></span></a>, you can express the intended functionality for either isolated or orchestrated containers, with short feedback loops. This means that it’s possible to use the same principles we’ve championed for code by <strong>TDD'ing containers</strong>. Our initial experience doing so has been very positive.</p>\""
  },
  {
    "name": "Algorithmic IT operations",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>The amount of data collected by IT operations has been increasing for years. For example, the trend toward microservices means that more applications are generating their own operational data, and tools such as Splunk, <a href=\"\"https://www.thoughtworks.com/radar/tools/prometheus\"\">Prometheus</a>, or the ELK stack make it easier to store and process data later on, to gain operational insights. When combined with increasingly democratized machine learning tools, it’s inevitable that operators will start to incorporate statistical models and trained classification algorithms into their toolsets. Although these algorithms have been available for years, and various attempts have been made to automate service management, we're only just starting to understand how machines and humans can collaborate to identify outages earlier or pinpoint the source of failures. Although there is a risk of overhyping <strong>Algorithmic IT operations</strong> , steady improvement in machine learning algorithms will inevitably change the role of humans in operating tomorrow's data centers.</p>\""
  },
  {
    "name": "Ethereum for decentralized applications",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Blockchains have been widely hyped as the panacea for all things fintech, from banking to digital currency to supply chain transparency. We’ve previously featured <a href=\"\"https://www.thoughtworks.com/radar/platforms/ethereum\"\">Ethereum</a> because of its feature set, which includes smart contracts. Now, we're seeing more development using <strong>Ethereum for decentralized applications</strong> in <a href=\"\"http://www.stateofthedapps.com/\"\" target=\"\"_blank\"\" aria-label=\"\"other areas. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">other areas<span class=\"\"pop-out-icon\"\"></span></a>. Although this is still a very young technology, we're encouraged to see it being used to build decentralized applications beyond cryptocurrency and banking.</p>\""
  },
  {
    "name": "Event streaming as the source of truth",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>As event streaming platforms, such as <a href=\"\"https://www.thoughtworks.com/radar/tools/apache-kafka\"\">Apache Kafka</a>, rise in popularity, many consider them as an advanced form of message queuing, used solely to transmit events. Even when used in this way, event streaming has its benefits over traditional message queuing. However, we're more interested in how people use <strong>event streaming as the source of truth</strong> with platforms (Kafka in particular) as the primary store for data as immutable events. A service with an <a href=\"\"http://martinfowler.com/eaaDev/EventSourcing.html\"\" target=\"\"_blank\"\" aria-label=\"\"Event Sourcing. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Event Sourcing<span class=\"\"pop-out-icon\"\"></span></a> design, for example, can use Kafka as its event store; those events are then available for other services to consume. This technique has the potential to reduce duplicating efforts between local persistence and integration.</p>\""
  },
  {
    "name": "Platform engineering product teams",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>The adoption of cloud and DevOps, while increasing the productivity of teams who can now move more quickly with reduced dependency on centralized operations teams and infrastructure, also has constrained teams who lack the skills to self-manage a full application and operations stack. Some organizations have tackled this challenge by creating <strong>platform engineering product teams</strong>. These teams operate an internal platform which enables delivery teams to self-service deploy and operate systems with reduced lead time and stack complexity. The emphasis here is on API-driven self-service and supporting tools, with delivery teams still responsible for supporting what they deploy onto the platform. Organizations that consider establishing such a platform team should be very cautious not to accidentally create a <a href=\"\"https://www.thoughtworks.com/radar/techniques/separate-devops-team\"\">separate DevOps team</a>, nor should they simply relabel their <a href=\"\"https://www.thoughtworks.com/radar/platforms/superficial-private-cloud\"\">existing hosting and operations structure</a> as a platform.</p>\""
  },
  {
    "name": "Polycloud",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>The major cloud providers (Amazon, Microsoft and Google) are locked in an aggressive race to maintain parity on core capabilities while their products are differentiated only marginally. This is causing a few organizations to adopt a <strong>Polycloud</strong> strategy — rather than going ‘all-in’ with one provider, they are passing different types of workloads to different providers in a best-of-breed approach. This may involve, for example, putting standard services on AWS, but using Google for machine learning, Azure for .NET applications that use SQLServer, or potentially using the Ethereum Consortium Blockchain solution. This is different than a cloud-agnostic strategy of aiming for portability across providers, which is costly and forces lowest-common-denominator thinking. Polycloud instead focuses on using the best that each cloud offers.</p>\""
  },
  {
    "name": "Service mesh",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>As large organizations transition to more autonomous teams owning and operating their own microservices, how can they ensure the necessary consistency and compatibility between those services without relying on a centralized hosting infrastructure? To work together efficiently, even autonomous microservices need to align with some organizational standards. A <strong>service mesh</strong> offers consistent discovery, security, tracing, monitoring and failure handling without the need for a shared asset such as an API gateway or ESB. A typical implementation involves lightweight reverse-proxy processes deployed alongside each service process, perhaps in a separate container. These proxies communicate with service registries, identity providers, log aggregators, and so on. Service interoperability and observability are gained through a shared implementation of this proxy but not a shared runtime instance. We've advocated for a decentralized approach to microservice management for some time and are happy to see this consistent pattern emerge. Open source projects such as <a href=\"\"http://linkerd.io/\"\" target=\"\"_blank\"\" aria-label=\"\"linkerd. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">linkerd<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://istio.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Istio. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Istio<span class=\"\"pop-out-icon\"\"></span></a> will continue to mature and make service meshes even easier to implement.</p>\""
  },
  {
    "name": "Sidecars for endpoint security",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Microservices architecture, with a large number of services exposing their assets and capabilities through APIs and an increased attack surface, demand a zero trust security architecture — ‘never trust, always verify’. However, enforcing security controls for communication between services is often neglected, due to increased service code complexity and lack of libraries and language support in a polyglot environment. To get around this complexity, some teams delegate security to an out-of-process sidecar — a process or a container that is deployed and scheduled with each service sharing the same execution context, host and identity. Sidecars implement security capabilities, such as transparent encryption of the communication and TLS (Transport Layer Security) termination, as well as authentication and authorization of the calling service or the end user. We recommend you look into using <a href=\"\"http://istio.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Istio. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Istio<span class=\"\"pop-out-icon\"\"></span></a>, <a href=\"\"http://linkerd.io/\"\" target=\"\"_blank\"\" aria-label=\"\"linkerd. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">linkerd<span class=\"\"pop-out-icon\"\"></span></a> or <a href=\"\"http://github.com/envoyproxy/envoy\"\" target=\"\"_blank\"\" aria-label=\"\"Envoy. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Envoy<span class=\"\"pop-out-icon\"\"></span></a> before implementing your own <strong>sidecars for endpoint security</strong>.</p>\""
  },
  {
    "name": "The three Rs of security",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Traditional approaches to enterprise security often emphasize locking things down and slowing the pace of change. However, we know that the more time an attacker has to compromise a system, the greater the potential damage. <a href=\"\"http://builttoadapt.io/the-three-r-s-of-enterprise-security-rotate-repave-and-repair-f64f6d6ba29d\"\" target=\"\"_blank\"\" aria-label=\"\"The three Rs of enterprise security. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">The three Rs of enterprise security<span class=\"\"pop-out-icon\"\"></span></a> — rotate, repair and repave — take advantage of infrastructure automation and continuous delivery to eliminate opportunities for attack. Rotating credentials, applying patches as soon as they're available and rebuilding systems from a known, secure state — all within a matter of minutes or hours — makes it harder for attackers to succeed. <strong>The three Rs of security</strong> technique is made feasible with the advent of modern cloud-native architectures. When applications are deployed as containers, and built and tested via a completely automated pipeline, a security patch is just another small release that can be sent through the pipeline with one click. Of course, in keeping with best distributed systems practices, developers need to design their applications to be resilient to unexpected server outages. This is similar to the impact of implementing <a href=\"\"https://www.thoughtworks.com/radar/tools/chaos-monkey\"\">Chaos Monkey</a> within your environment.</p>\""
  },
  {
    "name": "A single CI instance for all teams",
    "ring": "hold",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>We're compelled to caution, again, against creating <strong>a single CI instance for all teams</strong>. While it's a nice idea in theory to consolidate and centralize Continuous Integration (CI) infrastructure, in reality we do not see enough maturity in the tools and products in this space to achieve the desired outcome. Software delivery teams which must use the centralized CI offering regularly have long delays depending on a central team to perform minor configuration tasks, or to troubleshoot problems in the shared infrastructure and tooling. At this stage, we continue to recommend that organizations limit their centralized investment to establishing patterns, guidelines and support for delivery teams to operate their own CI infrastructure.</p>\""
  },
  {
    "name": "CI theatre",
    "ring": "hold",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>We've long been advocates of <a href=\"\"https://martinfowler.com/articles/continuousIntegration.html\"\" target=\"\"_blank\"\" aria-label=\"\"continuous integration. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">continuous integration<span class=\"\"pop-out-icon\"\"></span></a> (CI), and we were <a href=\"\"https://en.wikipedia.org/wiki/CruiseControl\"\" target=\"\"_blank\"\" aria-label=\"\"pioneers. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">pioneers<span class=\"\"pop-out-icon\"\"></span></a> in building CI server programs to automatically build projects on check-ins. Used well, these programs run as a daemon process on a <a href=\"\"http://www.martinfowler.com/articles/continuousIntegration.html#EveryoneCommitsToTheMainlineEveryDay\"\" target=\"\"_blank\"\" aria-label=\"\"shared project mainline that developers commit to daily. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">shared project mainline that developers commit to daily<span class=\"\"pop-out-icon\"\"></span></a>. The CI server <a href=\"\"http://www.martinfowler.com/articles/continuousIntegration.html#EveryCommitShouldBuildTheMainlineOnAnIntegrationMachine\"\" target=\"\"_blank\"\" aria-label=\"\"builds the project. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">builds the project<span class=\"\"pop-out-icon\"\"></span></a> and runs <a href=\"\"http://www.martinfowler.com/articles/continuousIntegration.html#MakeYourBuildSelf-testing\"\" target=\"\"_blank\"\" aria-label=\"\"comprehensive tests. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">comprehensive tests<span class=\"\"pop-out-icon\"\"></span></a> to ensure the whole software system is integrated and is in an always-releasable state, thus satisfying the principles of <a href=\"\"https://continuousdelivery.com/\"\" target=\"\"_blank\"\" aria-label=\"\"continuous delivery. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">continuous delivery<span class=\"\"pop-out-icon\"\"></span></a>. Sadly, many developers simply set up a CI server and falsely assume they are \"\"doing CI\"\" when in reality they miss out on all the benefits. Common failure modes include: running CI against a shared mainline but with infrequent commits, so integration isn't really continuous; running a build with poor test coverage; allowing the build to stay red for long periods; or running CI against feature branches which results in <a href=\"\"http://paulhammant.com/2017/02/14/fake-news-via-continuous-isolation/\"\" target=\"\"_blank\"\" aria-label=\"\"continuous isolation. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">continuous isolation<span class=\"\"pop-out-icon\"\"></span></a>. The ensuing \"\" <strong>CI theatre</strong>\"\" might make people feel good, but would fail any credible <a href=\"\"https://martinfowler.com/bliki/ContinuousIntegrationCertification.html\"\" target=\"\"_blank\"\" aria-label=\"\"CI certification test. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">CI certification test<span class=\"\"pop-out-icon\"\"></span></a>.</p>\""
  },
  {
    "name": "Enterprise-wide integration test environments",
    "ring": "hold",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>When the enterprise-wide quarterly or monthly releases were considered best practice, it was necessary to maintain a complete environment for performing testing cycles prior to deployment to production. These <strong>enterprise-wide integration test environments</strong> (often referred to as SIT or Staging) are a common bottleneck for continuous delivery today. The environments themselves are fragile and expensive to maintain, often with components that need manual configuration by a separate environment management team. Testing in the staging environment provides unreliable and slow feedback, and testing effort is duplicated with what can be performed on components in isolation. We recommend that organizations incrementally create an independent path to production for key components. Important techniques include <a href=\"\"https://www.thoughtworks.com/radar/techniques/consumer-driven-contract-testing\"\">contract testing</a>, <a href=\"\"https://www.thoughtworks.com/radar/techniques/decoupling-deployment-from-release\"\">decoupling deployment from release</a>, <a href=\"\"https://www.thoughtworks.com/radar/techniques/focus-on-mean-time-to-recovery\"\">focus on mean time to recovery</a> and <a href=\"\"https://www.thoughtworks.com/radar/techniques/qa-in-production\"\">testing in production</a>.</p>\""
  },
  {
    "name": "Recreating ESB antipatterns with Kafka",
    "ring": "hold",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Kafka is becoming very popular as a messaging solution, and along with it, <a href=\"\"https://www.thoughtworks.com/radar/platforms/kafka-streams\"\">Kafka Streams</a> is at the forefront of the wave of interest in streaming architectures. Unfortunately, as they start to embed Kafka at the heart of their data and application platforms, we're seeing some organizations <strong>recreating ESB antipatterns with Kafka</strong> by centralizing the Kafka ecosystem components — such as connectors and stream processors — instead of allowing these components to live with product or service teams. This reminds us of seriously problematic ESB antipatterns, where more and more logic, orchestration and transformation were thrust into a centrally managed ESB, creating a significant dependency on a centralized team. We're calling this out to dissuade further implementations of this flawed pattern.</p>\""
  },
  {
    "name": "Spec-based codegen",
    "ring": "hold",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Back in the days when SOAP held sway in the enterprise software industry, the practice of generating client code from WSDL specs was an accepted—even encouraged—practice. Unfortunately, the resulting code was often complex, untestable, difficult to modify and frequently didn't work across implementation platforms. With the advent of REST, we found it better to evolve API clients that use the <a href=\"\"https://martinfowler.com/bliki/TolerantReader.html\"\" target=\"\"_blank\"\" aria-label=\"\"tolerant reader pattern. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">tolerant reader pattern<span class=\"\"pop-out-icon\"\"></span></a> for extracting and processing only the fields needed. Recently we have observed a disturbing return to old habits with developers generating code from API specifications written in <a href=\"\"https://www.thoughtworks.com/radar/tools/swagger\"\">Swagger</a> or <a href=\"\"https://www.thoughtworks.com/radar/tools/raml\"\">RAML</a>—a practice that we refer to as <strong>spec-based codegen</strong>. Although such tools are very useful for driving the design of APIs and for extracting documentation, we caution against the tempting shortcut of simply generating client code directly from these specifications. The chances are that such code will be difficult to test and maintain.</p>\""
  },
  {
    "name": "Kubernetes",
    "ring": "adopt",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>Since we last mentioned <strong>Kubernetes</strong> in the Radar, it has become the default solution for most of our clients when deploying containers into a cluster of machines. The alternatives didn’t capture as much mindshare, and in some cases our clients are even changing their ‘engine’ to Kubernetes. Kubernetes has become the container orchestration platform of choice for major public cloud platforms, including Microsoft's Azure Container Service and Google Cloud (see the <a href=\"\"https://www.thoughtworks.com/radar/platforms/gke\"\">GKE</a> blip). And there are many useful products enriching the fast-growing Kubernetes ecosystem. Platforms that try to hide Kubernetes under an abstraction layer, however, have yet to prove themselves.</p>\""
  },
  {
    "name": ".NET Core",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>We're seeing increased adoption of <a href=\"\"http://www.microsoft.com/net/core\"\" target=\"\"_blank\"\" aria-label=\"\".NET Core. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>.NET Core</strong><span class=\"\"pop-out-icon\"\"></span></a>, the open source cross-platform software framework. .NET Core enables the development and deployment of .NET applications on Windows, macOS and Linux. With the release of <a href=\"\"https://docs.microsoft.com/en-us/dotnet/standard/net-standard?tabs=net-standard-2-0\"\" target=\"\"_blank\"\" aria-label=\"\".NET Standard 2.0. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">.NET Standard 2.0<span class=\"\"pop-out-icon\"\"></span></a> increasing the number of standard APIs across .NET platforms, the migration path to .NET Core has become clearer. Issues related to library support on .NET Core are becoming less problematic, and first-class <a href=\"\"http://www.jetbrains.com/rider/\"\" target=\"\"_blank\"\" aria-label=\"\"cross-platform tooling. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">cross-platform tooling<span class=\"\"pop-out-icon\"\"></span></a> is now available, allowing for productive development on non-Windows platforms. Blessed Docker images are provided to make it easy to integrate .NET Core services into a containerized environment. Positive directions in the community and feedback from our projects indicate that .NET Core is ready for widespread use.</p>\""
  },
  {
    "name": "AWS Device Farm",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>The huge number of mobile devices makes it almost impossible for companies to test their mobile apps on all of them. Enter <strong><a href=\"\"https://aws.amazon.com/device-farm/\"\" target=\"\"_blank\"\" aria-label=\"\"AWS Device Farm. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">AWS Device Farm<span class=\"\"pop-out-icon\"\"></span></a></strong>, an app-testing service that enables you to run and interact with your Android, iOS and web apps on a wide variety of physical devices that are hosted in the cloud simultaneously. Detailed logs, performance graphs and screenshots are generated during each run to provide general and device-specific feedback. The service offers a lot of flexibility by allowing the state and configuration of each device to be altered in order to reproduce very specific test scenarios. Our teams are using AWS Device Farm to run end-to-end tests on devices with the largest install base for their apps.</p>\""
  },
  {
    "name": "CircleCI",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://circleci.com/\"\" target=\"\"_blank\"\" aria-label=\"\"CircleCI. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>CircleCI</strong><span class=\"\"pop-out-icon\"\"></span></a> is a continuous integration engine offered as SaaS and on premise. CircleCI has been the go-to SaaS CI tool for many of our development teams, who needed a low-friction and easy-to-setup build and deployment pipeline. CircleCI version 2.0 supports workflows of build jobs, with fan-in and fan-out flows and manual gates, as well as mobile development. It allows developers to run the pipelines locally and easily integrates with Slack and other notification and alerting systems. We recommend you take a closer look at the <a href=\"\"http://circleci.com/security/\"\" target=\"\"_blank\"\" aria-label=\"\"security practices of CircleCI. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">security practices of CircleCI<span class=\"\"pop-out-icon\"\"></span></a>, just as you would with any other SaaS product that hosts your company’s assets.</p>\""
  },
  {
    "name": "Flood IO",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Load testing became easier with the maturity of tools such as <a href=\"\"https://www.thoughtworks.com/radar/tools/gatling\"\">Gatling</a> and <a href=\"\"https://www.thoughtworks.com/radar/tools/locust\"\">Locust</a>. At the same time, elastic cloud infrastructures make it possible to simulate a large number of client instances. We're delighted to see Flood and other cloud platforms go further by leveraging these technologies. <a href=\"\"http://flood.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Flood IO. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Flood IO</strong><span class=\"\"pop-out-icon\"\"></span></a> is an SaaS load-testing service that helps to distribute and execute testing scripts across hundreds of servers in the cloud. Our teams find it simple to migrate performance testing to Flood by reusing existing Gatling scripts.</p>\""
  },
  {
    "name": "Google Cloud Platform",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>As <a href=\"\"http://cloud.google.com/free/ce1/\"\" target=\"\"_blank\"\" aria-label=\"\"Google Cloud Platform. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Google Cloud Platform</strong><span class=\"\"pop-out-icon\"\"></span></a> (GCP) has expanded in terms of available geographic regions and maturity of services, customers globally can now seriously consider it for their cloud strategy. In some areas, GCP has reached feature parity with its main competitor, Amazon Web Services, while in other areas it has differentiated itself — notably with accessible machine learning platforms, data engineering tools, and a workable Kubernetes as a service solution (<a href=\"\"https://www.thoughtworks.com/radar/platforms/gke\"\">GKE</a>). In practice, our teams have nothing but praise for the developer experience working with the GCP tools and APIs.</p>\""
  },
  {
    "name": "Keycloak",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>In a <a href=\"\"https://www.thoughtworks.com/radar/techniques/microservices\"\">microservice</a>, or any other distributed architecture, one of the most common needs is to secure the services or APIs through authentication and authorization features. This is where <a href=\"\"http://www.keycloak.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Keycloak. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Keycloak</strong><span class=\"\"pop-out-icon\"\"></span></a> comes in. Keycloak is an open source identity and access management solution that makes it easy to secure applications or microservices with little to no code. It supports single sign-on, social login and standard protocols such as <a href=\"\"http://openid.net/connect/\"\" target=\"\"_blank\"\" aria-label=\"\"OpenID Connect. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">OpenID Connect<span class=\"\"pop-out-icon\"\"></span></a>, <a href=\"\"http://oauth.net/2/\"\" target=\"\"_blank\"\" aria-label=\"\"OAuth 2.0. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">OAuth 2.0<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://en.wikipedia.org/wiki/Security_Assertion_Markup_Language\"\" target=\"\"_blank\"\" aria-label=\"\"SAML. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">SAML<span class=\"\"pop-out-icon\"\"></span></a> out of the box. Our teams have been using this tool and plan to keep using it for the foreseeable future. But it requires a little work to set up. Because configuration happens both at initialization and at runtime through APIs, it's necessary to write scripts to ensure deployments are repeatable.</p>\""
  },
  {
    "name": "Unity beyond gaming",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>In previous Radars, we mentioned that <a href=\"\"http://unity3d.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Unity. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Unity<span class=\"\"pop-out-icon\"\"></span></a> has become the platform of choice for VR and AR application development because it provides the abstractions and tooling of a mature platform, while being more accessible than its main alternative, the Unreal Engine. With the recent introductions of ARKit for iOS and ARCore for Android, the two main mobile platforms now have powerful native SDKs for building augmented reality applications. Yet, we feel that many teams, especially those without deep experience in building games, will benefit from using an abstraction such as Unity, which is why we're calling out <strong>Unity beyond gaming</strong>. This allows developers unfamiliar with the technology to focus on one SDK. It also offers a solution for the huge number of devices, especially on the Android side, that are not supported by the native SDKs.</p>\""
  },
  {
    "name": "WeChat",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><strong>WeChat</strong> , often seen as a WhatsApp equivalent, is becoming the de facto business platform in China. Many people may not know but WeChat is also one of the most popular online payment platforms. With the app's built-in CMS and membership management, small businesses are now conducting their commerce entirely on WeChat. Through the Service Account feature, large organizations can interface their internal system to their employees. Given that more than 70 percent of Chinese people are using WeChat, it's an important consideration for businesses that want to expand into the China market.</p>\""
  },
  {
    "name": "Azure Service Fabric",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><strong>Azure Service Fabric</strong> is a distributed systems platform built for microservices and containers. It’s comparable to container orchestrators such as <a href=\"\"https://www.thoughtworks.com/radar/platforms/kubernetes\"\">Kubernetes</a>, but also works with plain old services. It can be used in a bewildering array of ways, starting from simple services in your language of choice to Docker containers or services built using an SDK. Since its release a couple of years ago, it has steadily added more features, including Linux container support. Kubernetes has been the poster child of container orchestration tools, but Service Fabric is the default choice for .NET applications. We're using it in a few projects at ThoughtWorks and we like what we’ve seen so far.</p>\""
  },
  {
    "name": "Cloud Spanner",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://cloud.google.com/spanner/\"\" target=\"\"_blank\"\" aria-label=\"\"Cloud Spanner. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Cloud Spanner</strong><span class=\"\"pop-out-icon\"\"></span></a> is a fully managed relational database service offering high availability and strong consistency without compromising latency. Google has been working on a globally distributed database called Spanner for quite some time. It has recently released the service to the outside world as Cloud Spanner. You can scale your database instance from one to thousands of nodes across the globe without worrying about data consistency. By levering <a href=\"\"http://cloud.google.com/spanner/docs/true-time-external-consistency\"\" target=\"\"_blank\"\" aria-label=\"\"TrueTime. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">TrueTime<span class=\"\"pop-out-icon\"\"></span></a>, a highly available and distributed clock, Cloud Spanner provides strong consistency for reads and snapshots. You can use standard SQL to read data from Cloud Spanner, but for write operations you have to use their RPC API. Although not all services would require a global-scale distributed database, the general availability of Cloud Spanner is a big shift in the way we think about databases. And its design is influencing open source products such as <a href=\"\"http://github.com/cockroachdb/cockroach\"\" target=\"\"_blank\"\" aria-label=\"\"CockroachDB. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">CockroachDB<span class=\"\"pop-out-icon\"\"></span></a>.</p>\""
  },
  {
    "name": "Corda",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>After thorough exploration, R3, an important player in the blockchain space, realized that blockchain doesn't fit their purpose well, so they created <strong><a href=\"\"http://www.corda.net\"\" target=\"\"_blank\"\" aria-label=\"\"Corda. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Corda<span class=\"\"pop-out-icon\"\"></span></a></strong>. Corda is a distributed ledger technology (DLT) platform focused on the financial field. R3 have a very clear value proposition and know that their problem requires a pragmatic technology approach. This matches our own experience; current blockchain solutions may not be the reasonable choice for some business cases, due to mining costs and operational inefficiency. Although the development experience we have on Corda thus far has not been the smoothest, <a href=\"\"http://docs.corda.net/releases/release-V1.0/api-index.html#internal-apis-and-stability-guarantees\"\" target=\"\"_blank\"\" aria-label=\"\"APIs are still unstable after v1.0 release. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">APIs are still unstable after v1.0 release<span class=\"\"pop-out-icon\"\"></span></a>, we expect to see the DLT space mature further.</p>\""
  },
  {
    "name": "Cosmos DB",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://docs.microsoft.com/en-us/azure/cosmos-db/introduction\"\" target=\"\"_blank\"\" aria-label=\"\"Cosmos DB. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Cosmos DB</strong><span class=\"\"pop-out-icon\"\"></span></a> is Microsoft's globally distributed, multimodel database service, which became generally available earlier this year. While most modern NoSQL databases offer tunable consistency, Cosmos DB makes it a first-class citizen and offers five different consistency models. It's worth highlighting that it also supports multiple models — key value, document, column family and graph — all of which map to its internal data model, called atom-record-sequence (ARS). One interesting aspect of Cosmos DB is that it offers service level agreements (SLAs) on its latency, throughput, consistency and availability. With its wide range of applicability, it has set a high standard for other cloud vendors to match.</p>\""
  },
  {
    "name": "DialogFlow",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>In parallel with the recent surge of chatbots and <a href=\"\"https://www.thoughtworks.com/radar/platforms/voice-platforms\"\">voice platforms</a>, we've seen a proliferation of tools and platforms that provide a service to extract intent from text and management of conversational flows that you can hook into. <a href=\"\"http://github.com/dialogflow\"\" target=\"\"_blank\"\" aria-label=\"\"DialogFlow. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>DialogFlow</strong><span class=\"\"pop-out-icon\"\"></span></a> (formerly API.ai), which was acquired by Google, is one such ‘natural-language-understanding as a service’ offering that competes with <a href=\"\"https://www.thoughtworks.com/radar/platforms/wit-ai\"\">wit.ai</a> and <a href=\"\"http://aws.amazon.com/lex/\"\" target=\"\"_blank\"\" aria-label=\"\"Amazon Lex. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Amazon Lex<span class=\"\"pop-out-icon\"\"></span></a> among other players in this space.</p>\""
  },
  {
    "name": "GKE",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>While the software development ecosystem is converging on <a href=\"\"https://www.thoughtworks.com/radar/platforms/kubernetes\"\">Kubernetes</a> as the orchestration platform for containers, running Kubernetes clusters remains operationally complex. <strong>GKE</strong> (Google Kubernetes Engine) is a managed Kubernetes solution for deploying containerized applications that alleviates the operational overhead of running and maintaining Kubernetes clusters. Our teams have had a good experience using GKE, with the platform doing the heavy lifting of applying security patches, monitoring and auto-repairing the nodes, and managing multicluster and multiregion networking. In our experience, Google's API-first approach in exposing platform capabilities, as well as using industry standards such as OAuth for service authorization, improve the developer experience. It's important to consider that GKE is under rapid development which, despite the developers' best efforts to abstract consumers from underlying changes, has impacted us temporarily in the past. We're expecting continuous improvement around maturity of <a href=\"\"https://www.thoughtworks.com/radar/tools/infrastructure-as-code\"\">Infrastructure as code</a> with <a href=\"\"http://www.terraform.io/docs/providers/google/r/container_cluster.html\"\" target=\"\"_blank\"\" aria-label=\"\"Terraform on GKE. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Terraform on GKE<span class=\"\"pop-out-icon\"\"></span></a> and similar tools.</p>\""
  },
  {
    "name": "Hyperledger",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong>Hyperledger</strong> is a platform built around blockchain technologies. It consists of a blockchain implementation named Fabric and other associated tools. Disregarding the hype surrounding blockchain, our teams have found it easy to get started with these tools. The fact that it is an open source platform supported by the Linux Foundation also adds to our excitement about Hyperledger.</p>\""
  },
  {
    "name": "Kafka Streams",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong>Kafka Streams</strong> is a lightweight library for building streaming applications. It's been designed with the goal of simplifying stream processing enough to make it easily accessible as a mainstream application programming model for asynchronous services. It can be a good alternative in scenarios where you want to apply a stream processing model to your problem, without embracing the complexity of running a cluster (usually introduced by full-fledged stream processing frameworks). New developments include ‘exactly once’ stream processing in a Kafka cluster. This was achieved by introducing idempotency in Kafka producers and allowing atomic writes across multiple partitions using the new Transactions API.</p>\""
  },
  {
    "name": "Kong API Gateway",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://getkong.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Kong. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Kong<span class=\"\"pop-out-icon\"\"></span></a> is an <a href=\"\"http://github.com/Kong/kong\"\" target=\"\"_blank\"\" aria-label=\"\"open source API gateway. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">open source API gateway<span class=\"\"pop-out-icon\"\"></span></a> built and sponsored by Mashape, who also provide an enterprise offering integrating Kong with their proprietary API analytics and developer portal tools. They can be deployed in a variety of configurations, as an edge API gateway or an internal API proxy. <a href=\"\"http://openresty.org/en/\"\" target=\"\"_blank\"\" aria-label=\"\"OpenResty. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">OpenResty<span class=\"\"pop-out-icon\"\"></span></a>, through its Nginx modules, provides a strong and performant foundation, with Lua plugins for extensions. Kong can either use PostgreSQL for single region deployments or Cassandra for multiregion configurations. Our developers have enjoyed Kong's high performance, its API-first approach (which enables automation of its configuration) and its ease of deployment as a container. <strong>Kong API Gateway</strong> , unlike <a href=\"\"https://www.thoughtworks.com/radar/platforms/overambitious-api-gateways\"\">overambitious API gateways</a>, has a smaller set of features but it implements the essential set of API gateway capabilities such as traffic control, security, logging, monitoring and authentication. We're excited to assess Kong in a sidecar configuration in the near future.</p>\""
  },
  {
    "name": "Language Server Protocol",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Much of the power of sophisticated IDEs comes from their ability to parse a program into an abstract syntax tree (AST) and then use that AST for program analysis and manipulation. This supports features such as autocomplete, finding callers and refactoring. Language servers pull this capability into a process that allows any text editor to access an API to work with the AST. Microsoft has led the creation of the <a href=\"\"http://github.com/Microsoft/language-server-protocol\"\" target=\"\"_blank\"\" aria-label=\"\"Language Server Protocol. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Language Server Protocol</strong><span class=\"\"pop-out-icon\"\"></span></a> (LSP), harvested from their OmniSharp and TypeScript Server projects.<a href=\"\"http://langserver.org#implementations-client\"\" target=\"\"_blank\"\" aria-label=\"\"Any editor. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Any editor<span class=\"\"pop-out-icon\"\"></span></a> that uses this protocol can work with any language that has an <a href=\"\"http://langserver.org#implementations-server\"\" target=\"\"_blank\"\" aria-label=\"\"LSP-compliant server. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">LSP-compliant server<span class=\"\"pop-out-icon\"\"></span></a>. This means we can keep using our favorite editors without forgoing the rich text editing modes of many languages — much to the delight of our Emacs addicts.</p>\""
  },
  {
    "name": "LoRaWAN",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><strong>LoRaWAN</strong> is a low-power wide-area network, designed for low-power consumption and communication over long distances using low bitrates. It provides for communication between devices and gateways, which can then forward the data to, for example, applications or servers. A typical usage is for a distributed set of sensors, or for Internet of Things (IoT) devices, for which long battery life and long-range communication is a must. LoRaWAN addresses two of the key problems with attempting to use normal Wi-Fi for such applications: range and power consumption. There are several implementations, a notable one being <a href=\"\"http://www.thethingsnetwork.org/\"\" target=\"\"_blank\"\" aria-label=\"\"The Things Network. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\" data-faitracker-click-bind=\"\"true\"\">The Things Network<span class=\"\"pop-out-icon\"\"></span></a>, a free, open source implementation.</p>\""
  },
  {
    "name": "MapD",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://www.mapd.com/\"\" target=\"\"_blank\"\" aria-label=\"\"MapD. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>MapD</strong><span class=\"\"pop-out-icon\"\"></span></a> is an in-memory columnar analytic database with SQL support that's built to run on GPU. We debated whether the database workload is actually I/O or computationally bound but there are instances where the parallelism of the GPU, combined with the large bandwidth of VRAM, can be quite useful. MapD transparently manages the most frequently used data in VRAM (such as columns involved in group-by, filters, calculations and join conditions) and stores the rest of the data in the main memory. With this memory management setup, MapD achieves significant query performance without the need of indexes. Although there are other GPU database vendors, MapD is leading this segment with the recent open source release of its core database and through the <a href=\"\"https://github.com/gpuopenanalytics\"\" target=\"\"_blank\"\" aria-label=\"\"GPU Open Analytics Initiative. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">GPU Open Analytics Initiative<span class=\"\"pop-out-icon\"\"></span></a>. If your analytical workload is computationally heavy, can exploit GPU parallelism and can fit in the main memory, we recommend assessing MapD.</p>\""
  },
  {
    "name": "Mosquitto",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>In our experience—for Internet of Things (IoT) solutions where a lot of devices communicate with each other and/or a central data hub—the MQTT connectivity protocol has proven itself. We've also come to like the <strong><a href=\"\"http://mosquitto.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Mosquitto. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Mosquitto<span class=\"\"pop-out-icon\"\"></span></a></strong> MQTT broker. It might not satisfy all demands, particularly with regard to scalability, but its compact nature and easy setup makes it ideal for development and testing purposes.</p>\""
  },
  {
    "name": "Netlify",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>We like simple tools that solve one problem really well, and <a href=\"\"http://www.netlify.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Netlify. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Netlify</strong><span class=\"\"pop-out-icon\"\"></span></a> fits this description nicely. You can create static website content, check it into GitHub and then quickly and easily get your site live and available. There is a CLI available to control the process; content delivery networks (CDNs) are supported; it can work alongside tools such as <a href=\"\"http://gruntjs.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Grunt. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Grunt<span class=\"\"pop-out-icon\"\"></span></a>; and, most importantly, Netlify supports HTTPS.</p>\""
  },
  {
    "name": "PlatformIO",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong><a href=\"\"http://platformio.org/\"\" target=\"\"_blank\"\" aria-label=\"\"PlatformIO. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">PlatformIO<span class=\"\"pop-out-icon\"\"></span></a></strong> provides a rich ecosystem for IoT development by providing cross-platform builds, library management and good integration with existing IDEs. The intelligent code completion and Smart Code Linter with built-in terminal and serial port monitor greatly enhances the developer experience. It also organizes and maintains <a href=\"\"http://platformio.org/lib\"\" target=\"\"_blank\"\" aria-label=\"\"thousands of libraries. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">thousands of libraries<span class=\"\"pop-out-icon\"\"></span></a> and provides a clean dependency manager with semantic versioning to ease IoT development. We've started using PlatformIO in a few IoT projects and we really like it for its simplicity and wide support of <a href=\"\"http://platformio.org/platforms\"\" target=\"\"_blank\"\" aria-label=\"\"platforms. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">platforms<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://platformio.org/boards\"\" target=\"\"_blank\"\" aria-label=\"\"boards. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">boards<span class=\"\"pop-out-icon\"\"></span></a>.</p>\""
  },
  {
    "name": "TensorFlow Serving",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Machine-learning models are starting to creep into everyday business applications. When enough training data is available, these algorithms can address problems that might have previously required complex statistical models or heuristics. As we move from experimental use to production, we need a reliable way to host and deploy the models that can be accessed remotely and scale with the number of consumers. <a href=\"\"http://www.tensorflow.org/serving/\"\" target=\"\"_blank\"\" aria-label=\"\"TensorFlow Serving. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>TensorFlow Serving</strong><span class=\"\"pop-out-icon\"\"></span></a> addresses part of that problem by exposing a remote gRPC interface to an exported model; this allows a trained model to be deployed in a variety of ways. TensorFlow Serving also accepts a stream of models to incorporate continuous training updates, and its authors maintain a Dockerfile to ease the deployment process. Presumably, the choice of gRPC is to be consistent with the TensorFlow execution model; however, we’re generally wary of protocols that require code generation and native bindings.</p>\""
  },
  {
    "name": "Voice platforms",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong>Voice platforms</strong> such as <a href=\"\"https://developer.amazon.com/alexa\"\" target=\"\"_blank\"\" aria-label=\"\"Amazon Alexa. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Amazon Alexa<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"https://developers.google.com/actions/\"\" target=\"\"_blank\"\" aria-label=\"\"Google Home. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Google Home<span class=\"\"pop-out-icon\"\"></span></a> are riding high on the hype cycle; some even herald the ubiquity of the conversational voice interface. We're already integrating conversational UIs into products and seeing the impact of this new interaction in how we design interfaces. Alexa specifically was built from the ground up without a screen and treats the conversational UI as first-class. But it's still too early to believe the hype, and we expect more big players to get in the game.</p>\""
  },
  {
    "name": "Windows Containers",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Microsoft is catching up in the container space with <a href=\"\"http://docs.microsoft.com/en-us/virtualization/windowscontainers/about/\"\" target=\"\"_blank\"\" aria-label=\"\"Windows Containers. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Windows Containers</strong><span class=\"\"pop-out-icon\"\"></span></a>. At the time of writing, Microsoft provides two Windows OS images as Docker containers, <a href=\"\"http://hub.docker.com/r/microsoft/windowsservercore/\"\" target=\"\"_blank\"\" aria-label=\"\"Windows Server 2016 Server Core. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Windows Server 2016 Server Core<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://hub.docker.com/r/microsoft/nanoserver/\"\" target=\"\"_blank\"\" aria-label=\"\"Windows Server 2016 Nano Server. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Windows Server 2016 Nano Server<span class=\"\"pop-out-icon\"\"></span></a>. Although there is room for improvement for Windows Containers, for instance, decreasing the large image sizes, and enriching ecosystem support and documentation, our teams have started using them in scenarios where other containers have been working successfully, such as <a href=\"\"https://www.thoughtworks.com/radar/techniques/docker-for-builds\"\">build agents</a>.</p>\""
  },
  {
    "name": "Overambitious API gateways",
    "ring": "hold",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>We remain concerned about business logic and process orchestration implemented in middleware, especially where it requires expert skills and tooling while creating single points of scaling and control. Vendors in the highly competitive API gateway market are continuing this trend by adding features through which they attempt to differentiate their products. This results in <strong>overambitious API gateway</strong> products whose functionality — on top of what is essentially a reverse proxy — encourages designs that continue to be difficult to test and deploy. API gateways do provide utility in dealing with some specific concerns — such as authentication and rate limiting — but any domain smarts should live in applications or services.</p>\""
  },
  {
    "name": "fastlane",
    "ring": "adopt",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Web application developers have it easy when it comes to simplifying and automating diverse application workflows; they can choose from a variety of solutions to help automate release processes. When developing for mobile, however, we're dealing with two operating systems with two different ways of building, testing, distribution, generating screenshots, signing and distributing applications. To help ease the pain, our teams have adopted <strong><a href=\"\"https://fastlane.tools/\"\" target=\"\"_blank\"\" aria-label=\"\"fastlane. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">fastlane<span class=\"\"pop-out-icon\"\"></span></a></strong> as the go-to tool to automate the release process for iOS and Android applications. Using simple configurations and multiple pipelines, they can achieve <a href=\"\"https://www.thoughtworks.com/radar/techniques/continuous-delivery-cd\"\">continuous delivery</a> for mobile development.</p>\""
  },
  {
    "name": "Buildkite",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Our teams very much like the hosted CI/CD tool <a href=\"\"http://buildkite.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Buildkite. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Buildkite</strong><span class=\"\"pop-out-icon\"\"></span></a> for its simplicity and quick setup. With Buildkite, you provide your own machines to execute builds — on premise or in the cloud — and install a lightweight agent application to connect the build agent to the hosted service. In many cases, having this level of control over the configuration of your build agents is a plus when compared to using hosted agents.</p>\""
  },
  {
    "name": "gopass",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://www.justwatch.com/gopass/\"\" target=\"\"_blank\"\" aria-label=\"\"gopass. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>gopass</strong><span class=\"\"pop-out-icon\"\"></span></a> is a password management solution for teams, built on GPG and <a href=\"\"https://www.thoughtworks.com/radar/tools/git\"\">Git</a>. It's a descendant of <a href=\"\"http://www.passwordstore.org\"\" target=\"\"_blank\"\" aria-label=\"\"pass. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">pass<span class=\"\"pop-out-icon\"\"></span></a> and adds features such as: support for recipient management and multiple password stores in a single tree; an interactive search functionality; time-based one-time password (TOTP) support; and storage of binary data. Migration of your pass store is fairly straightforward, because gopass is largely compatible with the format pass uses. This also means integration into provisioning workflows can be achieved with a single call to a stored secret.</p>\""
  },
  {
    "name": "Headless Chrome for front-end test",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Since mid-2017, Chrome users have had the option of running the browser in headless mode. This feature is ideally suited to running front-end browser tests without the overhead of displaying actions on a screen. Previously, this was largely the province of PhantomJS but <a href=\"\"http://developers.google.com/web/updates/2017/06/headless-karma-mocha-chai\"\" target=\"\"_blank\"\" aria-label=\"\"Headless Chrome. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Headless Chrome<span class=\"\"pop-out-icon\"\"></span></a> is rapidly replacing the JavaScript-driven WebKit approach. Tests in Headless Chrome should run much faster, and behave more like a real browser, but our teams have found that it does use more memory than PhantomJS. With all these advantages, <strong>Headless Chrome for front-end test</strong> is likely to become the de facto standard.</p>\""
  },
  {
    "name": "jsoniter",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>If you're looking for a JSON encoder/decoder with high performance in Go and Java, check out the open source <a href=\"\"http://jsoniter.com/\"\" target=\"\"_blank\"\" aria-label=\"\"jsoniter. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>jsoniter</strong><span class=\"\"pop-out-icon\"\"></span></a> library. The library is compatible with the <a href=\"\"http://golang.org/pkg/encoding/json/\"\" target=\"\"_blank\"\" aria-label=\"\"standard JSON encoding package in Go. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">standard JSON encoding package in Go<span class=\"\"pop-out-icon\"\"></span></a>.</p>\""
  },
  {
    "name": "Prometheus",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>We've seen both continuing improvements in and an uptick in adoption of <a href=\"\"http://prometheus.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Prometheus. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Prometheus</strong><span class=\"\"pop-out-icon\"\"></span></a>, the monitoring and time series database tool originally developed by Soundcloud. Prometheus primarily supports a pull-based HTTP model but it also supports alerts, making it an active part of your operational toolset. As of this writing, Prometheus 2.0 is in prerelease, and continues to evolve. Prometheus developers have focused their efforts on core time series databases and the variety of metrics available. <a href=\"\"https://www.thoughtworks.com/radar/tools/grafana\"\">Grafana</a> has become the dashboard visualization tool of choice for Prometheus users and support for Grafana ships with the tool. Our teams also find that Prometheus monitoring nicely complements the indexing and search capabilities of an Elastic Stack.</p>\""
  },
  {
    "name": "Scikit-learn",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong><a href=\"\"http://scikit-learn.org/stable/\"\" target=\"\"_blank\"\" aria-label=\"\"Scikit-learn. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Scikit-learn<span class=\"\"pop-out-icon\"\"></span></a></strong> is not a new tool (it is approaching its tenth birthday); what is new is the rate of adoption of machine-learning tools and techniques outside of academia and major tech companies. Providing a robust set of models and a rich set of functionality, Scikit-learn plays an important role in making machine-learning concepts and capabilities more accessible to a broader (and often non-expert) audience.</p>\""
  },
  {
    "name": "Serverless Framework",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>The popular <strong><a href=\"\"https://serverless.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Serverless Framework. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Serverless Framework<span class=\"\"pop-out-icon\"\"></span></a></strong> provides tooling for scaffolding and deployment of serverless applications, primarily using <a href=\"\"https://www.thoughtworks.com/radar/platforms/aws-lambda\"\">AWS Lambda</a> and other AWS offerings. Serverless Framework provides template support for JavaScript, Python, Java and C#, and has an active community that contributes plugins that extend the framework. The framework also supports the Apache incubator project OpenWhisk as an alternative to AWS Lambda.</p>\""
  },
  {
    "name": "Apex",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/apex/apex\"\" target=\"\"_blank\"\" aria-label=\"\"Apex. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Apex</strong><span class=\"\"pop-out-icon\"\"></span></a> is a tool to build, deploy and manage AWS Lambda functions with ease. With Apex, you can write functions in languages that are not yet natively supported in AWS, including Golang, Rust and others. This is made possible by a Node.js shim, which creates a child process and processes events through stdin and stdout. Apex has a lot of nice <a href=\"\"http://github.com/apex/apex#features\"\" target=\"\"_blank\"\" aria-label=\"\"features. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">features<span class=\"\"pop-out-icon\"\"></span></a> that improve the developer experience, and we particularly like the ability to test functions locally and perform a dry run of the changes before they're applied to AWS resources.</p>\""
  },
  {
    "name": "assertj-swagger",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>An <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/assertj\"\">AssertJ</a> library, <a href=\"\"http://github.com/RobWin/assertj-swagger\"\" target=\"\"_blank\"\" aria-label=\"\"assertj-swagger. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>assertj-swagger</strong><span class=\"\"pop-out-icon\"\"></span></a> enables you to validate an API implementation's compliance with its contract specification. Our teams use assertj-swagger to catch problems when the API endpoint implementation changes without updating its <a href=\"\"https://www.thoughtworks.com/radar/tools/swagger\"\">Swagger</a> specification, or fails to publish the updated documentation.</p>\""
  },
  {
    "name": "Cypress",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Fixing end-to-end test failures in CI can be a painful experience, especially in headless mode. <a href=\"\"http://www.cypress.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Cypress. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Cypress</strong><span class=\"\"pop-out-icon\"\"></span></a> is a useful tool that helps developers build end-to-end tests easily and records all test steps as a video in an MP4 file. Instead of reproducing the issue in headless mode, developers can watch the testing video in order to fix it. Cypress is a powerful platform, not only a testing framework. Currently, we've integrated its CLI with headless CI in our projects.</p>\""
  },
  {
    "name": "Flow",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://flow.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Flow. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Flow</strong><span class=\"\"pop-out-icon\"\"></span></a> is a static type checker for JavaScript that allows you to add type checking across the codebase incrementally. Unlike Typescript, which is a different language, Flow can be added incrementally to an existing JavaScript codebase supporting the 5th, 6th and 7th editions of ECMAScript. We suggest adding Flow to your continuous integration pipeline, starting with the code that concerns you most. Flow adds to the clarity of the code, increases the reliability of refactoring and catches type-related bugs early during the build.</p>\""
  },
  {
    "name": "InSpec",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>How does a business hand autonomy to delivery teams while still making sure their deployed solutions are safe and compliant? How do you ensure that servers, once deployed, remain secure and compliant over their operational lifetime? These are the problems that <strong>InSpec</strong> tries to address. InSpec is an infrastructure testing tool inspired by <a href=\"\"https://www.thoughtworks.com/radar/tools/serverspec\"\">Serverspec</a>, but with modifications that make the tool more useful for security professionals who need to ensure compliance across thousands of servers. Individual tests can be combined into complete security profiles and run remotely from a command line. InSpec is useful for developers but extends to testing deployed production infrastructure continuously, moving toward <a href=\"\"https://www.thoughtworks.com/radar/techniques/qa-in-production\"\">QA in production</a>.</p>\""
  },
  {
    "name": "Jupyter",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Over the last couple of years, we've noticed a steady rise in the popularity of analytics notebooks. These are Mathematica-inspired applications that combine text, visualization and code in a living, computational document. In a previous edition, we mentioned <a href=\"\"https://www.thoughtworks.com/radar/tools/gorilla-repl\"\">GorillaREPL</a>, a Clojure variant of these. But increased interest in machine learning — along with the emergence of Python as the programming language of choice for practitioners in this field — has focused particular attention on Python notebooks, of which <a href=\"\"http://jupyter.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Jupyter. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Jupyter</strong><span class=\"\"pop-out-icon\"\"></span></a> seems to be gaining the most traction among ThoughtWorks teams.</p>\""
  },
  {
    "name": "kops",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/kubernetes/kops\"\" target=\"\"_blank\"\" aria-label=\"\"kops. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>kops</strong><span class=\"\"pop-out-icon\"\"></span></a> is a command line tool for creating and managing high-availability production <a href=\"\"https://www.thoughtworks.com/radar/platforms/kubernetes\"\">Kubernetes</a> clusters. Initially targeting AWS, it now has experimental support for other providers. It can get you up and running fast, and even though a few features (such as rolling upgrades) have yet to be fully developed, we've been impressed by the community.</p>\""
  },
  {
    "name": "Lighthouse",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><strong>Lighthouse</strong> is a tool written by Google to assess web applications for adherence to <a href=\"\"https://www.thoughtworks.com/radar/techniques/progressive-web-applications\"\">Progressive Web App</a> standards. This year's Lighthouse 2.0 release adds performance metrics and accessibility checks to the basic toolset. This added functionality has now been incorporated into the standard Chrome developer tools under the audit tab. Lighthouse 2.0 is yet another beneficiary of Chrome's headless mode. This provides an alternative to <a href=\"\"https://www.thoughtworks.com/radar/tools/pa11y\"\">Pa11y</a> and similar tools for running accessibility checks in a continuous integration pipeline, since the tool can be run from the command line or standalone as a Node.js application.</p>\""
  },
  {
    "name": "Rendertron",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>A perennial problem for JavaScript-heavy web applications is how to make the dynamic portion of those pages available to search engines. Historically, developers have resorted to a variety of tricks, including server-side rendering with <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/react-js\"\">React</a>, external services or prerendering content. Now Google Chrome's new headless mode adds a new ‘trick’ to the toolbox — <a href=\"\"http://github.com/GoogleChrome/rendertron\"\" target=\"\"_blank\"\" aria-label=\"\"Rendertron. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Rendertron</strong><span class=\"\"pop-out-icon\"\"></span></a>, a headless Chrome rendering solution. Rendertron wraps an instance of headless Chrome in a Docker container, ready to deploy as a standalone HTTP server. Bots that don't render JavaScript can be routed to this server to do the rendering for them. Although developers can always deploy their own headless Chrome proxy and associated routing machinery, Rendertron simplifies the configuration and deployment process, and provides example middleware code for detecting and routing bots.</p>\""
  },
  {
    "name": "Sonobuoy",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://heptio.com/opensource/#heptio-sonobuoy\"\" target=\"\"_blank\"\" aria-label=\"\"Sonobuoy. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Sonobuoy</strong><span class=\"\"pop-out-icon\"\"></span></a> is a diagnostic tool for running end-to-end conformance tests on any <a href=\"\"https://www.thoughtworks.com/radar/platforms/kubernetes\"\">Kubernetes</a> cluster in a nondestructive way. The team at <a href=\"\"http://heptio.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Heptio. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Heptio<span class=\"\"pop-out-icon\"\"></span></a>, which was founded by two creators of the Kubernetes projects, built this tool to ensure that the wide array of Kubernetes distributions and configurations conform to the best practices, while following the open source standardization for interoperability of clusters. We're experimenting with Sonobuoy to run as part of our <a href=\"\"https://www.thoughtworks.com/radar/tools/infrastructure-as-code\"\">infrastructure as code</a> build pipeline, as well as continuous monitoring of our Kubernetes installations, to validate the behavior and health of the whole cluster.</p>\""
  },
  {
    "name": "spaCy",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"https://spacy.io/\"\" target=\"\"_blank\"\" aria-label=\"\"spaCy. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>spaCy</strong><span class=\"\"pop-out-icon\"\"></span></a> is a Natural Language Processing (NLP) library written in Python. It is a high-performance library, intended for use by developers in production, and applies NLP models suited for processing text that often mixes in emoticons and inconsistent punctuation marks. Unlike other NLP frameworks, spaCy is a pluggable library and not a platform; it is aimed at production applications rather than model training for research. It plays well with <a href=\"\"https://www.thoughtworks.com/radar/platforms/tensorflow\"\">TensorFlow</a> and the rest of the Python AI ecosystem. We've used spaCy in the enterprise context to build a search engine that takes human language queries and helps users make business decisions.</p>\""
  },
  {
    "name": "Spinnaker",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://techblog.netflix.com/2015/11/global-continuous-delivery-with.html\"\" target=\"\"_blank\"\" aria-label=\"\"Netflix. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Netflix<span class=\"\"pop-out-icon\"\"></span></a> has open sourced <a href=\"\"http://www.spinnaker.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Spinnaker. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Spinnaker</strong><span class=\"\"pop-out-icon\"\"></span></a>, its microservices continuous delivery (CD) platform. Compared to other CI/CD platforms, Spinnaker implements cluster management and deployment of baked images to the cloud as first-class features. It supports out-of-the-box deployment and cluster management for multiple cloud providers such as Google Cloud Platform, AWS and <a href=\"\"https://www.thoughtworks.com/radar/platforms/pivotal-cloud-foundry\"\">Pivotal Cloud Foundry</a>. You can integrate Spinnaker with Jenkins to run a Jenkins job build. We like Spinnaker's opinionated approach for deploying microservices to the cloud—with the exception that Spinnaker's pipelines are created via a user interface (UI) and cannot be configured as code.</p>\""
  },
  {
    "name": "Spring Cloud Contract",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>If you're implementing Java services using the <a href=\"\"http://spring.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Spring. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Spring<span class=\"\"pop-out-icon\"\"></span></a> framework, you may want to consider <a href=\"\"http://cloud.spring.io/spring-cloud-contract/\"\" target=\"\"_blank\"\" aria-label=\"\"Spring Cloud Contract. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Spring Cloud Contract</strong><span class=\"\"pop-out-icon\"\"></span></a> for <a href=\"\"https://www.thoughtworks.com/radar/techniques/consumer-driven-contract-testing\"\">consumer-driven contract testing</a>. The current ecosystem of this tool supports verification of the client calls and the server implementation against the contract. In comparison to <a href=\"\"https://www.thoughtworks.com/radar/tools/pact-pacto\"\">Pact</a>, an open source consumer-driven contract testing tool set, it lacks the brokering of the contracts and the support for other programming languages. However, it integrates well with the Spring ecosystem, for instance message routing with <a href=\"\"http://projects.spring.io/spring-integration/\"\" target=\"\"_blank\"\" aria-label=\"\"Spring Integration. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Spring Integration<span class=\"\"pop-out-icon\"\"></span></a>.</p>\""
  },
  {
    "name": "Yarn",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong><a href=\"\"https://yarnpkg.com/en/\"\" target=\"\"_blank\"\" aria-label=\"\"Yarn. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Yarn<span class=\"\"pop-out-icon\"\"></span></a></strong> is a new package manager that replaces the existing workflow for the npm client while remaining compatible with the npm registry. With the npm client, we may end up with a different tree structure under node_modules based on the order that dependencies are installed. This nondeterministic nature can cause \"\"works on my machine\"\" problems. By breaking the installation steps into resolution, fetching and linking, Yarn avoids these issues using deterministic algorithms and lockfiles and thus guarantees repeatable installations. We've also seen significantly faster builds in our continuous integration (CI) environment because of Yarn caching all the packages it downloads.</p>\""
  },
  {
    "name": "Python 3",
    "ring": "adopt",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong>Python 3</strong> introduced many useful features that are not backward compatible with Python 2.x. It also removed numerous Python 2.x features that were maintained for backward compatibility, making Python 3 easier to learn and use and more consistent with the rest of the language. Our experience using Python 3 in domains such as machine learning and web application development shows that both the language and most of its <a href=\"\"http://py3readiness.org/\"\" target=\"\"_blank\"\" aria-label=\"\"supporting libraries. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">supporting libraries<span class=\"\"pop-out-icon\"\"></span></a> have matured for adoption. We were able to fork and patch minor issues of existing libraries or avoided using incompatible Python 2.x libraries that had been abandoned. If you are developing in Python we strongly encourage you to use Python 3.</p>\""
  },
  {
    "name": "Angular",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>In previous Radar editions, we've been hesitant to give <strong>Angular</strong> a strong recommendation because it was essentially a new, and on the whole unexciting, framework, sharing only its name with AngularJS, an older framework we loved in days past. In the meantime, Angular, now in version 5, has improved steadily while providing backward compatibility along the way. Several of our teams have Angular applications in production and reportedly, they like what they see. For this reason, we're moving Angular into the Trial ring in this Radar, to signify that some of our teams now consider it a solid choice. Most of our teams, however, still prefer <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/react-js\"\">React</a>, <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/vue-js\"\">Vue</a> or <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/ember-js\"\">Ember</a> over Angular.</p>\""
  },
  {
    "name": "AssertJ",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://joel-costigliola.github.io/assertj/index.html\"\" target=\"\"_blank\"\" aria-label=\"\"AssertJ. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>AssertJ</strong><span class=\"\"pop-out-icon\"\"></span></a> is a Java library that provides a <a href=\"\"http://martinfowler.com/bliki/FluentInterface.html\"\" target=\"\"_blank\"\" aria-label=\"\"fluent interface. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">fluent interface<span class=\"\"pop-out-icon\"\"></span></a> for assertions, which makes it easy to convey intent within test code. AssertJ gives readable error messages, soft assertions, and improved collections and exception support. We're seeing some teams default to its use instead of JUnit combined with Hamcrest.</p>\""
  },
  {
    "name": "Avro",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong><a href=\"\"https://avro.apache.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Avro. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Avro<span class=\"\"pop-out-icon\"\"></span></a></strong> is a framework for data serialization. By storing schema along with the message content, it encourages schema evolution. Producers can edit field names, add new fields or delete existing fields and Avro guarantees that the clients continue to consume the messages. Having a schema allows data to be written without overhead which results in compact data encoding and faster data processing. Although the exchange of structure-less messages between producer and consumer is flexible, we've seen teams facing issues with incompatible unprocessed messages in the queue during deployments. We've used Avro in a number of projects and would recommend using it over just sending unstructured messages.</p>\""
  },
  {
    "name": "CSS Grid Layout",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>CSS is the preferred choice for laying out web pages, even when it did not provide much explicit support for creating layouts. Flexbox helped with simpler, one-dimensional layouts, but developers usually reached for libraries and toolkits for more complex layouts. <a href=\"\"http://www.w3.org/TR/css-grid-1\"\" target=\"\"_blank\"\" aria-label=\"\"CSS Grid Layout. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>CSS Grid Layout</strong><span class=\"\"pop-out-icon\"\"></span></a> is a two-dimensional grid-based layout system that provides a mechanism to divide available space for layout into columns and rows using a set of predictable sizing behaviors. Grid does not require any libraries and plays well with Flexbox and other CSS display elements. However, since IE11 is only <a href=\"\"http://caniuse.com/#search=css%20grid%20layout\"\" target=\"\"_blank\"\" aria-label=\"\"partially supported. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">partially supported<span class=\"\"pop-out-icon\"\"></span></a>, it ignores users who still depend on a Microsoft browser on Windows 7.</p>\""
  },
  {
    "name": "CSS Modules",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Most large CSS codebases require complex naming schemes to help avoid naming conflicts in the global namespace. <a href=\"\"http://github.com/css-modules/css-modules\"\" target=\"\"_blank\"\" aria-label=\"\"CSS Modules. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>CSS Modules</strong><span class=\"\"pop-out-icon\"\"></span></a> address these problems by creating a local scope for all class names in a single CSS file. This file is imported to a JavaScript module, where CSS classes are referenced as strings. Then, in the build pipeline (Webpack, Browserify, etc.), the class names are replaced with generated unique strings. This is a significant change in responsibilities. Previously, a human had to manage the global namespace, to avoid class naming conflicts; now that responsibility rests with the build tooling. A small downside we've encountered with CSS Modules: functional tests are usually out of the local scope and can therefore not reference classes by the name defined in the CSS file. We recommend using IDs or data attributes instead.</p>\""
  },
  {
    "name": "Jest",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Our teams are delighted with the results of using <a href=\"\"http://facebook.github.io/jest/\"\" target=\"\"_blank\"\" aria-label=\"\"Jest. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Jest</strong><span class=\"\"pop-out-icon\"\"></span></a> for front-end testing. It provides a ‘zero-configuration’ experience and has out-of-the-box features such as mocking and code coverage. You can apply this testing framework not only to <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/react-js\"\">React</a> applications, but also to other JavaScript frameworks. One of Jest's often hyped features is UI snapshot testing. Snapshot testing would be a good addition to the upper layer of the <a href=\"\"http://martinfowler.com/bliki/TestPyramid.html\"\" target=\"\"_blank\"\" aria-label=\"\"test pyramid. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">test pyramid<span class=\"\"pop-out-icon\"\"></span></a>, but remember, unit testing is still the solid foundation.</p>\""
  },
  {
    "name": "Kotlin",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>The announcement of first-class Android support has given an extra boost to the rapidly progressing <strong>Kotlin</strong> language, and we're closely following the progress of <a href=\"\"http://blog.jetbrains.com/kotlin/2017/04/kotlinnative-tech-preview-kotlin-without-a-vm/\"\" target=\"\"_blank\"\" aria-label=\"\"Kotlin/Native. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Kotlin/Native<span class=\"\"pop-out-icon\"\"></span></a> — the LLVM-backed ability to compile to native executables. Null safety, data classes and the ease of creating DSLs are some of the benefits we've enjoyed, along with the <a href=\"\"http://github.com/Kotlin/anko\"\" target=\"\"_blank\"\" aria-label=\"\"Anko. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Anko<span class=\"\"pop-out-icon\"\"></span></a> library for Android development. Despite the downsides of slow initial compilation and reliance on IntelliJ for first-class IDE support, we recommend giving this fresh and concise modern language a try.</p>\""
  },
  {
    "name": "OpenTelemetry",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>As monolithic applications are being replaced with more complex <a href=\"\"https://www.thoughtworks.com/radar/techniques/microservices\"\">(micro)service</a> ecosystems, tracing requests across multiple services is becoming the norm. With majority contribution from LightStep and Uber <a href=\"\"http://opentracing.io/\"\" target=\"\"_blank\"\" aria-label=\"\"OpenTracing. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>OpenTracing</strong><span class=\"\"pop-out-icon\"\"></span></a> is rapidly becoming the de facto standard for distributed tracing. There is a growing number of <a href=\"\"http://opentracing.io/documentation/pages/supported-tracers\"\" target=\"\"_blank\"\" aria-label=\"\"tracers. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">tracers<span class=\"\"pop-out-icon\"\"></span></a> supporting OpenTracing standard, including <a href=\"\"https://www.thoughtworks.com/radar/tools/zipkin\"\">Zipkin</a>, <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/instana\"\">Instana</a>, and <a href=\"\"https://uber.github.io/jaeger/\"\" target=\"\"_blank\"\" aria-label=\"\"Jaeger. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Jaeger<span class=\"\"pop-out-icon\"\"></span></a>. OpenTracing currently provides vendor-neutral implementation in multiple languages including: Go, JavaScript, Java, Python, Objective-C, C#, C++, Ruby and PHP.</p>\""
  },
  {
    "name": "Spring Cloud",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p><a href=\"\"http://projects.spring.io/spring-cloud/\"\" target=\"\"_blank\"\" aria-label=\"\"Spring Cloud. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Spring Cloud</strong><span class=\"\"pop-out-icon\"\"></span></a> continues to evolve and add interesting new features. Support for binding to <a href=\"\"https://www.thoughtworks.com/radar/platforms/kafka-streams\"\">Kafka Streams</a>, for example, in the spring-cloud-streams project makes it relatively easy to build message driven applications with connectors for Kafka and RabbitMQ. The teams we have using it appreciate the simplicity it brings to using sometimes complex infrastructure, such as <a href=\"\"http://zookeeper.apache.org/\"\" target=\"\"_blank\"\" aria-label=\"\"ZooKeeper. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">ZooKeeper<span class=\"\"pop-out-icon\"\"></span></a>, and support for common problems that we need to address when building distributed systems, tracing with the <a href=\"\"http://cloud.spring.io/spring-cloud-sleuth/\"\" target=\"\"_blank\"\" aria-label=\"\"spring-cloud-sleuth. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">spring-cloud-sleuth<span class=\"\"pop-out-icon\"\"></span></a> for example. The usual caveats apply but we're successfully using it on multiple projects.</p>\""
  },
  {
    "name": "Android Architecture Components",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Historically, Google's Android documentation examples lacked architecture and structure. This changes with the release of <strong>Android Architecture Components</strong> , a set of opinionated libraries that help developers create Android applications with better architecture. They address longstanding pain points of Android development: handling lifecycles; pagination; SQLite databases; and data persistence over configuration changes. The libraries don't need to be used together — you can pick the ones you need most and integrate them into your existing project.</p>\""
  },
  {
    "name": "ARKit/ARCore",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>We've seen a flurry of activity in mobile augmented reality much of it fueled by <strong>ARKit and ARCore</strong> , the native AR libraries used by <a href=\"\"http://developer.apple.com/arkit/\"\" target=\"\"_blank\"\" aria-label=\"\"Apple. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Apple<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://developers.google.com/ar/\"\" target=\"\"_blank\"\" aria-label=\"\"Google. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Google<span class=\"\"pop-out-icon\"\"></span></a>, respectively. These libraries are bringing mobile AR technologies to the mainstream. However, the challenge will be for companies to find use cases that go beyond gimmicky and provide genuine solutions that actually enhance the user experience.</p>\""
  },
  {
    "name": "Atlas and BeeHive",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>A multi-app strategy is really controversial, particularly at a time when fewer and fewer users are downloading new apps. Instead of introducing a new app and struggling with the download numbers, multiteams have to deliver functionality via a single app that is already widely installed, which creates an architectural challenge. <strong><a href=\"\"http://github.com/alibaba/atlas\"\" target=\"\"_blank\"\" aria-label=\"\"Atlas. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Atlas<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://github.com/alibaba/BeeHive\"\" target=\"\"_blank\"\" aria-label=\"\"BeeHive. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">BeeHive<span class=\"\"pop-out-icon\"\"></span></a></strong> are modularization solutions for Android and iOS apps, respectively. Atlas and BeeHive enable multiteams working on physically isolated modules to reassemble or dynamically load these modules from a facade app. Both are Alibaba open source projects, since Alibaba encountered the same problem of dwindling downloads and single-app architectural challenges.</p>\""
  },
  {
    "name": "Caffe",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://caffe.berkeleyvision.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Caffe. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Caffe</strong><span class=\"\"pop-out-icon\"\"></span></a> is an open source library for deep learning created by the <a href=\"\"http://bair.berkeley.edu/\"\" target=\"\"_blank\"\" aria-label=\"\"Berkeley Vision and Learning Center. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Berkeley Vision and Learning Center<span class=\"\"pop-out-icon\"\"></span></a>. It mostly focusses on convolutional networks for computer vision applications. Caffe is a solid and popular choice for computer vision-related tasks and you can download many successful models made by Caffe users from the Caffe Model Zoo for out-of-the-box use. Like <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/keras\"\">Keras</a>, Caffe is a Python-based API. In Keras, however, models and components are objects created directly in Python code, whereas Caffe models are described by <a href=\"\"https://developers.google.com/protocol-buffers/\"\" target=\"\"_blank\"\" aria-label=\"\"Protobuf. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Protobuf<span class=\"\"pop-out-icon\"\"></span></a> configuration files. Either approach has its pros and cons, and converting between the two is also possible.</p>\""
  },
  {
    "name": "Clara rules",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Our first rule of thumb in selecting a rules engine is normally: you don't need a rules engine. We've seen too many people tying themselves to a hard-to-test black-box rules engine for spurious reasons, when custom code would have been a better solution. That said, we've had success using <a href=\"\"http://www.clara-rules.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Clara rules. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Clara rules</strong><span class=\"\"pop-out-icon\"\"></span></a> for scenarios where a rules engine does make sense. We like that it uses simple Clojure code to express and evaluate the rules, which means they are amenable to refactoring, testing and source control. Rather than chasing the illusion that business people should directly manipulate the rules, it drives collaboration between the business experts and developers.</p>\""
  },
  {
    "name": "CSS-in-JS",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><strong>CSS in JS</strong> is a technique of writing CSS styling in the JavaScript programming language. This encourages a common pattern of writing the styling with the JavaScript component it applies to, co-locating presentational and logical concerns. The new players — including <a href=\"\"http://github.com/cssinjs/jss\"\" target=\"\"_blank\"\" aria-label=\"\"JSS. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">JSS<span class=\"\"pop-out-icon\"\"></span></a>, <a href=\"\"http://github.com/emotion-js/emotion\"\" target=\"\"_blank\"\" aria-label=\"\"emotion. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">emotion<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://github.com/styled-components/styled-components\"\" target=\"\"_blank\"\" aria-label=\"\"styled-components. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">styled-components<span class=\"\"pop-out-icon\"\"></span></a> — rely on the tooling to translate the CSS-in-JS code to separate CSS stylesheets, to make them suitable for browser consumption. This is the second-generation approach to writing CSS in JavaScript and unlike the previous approaches doesn’t rely on in-line styles. That means it provides the benefit of supporting all CSS features, sharing of CSS using the <a href=\"\"https://www.thoughtworks.com/radar/techniques/npm-for-all-the-things\"\">npm</a> ecosystem and utilization of components across multiple platforms. Our teams have found <a href=\"\"http://github.com/styled-components/styled-components\"\" target=\"\"_blank\"\" aria-label=\"\"styled-components. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">styled-components<span class=\"\"pop-out-icon\"\"></span></a> working well with component-based frameworks, such as <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/react-js\"\">React</a>, and unit testing of CSS with <a href=\"\"http://github.com/styled-components/jest-styled-components\"\" target=\"\"_blank\"\" aria-label=\"\"jest-styled-components. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">jest-styled-components<span class=\"\"pop-out-icon\"\"></span></a>. This space is new and rapidly changing; the approach requires some effort for manual debugging of the generated class names in the browser, and it may not apply to some projects where the front-end architecture does not support reusing components and requires global styling.</p>\""
  },
  {
    "name": "Digdag",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://www.digdag.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Digdag. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Digdag</strong><span class=\"\"pop-out-icon\"\"></span></a> is a tool for building, running, scheduling and monitoring complex data pipelines in the cloud. You can define these pipelines in YAML, using either the rich set of out-of-the-box operators or building your own through the API. Digdag has most of the common features in a data pipeline solution such as dependency management, modular workflow to promote reuse, secured secret management and multilingual support. The feature we're most excited about is polycloud support, which lets you move and join data across AWS RedShift, S3, and Google <a href=\"\"https://www.thoughtworks.com/radar/platforms/bigquery\"\">BigQuery</a>. As more and more cloud providers offer competing data-processing solutions, we think Digdag (and similar tools) will be useful in leveraging the best option for the task.</p>\""
  },
  {
    "name": "Druid",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/jilen/druid\"\" target=\"\"_blank\"\" aria-label=\"\"Druid. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Druid</strong><span class=\"\"pop-out-icon\"\"></span></a> is a JDBC connection pool with rich monitoring features. It has a built-in SQL parser, which provides semantic monitoring of the SQL statements executing in the database. Injections or suspicious SQL statements will be blocked and logged directly from the JDBC layer. What’s more, queries can be merged based on their semantics. This is an Alibaba open source project, and reflects the lessons Alibaba learnt from operating their own database systems.</p>\""
  },
  {
    "name": "ECharts",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/ecomfe/echarts\"\" target=\"\"_blank\"\" aria-label=\"\"ECharts. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>ECharts</strong><span class=\"\"pop-out-icon\"\"></span></a> is a lightweight charting library with rich support for different types of charts and interactions. Since ECharts is entirely based on the <a href=\"\"http://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\"\" target=\"\"_blank\"\" aria-label=\"\"Canvas API. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Canvas API<span class=\"\"pop-out-icon\"\"></span></a>, it has incredible performance even when dealing with over 100k data points, and it's also been optimized for mobile usage. Together with its sibling project, <a href=\"\"http://echarts.baidu.com/echarts2/x/doc/index.html\"\" target=\"\"_blank\"\" aria-label=\"\"ECharts-X. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">ECharts-X<span class=\"\"pop-out-icon\"\"></span></a>, it can support 3D plotting. ECharts is a Baidu open source project.</p>\""
  },
  {
    "name": "Gobot",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>The ability to compile the <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/go-language\"\">Go programming language</a> to bare metal targets has raised interest among developers in using the language for embedded systems. <a href=\"\"http://gobot.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Gobot. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Gobot</strong><span class=\"\"pop-out-icon\"\"></span></a> is a framework for robotics, physical computing, and the Internet of Things, written in the Go programming language and supporting a variety of platforms. We've used the framework for experimental robotic projects where real-time response hasn't been a requirement, and we’ve created open source <a href=\"\"http://github.com/HendrikLouw/robocar\"\" target=\"\"_blank\"\" aria-label=\"\"software drivers. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">software drivers<span class=\"\"pop-out-icon\"\"></span></a> with Gobot. Gobot HTTP APIs enable simple hardware integration with mobile devices to create richer applications.</p>\""
  },
  {
    "name": "Instana",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong><a href=\"\"http://www.instana.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Instana. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Instana<span class=\"\"pop-out-icon\"\"></span></a></strong> is yet another entrant into the crowded application performance management space. The fact that it's built from the ground up for cloud native architectures differentiates Instana from many of its competitors. Features include dynamic discovery, distributed tracing and service health plus the ability to \"\"time shift\"\" your view of your infrastructure to the moment an incident occurred. It remains to be seen whether this product can gain traction over the combination of open source projects—such as <a href=\"\"https://www.thoughtworks.com/radar/tools/consul\"\">Consul</a>, <a href=\"\"https://www.thoughtworks.com/radar/tools/prometheus\"\">Prometheus</a> and the implementations of <a href=\"\"https://www.thoughtworks.com/radar/platforms/opentracing\"\">OpenTracing</a>—that do the same thing; however it's worth taking a look if you need an out-of-the-box solution.</p>\""
  },
  {
    "name": "Keras",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"https://keras.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Keras. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Keras</strong><span class=\"\"pop-out-icon\"\"></span></a> is a high-level interface in Python for building neural networks. Created by a Google engineer, Keras is open source and runs on top of either <a href=\"\"https://www.thoughtworks.com/radar/platforms/tensorflow\"\">TensorFlow</a> or <a href=\"\"http://github.com/Theano/Theano\"\" target=\"\"_blank\"\" aria-label=\"\"Theano. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Theano<span class=\"\"pop-out-icon\"\"></span></a>. It provides an amazingly simple interface for creating powerful deep-learning algorithms to train on CPUs or GPUs. Keras is well designed with modularity, simplicity, and extensibility in mind. Unlike a library such as <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/caffe\"\">Caffe</a>, Keras supports more general network architectures such as recurrent nets, making it overall more useful for text analysis, NLP and general machine learning. If computer vision, or any other specialized branch of machine learning, is your primary concern, Caffe may be a more appropriate choice. However, if you’re looking to learn a simple yet powerful framework, Keras should be your first choice.</p>\""
  },
  {
    "name": "LeakCanary",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Our mobile teams have been excited about <a href=\"\"http://github.com/square/leakcanary\"\" target=\"\"_blank\"\" aria-label=\"\"LeakCanary. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>LeakCanary</strong><span class=\"\"pop-out-icon\"\"></span></a>, a tool for detecting annoying memory leaks in Android and Java. It's simple to hook up and provides notifications with a clear trace-back to the cause of the leak. Adding this to your toolkit can save tedious hours troubleshooting out-of-memory errors on multiple devices.</p>\""
  },
  {
    "name": "PostCSS",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong><a href=\"\"https://github.com/postcss/postcss\"\" target=\"\"_blank\"\" aria-label=\"\"PostCSS. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">PostCSS<span class=\"\"pop-out-icon\"\"></span></a></strong> is a <a href=\"\"https://www.thoughtworks.com/radar/platforms/node-js\"\">Node.js</a>-based JavaScript framework for operating on an abstract syntax tree-based representation of CSS documents with a rich ecosystem of plugins. Often incorrectly thought of as a preprocessor (such as SASS or Less), we find that the real power of PostCSS comes from the number of things that can be done with the rich set of plugins which includes linting (<a href=\"\"https://github.com/stylelint/stylelint\"\" target=\"\"_blank\"\" aria-label=\"\"the stylelint plugin. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">the stylelint plugin<span class=\"\"pop-out-icon\"\"></span></a>), cross-compilation (<a href=\"\"https://github.com/postcss/sugarss\"\" target=\"\"_blank\"\" aria-label=\"\"the sugarss plugin. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">the sugarss plugin<span class=\"\"pop-out-icon\"\"></span></a>), name-mangling to avoid selector collision (<a href=\"\"https://github.com/css-modules/postcss-modules\"\" target=\"\"_blank\"\" aria-label=\"\"the modules plugin. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">the modules plugin<span class=\"\"pop-out-icon\"\"></span></a>), boilerplate CSS code generation (<a href=\"\"https://github.com/postcss/autoprefixer\"\" target=\"\"_blank\"\" aria-label=\"\"the autoprefixer plugin. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">the autoprefixer plugin<span class=\"\"pop-out-icon\"\"></span></a>), <a href=\"\"http://cssnano.co/\"\" target=\"\"_blank\"\" aria-label=\"\"minification. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">minification<span class=\"\"pop-out-icon\"\"></span></a> and many others. The different maturity levels of the plugins notwithstanding, PostCSS itself remains a simple and powerful framework for treating CSS like a full-fledged language for front-end development.</p>\""
  },
  {
    "name": "PyTorch",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://pytorch.org/\"\" target=\"\"_blank\"\" aria-label=\"\"PyTorch. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>PyTorch</strong><span class=\"\"pop-out-icon\"\"></span></a> is a complete rewrite of the <a href=\"\"http://torch.ch/\"\" target=\"\"_blank\"\" aria-label=\"\"Torch. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Torch<span class=\"\"pop-out-icon\"\"></span></a> machine learning framework from Lua to Python. Although quite new and immature compared to <a href=\"\"https://www.thoughtworks.com/radar/platforms/tensorflow\"\">Tensorflow</a>, programmers find PyTorch much easier to work with. Because of its object-orientation and native Python implementation, models can be expressed more clearly and succinctly and debugged during execution. Although many of these frameworks have emerged recently, PyTorch has the backing of Facebook and broad range of partner organisations, including NVIDIA, which should ensure continuing support for CUDA architectures. ThoughtWorks teams find PyTorch useful for experimenting and developing models but still rely on TensorFlow’s performance for production-scale training and classification.</p>\""
  },
  {
    "name": "single-spa",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/CanopyTax/single-spa\"\" target=\"\"_blank\"\" aria-label=\"\"single-spa. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>single-spa</strong><span class=\"\"pop-out-icon\"\"></span></a> is a JavaScript metaframework that allows us to build <a href=\"\"https://www.thoughtworks.com/radar/techniques/micro-frontends\"\">micro frontends</a> using different frameworks that can coexist in a single application. In general, we don't recommend using more than one framework for an application, but there are times when we can't avoid doing so. For instance, single-spa can be quite useful when you're working with a legacy application and you want to experiment by developing a new feature, with either a new version of the existing framework or a completely different one. Given the short life span of many JavaScript frameworks, we see a need for a solution that would allow for future framework changes and localized experimentation, without affecting the entire application. single-spa seems to be a good start in that direction.</p>\""
  },
  {
    "name": "Solidity",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Programming for smart contracts requires a more expressive language than a <a href=\"\"http://en.bitcoin.it/wiki/Script\"\" target=\"\"_blank\"\" aria-label=\"\"scripting system for transactions. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">scripting system for transactions<span class=\"\"pop-out-icon\"\"></span></a>. <a href=\"\"http://github.com/ethereum/solidity\"\" target=\"\"_blank\"\" aria-label=\"\"Solidity. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Solidity</strong><span class=\"\"pop-out-icon\"\"></span></a> is the most popular among the new programming languages designed for smart contracts. Solidity is a contract-oriented, statically typed language whose syntax is similar to JavaScript. It provides abstractions for writing self-enforcing business logic in smart contracts. The toolchain around Solidity is growing fast. Nowadays, Solidity is the primary choice on the <a href=\"\"https://www.thoughtworks.com/radar/platforms/ethereum\"\">Ethereum</a> platform. Given the immutable nature of deployed smart contracts, it should go without saying that rigorous testing and audit of dependencies is vital.</p>\""
  },
  {
    "name": "TensorFlow Mobile",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><strong>TensorFlow Mobile</strong> makes it possible for developers to incorporate a wide range of comprehension and classification techniques into their iOS or Android applications. This is particularly useful given the range of sensor data available on mobile phones. Pretrained TensorFlow models can be loaded into a mobile application and applied to inputs such as live video frames, text or speech. Mobile phones present a surprisingly opportune platform for implementing these computational models. TensorFlow models are exported and loaded as protobuf files, which can present some problems for implementers. Protobuf's binary format can make it hard to examine models and requires that you link the correct protobuf library version to your mobile app. But local model execution offers an attractive alternative to <a href=\"\"https://www.thoughtworks.com/radar/platforms/tensorflow-serving\"\">TensorFlow Serving</a> without the communication overhead of remote execution.</p>\""
  },
  {
    "name": "Truffle",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://truffleframework.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Truffle. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Truffle</strong><span class=\"\"pop-out-icon\"\"></span></a> is a development framework that brings a modern web development experience to the <a href=\"\"https://www.thoughtworks.com/radar/platforms/ethereum\"\">Ethereum</a> platform. It takes over the job of smart contract compiling, library linking and deployment, as well as dealing with artifacts in different blockchain networks. One of the reasons we love Truffle is that it encourages people to write tests for their smart contracts. You need to take tests really seriously as smart contract programming is often related to money. With its built-in testing framework and integration with <a href=\"\"http://github.com/ethereumjs/testrpc\"\" target=\"\"_blank\"\" aria-label=\"\"TestRPC. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">TestRPC<span class=\"\"pop-out-icon\"\"></span></a>, Truffle makes it possible to write the contract in a TDD way. We expect to see more technologies similar to Truffle to promote continuous integration in the blockchain area.</p>\""
  },
  {
    "name": "Weex",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/alibaba/weex\"\" target=\"\"_blank\"\" aria-label=\"\"Weex. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Weex</strong><span class=\"\"pop-out-icon\"\"></span></a> is a framework for building cross-platform mobile apps by using the <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/vue-js\"\">Vue.js</a> component syntax. For those who prefer the simplicity of Vue.js, Weex is a viable option for native mobile apps, but it also works very well for more complicated apps. We see many successes for fairly complicated mobile apps built on this framework, including <a href=\"\"http://www.tmall.com/\"\" target=\"\"_blank\"\" aria-label=\"\"TMall. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">TMall<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://world.taobao.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Taobao. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Taobao<span class=\"\"pop-out-icon\"\"></span></a>, two of the most popular mobile apps in China. Weex was developed by Alibaba, and is now an <a href=\"\"http://github.com/apache/incubator-weex\"\" target=\"\"_blank\"\" aria-label=\"\"Apache incubator project. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Apache incubator project<span class=\"\"pop-out-icon\"\"></span></a>.</p>\""
  }
]
