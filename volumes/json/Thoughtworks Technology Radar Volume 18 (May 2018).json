[
  {
    "name": "Lightweight Architecture Decision Records",
    "ring": "adopt",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Much documentation can be replaced with highly readable code and tests. In a world of <a href=\"\"https://www.thoughtworks.com/radar/techniques/evolutionary-architecture\"\">evolutionary architecture</a>, however, it's important to record certain design decisions for the benefit of future team members as well as for external oversight. <strong>Lightweight Architecture Decision Records</strong> is a <a href=\"\"http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions\"\" target=\"\"_blank\"\" aria-label=\"\"technique. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">technique<span class=\"\"pop-out-icon\"\"></span></a> for capturing important architectural decisions along with their context and consequences. We recommend <a href=\"\"http://github.com/npryce/adr-tools\"\" target=\"\"_blank\"\" aria-label=\"\"storing these details in source control. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">storing these details in source control<span class=\"\"pop-out-icon\"\"></span></a>, instead of a wiki or website, as then they can provide a record that remains in sync with the code itself. For most projects, we see no reason why you wouldn't want to use this technique.</p>\""
  },
  {
    "name": "Applying product management to internal platforms",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>We've seen a steep increase in interest in the topic of digital platforms over the past 12 months. Companies looking to roll out new digital solutions quickly and efficiently are building internal platforms, which offer teams self-service access to the business APIs, tools, knowledge and support necessary to build and operate their own solutions. We find that these platforms are most effective when they're given the same respect as an external product offering. <strong>Applying product management to internal platforms</strong> means establishing empathy with internal consumers (read: developers) and collaborating with them on the design. Platform product managers establish roadmaps and ensure the platform delivers value to the business and enhances the developer experience. Some owners even create a brand identity for the internal platform and use that to market the benefits to their colleagues. Platform product managers look after the quality of the platform, gather usage metrics, and continuously improve it over time. Treating the platform as a product helps to create a thriving ecosystem and avoids the pitfall of building yet another stagnant, underutilized service-oriented architecture.</p>\""
  },
  {
    "name": "Architectural fitness function",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Borrowed from evolutionary computing, a fitness function is used to summarize how close a given design solution is to achieving the set aims. When defining an evolutionary algorithm, the designer seeks a ‘better’ algorithm; the fitness function defines what ‘better’ means in this context. An <strong>architectural fitness function</strong> , as defined in <a href=\"\"http://www.thoughtworks.com/books/building-evolutionary-architectures\"\" target=\"\"_blank\"\">Building Evolutionary Architectures</a>, provides an objective integrity assessment of some architectural characteristics, which may encompass existing verification criteria, such as unit testing, metrics, monitors, and so on. We believe architects can communicate, validate and preserve architectural characteristics in an automated, continual manner, which is the key to building evolutionary architectures.</p>\""
  },
  {
    "name": "Autonomous bubble pattern",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Many organizations we work with are trying hard to use modern engineering approaches to build new capabilities and features, while also having to coexist with a long tail of legacy systems. An old strategy that, based on our experience, has turned out to be increasingly helpful in these scenarios is <a href=\"\"http://dddcommunity.org/strategic-design/\"\" target=\"\"_blank\"\" aria-label=\"\"Eric Evans's. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Eric Evans's<span class=\"\"pop-out-icon\"\"></span></a> <strong>Autonomous bubble pattern</strong>. This approach involves creating a fresh context for new application development that is shielded from the entanglements of the legacy world. This is a step beyond just using an <a href=\"\"http://wiki.c2.com/?AnticorruptionLayer\"\" target=\"\"_blank\"\" aria-label=\"\"anticorruption layer. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">anticorruption layer<span class=\"\"pop-out-icon\"\"></span></a>. It gives the new bubble context full control over its backing data, which is then asynchronously kept up-to-date with the legacy systems. It requires some work to protect the boundaries of the bubble and keep both worlds consistent, but the resulting autonomy and reduction in development friction is a first bold step toward a modernized future architecture.</p>\""
  },
  {
    "name": "Chaos Engineering",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>In previous editions of the Radar, we've talked about using <a href=\"\"https://www.thoughtworks.com/radar/tools/chaos-monkey\"\">Chaos Monkey</a> from Netflix to test how a running system is able to cope with outages in production by randomly disabling instances and measuring the results. <strong>Chaos Engineering</strong> is the nascent term for the wider application of this technique. By running experiments on distributed systems in production, we're able to build confidence that those systems work as expected under turbulent conditions. A good place to start understanding this technique is the <a href=\"\"http://principlesofchaos.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Principles of Chaos Engineering. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Principles of Chaos Engineering<span class=\"\"pop-out-icon\"\"></span></a> website.</p>\""
  },
  {
    "name": "Domain-scoped events",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>It’s important to remember that encapsulation applies to events and event-driven architectures just as it applies to other areas of software. In particular, think about the scope of an event and whether we expect it to be consumed within the same application, the same domain or across an entire organization. A <strong>domain-scoped event</strong> will be consumed within the same domain as it’s published, as such we expect the consumer to have access to a certain context, resources or references in order to act on the event. If the consumption is happening more widely within an organization, the contents of the event might well need to be different, and we need to take care not to \"\"leak\"\" implementation details that other domains then come to depend upon.</p>\""
  },
  {
    "name": "Hosted identity management as a service",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Identity management is a critical platform component. External users on mobile apps need to be authenticated, developers need to be given access to delivery infrastructure components, and microservices may need to identify themselves to other microservices. You should ask yourself whether identity management should be “self-hosted”. In our experience, a <strong>hosted identity management as a service</strong> (SaaS) solution is preferable. We believe that top-tier hosted providers such as <a href=\"\"https://www.thoughtworks.com/radar/platforms/auth0\"\">Auth0</a> and <a href=\"\"http://www.okta.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Okta. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Okta<span class=\"\"pop-out-icon\"\"></span></a> can provide better uptime and security SLAs. That said, sometimes self-hosting the solution is a realistic decision, especially for enterprises that have the operational discipline and resources to do so safely. Large enterprise identity solutions typically offer a much more expansive range of capabilities such as centralized entitlements, governance reporting and separation of duties management among others. However, these concerns are typically more relevant for employee identities, especially in regulated enterprises with legacy systems.</p>\""
  },
  {
    "name": "Micro frontends",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>We've seen significant benefits from introducing <a href=\"\"https://www.thoughtworks.com/radar/techniques/microservices\"\">microservices</a> architectures, which have allowed teams to scale the delivery of independently deployed and maintained services. Unfortunately, we've also seen many teams create front-end monoliths — a single, large and sprawling browser application — on top of their back-end services. Our preferred (and proven) approach is to split the browser-based code into <strong>micro frontends</strong>. In this approach, the web application is broken down into its features, and each feature is owned, frontend to backend, by a different team. This ensures that every feature is developed, tested and deployed independently from other features. Multiple techniques exist to recombine the features — sometimes as pages, sometimes as components — into a cohesive user experience.</p>\""
  },
  {
    "name": "Pipelines for infrastructure as code",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>The use of continuous delivery pipelines to orchestrate the release process for software has become a mainstream concept. However, automatically testing changes to infrastructure code isn’t as widely understood. Continuous integration (CI) and continuous delivery (CD) tools can be used to test server configuration (e.g., Chef cookbooks, Puppet modules, Ansible playbooks), server image building (e.g., Packer), environment provisioning (e.g., Terraform, CloudFormation) and integration of environments. The use of <strong>pipelines for infrastructure as code</strong> enables errors to be found before changes are applied to operational environments — including environments used for development and testing. They also offer a way to ensure that infrastructure tooling is run consistently, from CI/CD agents, as opposed to being run from individual workstations. Some challenges remain, however, such as the longer feedback loops associated with standing up containers and virtual machines. Still, we've found this to be a valuable technique.</p>\""
  },
  {
    "name": "Polycloud",
    "ring": "trial",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>Organizations are becoming more comfortable with the <strong>Polycloud</strong> strategy — rather than going \"\"all-in\"\" with one provider, they are passing different types of workloads to different providers based on their own strategy. Some of them apply the best-of-breed approach, for example: putting standard services on AWS, but using Google for machine learning and data-oriented applications and Azure for Microsoft Windows applications. For some organizations this is a cultural and business decision. Retail businesses, for example, often refuse to store their data on Amazon and they distribute load to different providers based on their data. This is different to a cloud-agnostic strategy of aiming for portability across providers, which is costly and forces lowest-common-denominator thinking. Polycloud instead focuses on using the best match that each cloud provider offers.</p>\""
  },
  {
    "name": "BeyondCorp",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Previously in the Radar, we’ve discussed the rise of the <a href=\"\"https://www.thoughtworks.com/radar/techniques/perimeterless-enterprise\"\">perimeterless enterprise</a>. Now, some organizations are doing away with implicitly trusted intranets altogether and treating all communication as if it was being transmitted through the public internet. A set of practices, collectively labeled <a href=\"\"http://cloud.google.com/beyondcorp/\"\" target=\"\"_blank\"\" aria-label=\"\"BeyondCorp. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>BeyondCorp</strong><span class=\"\"pop-out-icon\"\"></span></a>, have been described by Google engineers in a set of publications. Collectively, these practices — including managed devices, 802.1x networking and standard access proxies protecting individual services — make this a viable approach to network security in large enterprises.</p>\""
  },
  {
    "name": "Embedded mobile mocks",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>When developing mobile applications, our teams often find themselves without an external server for testing apps. Setting up an over-the-wire mock may be a good fit for this particular problem. Developing the HTTP mocks and compiling them into the mobile binary for testing — <strong>embedded mobile mocks</strong> — enables teams to test their mobile apps when disconnected and with no external dependencies. This technique may require creating an opinionated library based on both the networking library used by the mobile app and your usage of the underlying library.</p>\""
  },
  {
    "name": "Ethereum for decentralized applications",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Blockchains have been widely hyped as the panacea for all things fintech, from banking to digital currency to supply chain transparency. We’ve previously featured <a href=\"\"https://www.thoughtworks.com/radar/platforms/ethereum\"\">Ethereum</a> because of its feature set, which includes smart contracts. Now, we're seeing more development using <strong>Ethereum for decentralized applications</strong> in <a href=\"\"http://www.stateofthedapps.com/\"\" target=\"\"_blank\"\" aria-label=\"\"other areas. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">other areas<span class=\"\"pop-out-icon\"\"></span></a>. Although this is still a very young technology, we're encouraged to see it being used to build decentralized applications beyond cryptocurrency and banking.</p>\""
  },
  {
    "name": "Event streaming as the source of truth",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>As event streaming platforms, such as <a href=\"\"https://www.thoughtworks.com/radar/tools/apache-kafka\"\">Apache Kafka</a>, rise in popularity, many consider them as an advanced form of message queuing, used solely to transmit events. Even when used in this way, event streaming has its benefits over traditional message queuing. However, we're more interested in how people use <strong>event streaming as the source of truth</strong> with platforms (Kafka in particular) as the primary store for data as immutable events. A service with an <a href=\"\"http://martinfowler.com/eaaDev/EventSourcing.html\"\" target=\"\"_blank\"\" aria-label=\"\"Event Sourcing. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Event Sourcing<span class=\"\"pop-out-icon\"\"></span></a> design, for example, can use Kafka as its event store; those events are then available for other services to consume. This technique has the potential to reduce duplicating efforts between local persistence and integration.</p>\""
  },
  {
    "name": "GraphQL for server-side resource aggregation",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>One pattern that comes up again and again when building microservice-style architectures is how to handle the aggregation of many resources server-side. In recent years, we've seen the emergence of a number of patterns such as <a href=\"\"https://www.thoughtworks.com/radar/techniques/bff-backend-for-frontends\"\">Backend for Frontend (BFF)</a> and tools such as <a href=\"\"http://netflix.github.io/falcor/\"\" target=\"\"_blank\"\" aria-label=\"\"Falcor. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Falcor<span class=\"\"pop-out-icon\"\"></span></a> to address this. Our teams have started using <strong>GraphQL for server-side resource aggregation</strong> instead. This differs from the usual mode of using <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/graphql\"\">GraphQL</a> where clients directly query a GraphQL server. When using this technique, the services continue to expose RESTful APIs but under-the-hood aggregate services use GraphQL resolvers as the implementation for stitching resources from other services. This technique simplifies the internal implementation of aggregate services or BFFs by using GraphQL.</p>\""
  },
  {
    "name": "Infrastructure configuration scanner",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>For some time now we've recommended increased delivery team ownership of their entire stack, including infrastructure. This means increased responsibility in the delivery team itself for configuring infrastructure in a safe, secure, and compliant way. When adopting cloud strategies, most organizations default to a tightly locked-down and centrally managed configuration to reduce risk, but this also creates substantial productivity bottlenecks. An alternative approach is to allow teams to manage their own configuration, and use an <strong>Infrastructure configuration scanner</strong> to ensure the configuration is set in a safe and secure way. <a href=\"\"http://github.com/iagcl/watchmen\"\" target=\"\"_blank\"\" aria-label=\"\"Watchmen. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Watchmen<span class=\"\"pop-out-icon\"\"></span></a> is an interesting tool, built to provide rule-driven assurance of AWS account configurations that are owned and operated independently by delivery teams. <a href=\"\"https://www.thoughtworks.com/radar/tools/scout2\"\">Scout2</a> is another example of configuration scanning to support secure compliance.</p>\""
  },
  {
    "name": "Jupyter for automated testing",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>We're seeing some interesting reports of using <strong>Jupyter for automated testing</strong>. The ability to mix code, comments and output in the same document reminds us of FIT, <a href=\"\"http://fitnesse.org/\"\" target=\"\"_blank\"\" aria-label=\"\"FitNesse. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">FitNesse<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://concordion.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Concordion. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Concordion<span class=\"\"pop-out-icon\"\"></span></a>. This flexible approach is particularly useful if your tests are data heavy or rely on some statistical analysis such as performance testing. Python provides all the power you need, but as tests grow in complexity, a way to manage suites of notebooks would be helpful.</p>\""
  },
  {
    "name": "Log level per request",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>One problem with observability in a highly distributed microservices architecture is the choice between logging everything — and taking up huge amounts of storage space — or randomly sampling logs and potentially missing important events. Recently, we’ve noticed a technique that offers a compromise between these two solutions. Set the <strong>log level per request</strong> via a parameter passed in through the tracing header. Using a tracing framework, possibly based on the <a href=\"\"https://www.thoughtworks.com/radar/platforms/opentracing\"\">OpenTracing</a> standard, you can pass a correlation id from service to service in a single transaction. You can even inject other data, such as the desired log level, at the initiating transaction and pass it along with the tracing information. This ensures that the additional data collected corresponds to a single user transaction as it flows through the system. This is also a useful technique for debugging, since services might be paused or otherwise modified on a transaction-by-transaction basis.</p>\""
  },
  {
    "name": "Security Chaos Engineering",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>We’ve previously talked about the technique of <a href=\"\"https://www.thoughtworks.com/radar/techniques/chaos-engineering\"\">Chaos Engineering</a> in the Radar and the Simian Army suite of tools from Netflix that we’ve used to run experiments to test the resilience of production infrastructure. <strong>Security Chaos Engineering</strong> broadens the scope of this technique to the realm of security. We deliberately introduce false positives into production networks and other infrastructure — build-time dependencies, for example — to check whether procedures in place are capable of identifying security failures under controlled conditions. Although useful, this technique should be used with care to avoid desensitizing teams to security problems.</p>\""
  },
  {
    "name": "Service mesh",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>As large organizations transition to more autonomous teams owning and operating their own microservices, how can they ensure the necessary consistency and compatibility between those services without relying on a centralized hosting infrastructure? To work together efficiently, even autonomous microservices need to align with some organizational standards. A <strong>service mesh</strong> offers consistent discovery, security, tracing, monitoring and failure handling without the need for a shared asset such as an API gateway or ESB. A typical implementation involves lightweight reverse-proxy processes deployed alongside each service process, perhaps in a separate container. These proxies communicate with service registries, identity providers, log aggregators, and so on. Service interoperability and observability are gained through a shared implementation of this proxy but not a shared runtime instance. We've advocated for a decentralized approach to microservice management for some time and are happy to see this consistent pattern emerge. Open source projects such as <a href=\"\"http://linkerd.io/\"\" target=\"\"_blank\"\" aria-label=\"\"linkerd. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">linkerd<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://istio.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Istio. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Istio<span class=\"\"pop-out-icon\"\"></span></a> will continue to mature and make service meshes even easier to implement.</p>\""
  },
  {
    "name": "Sidecars for endpoint security",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Microservices architecture, with a large number of services exposing their assets and capabilities through APIs and an increased attack surface, demand a zero trust security architecture — ‘never trust, always verify’. However, enforcing security controls for communication between services is often neglected, due to increased service code complexity and lack of libraries and language support in a polyglot environment. To get around this complexity, some teams delegate security to an out-of-process sidecar — a process or a container that is deployed and scheduled with each service sharing the same execution context, host and identity. Sidecars implement security capabilities, such as transparent encryption of the communication and TLS (Transport Layer Security) termination, as well as authentication and authorization of the calling service or the end user. We recommend you look into using <a href=\"\"http://istio.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Istio. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Istio<span class=\"\"pop-out-icon\"\"></span></a>, <a href=\"\"http://linkerd.io/\"\" target=\"\"_blank\"\" aria-label=\"\"linkerd. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">linkerd<span class=\"\"pop-out-icon\"\"></span></a> or <a href=\"\"http://github.com/envoyproxy/envoy\"\" target=\"\"_blank\"\" aria-label=\"\"Envoy. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Envoy<span class=\"\"pop-out-icon\"\"></span></a> before implementing your own <strong>sidecars for endpoint security</strong>.</p>\""
  },
  {
    "name": "The three Rs of security",
    "ring": "assess",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Traditional approaches to enterprise security often emphasize locking things down and slowing the pace of change. However, we know that the more time an attacker has to compromise a system, the greater the potential damage. <a href=\"\"http://builttoadapt.io/the-three-r-s-of-enterprise-security-rotate-repave-and-repair-f64f6d6ba29d\"\" target=\"\"_blank\"\" aria-label=\"\"The three Rs of enterprise security. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">The three Rs of enterprise security<span class=\"\"pop-out-icon\"\"></span></a> — rotate, repair and repave — take advantage of infrastructure automation and continuous delivery to eliminate opportunities for attack. Rotating credentials, applying patches as soon as they're available and rebuilding systems from a known, secure state — all within a matter of minutes or hours — makes it harder for attackers to succeed. <strong>The three Rs of security</strong> technique is made feasible with the advent of modern cloud-native architectures. When applications are deployed as containers, and built and tested via a completely automated pipeline, a security patch is just another small release that can be sent through the pipeline with one click. Of course, in keeping with best distributed systems practices, developers need to design their applications to be resilient to unexpected server outages. This is similar to the impact of implementing <a href=\"\"https://www.thoughtworks.com/radar/tools/chaos-monkey\"\">Chaos Monkey</a> within your environment.</p>\""
  },
  {
    "name": "Generic cloud usage",
    "ring": "hold",
    "quadrant": "techniques",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>The major cloud providers continue to add new features to their clouds at a rapid pace, and under the banner of <a href=\"\"https://www.thoughtworks.com/radar/techniques/polycloud\"\">Polycloud</a> we've suggested using multiple clouds in parallel, to mix and match services based on the strengths of each provider’s offerings. Increasingly, we're seeing organizations prepare to use multiple clouds — not to benefit from individual provider’s strengths, though, but to avoid vendor \"\"lock-in\"\" at all costs. This, of course, leads to <strong>generic cloud usage</strong> , only using features that are present across all providers, which reminds us of the lowest common denominator scenario we saw 10 years ago when companies avoided many advanced features in relational databases in an effort to remain vendor neutral. The problem of lock-in is real. However, instead of treating it with a sledgehammer approach, we recommend looking at this problem from the perspective of exit costs and relate those to the benefits of using cloud-specific features.</p>\""
  },
  {
    "name": "Recreating ESB antipatterns with Kafka",
    "ring": "hold",
    "quadrant": "techniques",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Kafka is becoming very popular as a messaging solution, and along with it, <a href=\"\"https://www.thoughtworks.com/radar/platforms/kafka-streams\"\">Kafka Streams</a> is at the forefront of the wave of interest in streaming architectures. Unfortunately, as they start to embed Kafka at the heart of their data and application platforms, we're seeing some organizations <strong>recreating ESB antipatterns with Kafka</strong> by centralizing the Kafka ecosystem components — such as connectors and stream processors — instead of allowing these components to live with product or service teams. This reminds us of seriously problematic ESB antipatterns, where more and more logic, orchestration and transformation were thrust into a centrally managed ESB, creating a significant dependency on a centralized team. We're calling this out to dissuade further implementations of this flawed pattern.</p>\""
  },
  {
    "name": ".NET Core",
    "ring": "adopt",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>Our teams have confirmed that <a href=\"\"http://www.microsoft.com/net/core\"\" target=\"\"_blank\"\" aria-label=\"\".NET Core. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>.NET Core</strong><span class=\"\"pop-out-icon\"\"></span></a> has reached a level of maturity that makes it the default for .NET server applications. The open source .NET Core framework enables the development and deployment of .NET applications on Windows, macOS and Linux with first-class cross-platform tooling. Microsoft provides blessed Docker images which make it easy to deploy .NET Core applications in a containerized environment. Positive directions in the community and feedback from our projects indicate that .NET Core is the future for .NET development.</p>\""
  },
  {
    "name": "Kubernetes",
    "ring": "adopt",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Since we last mentioned <strong>Kubernetes</strong> in the Radar, it has become the default solution for most of our clients when deploying containers into a cluster of machines. The alternatives didn’t capture as much mindshare, and in some cases our clients are even changing their ‘engine’ to Kubernetes. Kubernetes has become the container orchestration platform of choice for major public cloud platforms, including Microsoft's Azure Container Service and Google Cloud (see the <a href=\"\"https://www.thoughtworks.com/radar/platforms/gke\"\">GKE</a> blip). And there are many useful products enriching the fast-growing Kubernetes ecosystem. Platforms that try to hide Kubernetes under an abstraction layer, however, have yet to prove themselves.</p>\""
  },
  {
    "name": "Azure",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>Microsoft has steadily improved <a href=\"\"http://azure.microsoft.com\"\" target=\"\"_blank\"\" aria-label=\"\"Azure. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Azure</strong><span class=\"\"pop-out-icon\"\"></span></a> and today not much separates the core cloud experience provided by the major cloud providers – Amazon, Google and Microsoft. The cloud providers seem to agree and seek to differentiate themselves in other areas such as features, services and cost structure. Microsoft is the provider who shows real interest in the legal requirements of European companies. They’ve a nuanced and plausible strategy, including unique offerings such as <a href=\"\"http://azure.microsoft.com/en-us/global-infrastructure/germany/\"\" target=\"\"_blank\"\" aria-label=\"\"Azure Germany. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Azure Germany<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"https://www.thoughtworks.com/radar/platforms/azure-stack\"\">Azure Stack</a>, which gives some certainty to European companies in anticipation of the <a href=\"\"http://www.thoughtworks.com/insights/blog/gdpr-it-s-time-rethink-your-approach-privacy\"\" target=\"\"_blank\"\">GDPR</a> and possible legislative changes in the United States.</p>\""
  },
  {
    "name": "CircleCI",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://circleci.com/\"\" target=\"\"_blank\"\" aria-label=\"\"CircleCI. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>CircleCI</strong><span class=\"\"pop-out-icon\"\"></span></a> is a continuous integration engine offered as SaaS and on premise. CircleCI has been the go-to SaaS CI tool for many of our development teams, who needed a low-friction and easy-to-setup build and deployment pipeline. CircleCI version 2.0 supports workflows of build jobs, with fan-in and fan-out flows and manual gates, as well as mobile development. It allows developers to run the pipelines locally and easily integrates with Slack and other notification and alerting systems. We recommend you take a closer look at the <a href=\"\"http://circleci.com/security/\"\" target=\"\"_blank\"\" aria-label=\"\"security practices of CircleCI. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">security practices of CircleCI<span class=\"\"pop-out-icon\"\"></span></a>, just as you would with any other SaaS product that hosts your company’s assets.</p>\""
  },
  {
    "name": "Contentful",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Headless Content Management Systems (CMSes) are becoming a common component of digital platforms. <a href=\"\"http://www.contentful.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Contentful. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Contentful</strong><span class=\"\"pop-out-icon\"\"></span></a> is a modern headless CMS that our teams have successfully integrated into their development workflows. We particularly like its API-first approach and implementing <a href=\"\"http://www.contentful.com/r/knowledgebase/cms-as-code/\"\" target=\"\"_blank\"\" aria-label=\"\"CMS as Code. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">CMS as Code<span class=\"\"pop-out-icon\"\"></span></a>. It supports powerful content modelling primitives as code and content model evolution scripts, which allow treating it as other data store schemas and applying <a href=\"\"http://martinfowler.com/articles/evodb.html\"\" target=\"\"_blank\"\" aria-label=\"\"evolutionary database design. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">evolutionary database design<span class=\"\"pop-out-icon\"\"></span></a> practices to CMS development. Other notable features that we’ve liked include inclusion of two CDNs by default to deliver media assets and JSON documents, good support for localization, and the ability — albeit with some effort — to integrate with <a href=\"\"https://www.thoughtworks.com/radar/platforms/auth0\"\">Auth0</a>.</p>\""
  },
  {
    "name": "EMQ",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://emqtt.io\"\" target=\"\"_blank\"\" aria-label=\"\"EMQ. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>EMQ</strong><span class=\"\"pop-out-icon\"\"></span></a> is a scalable open source multiplatform MQTT broker. It’s written in <a href=\"\"http://github.com/erlang/otp\"\" target=\"\"_blank\"\" aria-label=\"\"Erlang/OTP. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Erlang/OTP<span class=\"\"pop-out-icon\"\"></span></a> for higher performance, handling millions of concurrent connections. It supports multiple protocols including <a href=\"\"http://mqtt.org/\"\" target=\"\"_blank\"\" aria-label=\"\"MQTT. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">MQTT<span class=\"\"pop-out-icon\"\"></span></a>, <a href=\"\"http://mqtt.org/2013/12/mqtt-for-sensor-networks-mqtt-sn\"\" target=\"\"_blank\"\" aria-label=\"\"MQTT Sensor Networks. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">MQTT Sensor Networks<span class=\"\"pop-out-icon\"\"></span></a>, <a href=\"\"http://coap.technology/\"\" target=\"\"_blank\"\" aria-label=\"\"CoAP. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">CoAP<span class=\"\"pop-out-icon\"\"></span></a> as well as <a href=\"\"http://tools.ietf.org/html/rfc6455\"\" target=\"\"_blank\"\" aria-label=\"\"WebSockets. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">WebSockets<span class=\"\"pop-out-icon\"\"></span></a>, making it suitable for both IoT and mobile devices. We’ve started using EMQ in our projects and have enjoyed its ease of installation and use, its ability to route messages to different destinations including <a href=\"\"https://www.thoughtworks.com/radar/tools/apache-kafka\"\">Kafka</a> and PostgreSQL, as well as its API-driven approach for its monitoring and configuration.</p>\""
  },
  {
    "name": "Flood IO",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Load testing became easier with the maturity of tools such as <a href=\"\"https://www.thoughtworks.com/radar/tools/gatling\"\">Gatling</a> and <a href=\"\"https://www.thoughtworks.com/radar/tools/locust\"\">Locust</a>. At the same time, elastic cloud infrastructures make it possible to simulate a large number of client instances. We're delighted to see Flood and other cloud platforms go further by leveraging these technologies. <a href=\"\"http://flood.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Flood IO. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Flood IO</strong><span class=\"\"pop-out-icon\"\"></span></a> is an SaaS load-testing service that helps to distribute and execute testing scripts across hundreds of servers in the cloud. Our teams find it simple to migrate performance testing to Flood by reusing existing Gatling scripts.</p>\""
  },
  {
    "name": "GKE",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>While the software development ecosystem is converging on <a href=\"\"https://www.thoughtworks.com/radar/platforms/kubernetes\"\">Kubernetes</a> as the orchestration platform for containers, running Kubernetes clusters remains operationally complex. Google Kubernetes Engine ( <strong>GKE</strong> ) is a managed Kubernetes solution for deploying containerized applications that alleviates the operational overhead of running and maintaining Kubernetes clusters. Our teams have had a good experience using GKE, with the platform doing the heavy lifting of applying security patches, monitoring and auto-repairing the nodes, and managing multicluster and multiregion networking. In our experience, Google's API-first approach in exposing platform capabilities, as well as using industry standards such as <a href=\"\"https://www.thoughtworks.com/radar/platforms/oauth\"\">OAuth</a> for service authorisation, improve the developer experience. It's important to consider that GKE is under rapid development with many of its APIs in beta release which, despite the developers' best efforts to abstract consumers from underlying changes, can impact you. We're expecting continuous improvement around maturity of <a href=\"\"https://www.thoughtworks.com/radar/tools/infrastructure-as-code\"\">infrastructure as code</a> with <a href=\"\"http://www.terraform.io/docs/providers/google/r/container_cluster.html\"\" target=\"\"_blank\"\" aria-label=\"\"Terraform on GKE. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Terraform on GKE<span class=\"\"pop-out-icon\"\"></span></a> and similar tools.</p>\""
  },
  {
    "name": "Google Cloud Platform",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>As <a href=\"\"http://cloud.google.com/free/ce1/\"\" target=\"\"_blank\"\" aria-label=\"\"Google Cloud Platform. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Google Cloud Platform</strong><span class=\"\"pop-out-icon\"\"></span></a> (GCP) has expanded in terms of available geographic regions and maturity of services, customers globally can now seriously consider it for their cloud strategy. In some areas, GCP has reached feature parity with its main competitor, Amazon Web Services, while in other areas it has differentiated itself — notably with accessible machine learning platforms, data engineering tools, and a workable Kubernetes as a service solution (<a href=\"\"https://www.thoughtworks.com/radar/platforms/gke\"\">GKE</a>). In practice, our teams have nothing but praise for the developer experience working with the GCP tools and APIs.</p>\""
  },
  {
    "name": "Keycloak",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>In a <a href=\"\"https://www.thoughtworks.com/radar/techniques/microservices\"\">microservice</a>, or any other distributed architecture, one of the most common needs is to secure the services or APIs through authentication and authorization features. This is where <a href=\"\"http://www.keycloak.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Keycloak. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Keycloak</strong><span class=\"\"pop-out-icon\"\"></span></a> comes in. Keycloak is an open source identity and access management solution that makes it easy to secure applications or microservices with little to no code. It supports single sign-on, social login and standard protocols such as <a href=\"\"http://openid.net/connect/\"\" target=\"\"_blank\"\" aria-label=\"\"OpenID Connect. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">OpenID Connect<span class=\"\"pop-out-icon\"\"></span></a>, <a href=\"\"http://oauth.net/2/\"\" target=\"\"_blank\"\" aria-label=\"\"OAuth 2.0. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">OAuth 2.0<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://en.wikipedia.org/wiki/Security_Assertion_Markup_Language\"\" target=\"\"_blank\"\" aria-label=\"\"SAML. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">SAML<span class=\"\"pop-out-icon\"\"></span></a> out of the box. Our teams have been using this tool and plan to keep using it for the foreseeable future. But it requires a little work to set up. Because configuration happens both at initialization and at runtime through APIs, it's necessary to write scripts to ensure deployments are repeatable.</p>\""
  },
  {
    "name": "Kong API Gateway",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p><a href=\"\"http://getkong.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Kong. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Kong<span class=\"\"pop-out-icon\"\"></span></a> is an <a href=\"\"http://github.com/Kong/kong\"\" target=\"\"_blank\"\" aria-label=\"\"open source API gateway. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">open source API gateway<span class=\"\"pop-out-icon\"\"></span></a> which also comes as an <a href=\"\"http://konghq.com/kong-enterprise-edition/\"\" target=\"\"_blank\"\" aria-label=\"\"enterprise product. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">enterprise product<span class=\"\"pop-out-icon\"\"></span></a> integrating with proprietary API analytics and a developer portal. Kong can be deployed, in a variety of configurations, as an edge API gateway, as an internal API proxy, or even as a sidecar in a <a href=\"\"https://www.thoughtworks.com/radar/techniques/service-mesh\"\">service mesh</a> configuration. <a href=\"\"http://openresty.org/en/\"\" target=\"\"_blank\"\" aria-label=\"\"OpenResty. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">OpenResty<span class=\"\"pop-out-icon\"\"></span></a>, through its Nginx modules, provides a strong and performant foundation, with Lua plugins for extensions. Kong can either use PostgreSQL for single-region deployments or Cassandra for multiregion configurations. Our developers have enjoyed Kong's high performance, its API-first approach (which enables automation of its configuration) and its ease of deployment as a container. <strong>Kong API Gateway</strong> , unlike <a href=\"\"https://www.thoughtworks.com/radar/platforms/overambitious-api-gateways\"\">overambitious API gateways</a>, has a smaller set of features but it implements the essential set of API gateway capabilities such as traffic control, security, logging, monitoring and authentication.</p>\""
  },
  {
    "name": "WeChat",
    "ring": "trial",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong>WeChat</strong> , often seen as a WhatsApp equivalent, is becoming the de facto business platform in China. Many people may not know but WeChat is also one of the most popular online payment platforms. With the app's built-in CMS and membership management, small businesses are now conducting their commerce entirely on WeChat. Through the Service Account feature, large organizations can interface their internal system to their employees. Given that more than 70 percent of Chinese people are using WeChat, it's an important consideration for businesses that want to expand into the China market.</p>\""
  },
  {
    "name": "AWS Fargate",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://aws.amazon.com/fargate/\"\" target=\"\"_blank\"\" aria-label=\"\"AWS Fargate. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>AWS Fargate</strong><span class=\"\"pop-out-icon\"\"></span></a> is a recent entry into the docker-as-a-service space, currently limited to the US-East-1 region. For teams using <a href=\"\"https://www.thoughtworks.com/radar/platforms/aws-ecs\"\">AWS Elastic Container Service</a> (ECS), AWS Fargate is a good alternative without having to manage, provision and configure any underlying EC2 instances or clusters. Fargate allows defining (ECS or <a href=\"\"http://aws.amazon.com/eks/\"\" target=\"\"_blank\"\" aria-label=\"\"EKS – ECS for Kubernetes. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">EKS – ECS for Kubernetes<span class=\"\"pop-out-icon\"\"></span></a>) tasks as a Fargate type, and they will run on the AWS Fargate infrastructure. If you like the focus on business functionality that <a href=\"\"https://www.thoughtworks.com/radar/platforms/aws-lambda\"\">AWS Lambda</a> gives you, Fargate is the closest you can get when applications can't be deployed as single functions.</p>\""
  },
  {
    "name": "Azure Service Fabric",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong>Azure Service Fabric</strong> is a distributed systems platform built for microservices and containers. It can act as a PaaS with its reliable services, or like a container orchestrator with its ability to manage containers. What distinguishes Service Fabric though are programming models such as <a href=\"\"https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-reliable-actors-introduction\"\" target=\"\"_blank\"\" aria-label=\"\"Reliable Actors. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Reliable Actors<span class=\"\"pop-out-icon\"\"></span></a> built on top of reliable services. When it comes to IoT use cases, for example, Reliable Actors offers some compelling advantages — in addition to the reliability and platform benefits of being on Service Fabric, you also get its state management and replication capabilities. In keeping with continued focus on open source software (OSS), Microsoft will be transitioning Service Fabric to an <a href=\"\"https://blogs.msdn.microsoft.com/azureservicefabric/2018/03/14/service-fabric-is-going-open-source/\"\" target=\"\"_blank\"\" aria-label=\"\"open development process on Github. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">open development process on Github<span class=\"\"pop-out-icon\"\"></span></a>. All this makes Azure Service Fabric worth trialling — particularly for organizations who are invested in the .NET framework.</p>\""
  },
  {
    "name": "Azure Stack",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Cloud computing brings significant benefits over self-hosted virtualized solutions but sometimes data simply cannot leave an organization’s premises, usually for latency or regulatory reasons. For European companies, the current political climate also raises more concerns about placing data in the hands of US-based entities. With <a href=\"\"http://azure.microsoft.com/en-us/overview/azure-stack/\"\" target=\"\"_blank\"\" aria-label=\"\"Azure Stack. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Azure Stack</strong><span class=\"\"pop-out-icon\"\"></span></a>, Microsoft adds an interesting offering as a middle ground between full-featured public clouds and simple on-premises virtualization: a slimmed-down version of the software that runs Microsoft’s Azure Global cloud is combined with a rack of preconfigured commodity hardware from the usual suspects like HP and Lenovo, providing an organization with the core Azure experience on premises. By default, support is split between Microsoft and the hardware vendors (and they promise to cooperate), but system integrators can offer complete Azure Stack solutions, too.</p>\""
  },
  {
    "name": "Cloud Spanner",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://cloud.google.com/spanner/\"\" target=\"\"_blank\"\" aria-label=\"\"Cloud Spanner. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Cloud Spanner</strong><span class=\"\"pop-out-icon\"\"></span></a> is a fully managed relational database service offering high availability and strong consistency without compromising latency. Google has been working on a globally distributed database called Spanner for quite some time. It has recently released the service to the outside world as Cloud Spanner. You can scale your database instance from one to thousands of nodes across the globe without worrying about data consistency. By levering <a href=\"\"http://cloud.google.com/spanner/docs/true-time-external-consistency\"\" target=\"\"_blank\"\" aria-label=\"\"TrueTime. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">TrueTime<span class=\"\"pop-out-icon\"\"></span></a>, a highly available and distributed clock, Cloud Spanner provides strong consistency for reads and snapshots. You can use standard SQL to read data from Cloud Spanner, but for write operations you have to use their RPC API. Although not all services would require a global-scale distributed database, the general availability of Cloud Spanner is a big shift in the way we think about databases. And its design is influencing open source products such as <a href=\"\"http://github.com/cockroachdb/cockroach\"\" target=\"\"_blank\"\" aria-label=\"\"CockroachDB. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">CockroachDB<span class=\"\"pop-out-icon\"\"></span></a>.</p>\""
  },
  {
    "name": "Corda",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>After thorough exploration, R3, an important player in the blockchain space, realized that blockchain doesn't fit their purpose well, so they created <strong><a href=\"\"http://www.corda.net\"\" target=\"\"_blank\"\" aria-label=\"\"Corda. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Corda<span class=\"\"pop-out-icon\"\"></span></a></strong>. Corda is a distributed ledger technology (DLT) platform focused on the financial field. R3 have a very clear value proposition and know that their problem requires a pragmatic technology approach. This matches our own experience; current blockchain solutions may not be the reasonable choice for some business cases, due to mining costs and operational inefficiency. Although the development experience we have on Corda thus far has not been the smoothest, <a href=\"\"http://docs.corda.net/releases/release-V1.0/api-index.html#internal-apis-and-stability-guarantees\"\" target=\"\"_blank\"\" aria-label=\"\"APIs are still unstable after v1.0 release. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">APIs are still unstable after v1.0 release<span class=\"\"pop-out-icon\"\"></span></a>, we expect to see the DLT space mature further.</p>\""
  },
  {
    "name": "Cosmos DB",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://docs.microsoft.com/en-us/azure/cosmos-db/introduction\"\" target=\"\"_blank\"\" aria-label=\"\"Cosmos DB. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Cosmos DB</strong><span class=\"\"pop-out-icon\"\"></span></a> is Microsoft's globally distributed, multimodel database service, which became generally available earlier this year. While most modern NoSQL databases offer tunable consistency, Cosmos DB makes it a first-class citizen and offers five different consistency models. It's worth highlighting that it also supports multiple models — key value, document, column family and graph — all of which map to its internal data model, called atom-record-sequence (ARS). One interesting aspect of Cosmos DB is that it offers service level agreements (SLAs) on its latency, throughput, consistency and availability. With its wide range of applicability, it has set a high standard for other cloud vendors to match.</p>\""
  },
  {
    "name": "Godot",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>As AR and VR continue to gain traction, we continue to explore tools with which we can create immersive virtual worlds. Our positive experience with <a href=\"\"https://www.thoughtworks.com/radar/platforms/unity-beyond-gaming\"\">Unity</a>, one of the two major gaming engines, led us to feature it in previous Radars. We still like Unity but are also excited about <a href=\"\"http://godotengine.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Godot. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Godot</strong><span class=\"\"pop-out-icon\"\"></span></a>, a relatively new entrant to the field. Godot is open source software and although not as fully featured as the big commercial engines, it comes with a more modern software design and less clutter. Offering C# and Python further lowers the barrier to entry for developers outside the gaming industry. Godot version 3, released earlier this year, <a href=\"\"http://godotengine.org/article/update-on-recent-vr-developments\"\" target=\"\"_blank\"\" aria-label=\"\"adds support for VR. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">adds support for VR<span class=\"\"pop-out-icon\"\"></span></a> and support for AR is on the horizon.</p>\""
  },
  {
    "name": "Interledger",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Most people may know the \"\"Internet of money\"\" through <a href=\"\"http://bitcoin.org/en/\"\" target=\"\"_blank\"\" aria-label=\"\"Bitcoin. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Bitcoin<span class=\"\"pop-out-icon\"\"></span></a>. In fact, this idea can be traced to the early stages of the Web. HTTP even reserved a <a href=\"\"http://httpstatusdogs.com/402-payment-required\"\" target=\"\"_blank\"\" aria-label=\"\"status code. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">status code<span class=\"\"pop-out-icon\"\"></span></a> for digital payment. The challenging part of this idea is to transfer value between different ledgers in different entities. <a href=\"\"http://en.wikipedia.org/wiki/Blockchain\"\" target=\"\"_blank\"\" aria-label=\"\"Blockchain. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Blockchain<span class=\"\"pop-out-icon\"\"></span></a> technology promotes this idea through building a distributed shared ledger. The current challenge is how to achieve interoperability between different blockchain ledgers and interoperability with traditional centralized ledgers. <a href=\"\"http://interledger.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Interledger. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Interledger</strong><span class=\"\"pop-out-icon\"\"></span></a> is a protocol to connect different ledgers. This protocol uses connectors and a cryptographic mechanism such as <a href=\"\"http://en.bitcoin.it/wiki/Hashed_Timelock_Contracts\"\" target=\"\"_blank\"\" aria-label=\"\"HTLC. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">HTLC<span class=\"\"pop-out-icon\"\"></span></a> to route secure payments across ledgers. It’s not hard to join the payment network through its suites. Interledger was first initiated by Ripple and is now steadily developed by a W3C community group.</p>\""
  },
  {
    "name": "Language Server Protocol",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Much of the power of sophisticated IDEs comes from their ability to parse a program into an abstract syntax tree (AST) and then use that AST for program analysis and manipulation. This supports features such as autocomplete, finding callers and refactoring. Language servers pull this capability into a process that allows any text editor to access an API to work with the AST. Microsoft has led the creation of the <a href=\"\"http://github.com/Microsoft/language-server-protocol\"\" target=\"\"_blank\"\" aria-label=\"\"Language Server Protocol. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Language Server Protocol</strong><span class=\"\"pop-out-icon\"\"></span></a> (LSP), harvested from their OmniSharp and TypeScript Server projects.<a href=\"\"http://langserver.org#implementations-client\"\" target=\"\"_blank\"\" aria-label=\"\"Any editor. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Any editor<span class=\"\"pop-out-icon\"\"></span></a> that uses this protocol can work with any language that has an <a href=\"\"http://langserver.org#implementations-server\"\" target=\"\"_blank\"\" aria-label=\"\"LSP-compliant server. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">LSP-compliant server<span class=\"\"pop-out-icon\"\"></span></a>. This means we can keep using our favorite editors without forgoing the rich text editing modes of many languages — much to the delight of our Emacs addicts.</p>\""
  },
  {
    "name": "LoRaWAN",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><strong>LoRaWAN</strong> is a low-power wide-area network, designed for low-power consumption and communication over long distances using low bitrates. It provides for communication between devices and gateways, which can then forward the data to, for example, applications or servers. A typical usage is for a distributed set of sensors, or for Internet of Things (IoT) devices, for which long battery life and long-range communication is a must. LoRaWAN addresses two of the key problems with attempting to use normal Wi-Fi for such applications: range and power consumption. There are several implementations, a notable one being <a href=\"\"http://www.thethingsnetwork.org/\"\" target=\"\"_blank\"\" aria-label=\"\"The Things Network. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\" data-faitracker-click-bind=\"\"true\"\">The Things Network<span class=\"\"pop-out-icon\"\"></span></a>, a free, open source implementation.</p>\""
  },
  {
    "name": "Mongoose OS",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>With an accelerated growth of connected embedded devices and wider accessibility of hardware, <a href=\"\"http://mongoose-os.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Mongoose OS. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Mongoose OS</strong><span class=\"\"pop-out-icon\"\"></span></a> fills a noticeable gap for embedded software developers: the gap between Arduino firmware suitable for prototyping and bare-metal microcontrollers' native SDKs. Mongoose OS is a microcontroller operating system that comes with a set of libraries and a development framework to support typical Internet of Things (IoT) applications with connectivity to generic <a href=\"\"http://mqtt.org/\"\" target=\"\"_blank\"\" aria-label=\"\"MQTT. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">MQTT<span class=\"\"pop-out-icon\"\"></span></a> servers and popular IoT cloud platforms such as <a href=\"\"http://cloud.google.com/iot-core\"\" target=\"\"_blank\"\" aria-label=\"\"Google Cloud IoT Core. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Google Cloud IoT Core<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://aws.amazon.com/iot/\"\" target=\"\"_blank\"\" aria-label=\"\"AWS IoT. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">AWS IoT<span class=\"\"pop-out-icon\"\"></span></a> by default. In fact, Google recommends a <a href=\"\"http://cloud.google.com/solutions/iot/kit/\"\" target=\"\"_blank\"\" aria-label=\"\"Mongoose starter kit. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Mongoose starter kit<span class=\"\"pop-out-icon\"\"></span></a> for its Cloud IoT Core. We’ve had a seamless experience using Mongoose OS in our embedded projects building connected workspaces. We especially liked its built-in security at the individual device level and OTA firmware updates, among other <a href=\"\"http://mongoose-os.com/features.html\"\" target=\"\"_blank\"\" aria-label=\"\"features. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">features<span class=\"\"pop-out-icon\"\"></span></a>. At the time of writing, only a limited number of microcontrollers and boards are supported with more popular ARM-based microcontrollers still under development.</p>\""
  },
  {
    "name": "Netlify",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>We like simple tools that solve one problem really well, and <a href=\"\"http://www.netlify.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Netlify. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Netlify</strong><span class=\"\"pop-out-icon\"\"></span></a> fits this description nicely. You can create static website content, check it into GitHub and then quickly and easily get your site live and available. There is a CLI available to control the process; content delivery networks (CDNs) are supported; it can work alongside tools such as <a href=\"\"http://gruntjs.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Grunt. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Grunt<span class=\"\"pop-out-icon\"\"></span></a>; and, most importantly, Netlify supports HTTPS.</p>\""
  },
  {
    "name": "TensorFlow Serving",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Machine-learning models are starting to creep into everyday business applications. When enough training data is available, these algorithms can address problems that might have previously required complex statistical models or heuristics. As we move from experimental use to production, we need a reliable way to host and deploy the models that can be accessed remotely and scale with the number of consumers. <a href=\"\"http://www.tensorflow.org/serving/\"\" target=\"\"_blank\"\" aria-label=\"\"TensorFlow Serving. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>TensorFlow Serving</strong><span class=\"\"pop-out-icon\"\"></span></a> addresses part of that problem by exposing a remote gRPC interface to an exported model; this allows a trained model to be deployed in a variety of ways. TensorFlow Serving also accepts a stream of models to incorporate continuous training updates, and its authors maintain a Dockerfile to ease the deployment process. Presumably, the choice of gRPC is to be consistent with the TensorFlow execution model; however, we’re generally wary of protocols that require code generation and native bindings.</p>\""
  },
  {
    "name": "TICK Stack",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://www.influxdata.com/time-series-platform/\"\" target=\"\"_blank\"\" aria-label=\"\"TICK Stack. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>TICK Stack</strong><span class=\"\"pop-out-icon\"\"></span></a> is a platform composed of open source components which makes collection, storage, graphing and alerting on-time series data such as metrics and events easy. The components of the TICK Stack are: Telegraf, a server agent for collecting and reporting metrics; InfluxDB, a high-performance time series database; Chronograf, a user interface for the platform; and Kapacitor, a data-processing engine that can process, stream and batch data from InfluxDB. Unlike <a href=\"\"https://www.thoughtworks.com/radar/tools/prometheus\"\">Prometheus</a>, which is based on the Pull model, the TICK Stack is based on the Push model of collecting data. The heart of the system is the InfluxDB component which is one of the best time series databases. This stack is backed by InfluxData and needs the enterprise version for features such as DB clustering, but it’s still a fairly good choice for monitoring. We’re using it in a few places in production and have had good experiences with it.</p>\""
  },
  {
    "name": "Web Bluetooth",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/WebBluetoothCG/web-bluetooth\"\" target=\"\"_blank\"\" aria-label=\"\"Web Bluetooth. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Web Bluetooth</strong><span class=\"\"pop-out-icon\"\"></span></a> allows us to control any Bluetooth Low Energy device directly from the browser. This allows us to target scenarios that previously could only be solved with a native app. The specification is published by the Web Bluetooth Community Group and describes an API to discover and communicate with devices over the Bluetooth 4 wireless standard. Right now, Chrome is the only major browser which currently supports this specification. With <a href=\"\"http://google.github.io/physical-web/\"\" target=\"\"_blank\"\" aria-label=\"\"Physical Web. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Physical Web<span class=\"\"pop-out-icon\"\"></span></a> and Web Bluetooth, we now have other avenues for getting users to interact with devices without them having to install yet another app on their phone. This is an exciting space which is worth keeping an eye on.</p>\""
  },
  {
    "name": "Windows Containers",
    "ring": "assess",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Microsoft is catching up in the container space with <a href=\"\"http://docs.microsoft.com/en-us/virtualization/windowscontainers/about/\"\" target=\"\"_blank\"\" aria-label=\"\"Windows Containers. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Windows Containers</strong><span class=\"\"pop-out-icon\"\"></span></a> enabling running Windows applications as containers on Windows-based environments. At the time of writing, Microsoft provides two Windows OS images as Docker containers — <a href=\"\"http://hub.docker.com/r/microsoft/windowsservercore/\"\" target=\"\"_blank\"\" aria-label=\"\"Windows Server 2016 Server Core. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Windows Server 2016 Server Core<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://hub.docker.com/r/microsoft/nanoserver/\"\" target=\"\"_blank\"\" aria-label=\"\"Windows Server 2016 Nano Server. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Windows Server 2016 Nano Server<span class=\"\"pop-out-icon\"\"></span></a> — that can run as a <a href=\"\"http://docs.microsoft.com/en-us/virtualization/windowscontainers/about/#windows-container-types\"\" target=\"\"_blank\"\" aria-label=\"\"Windows Server Container. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Windows Server Container<span class=\"\"pop-out-icon\"\"></span></a> with Docker. Our teams have started using Windows containers in scenarios where <a href=\"\"https://www.thoughtworks.com/radar/techniques/docker-for-builds\"\">build agents</a> and similar containers have been working successfully. Microsoft is aware that there’s room for improvements such as decreasing the large image sizes and enriching ecosystem support and documentation.</p>\""
  },
  {
    "name": "Overambitious API gateways",
    "ring": "hold",
    "quadrant": "platforms",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>We remain concerned about business logic and process orchestration implemented in middleware, especially where it requires expert skills and tooling while creating single points of scaling and control. Vendors in the highly competitive API gateway market are continuing this trend by adding features through which they attempt to differentiate their products. This results in <strong>overambitious API gateway</strong> products whose functionality — on top of what is essentially a reverse proxy — encourages designs that continue to be difficult to test and deploy. API gateways do provide utility in dealing with some specific concerns — such as authentication and rate limiting — but any domain smarts should live in applications or services.</p>\""
  },
  {
    "name": "Appium Test Distribution",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>We've featured <a href=\"\"https://www.thoughtworks.com/radar/tools/appium\"\">Appium</a> in the Radar in the past. It's one of the most popular mobile test automation frameworks. As we scale our test suite, being able to run our tests in parallel against an array of devices is key in having short feedback loops. <a href=\"\"http://github.com/saikrishna321/AppiumTestDistribution\"\" target=\"\"_blank\"\" aria-label=\"\"Appium Test Distribution. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Appium Test Distribution</strong><span class=\"\"pop-out-icon\"\"></span></a> solves this problem very effectively with its ability to run tests in parallel as well as run the same tests on multiple devices. Among other things, it distinguishes itself by its ability to add and remove devices in which tests run without any manual setup required and with its ability to run tests on remote devices. We've used it in a few projects at ThoughtWorks over the last couple of years and it worked very well for us.</p>\""
  },
  {
    "name": "BackstopJS",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>We've been enjoying <strong><a href=\"\"http://github.com/garris/BackstopJS\"\" target=\"\"_blank\"\" aria-label=\"\"BackstopJS. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">BackstopJS<span class=\"\"pop-out-icon\"\"></span></a></strong> for visual regression testing of web applications. The configurable viewports and ability to adjust tolerances are particularly useful, as is the visual comparison tool, which makes it easier to spot minor variations. It has good scriptability and the option to run in <a href=\"\"https://www.thoughtworks.com/radar/tools/headless-chrome-for-front-end-test\"\">Headless Chrome</a>, PhantomJS and SlimerJS. We find it particularly helpful when running it against <a href=\"\"https://www.thoughtworks.com/radar/techniques/living-css-style-guides\"\">living component style guides</a>.</p>\""
  },
  {
    "name": "Buildkite",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Our teams very much like the hosted CI/CD tool <a href=\"\"http://buildkite.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Buildkite. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Buildkite</strong><span class=\"\"pop-out-icon\"\"></span></a> for its simplicity and quick setup. With Buildkite, you provide your own machines to execute builds — on premise or in the cloud — and install a lightweight agent application to connect the build agent to the hosted service. In many cases, having this level of control over the configuration of your build agents is a plus when compared to using hosted agents.</p>\""
  },
  {
    "name": "CVXPY",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>It’s surprising how many problems can be expressed as <a href=\"\"http://en.wikipedia.org/wiki/Mathematical_optimization\"\" target=\"\"_blank\"\" aria-label=\"\"mathematical optimization problems. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">mathematical optimization problems<span class=\"\"pop-out-icon\"\"></span></a> and often <a href=\"\"http://en.wikipedia.org/wiki/Convex_optimization\"\" target=\"\"_blank\"\" aria-label=\"\"convex problems. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">convex problems<span class=\"\"pop-out-icon\"\"></span></a> that can be efficiently solved. <a href=\"\"http://www.cvxpy.org\"\" target=\"\"_blank\"\" aria-label=\"\"CVXPY. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>CVXPY</strong><span class=\"\"pop-out-icon\"\"></span></a> is an open source Python-embedded modeling language for convex optimization problems. It’s maintained by academics at Stanford University and offers a batteries-included install for several open source and commercial solvers. The documentation includes many examples which should inspire developers to use it. It’s particularly useful for prototyping solutions even though commercially licensed solvers, such <a href=\"\"http://www.gurobi.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Gurobi. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Gurobi<span class=\"\"pop-out-icon\"\"></span></a> or <a href=\"\"http://www.ibm.com/analytics/data-science/prescriptive-analytics/cplex-optimizer\"\" target=\"\"_blank\"\" aria-label=\"\"IBM CPLEX. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">IBM CPLEX<span class=\"\"pop-out-icon\"\"></span></a>, may be required. In most cases though, it suffices by itself. However, the same group has written many extension packages such as <a href=\"\"http://stanford.edu/%7Eboyd/papers/dccp.html\"\" target=\"\"_blank\"\" aria-label=\"\"DCCP. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">DCCP<span class=\"\"pop-out-icon\"\"></span></a> and related software such as <a href=\"\"http://cvxopt.org/\"\" target=\"\"_blank\"\" aria-label=\"\"CVXOPT. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">CVXOPT<span class=\"\"pop-out-icon\"\"></span></a> based on recent advances in optimization.</p>\""
  },
  {
    "name": "gopass",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://www.justwatch.com/gopass/\"\" target=\"\"_blank\"\" aria-label=\"\"gopass. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>gopass</strong><span class=\"\"pop-out-icon\"\"></span></a> is a password management solution for teams, built on GPG and <a href=\"\"https://www.thoughtworks.com/radar/tools/git\"\">Git</a>. It's a descendant of <a href=\"\"http://www.passwordstore.org\"\" target=\"\"_blank\"\" aria-label=\"\"pass. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">pass<span class=\"\"pop-out-icon\"\"></span></a> and adds features such as: support for recipient management and multiple password stores in a single tree; an interactive search functionality; time-based one-time password (TOTP) support; and storage of binary data. Migration of your pass store is fairly straightforward, because gopass is largely compatible with the format pass uses. This also means integration into provisioning workflows can be achieved with a single call to a stored secret.</p>\""
  },
  {
    "name": "Headless Chrome for front-end test",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Since mid-2017, Chrome users have had the option of running the browser in headless mode. This feature is ideally suited to running front-end browser tests without the overhead of displaying actions on a screen. Previously, this was largely the province of PhantomJS but <a href=\"\"http://developers.google.com/web/updates/2017/06/headless-karma-mocha-chai\"\" target=\"\"_blank\"\" aria-label=\"\"Headless Chrome. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Headless Chrome<span class=\"\"pop-out-icon\"\"></span></a> is rapidly replacing the JavaScript-driven WebKit approach. Tests in Headless Chrome should run much faster, and behave more like a real browser, but our teams have found that it does use more memory than PhantomJS. With all these advantages, <strong>Headless Chrome for front-end test</strong> is likely to become the de facto standard.</p>\""
  },
  {
    "name": "Helm",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://helm.sh\"\" target=\"\"_blank\"\" aria-label=\"\"Helm. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Helm</strong><span class=\"\"pop-out-icon\"\"></span></a> is a package manager for <a href=\"\"https://www.thoughtworks.com/radar/platforms/kubernetes\"\">Kubernetes</a>. The set of Kubernetes resources that together define an application is packaged as charts. These charts can describe a single resource, such as a Redis pod, or a full stack of a web application: HTTP servers, databases and caches. Helm, by default, comes with a repository of curated Kubernetes applications that are maintained in the official <a href=\"\"http://github.com/kubernetes/charts\"\" target=\"\"_blank\"\" aria-label=\"\"charts repository. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">charts repository<span class=\"\"pop-out-icon\"\"></span></a>. It’s also easy to set up a private chart repository for internal usage. Helm has two components: a command line utility called Helm and a cluster component called Tiller. Securing a Kubernetes cluster is a wide and nuanced topic, but we highly recommend setting up Tiller in a role-based access control (RBAC) environment. We’ve used Helm in a number of client projects and it’s dependency management, templating and hook mechanism has greatly simplified the application lifecycle management in Kubernetes.</p>\""
  },
  {
    "name": "Jupyter",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p>Over the last couple of years, we've noticed a steady rise in the popularity of analytics notebooks. These are Mathematica-inspired applications that combine text, visualization and code in a living, computational document. Increased interest in machine learning — along with the emergence of Python as the programming language of choice for practitioners in this field — has focused particular attention on Python notebooks, of which <a href=\"\"http://jupyter.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Jupyter. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Jupyter</strong><span class=\"\"pop-out-icon\"\"></span></a> seems to be gaining the most traction among ThoughtWorks teams. People seem to keep finding creative uses for Jupyter beyond a simple analytics tool. For example, see <a href=\"\"https://www.thoughtworks.com/radar/techniques/jupyter-for-automated-testing\"\">Jupyter for automated testing</a>.</p>\""
  },
  {
    "name": "kops",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p><a href=\"\"http://github.com/kubernetes/kops\"\" target=\"\"_blank\"\" aria-label=\"\"kops. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>kops</strong><span class=\"\"pop-out-icon\"\"></span></a> is a command line tool for creating and managing high-availability production <a href=\"\"https://www.thoughtworks.com/radar/platforms/kubernetes\"\">Kubernetes</a> clusters. kops has become our go-to tool to self-manage Kubernetes clusters on <a href=\"\"https://www.thoughtworks.com/radar/platforms/aws\"\">AWS</a>, not the least because of its rapidly growing open source community. It also supports installing, upgrading and managing Kubernetes clusters on <a href=\"\"https://www.thoughtworks.com/radar/platforms/google-cloud-platform\"\">Google Cloud</a>. Our experience with kops on Google, however, is very limited because of our preference for <a href=\"\"https://www.thoughtworks.com/radar/platforms/gke\"\">GKE</a>, the managed Kubernetes offering. We recommend using kops in reusable scripts to create <a href=\"\"https://www.thoughtworks.com/radar/tools/infrastructure-as-code\"\">infrastructure as code</a>. We're interested to see how kops continues to evolve to support managed Kubernetes clusters such as <a href=\"\"http://aws.amazon.com/eks/\"\" target=\"\"_blank\"\" aria-label=\"\"EKS. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">EKS<span class=\"\"pop-out-icon\"\"></span></a>, Amazon's own managed Kubernetes service.</p>\""
  },
  {
    "name": "Patroni",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/zalando/patroni\"\" target=\"\"_blank\"\" aria-label=\"\"Patroni. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Patroni</strong><span class=\"\"pop-out-icon\"\"></span></a> is a template for <a href=\"\"http://www.postgresql.org/docs/9.5/static/high-availability.html\"\" target=\"\"_blank\"\" aria-label=\"\"PostgreSQL high availability. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">PostgreSQL high availability<span class=\"\"pop-out-icon\"\"></span></a>. Born out of the need to provide automatic failure for PostgreSQL, Patroni is a Python-based PostgreSQL controller that leverages a distributed configuration store (such as <a href=\"\"http://coreos.com/etcd/\"\" target=\"\"_blank\"\" aria-label=\"\"etcd. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">etcd<span class=\"\"pop-out-icon\"\"></span></a>, <a href=\"\"http://zookeeper.apache.org/\"\" target=\"\"_blank\"\" aria-label=\"\"ZooKeeper. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">ZooKeeper<span class=\"\"pop-out-icon\"\"></span></a>, or <a href=\"\"https://www.thoughtworks.com/radar/tools/consul\"\">Consul</a>) to manage the state of the PostgreSQL cluster. Patroni supports both streaming and synchronous replication models and provides a rich set of REST APIs for dynamic configuration of the PostgreSQL cluster. If you want to achieve high availability in a distributed PostgreSQL setup, you have to consider many edge cases, and we like the fact that Patroni provides a template to achieve most of the common use cases.</p>\""
  },
  {
    "name": "WireMock",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>A key driver for architectures based on <a href=\"\"http://martinfowler.com/microservices/\"\" target=\"\"_blank\"\" aria-label=\"\"microservices. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">microservices<span class=\"\"pop-out-icon\"\"></span></a> is independent evolvability of services. For example, when two services depend on each other, the testing process for one usually involves stubs and mocks for the other one. These can be written by hand, but as with mocking in unit tests, a framework helps developers focus on the actual test scenario. We have known of <a href=\"\"http://wiremock.org/\"\" target=\"\"_blank\"\" aria-label=\"\"WireMock. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>WireMock</strong><span class=\"\"pop-out-icon\"\"></span></a> for a while but we’ve preferred running tests with <a href=\"\"https://www.thoughtworks.com/radar/tools/mountebank\"\">mountebank</a>. Over the past year, though, WireMock has really caught up and we now recommend it as a good alternative.</p>\""
  },
  {
    "name": "Yarn",
    "ring": "trial",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p><a href=\"\"http://yarnpkg.com/en/\"\" target=\"\"_blank\"\" aria-label=\"\"Yarn. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Yarn</strong><span class=\"\"pop-out-icon\"\"></span></a> is a fast, reliable and secured package manager for JavaScript. Using a lock file and a deterministic algorithm, Yarn is able to guarantee that an installation that worked on one system will work exactly the same way on any other system. By efficiently queuing up requests, Yarn maximizes network utilization and as a result we’ve seen faster package downloads. Yarn continues to be our tool of choice for JavaScript package management in spite of the latest improvements in npm (version 5).</p>\""
  },
  {
    "name": "Apex",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://github.com/apex/apex\"\" target=\"\"_blank\"\" aria-label=\"\"Apex. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Apex</strong><span class=\"\"pop-out-icon\"\"></span></a> is a tool to build, deploy and manage AWS Lambda functions with ease. With Apex, you can write functions in languages that are not yet natively supported in AWS, including Golang, Rust and others. This is made possible by a Node.js shim, which creates a child process and processes events through stdin and stdout. Apex has a lot of nice <a href=\"\"http://github.com/apex/apex#features\"\" target=\"\"_blank\"\" aria-label=\"\"features. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">features<span class=\"\"pop-out-icon\"\"></span></a> that improve the developer experience, and we particularly like the ability to test functions locally and perform a dry run of the changes before they're applied to AWS resources.</p>\""
  },
  {
    "name": "ArchUnit",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://www.archunit.org/\"\" target=\"\"_blank\"\" aria-label=\"\"ArchUnit. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>ArchUnit</strong><span class=\"\"pop-out-icon\"\"></span></a> is a Java testing library for checking architecture characteristics such as package and class dependencies, annotation verification and even layer consistency. The fact that it runs as unit tests, within your existing test setup, pleases us, even though it's available for Java architectures only. The ArchUnit test suite can be incorporated into a CI environment or a deployment pipeline, making it easier to implement <a href=\"\"https://www.thoughtworks.com/radar/techniques/architectural-fitness-function\"\">fitness functions</a> in an <a href=\"\"http://evolutionaryarchitecture.com/\"\" target=\"\"_blank\"\" aria-label=\"\"evolutionary architecture. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">evolutionary architecture<span class=\"\"pop-out-icon\"\"></span></a> way.</p>\""
  },
  {
    "name": "cfn_nag",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>The cloud and continuous delivery had a dramatic effect on infrastructure security. When following <a href=\"\"https://www.thoughtworks.com/radar/tools/infrastructure-as-code\"\">infrastructure as code</a>, the entire infrastructure — which includes networks, firewalls and accounts — is defined in scripts and configuration files, and with <a href=\"\"https://www.thoughtworks.com/radar/tools/immutable-servers\"\">Phoenix Servers</a> and <a href=\"\"https://www.thoughtworks.com/radar/techniques/phoenix-environments\"\">Environments</a>, the infrastructure is recreated in each deployment, often many times a day. In such a scenario, testing the infrastructure after it's created is neither sufficient nor feasible. A tool that helps address this problem is <strong><a href=\"\"http://github.com/stelligent/cfn_nag\"\" target=\"\"_blank\"\" aria-label=\"\"cfn_nag. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">cfn_nag<span class=\"\"pop-out-icon\"\"></span></a></strong>. It scans the <a href=\"\"http://aws.amazon.com/cloudformation/\"\" target=\"\"_blank\"\" aria-label=\"\"CloudFormation. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">CloudFormation<span class=\"\"pop-out-icon\"\"></span></a> templates used with <a href=\"\"https://www.thoughtworks.com/radar/platforms/aws\"\">AWS</a> for patterns that may indicate insecure infrastructure, and it does so before the infrastructure is created. Running a tool such as cfn_nag in a build pipeline is fast and it can detect a number of problems before they even reach a cloud environment.</p>\""
  },
  {
    "name": "Conduit",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/runconduit/conduit\"\" target=\"\"_blank\"\" aria-label=\"\"Conduit. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Conduit</strong><span class=\"\"pop-out-icon\"\"></span></a> is a lightweight <a href=\"\"https://www.thoughtworks.com/radar/techniques/service-mesh\"\">service mesh</a> for <a href=\"\"https://www.thoughtworks.com/radar/platforms/kubernetes\"\">Kubernetes</a>. Conduit embraces the out-of-process architecture with data plane proxy written in Rust and a control plane in <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/go-language\"\">Go</a>. The data plane proxy runs as a sidecar for all TCP traffic in the Kubernetes cluster and the control plane runs in a separate namespace in Kubernetes exposing REST APIs to control the behavior of the data plane proxy. By proxying all requests, Conduit provides a wealth of metrics for monitoring and observability of interactions in the service mesh for HTTP, HTTP/2 and gRPC traffic. Even though Conduit is relatively new to this space, we recommend it because it’s simple to install and operate.</p>\""
  },
  {
    "name": "Cypress",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Fixing end-to-end test failures in CI can be a painful experience, especially in headless mode. <a href=\"\"http://www.cypress.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Cypress. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Cypress</strong><span class=\"\"pop-out-icon\"\"></span></a> is a useful tool that helps developers build end-to-end tests easily and records all test steps as a video in an MP4 file. Instead of reproducing the issue in headless mode, developers can watch the testing video in order to fix it. Cypress is a powerful platform, not only a testing framework. Currently, we've integrated its CLI with headless CI in our projects.</p>\""
  },
  {
    "name": "Dependabot",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Keeping dependencies up to date is a chore, but it's important to manage upgrades frequently and incrementally. We want the process to be as painless and automated as possible. Our teams have often hand-rolled scripts to automate parts of the process; now, however, we integrate commercial offerings to do that work. <a href=\"\"http://dependabot.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Dependabot. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Dependabot</strong><span class=\"\"pop-out-icon\"\"></span></a> is a service that integrates with your GitHub repositories and automatically checks your project dependencies for new versions. When required, Dependabot will open a pull request with upgraded dependencies. Using features of your CI server, you can automatically test upgrades for compatibility and automatically merge compatible upgrades to master. There are alternatives to Dependabot, including <a href=\"\"http://renovateapp.com\"\" target=\"\"_blank\"\" aria-label=\"\"Renovate. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Renovate<span class=\"\"pop-out-icon\"\"></span></a> for JavaScript projects and <a href=\"\"http://depfu.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Depfu. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Depfu<span class=\"\"pop-out-icon\"\"></span></a> for JavaScript and Ruby projects. Our teams, however, recommend Dependabot because of its multilanguage support and ease of use.</p>\""
  },
  {
    "name": "Flow",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://flow.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Flow. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Flow</strong><span class=\"\"pop-out-icon\"\"></span></a> is a static type checker for JavaScript that allows you to add type checking across the codebase incrementally. Unlike Typescript, which is a different language, Flow can be added incrementally to an existing JavaScript codebase supporting the 5th, 6th and 7th editions of ECMAScript. We suggest adding Flow to your continuous integration pipeline, starting with the code that concerns you most. Flow adds to the clarity of the code, increases the reliability of refactoring and catches type-related bugs early during the build.</p>\""
  },
  {
    "name": "Headless Firefox",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>When developing front-end applications, we've mentioned <a href=\"\"https://www.thoughtworks.com/radar/tools/headless-chrome-for-front-end-test\"\">Headless Chrome</a> as a better alternative to PhantomJS for front-end testing in a previous edition of the Radar. Now we suggest assessing <a href=\"\"http://developer.mozilla.org/en-US/Firefox/Headless_mode\"\" target=\"\"_blank\"\" aria-label=\"\"Headless Firefox. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Headless Firefox</strong><span class=\"\"pop-out-icon\"\"></span></a> as a viable option in this area. In the same way as Headless Chrome, Firefox in a headless mode runs the browser without the visible UI components, executing the UI tests suite much faster.</p>\""
  },
  {
    "name": "nsp",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://www.npmjs.com/package/nsp\"\" target=\"\"_blank\"\" aria-label=\"\"nsp. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>nsp</strong><span class=\"\"pop-out-icon\"\"></span></a> is a command line tool to identify known vulnerabilities in Node.js applications. By running the check command on the root of a Node.js project, nsp generates the vulnerabilities report by checking against the <a href=\"\"http://nodesecurity.io/advisories/\"\" target=\"\"_blank\"\" aria-label=\"\"published advisories. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">published advisories<span class=\"\"pop-out-icon\"\"></span></a>. nsp provides a way to customize the check command to hide all vulnerabilities below the given <a href=\"\"http://nvd.nist.gov/vuln-metrics/cvss\"\" target=\"\"_blank\"\" aria-label=\"\"CVSS. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">CVSS<span class=\"\"pop-out-icon\"\"></span></a> score or exit with an error code if at least one finding has a CVSS score above the given value. Once the advisories are saved through the gather command, nsp can also be used in offline mode.</p>\""
  },
  {
    "name": "Parcel",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"https://en.parceljs.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Parcel. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Parcel</strong><span class=\"\"pop-out-icon\"\"></span></a> is a web application bundler similar to <a href=\"\"https://www.thoughtworks.com/radar/tools/webpack\"\">Webpack</a> or <a href=\"\"http://browserify.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Browserify. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Browserify<span class=\"\"pop-out-icon\"\"></span></a>. We’ve featured Webpack previously in our Radar and it continues to be a great tool. Parcel distinguishes itself from its rivals through developer experience and speed. It has all the standard bundling features and provides true zero-configuration experience, making it really easy to get started with and use. It has fast bundle times and beats its competitors in many benchmarks. Parcel has gained a lot of community interest and is worth keeping an eye on.</p>\""
  },
  {
    "name": "ScoutSuite",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://nccgroup.github.io/Scout2/\"\" target=\"\"_blank\"\" aria-label=\"\"Scout2. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Scout2</strong><span class=\"\"pop-out-icon\"\"></span></a> is a security auditing tool for <a href=\"\"https://www.thoughtworks.com/radar/platforms/aws\"\">AWS</a> environments. Instead of manually navigating through web pages, you can rely on Scout2 to fetch all the configuration data of an AWS environment for you; it even generates an attack surface report. Scout2 ships with preconfigured rules and can be easily extended to support more services and test cases. Since Scout2 only performs AWS API calls to fetch configuration data and identify security gaps, it is not necessary to complete and submit the AWS Vulnerability / Penetration Testing Request Form.</p>\""
  },
  {
    "name": "Sentry",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"https://sentry.io/welcome/\"\" target=\"\"_blank\"\" aria-label=\"\"Sentry. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Sentry</strong><span class=\"\"pop-out-icon\"\"></span></a> is an error-tracking tool that helps monitor and fix errors in real time. Error tracking and management tools such as Sentry distinguish themselves from traditional logging solutions such as the <a href=\"\"https://www.elastic.co/elk-stack\"\" target=\"\"_blank\"\" aria-label=\"\"ELK Stack. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">ELK Stack<span class=\"\"pop-out-icon\"\"></span></a> in their focus on discovering, investigating and fixing errors. Sentry has been around for some time and is quite popular — error-tracking tools are increasingly useful with the current focus on \"\"mean time to recovery\"\". Sentry — with its integration options with Github, Hipchat, Heroku, Slack, among other platforms — enables us to keep a close eye on our apps. It can provide error notifications following a release, enable us to track whether new commits actually fix the issue and alert us if an issue comes back due to a regression.</p>\""
  },
  {
    "name": "Sonobuoy",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"https://github.com/heptio/sonobuoy\"\" target=\"\"_blank\"\" aria-label=\"\"Sonobuoy. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Sonobuoy</strong><span class=\"\"pop-out-icon\"\"></span></a> is a diagnostic tool for running end-to-end conformance tests on any <a href=\"\"https://www.thoughtworks.com/radar/platforms/kubernetes\"\">Kubernetes</a> cluster in a nondestructive way. The team at <a href=\"\"http://heptio.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Heptio. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Heptio<span class=\"\"pop-out-icon\"\"></span></a>, which was founded by two creators of the Kubernetes projects, built this tool to ensure that the wide array of Kubernetes distributions and configurations conform to the best practices, while following the open source standardization for interoperability of clusters. We're experimenting with Sonobuoy to run as part of our <a href=\"\"https://www.thoughtworks.com/radar/tools/infrastructure-as-code\"\">infrastructure as code</a> build pipeline, as well as continuous monitoring of our Kubernetes installations, to validate the behavior and health of the whole cluster.</p>\""
  },
  {
    "name": "Swashbuckle for .NET Core",
    "ring": "assess",
    "quadrant": "tools",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>In the current state of technology services, exposing RESTFul APIs is increasingly adopted and API documentation is very important for consumers. In this space, <a href=\"\"https://www.thoughtworks.com/radar/tools/swagger\"\">Swagger</a> has been largely used across teams and we would like to highlight <strong><a href=\"\"http://github.com/domaindrivendev/Swashbuckle.AspNetCore\"\" target=\"\"_blank\"\" aria-label=\"\"Swashbuckle for .NET Core. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Swashbuckle for .NET Core<span class=\"\"pop-out-icon\"\"></span></a></strong>. Swashbuckle for .NET Core is a tool that generates living API documentation in Swagger, based on the code for <a href=\"\"https://www.thoughtworks.com/radar/platforms/net-core\"\">.NET Core</a> projects. When using it, you can also explore and test operations of APIs through its UI.</p>\""
  },
  {
    "name": "AssertJ",
    "ring": "adopt",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p><a href=\"\"http://joel-costigliola.github.io/assertj/index.html\"\" target=\"\"_blank\"\" aria-label=\"\"AssertJ. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>AssertJ</strong><span class=\"\"pop-out-icon\"\"></span></a> is a Java library that provides a <a href=\"\"http://martinfowler.com/bliki/FluentInterface.html\"\" target=\"\"_blank\"\" aria-label=\"\"fluent interface. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">fluent interface<span class=\"\"pop-out-icon\"\"></span></a> for assertions, which makes it easy to convey intent within test code. AssertJ gives readable error messages, soft assertions and improved collections and exception support. Many of our teams choose AssertJ as their default assertion library instead of JUnit combined with <a href=\"\"http://hamcrest.org/JavaHamcrest/\"\" target=\"\"_blank\"\" aria-label=\"\"Java Hamcrest. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Java Hamcrest<span class=\"\"pop-out-icon\"\"></span></a>.</p>\""
  },
  {
    "name": "Enzyme",
    "ring": "adopt",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p><a href=\"\"http://airbnb.io/enzyme/\"\" target=\"\"_blank\"\" aria-label=\"\"Enzyme. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Enzyme</strong><span class=\"\"pop-out-icon\"\"></span></a> has become the defacto standard for unit testing <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/react-js\"\">React</a> UI components. Unlike many other snapshot-based testing utilities, Enzyme enables you to test without doing on-device rendering, which results in faster and more granular testing. This is a contributing factor in our ability to massively reduce the amount of functional testing we find we have to do in React applications. In many of our projects it’s used within a unit testing framework such as <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/jest\"\">Jest</a>.</p>\""
  },
  {
    "name": "Kotlin",
    "ring": "adopt",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "moved in",
    "description": "\"<p><strong>Kotlin</strong> has experienced an <a href=\"\"http://sogrady-media.redmonk.com/sogrady/files/2018/03/lang.rank_.118.png\"\" target=\"\"_blank\"\" aria-label=\"\"accelerated rate of adoption. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">accelerated rate of adoption<span class=\"\"pop-out-icon\"\"></span></a> and rapid growth of tooling support. Some of the reasons behind its popularity are its concise syntax, null safety, ease of transition from Java and interoperability with other JVM-based languages in general, and that it doubles as a great introductory language to functional programming. With JetBrains adding the ability to compile Kotlin to <a href=\"\"http://kotlinlang.org/docs/reference/native-overview.html\"\" target=\"\"_blank\"\" aria-label=\"\"native binaries. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">native binaries<span class=\"\"pop-out-icon\"\"></span></a> on multiple platforms, as well as <a href=\"\"http://kotlinlang.org/docs/reference/js-overview.html\"\" target=\"\"_blank\"\" aria-label=\"\"transpile to JavaScript. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">transpile to JavaScript<span class=\"\"pop-out-icon\"\"></span></a>, we believe it has the potential of much wider use by the larger community of mobile and native application developers. Although at the time of writing, some of the tooling such as static and coverage code analysis have yet to mature, given our experience of using Kotlin in many production applications, we believe Kotlin is ready for general adoption.</p>\""
  },
  {
    "name": "Apollo",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Since it was first introduced in the Radar, we’ve seen a steady adoption of <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/graphql\"\">GraphQL</a>, particularly as a remote interface for a <a href=\"\"https://www.thoughtworks.com/radar/techniques/bff-backend-for-frontends\"\">Backend for Frontend (BFF)</a>. As they gain more experience, our teams have reached consensus on Apollo, a GraphQL client, as the preferred way to access GraphQL data from a <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/react-js\"\">React</a> application. Although the <a href=\"\"http://www.apollographql.com/client\"\" target=\"\"_blank\"\" aria-label=\"\"Apollo. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Apollo</strong><span class=\"\"pop-out-icon\"\"></span></a> project also provides a server framework and a GraphQL gateway, the Apollo client simplifies the problem of binding UI components to data served by any GraphQL backend. Notably, Apollo is used by Amazon AWS in their recent launch of the new <a href=\"\"http://aws.amazon.com/appsync/\"\" target=\"\"_blank\"\" aria-label=\"\"AWS AppSync service. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">AWS AppSync service<span class=\"\"pop-out-icon\"\"></span></a>.</p>\""
  },
  {
    "name": "CSS Grid Layout",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>CSS is the preferred choice for laying out web pages, even when it did not provide much explicit support for creating layouts. Flexbox helped with simpler, one-dimensional layouts, but developers usually reached for libraries and toolkits for more complex layouts. <a href=\"\"http://www.w3.org/TR/css-grid-1\"\" target=\"\"_blank\"\" aria-label=\"\"CSS Grid Layout. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>CSS Grid Layout</strong><span class=\"\"pop-out-icon\"\"></span></a> is a two-dimensional grid-based layout system that provides a mechanism to divide available space for layout into columns and rows using a set of predictable sizing behaviors. Grid does not require any libraries and plays well with Flexbox and other CSS display elements. However, since IE11 is only <a href=\"\"http://caniuse.com/#search=css%20grid%20layout\"\" target=\"\"_blank\"\" aria-label=\"\"partially supported. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">partially supported<span class=\"\"pop-out-icon\"\"></span></a>, it ignores users who still depend on a Microsoft browser on Windows 7.</p>\""
  },
  {
    "name": "CSS Modules",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Most large CSS codebases require complex naming schemes to help avoid naming conflicts in the global namespace. <a href=\"\"http://github.com/css-modules/css-modules\"\" target=\"\"_blank\"\" aria-label=\"\"CSS Modules. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>CSS Modules</strong><span class=\"\"pop-out-icon\"\"></span></a> address these problems by creating a local scope for all class names in a single CSS file. This file is imported to a JavaScript module, where CSS classes are referenced as strings. Then, in the build pipeline (Webpack, Browserify, etc.), the class names are replaced with generated unique strings. This is a significant change in responsibilities. Previously, a human had to manage the global namespace, to avoid class naming conflicts; now that responsibility rests with the build tooling. A small downside we've encountered with CSS Modules: functional tests are usually out of the local scope and can therefore not reference classes by the name defined in the CSS file. We recommend using IDs or data attributes instead.</p>\""
  },
  {
    "name": "Hyperledger Composer",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>The <a href=\"\"https://www.thoughtworks.com/radar/platforms/hyperledger\"\">Hyperledger</a> project has grown into a broader collaboration and now contains a series of subprojects. It supports Blockchain implementations for different purposes; for example, <a href=\"\"http://github.com/hyperledger/burrow\"\" target=\"\"_blank\"\" aria-label=\"\"Burrow. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Burrow<span class=\"\"pop-out-icon\"\"></span></a> is dedicated to build a permissioned <a href=\"\"https://www.thoughtworks.com/radar/platforms/ethereum\"\">Ethereum</a> and <a href=\"\"http://github.com/hyperledger/indy-node\"\" target=\"\"_blank\"\" aria-label=\"\"Indy. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Indy<span class=\"\"pop-out-icon\"\"></span></a> is more focused on digital identity. Among these platforms, <a href=\"\"http://github.com/hyperledger/fabric\"\" target=\"\"_blank\"\" aria-label=\"\"Fabric. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Fabric<span class=\"\"pop-out-icon\"\"></span></a> is the most mature one. Most of time when people talk about adopting Hyperledger they are actually thinking about Hyperledger Fabric. However, the programming abstraction of <a href=\"\"http://hyperledger-fabric.readthedocs.io/en/latest/chaincode.html\"\" target=\"\"_blank\"\" aria-label=\"\"chaincode. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">chaincode<span class=\"\"pop-out-icon\"\"></span></a> is relatively low level given it manipulates the state of the ledger directly. Moreover, it always takes a lot of time to set up infrastructure before writing the first line of blockchain code. <a href=\"\"http://hyperledger.github.io/composer/latest/\"\" target=\"\"_blank\"\" aria-label=\"\"Hyperledger Composer. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Hyperledger Composer</strong><span class=\"\"pop-out-icon\"\"></span></a>, which builds on top of Fabric, accelerates the process of turning ideas into software. Composer provides DSLs to model business assets, define access control and build a business network. By using Composer you could quickly validate your idea through a browser without setting up any infrastructure. Just remember that the Composer itself isn't Blockchain — you still need to deploy it on Fabric.</p>\""
  },
  {
    "name": "OpenZeppelin",
    "ring": "trial",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Security is the cornerstone of the blockchain economy. In the last issue of the Radar, we highlighted the importance of testing and auditing smart contracts dependencies. <a href=\"\"https://openzeppelin.org/\"\" target=\"\"_blank\"\" aria-label=\"\"OpenZeppelin. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>OpenZeppelin</strong><span class=\"\"pop-out-icon\"\"></span></a> is a framework to help build secure smart contracts in <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/solidity\"\">Solidity</a>. The team behind OpenZeppelin summed up a series of <a href=\"\"https://blog.zeppelin.solutions/onward-with-ethereum-smart-contract-security-97a827e47702\"\" target=\"\"_blank\"\" aria-label=\"\"pitfalls and best practices. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">pitfalls and best practices<span class=\"\"pop-out-icon\"\"></span></a> around smart contracts' security and embedded these experiences into the source code. The framework is well reviewed and validated by the open source community. We recommend the use of OpenZeppelin instead of writing your own implementation of the <a href=\"\"https://github.com/ethereum/EIPs/issues/20\"\" target=\"\"_blank\"\" aria-label=\"\"ERC20. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">ERC20<span class=\"\"pop-out-icon\"\"></span></a>/<a href=\"\"https://github.com/ethereum/EIPs/issues/721\"\" target=\"\"_blank\"\" aria-label=\"\"ERC721. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">ERC721<span class=\"\"pop-out-icon\"\"></span></a> token. OpenZeppelin is also integrated with <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/truffle\"\">Truffle</a>.</p>\""
  },
  {
    "name": "Android Architecture Components",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Historically, Google's Android documentation examples lacked architecture and structure. This changes with the release of <strong>Android Architecture Components</strong> , a set of opinionated libraries that help developers create Android applications with better architecture. They address longstanding pain points of Android development: handling lifecycles; pagination; SQLite databases; and data persistence over configuration changes. The libraries don't need to be used together — you can pick the ones you need most and integrate them into your existing project.</p>\""
  },
  {
    "name": "Atlas and BeeHive",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>A multi-app strategy is really controversial, particularly at a time when fewer and fewer users are downloading new apps. Instead of introducing a new app and struggling with the download numbers, multiteams have to deliver functionality via a single app that is already widely installed, which creates an architectural challenge. <strong><a href=\"\"http://github.com/alibaba/atlas\"\" target=\"\"_blank\"\" aria-label=\"\"Atlas. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Atlas<span class=\"\"pop-out-icon\"\"></span></a> and <a href=\"\"http://github.com/alibaba/BeeHive\"\" target=\"\"_blank\"\" aria-label=\"\"BeeHive. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">BeeHive<span class=\"\"pop-out-icon\"\"></span></a></strong> are modularization solutions for Android and iOS apps, respectively. Atlas and BeeHive enable multiteams working on physically isolated modules to reassemble or dynamically load these modules from a facade app. Both are Alibaba open source projects, since Alibaba encountered the same problem of dwindling downloads and single-app architectural challenges.</p>\""
  },
  {
    "name": "Clara rules",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Our first rule of thumb in selecting a rules engine is normally: you don't need a rules engine. We've seen too many people tying themselves to a hard-to-test black-box rules engine for spurious reasons, when custom code would have been a better solution. That said, we've had success using <a href=\"\"http://www.clara-rules.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Clara rules. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Clara rules</strong><span class=\"\"pop-out-icon\"\"></span></a> for scenarios where a rules engine does make sense. We like that it uses simple Clojure code to express and evaluate the rules, which means they are amenable to refactoring, testing and source control. Rather than chasing the illusion that business people should directly manipulate the rules, it drives collaboration between the business experts and developers.</p>\""
  },
  {
    "name": "Flutter",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://flutter.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Flutter. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Flutter</strong><span class=\"\"pop-out-icon\"\"></span></a> is a cross-platform framework that enables you to write native mobile apps in <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/google-dart\"\">Dart</a>. It benefits from Dart and can be compiled into native code and communicates with the target platform without bridge and context switching — something that can cause performance bottlenecks in frameworks such as <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/react-native\"\">React Native</a> or <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/weex\"\">Weex</a>. Flutter’s hot-reload feature is impressive and provides superfast visual feedback when editing code. Currently Flutter is still in beta, but we’ll continue keeping an eye on it to see how its ecosystem matures.</p>\""
  },
  {
    "name": "Gobot",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>The ability to compile the <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/go-language\"\">Go programming language</a> to bare metal targets has raised interest among developers in using the language for embedded systems. <a href=\"\"http://gobot.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Gobot. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Gobot</strong><span class=\"\"pop-out-icon\"\"></span></a> is a framework for robotics, physical computing, and the Internet of Things, written in the Go programming language and supporting a variety of platforms. We've used the framework for experimental robotic projects where real-time response hasn't been a requirement, and we’ve created open source <a href=\"\"http://github.com/HendrikLouw/robocar\"\" target=\"\"_blank\"\" aria-label=\"\"software drivers. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">software drivers<span class=\"\"pop-out-icon\"\"></span></a> with Gobot. Gobot HTTP APIs enable simple hardware integration with mobile devices to create richer applications.</p>\""
  },
  {
    "name": "Hyperapp",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>Given the number of JavaScript application frameworks we’ve featured in the Radar over the years we asked ourselves, do we really need to call out another one? We decided that <a href=\"\"http://hyperapp.js.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Hyperapp. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Hyperapp</strong><span class=\"\"pop-out-icon\"\"></span></a> is worth a look because of its minimalist approach. It has a very small footprint, less than 1KB, and yet covers all the essential functionality for writing a web application. This is only possible with an elegant design that reduces everything to the absolute minimum, which in turn makes it easier to understand and use the framework. Despite being relatively new, it has attracted a good-size community and we recommend to at least consider it when picking a framework for a new application.</p>\""
  },
  {
    "name": "PyTorch",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://pytorch.org/\"\" target=\"\"_blank\"\" aria-label=\"\"PyTorch. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>PyTorch</strong><span class=\"\"pop-out-icon\"\"></span></a> is a complete rewrite of the <a href=\"\"http://torch.ch/\"\" target=\"\"_blank\"\" aria-label=\"\"Torch. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Torch<span class=\"\"pop-out-icon\"\"></span></a> machine learning framework from Lua to Python. Although quite new and immature compared to <a href=\"\"https://www.thoughtworks.com/radar/platforms/tensorflow\"\">Tensorflow</a>, programmers find PyTorch much easier to work with. Because of its object-orientation and native Python implementation, models can be expressed more clearly and succinctly and debugged during execution. Although many of these frameworks have emerged recently, PyTorch has the backing of Facebook and broad range of partner organisations, including NVIDIA, which should ensure continuing support for CUDA architectures. ThoughtWorks teams find PyTorch useful for experimenting and developing models but still rely on TensorFlow’s performance for production-scale training and classification.</p>\""
  },
  {
    "name": "Rasa",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><strong><a href=\"\"http://rasa.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Rasa. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Rasa<span class=\"\"pop-out-icon\"\"></span></a></strong> is a new entrant in the area of chatbots. Instead of using a simple decision tree it uses neural networks to map intent and internal state to a response. Rasa integrates with natural language processing solutions such as <a href=\"\"https://www.thoughtworks.com/radar/tools/spacy\"\">spaCy</a>; and, unlike other solutions we've featured in the Radar, Rasa is <a href=\"\"http://github.com/RasaHQ\"\" target=\"\"_blank\"\" aria-label=\"\"open source software. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">open source software<span class=\"\"pop-out-icon\"\"></span></a> and can be self-hosted, which makes it a viable solution when ownership of data is of concern. Our experiences with using Rasa Stack for an internal application have been positive.</p>\""
  },
  {
    "name": "Reactor",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://projectreactor.io\"\" target=\"\"_blank\"\" aria-label=\"\"Reactor. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Reactor</strong><span class=\"\"pop-out-icon\"\"></span></a> is a library for building non-blocking applications on the JVM — version 8 and above — based on the <a href=\"\"http://www.reactive-streams.org/\"\" target=\"\"_blank\"\" aria-label=\"\"Reactive Streams. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Reactive Streams<span class=\"\"pop-out-icon\"\"></span></a> specification. Reactive programming emphasizes moving from imperative logic to asynchronous, non-blocking and functional style code, especially when dealing with external resources. Reactor implements the reactive stream specification and provides two publisher APIs — Flux (0 to N elements) and Mono (0 or 1 element) — to effectively model push-based stream processing. Reactor project is well suited for microservices architecture and offers back pressure–ready network engines for HTTP, WebSockets, TCP and UDP traffic.</p>\""
  },
  {
    "name": "RIBs",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://github.com/uber/RIBs\"\" target=\"\"_blank\"\" aria-label=\"\"RIBs. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>RIBs</strong><span class=\"\"pop-out-icon\"\"></span></a> — which is short for router, interactor and builder — is a cross-platform architecture mobile framework from Uber. The key idea of RIBs is to decouple business logic from the view tree, and thus ensure the app is driven by business logic. By applying consistent architecture patterns across native Android and iOS, RIBs provides clear statement management and good testability. We advise putting business logic in the back-end service rather than leak it into the view, so if you do have a complicated mobile application, RIBs can help manage this complexity.</p>\""
  },
  {
    "name": "Solidity",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p>Programming for smart contracts requires a more expressive language than a <a href=\"\"http://en.bitcoin.it/wiki/Script\"\" target=\"\"_blank\"\" aria-label=\"\"scripting system for transactions. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">scripting system for transactions<span class=\"\"pop-out-icon\"\"></span></a>. <a href=\"\"http://github.com/ethereum/solidity\"\" target=\"\"_blank\"\" aria-label=\"\"Solidity. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Solidity</strong><span class=\"\"pop-out-icon\"\"></span></a> is the most popular among the new programming languages designed for smart contracts. Solidity is a contract-oriented, statically typed language whose syntax is similar to JavaScript. It provides abstractions for writing self-enforcing business logic in smart contracts. The toolchain around Solidity is growing fast. Nowadays, Solidity is the primary choice on the <a href=\"\"https://www.thoughtworks.com/radar/platforms/ethereum\"\">Ethereum</a> platform. Given the immutable nature of deployed smart contracts, it should go without saying that rigorous testing and audit of dependencies is vital.</p>\""
  },
  {
    "name": "SwiftNIO",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>We’re in favor of asynchronous and <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/reactivex\"\">reactive styles of programming</a> especially for network I/O-bound distributed systems. Reactive libraries often sit on top of a lower level nonblocking communication framework such as <a href=\"\"http://netty.io/\"\" target=\"\"_blank\"\" aria-label=\"\"Netty. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Netty<span class=\"\"pop-out-icon\"\"></span></a>. Recently <a href=\"\"http://github.com/apple/swift-nio\"\" target=\"\"_blank\"\" aria-label=\"\"SwiftNIO. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>SwiftNIO</strong><span class=\"\"pop-out-icon\"\"></span></a>, an open source nonblocking networking framework from Apple, has grabbed our attention. SwiftNIO is similar to Netty but written in Swift. It’s currently supported on MacOS and Ubuntu and implements HTTP as a higher-level protocol. We’re excited to see the usage of this framework and integration of it into higher-level application frameworks and other protocols.</p>\""
  },
  {
    "name": "Tensorflow Eager Execution",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>In the last issue we featured <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/pytorch\"\">PyTorch</a>, a deep-learning modeling framework that allows an imperative programming style. Now <strong><a href=\"\"http://www.tensorflow.org/programmers_guide/eager\"\" target=\"\"_blank\"\" aria-label=\"\"TensorFlow Eager Execution. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">TensorFlow Eager Execution<span class=\"\"pop-out-icon\"\"></span></a></strong> provides this imperative style in <a href=\"\"https://www.thoughtworks.com/radar/platforms/tensorflow\"\">TensorFlow</a> by enabling execution of modeling statements outside of the context of a session. This improvement could provide the ease of debugging and finer-grained model control of PyTorch with the widespread popularity and performance of TensorFlow models. The feature is still quite new so we’re anxious to see how it performs and how it’ll be received by the TensorFlow community.</p>\""
  },
  {
    "name": "TensorFlow Lite",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://www.tensorflow.org/mobile/tflite/\"\" target=\"\"_blank\"\" aria-label=\"\"TensorFlow Lite. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>TensorFlow Lite</strong><span class=\"\"pop-out-icon\"\"></span></a> is the designated successor of <a href=\"\"https://www.thoughtworks.com/radar/languages-and-frameworks/tensorflow-mobile\"\">TensorFlow Mobile</a>, which we mentioned in our previous Radar. Like Mobile it is a lightweight solution tuned and optimized for mobile devices (Android and iOS). We expect the standard use case to be the deployment of pretrained models into mobile apps but TensorFlow Lite also supports on-device learning which opens further areas of application.</p>\""
  },
  {
    "name": "troposphere",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p>We’re trying out <a href=\"\"http://github.com/cloudtools/troposphere\"\" target=\"\"_blank\"\" aria-label=\"\"troposphere. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>troposphere</strong><span class=\"\"pop-out-icon\"\"></span></a> as a way of defining the <a href=\"\"https://www.thoughtworks.com/radar/tools/infrastructure-as-code\"\">infrastructure as code</a> on AWS for our projects where <a href=\"\"http://aws.amazon.com/cloudformation/\"\" target=\"\"_blank\"\" aria-label=\"\"AWS. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">AWS<span class=\"\"pop-out-icon\"\"></span></a> <a href=\"\"http://aws.amazon.com/cloudformation/\"\" target=\"\"_blank\"\" aria-label=\"\"CloudFormation. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">CloudFormation<span class=\"\"pop-out-icon\"\"></span></a> is used instead of <a href=\"\"https://www.thoughtworks.com/radar/tools/terraform\"\">Terraform</a>. troposphere is a Python library that allows us to write Python code to generate CloudFormation JSON descriptions. What we like about troposphere is that it facilitates catching JSON errors early, applying type checking, and unit testing and DRY composition of AWS resources.</p>\""
  },
  {
    "name": "Truffle",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "FALSE",
    "status": "no change",
    "description": "\"<p><a href=\"\"http://truffleframework.com/\"\" target=\"\"_blank\"\" aria-label=\"\"Truffle. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>Truffle</strong><span class=\"\"pop-out-icon\"\"></span></a> is a development framework that brings a modern web development experience to the <a href=\"\"https://www.thoughtworks.com/radar/platforms/ethereum\"\">Ethereum</a> platform. It takes over the job of smart contract compiling, library linking and deployment, as well as dealing with artifacts in different blockchain networks. One of the reasons we love Truffle is that it encourages people to write tests for their smart contracts. You need to take tests really seriously as smart contract programming is often related to money. With its built-in testing framework and integration with <a href=\"\"http://github.com/ethereumjs/testrpc\"\" target=\"\"_blank\"\" aria-label=\"\"TestRPC. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">TestRPC<span class=\"\"pop-out-icon\"\"></span></a>, Truffle makes it possible to write the contract in a TDD way. We expect to see more technologies similar to Truffle to promote continuous integration in the blockchain area.</p>\""
  },
  {
    "name": "WebAssembly",
    "ring": "assess",
    "quadrant": "languages-and-frameworks",
    "isNew": "TRUE",
    "status": "new",
    "description": "\"<p><a href=\"\"http://webassembly.org/\"\" target=\"\"_blank\"\" aria-label=\"\"WebAssembly. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\"><strong>WebAssembly</strong><span class=\"\"pop-out-icon\"\"></span></a> is a big step forward in the capabilities of the browser as a code execution environment. Supported by all major browsers and backward compatible, it's a binary compilation format designed to run in the browser at near native speeds. It opens up the range of languages you can use to write front-end functionality, with early focus on C, C++ and Rust, and it's also an LLVM compilation target. When run in the sandbox, it can interact with JavaScript and shares the same permissions and security model. When used with <a href=\"\"http://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/\"\" target=\"\"_blank\"\" aria-label=\"\"Firefox’s new streaming compiler. This is an external link. Opens in new tab\"\" class=\"\"pop-out\"\">Firefox’s new streaming compiler<span class=\"\"pop-out-icon\"\"></span></a>, it also results in faster page initialization. Although it's still early days, this W3C standard is definitely one to start exploring.</p>\""
  }
]
